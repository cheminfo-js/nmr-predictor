(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["nmrPredictor"] = factory();
	else
		root["nmrPredictor"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'
	/**
	 * Created by acastillo on 7/5/16.
	 */
	const OCLE = __webpack_require__(1);

	const Matrix = __webpack_require__(74);
	const newArray = __webpack_require__(88);
	const defaultOptions = {atomLabel:"H", ignoreLabile: true};
	class NmrPredictor {

	    constructor(db) {
	        this.db = db;
	    }

	    setDB(db){
	        this.db = db;
	    }

	    predict(molfile, param1, param2) {

	        var mol = molfile;
	        if(typeof molfile === "string") {
	            mol = OCLE.Molecule.fromMolfile(molfile);
	            mol.addImplicitHydrogens();
	        }
	        var prediction;
	        if(typeof this.db === "object") {
	            prediction = this._askErno(mol, param1);
	        }
	        if(this.db === "spinus") {
	            //The molfile whitout hydrogens
	            prediction = this._fromSpinus(mol, param1, param2);
	        }
	        if(this.db === "nmrshiftdb2") {
	            prediction = this._fromNnmrshiftdb2(mol, param1);
	        }

	        if(param1 && param1.group||param2 && param2.group){
	            prediction.sort(function(a, b) {
	                if(a.diaIDs[0] < b.diaIDs[0]) return -1;
	                if(a.diaIDs[0] > b.diaIDs[0]) return 1;
	                return 0;
	            });
	            for(var i = prediction.length-2; i >= 0; i--){
	                if(prediction[i].diaIDs[0]===prediction[i+1].diaIDs[0]){
	                    prediction[i].integral+=prediction[i+1].integral;
	                    prediction[i].atomIDs=prediction[i].atomIDs.concat(prediction[i+1].atomIDs);
	                    prediction.splice(i+1,1);
	                }
	            }
	        }

	        return prediction;
	    }

	    /**
	     * @function nmrShiftDBPred1H(molfile)
	     * This function towD shift for 1H-NMR, from a molfile by using the cheminfo reference data base.
	     * @param    molfile:string    A molfile content
	     * @returns    +Object an array of NMRSignal1D
	     */
	    _askErno(mol, opt) {
	        const options = Object.assign({}, defaultOptions, opt);
	        var currentDB = null;
	        const atomLabel = options.atomLabel || "H";
	        if (options.db) {
	            currentDB = options.db;
	        }
	        else {
	            if(!this.db)
	                this.db =[[],[],[],[],[],[],[]];
	            currentDB = this.db;
	        }
	        options.debug = options.debug || false;
	        var algorithm = options.algorithm || 0;
	        var levels = options.hoseLevels || [6,5,4,3,2];
	        var couplings = options.getCouplings || false;
	        levels.sort(function(a, b) {
	            return b - a;
	        });

	        var diaIDs = mol.getGroupedDiastereotopicAtomIDs({atomLabel:atomLabel});
	        var infoCOSY = [];//mol.getCouplings();
	        if(couplings) {
	            //    infoCOSY = mol.predictCouplings();
	        }

	        var atoms = {};
	        var atomNumbers = [];
	        var i, k, j, atom, hosesString;
	        for (j = diaIDs.length-1; j >=0; j--) {
	            hosesString = OCLE.Util.getHoseCodesFromDiastereotopicID(diaIDs[j].oclID,  {maxSphereSize:levels[0], type: algorithm});
	            atom = {
	                diaIDs: [diaIDs[j].oclID + ""]
	            };
	            for(k=0; k < levels.length; k++) {
	                atom["hose"+levels[k]] = hosesString[levels[k]-1]+"";
	            }
	            for (k = diaIDs[j].atoms.length - 1; k >= 0; k--) {
	                atoms[diaIDs[j].atoms[k]] = JSON.parse(JSON.stringify(atom));
	                atomNumbers.push(diaIDs[j].atoms[k]);
	            }
	        }
	        //Now, we towD the chimical shift by using our copy of NMRShiftDB
	        //var script2 = "select chemicalShift FROM assignment where ";//hose5='dgH`EBYReZYiIjjjjj@OzP`NET'";
	        var toReturn = new Array(atomNumbers.length);
	        for (j = 0; j < atomNumbers.length; j++) {
	            atom = atoms[atomNumbers[j]];
	            var res=null;
	            k=0;
	            //A really simple query
	            while(res==null&&k<levels.length){
	                if(currentDB[levels[k]]){
	                    res = currentDB[levels[k]][atom["hose"+levels[k]]];
	                }
	                k++;
	            }
	            if (res == null) {
	                res = { cs: -9999999, ncs: 0, std: 0, min: 0, max: 0 };//Default values
	            }
	            atom.atomLabel = atomLabel;
	            atom.level = levels[k-1];
	            atom.delta = res.cs;
	            atom.integral = 1;
	            atom.atomIDs = ["" + atomNumbers[j]];
	            atom.ncs = res.ncs;
	            atom.std = res.std;
	            atom.min = res.min;
	            atom.max = res.max;
	            atom.j = [];

	            //Add the predicted couplings
	            //console.log(atomNumbers[j]+" "+infoCOSY[0].atom1);
	            for (i = infoCOSY.length - 1; i >= 0; i--) {
	                if (infoCOSY[i].atom1 - 1 == atomNumbers[j] && infoCOSY[i].coupling > 2) {
	                    atom.j.push({
	                        "assignment": infoCOSY[i].atom2 - 1 + "",//Put the diaID instead
	                        "diaID": infoCOSY[i].diaID2,
	                        "coupling": infoCOSY[i].coupling,
	                        "multiplicity": "d"
	                    });
	                }
	            }
	            toReturn[j]=atom;
	        }
	        //TODO this will not work because getPaths is not implemented yet!!!!
	        if(options.ignoreLabile) {
	            var linksOH = mol.getAllPaths({
	                fromLabel: 'H',
	                toLabel: 'O',
	                minLength: 1,
	                maxLength: 1
	            });
	            var linksNH = mol.getAllPaths({
	                fromLabel: 'H',
	                toLabel: 'N',
	                minLength: 1,
	                maxLength: 1
	            });
	            for(j = toReturn.length-1; j >= 0; j--) {
	                for(var k = 0; k < linksOH.length; k++) {
	                    if(toReturn[j].diaIDs[0] == linksOH[k].fromDiaID) {
	                        toReturn.splice(j,1);
	                        break;
	                    }
	                }
	            }
	            //console.log(h1pred.length);
	            for(j = toReturn.length-1; j >= 0; j--) {
	                for(var k = 0;k < linksNH.length; k++) {
	                    if(toReturn[j].diaIDs[0] == linksNH[k].fromDiaID) {
	                        toReturn.splice(j,1);
	                        break;
	                    }
	                }
	            }
	        }

	        return toReturn;
	    }

	    _fromSpinus(mol, result, options){
	        //Convert to the ranges format and include the diaID for each atomID
	        const data = this._spinusParser(result);
	        const ids = data.ids;
	        const jc = data.couplingConstants;
	        const cs = data.chemicalShifts;
	        const multiplicity = data.multiplicity;
	        const integrals = data.integrals;

	        const nspins = cs.length;

	        const diaIDs = mol.getGroupedDiastereotopicAtomIDs({atomLabel:"H"});
	        var result = new Array(nspins);
	        var atoms = {};
	        var atomNumbers = [];
	        var i, j, k, oclID, tmpCS;
	        var csByOclID = {};
	        for (j = diaIDs.length-1; j >=0; j--) {
	            oclID = diaIDs[j].oclID + "";
	            for (k = diaIDs[j].atoms.length - 1; k >= 0; k--) {
	                atoms[diaIDs[j].atoms[k]] = oclID;
	                atomNumbers.push(diaIDs[j].atoms[k]);
	                if(!csByOclID[oclID]){
	                    csByOclID[oclID] = {nc:1, cs:cs[ids[diaIDs[j].atoms[k]]]};
	                }
	                else{
	                    csByOclID[oclID].nc++;
	                    csByOclID[oclID].cs+=cs[ids[diaIDs[j].atoms[k]]];
	                }
	            }
	        }

	        //Average the entries for the equivalent protons
	        var idsKeys = Object.keys(ids);
	        for (i = 0;i < nspins; i++) {
	            tmpCS = csByOclID[atoms[idsKeys[i]]].cs/csByOclID[atoms[idsKeys[i]]].nc;
	            result[i] = {atomIDs:[idsKeys[i]], diaIDs:[atoms[idsKeys[i]]], integral:integrals[i],
	                delta:tmpCS, atomLabel: "H", j:[]};
	            for (j=0; j < nspins; j++) {
	                if(jc[i][j] !== 0 ) {
	                    result[i].j.push({
	                        "assignment": idsKeys[j],
	                        "diaID": atoms[ids[j]],
	                        "coupling": jc[i][j],
	                        "multiplicity": this._multiplicityToString(multiplicity[j])
	                    });
	                }
	            }
	        }

	        return result;
	    }

	    _multiplicityToString(mul){
	        switch(mul) {
	            case 2:
	                return "d";
	                break;
	            case 3:
	                return "t";
	                break;
	            case 4:
	                return "q";
	                break;
	            default:
	                return "";
	        }
	    }

	    _spinusParser(result){
	        var lines = result.split('\n');
	        var nspins = lines.length - 1;
	        var cs = new Array(nspins);
	        var integrals = new Array(nspins);
	        var ids = {};
	        var jc = Matrix.zeros(nspins, nspins);
	        var i, j;

	        for (i = 0; i < nspins; i++) {
	            var tokens = lines[i].split('\t');
	            cs[i] = +tokens[2];
	            ids[tokens[0] - 1] = i;
	            integrals[i] = 1;//+tokens[5];//Is it always 1??
	        }

	        for (i = 0; i < nspins; i++) {
	            tokens = lines[i].split('\t');
	            var nCoup = (tokens.length - 4) / 3;
	            for (j = 0; j < nCoup; j++) {
	                var withID = tokens[4 + 3 * j] - 1;
	                var idx = ids[withID];
	                jc[i][idx] = (+tokens[6 + 3 * j])/2;
	            }
	        }

	        for (j = 0; j < nspins; j++) {
	            for (i = j; i < nspins; i++) {
	                jc[j][i] = jc[i][j];
	            }
	        }

	        return {ids, chemicalShifts:cs, integrals, couplingConstants:jc, multiplicity: newArray(nspins, 2)};

	    }

	    //TODO implement the 13C chemical shift prediction
	    _fromNnmrshiftdb2(molfile, options){
	        return null;
	    }
	}


	module.exports = NmrPredictor;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(2);
	var OCL = __webpack_require__(4)

	module.exports = exports = OCL;
	exports.DB = __webpack_require__(5);
	exports.RXN = __webpack_require__(11);


	OCL.Molecule.prototype.getGroupedDiastereotopicAtomIDs = __webpack_require__(13);
	OCL.Molecule.prototype.getExtendedDiastereotopicAtomIDs = __webpack_require__(14);
	OCL.Molecule.prototype.toVisualizerMolfile = __webpack_require__(15);
	OCL.Molecule.prototype.getGroupedHOSECodes = __webpack_require__(16);
	OCL.Molecule.prototype.getNumberOfAtoms = __webpack_require__(17);
	OCL.Molecule.prototype.toDiastereotopicSVG = __webpack_require__(18);
	OCL.Molecule.prototype.getAtomsInfo = __webpack_require__(19);
	OCL.Molecule.prototype.getAllPaths = __webpack_require__(20);
	OCL.Molecule.prototype.getConnectivityMatrix = __webpack_require__(73);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";

	    if (global.setImmediate) {
	        return;
	    }

	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;

	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }

	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }

	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }

	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }

	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }

	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }

	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };

	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }

	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }

	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };

	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }

	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }

	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }

	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();

	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();

	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();

	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();

	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }

	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3)))

/***/ },
/* 3 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * openchemlib - Manipulate molecules
	 * @version v4.6.2
	 * @date 2016-11-08T15:22:59.514Z
	 * @link https://github.com/cheminfo/openchemlib-js
	 * @license BSD-3-Clause
	*/
	(function (root) {
	    'use strict';

	    function getExports($wnd) {

	        var $doc = $wnd.document;
	        var $gwt = {};
	        var navigator = {
	            userAgent: 'webkit'
	        };

	        function noop(){}

	        var __gwtModuleFunction = noop;
	        __gwtModuleFunction.__moduleStartupDone = noop;
	        var $sendStats = noop;
	        var $moduleName, $moduleBase;

	        // Start GWT code 
	function tH(){}
	function pH(){}
	function pc(){}
	function $B(){}
	function fC(){}
	function fg(){}
	function ug(){}
	function Bg(){}
	function Bf(){}
	function yf(){}
	function Df(){}
	function Gf(){}
	function Gd(){}
	function qm(){}
	function on(){}
	function Vn(){}
	function co(){}
	function Pp(){}
	function Tp(){}
	function Xp(){}
	function XH(){}
	function NH(){}
	function NA(){}
	function oA(){}
	function OA(){}
	function ZA(){}
	function Lr(){}
	function QB(){}
	function kC(){}
	function DC(){}
	function bI(){}
	function jO(){}
	function dP(){}
	function BH(a){}
	function uH(){vH()}
	function Lg(){Ig(this)}
	function Np(){this.e=1}
	function Vd(a){this.e=a}
	function tJ(a){this.a=a}
	function FJ(a){this.a=a}
	function uA(a){this.a=a}
	function iI(a){this.a=a}
	function fM(a){this.a=a}
	function lM(a){this.a=a}
	function pM(a){this.a=a}
	function vM(a){this.a=a}
	function SM(a){this.a=a}
	function YM(a){this.a=a}
	function NM(a){this.b=a}
	function Hl(a){this.b=a}
	function xL(a){this.c=a}
	function JN(a){this.c=a}
	function jQ(a){this.a=a}
	function Bj(a,b){a.G=b}
	function Dj(a,b){a.P=b}
	function Gj(a,b){a.M=b}
	function oi(a,b){a.Q&=~b}
	function Li(a,b){a.A[b]=-1}
	function Mi(a,b){a.F[b]=128}
	function yj(a,b){a.C[b]|=lS}
	function Hj(a,b){a.s[b]|=_R}
	function aO(a,b){a.sort(b)}
	function Sz(a){return zn(a)}
	function Uz(a){return An(a)}
	function Vz(a){return Bn(a)}
	function lA(){kA();new Kr}
	function ko(){this.c=new pN}
	function $q(){this.a=new pN}
	function cB(){this.a=new pN}
	function GP(){this.a=new pN}
	function Mz(){this.a=new mn}
	function Rz(){this.a=new yn}
	function UJ(){qB.call(this)}
	function qJ(){qB.call(this)}
	function sJ(){qB.call(this)}
	function lI(){qB.call(this)}
	function JK(){qB.call(this)}
	function mO(){qB.call(this)}
	function nI(){lI.call(this)}
	function qI(){qI=pH;pI=false}
	function uB(){uB=pH;tB=new pc}
	function NB(){NB=pH;MB=new QB}
	function iC(){iC=pH;hC=new kC}
	function iO(){iO=pH;hO=new jO}
	function HK(){HK=pH;GK=new bI}
	function Wz(){return rn(),pn}
	function WJ(a){rB.call(this,a)}
	function VJ(a){sB.call(this,a)}
	function rB(a){pB.call(this,a)}
	function VB(a){UB();TB.pb(a)}
	function AQ(a){uQ(a);return a}
	function Ah(a,b){return a.q[b]}
	function Kh(a,b){return a.v[b]}
	function Mh(a,b){return a.w[b]}
	function Rh(a,b){return a.A[b]}
	function _e(a,b){return a.k[b]}
	function ff(a,b){return a.W[b]}
	function Uf(a,b){return a.e[b]}
	function di(a,b){return a.D[b]}
	function ei(a,b){return a.F[b]}
	function gk(a,b){return a.c[b]}
	function kk(a,b){return a.k[b]}
	function uk(a,b){return a.g[b]}
	function zm(a,b){return a.a[b]}
	function Am(a,b){return a.b[b]}
	function Fm(a,b){return a.d[b]}
	function Im(a,b){return a.e[b]}
	function nq(a,b){return a.e[b]}
	function kq(a,b){return a.a[b]}
	function lq(a,b){return a.b[b]}
	function PJ(a){return a<0?-a:a}
	function rJ(a){rB.call(this,a)}
	function TJ(a){rB.call(this,a)}
	function mI(a){rB.call(this,a)}
	function oI(a){mI.call(this,a)}
	function FK(a){mI.call(this,a)}
	function KK(a){rB.call(this,a)}
	function YJ(a){rJ.call(this,a)}
	function SK(a){RK.call(this,a)}
	function kQ(a){jQ.call(this,a)}
	function vK(){iI.call(this,'')}
	function CK(){iI.call(this,'')}
	function DK(){iI.call(this,'')}
	function iH(){gH==null&&(gH=[])}
	function BO(a){a.b=null;a.c=0}
	function Wi(a,b){a.o=b;a.Q=0}
	function Xi(a,b){a.p=b;a.Q=0}
	function ol(a,b){a.Q|=252&(4|b)}
	function FC(a,b){return OI(a,b)}
	function Xz(a,b){return Cn(a,b)}
	function Yz(a,b){return Dn(a,b)}
	function QJ(a,b){return a>b?a:b}
	function RJ(a,b){return a<b?a:b}
	function GO(a){return !!a&&a.b}
	function af(a){return bf(a,a._)}
	function Oh(a,b){return a.H[b].a}
	function Ph(a,b){return a.H[b].b}
	function Qh(a,b){return a.H[b].c}
	function Lh(a,b){return a.s[b]&3}
	function ci(a,b){return a.C[b]&3}
	function ti(a,b){return a.u[b]<0}
	function GI(a){FI(a);return a.k}
	function QN(a){TN(a,a.length)}
	function SN(a){VN(a,a.length)}
	function xP(a){this.a=new PO(a)}
	function Qr(){Pr();this.a=new Tq}
	function av(){bv.call(this,null)}
	function vf(a){wf.call(this,a,0)}
	function dI(a){this.b=a;this.a=0}
	function Ig(a){a.a=0;a.b=0;a.c=1}
	function yo(a,b){a.a=b;a.Q&=-136}
	function xK(a,b){a.a+=b;return a}
	function xw(a){$u();return Tj(a)}
	function Rx(a){$u();return Uj(a)}
	function Sx(a){$u();return Vj(a)}
	function EC(a){return a[4]||a[1]}
	function uf(a,b){return a<b?a:a-b}
	function Kg(a,b){return b*a.c+a.b}
	function Jg(a,b){return b*a.c+a.a}
	function Nh(a,b){return a.s[b]&48}
	function Ei(a,b){return a.v[b]==0}
	function Bm(a,b){return eN(a.i,b)}
	function Cm(a,b){return eN(a.j,b)}
	function oo(a,b){return ff(a.b,b)}
	function po(a,b){return _e(a.b,b)}
	function xo(a,b){return ef(a.b,b)}
	function _m(a){return Xm(a,a.b)>0}
	function mD(a){return a.l|a.m<<22}
	function YG(a,b){return TG(a,b)<0}
	function gQ(a,b,c){a.splice(b,c)}
	function $i(a,b,c){a.q[b]=c;a.Q=0}
	function Aj(a,b,c){a.F[b]=c;a.Q=0}
	function eI(a,b){return bK(a.a,b)}
	function PK(a,b){return qC(a.a,b)}
	function QK(a,b){return qC(a.a,b)}
	function wP(a,b){return HM(a.a,b)}
	function EP(a,b){return bN(a.a,b)}
	function FP(a,b){return oN(a.a,b)}
	function HM(a,b){return !!CO(a,b)}
	function Gh(a,b){return Rg[a.A[b]]}
	function Jh(a,b){return PJ(a.u[b])}
	function Bh(a,b){return a.s[b]&448}
	function fi(a,b){return a.F[b]&103}
	function qi(a,b){return a.A[b]==-1}
	function Ai(a,b){return Uj(a.A[b])}
	function Bi(a,b){return Vj(a.A[b])}
	function VO(a){return a.b=vL(a.a)}
	function RN(a){UN(a,a.length,-1)}
	function Mk(a){no(a,3);return a.n}
	function aI(a){this.b=a;this.a=-2}
	function Il(a,b){this.b=a;this.a=b}
	function bq(a,b){this.a=a;this.b=b}
	function Xq(a,b){this.a=a;this.b=b}
	function Yq(a,b){this.a=a;this.b=b}
	function OH(a,b){this.a=a;this.b=b}
	function FM(a,b){this.c=a;this.d=b}
	function kP(a,b){this.a=a;this.b=b}
	function Mm(a,b){Nm.call(this,a,b)}
	function OO(){PO.call(this,null)}
	function DB(){DB=pH;!!(UB(),TB)}
	function IQ(){IQ=pH;FQ={};HQ={}}
	function LB(){AB!=0&&(AB=0);CB=-1}
	function zD(a){return typeof a===TQ}
	function AD(a){return typeof a===UQ}
	function DD(a){return typeof a===VQ}
	function gK(a,b){return uQ(a),a===b}
	function VG(a,b){return TG(a,b)==0}
	function $G(a,b){return TG(a,b)!=0}
	function Uq(a,b){return eN(a.a,b).a}
	function Vq(a,b){return eN(a.a,b).b}
	function Vh(a,b,c){return a.B[b][c]}
	function tk(a,b,c){return a.f[b][c]}
	function vk(a,b,c){return a.i[b][c]}
	function wk(a,b,c){return a.j[b][c]}
	function xi(a,b){return a.F[b]==128}
	function EJ(a,b){return GJ(a.a,b.a)}
	function IM(a,b){return RL(CO(a,b))}
	function XG(a){return typeof a===UQ}
	function qA(a){Pl();Tl.call(this,a)}
	function oQ(){jQ.call(this,'UTF-8')}
	function KB(a){$wnd.clearTimeout(a)}
	function eO(a,b){$N(a,0,a.length,b)}
	function eQ(a,b,c){a.splice(b,0,c)}
	function ij(a,b,c){a.v[b]=c;a.Q&=3}
	function oj(a,b,c){a.H[b].a=c;a.Q&=3}
	function pj(a,b,c){a.H[b].b=c;a.Q&=3}
	function qj(a,b,c){a.H[b].c=c;a.Q&=3}
	function gj(a,b,c,d){a.u[b]=d?-c:c}
	function uK(a,b){a.a+=''+b;return a}
	function yK(a,b){a.a+=''+b;return a}
	function zK(a,b){a.a+=''+b;return a}
	function Zv(a,b){$u();return Sj(a,b)}
	function iK(a,b){return a.indexOf(b)}
	function uL(a){return a.a<a.c.size()}
	function RL(a){return !a?null:a.Gb()}
	function ED(a){return a==null?null:a}
	function cJ(a){return gK(UQ,typeof a)}
	function kK(a){return gK(VQ,typeof a)}
	function ri(a,b){return (a.s[b]&4)!=0}
	function yi(a,b){return (a.C[b]&4)!=0}
	function el(a,b){return (a.s[b]&8)!=0}
	function hk(a,b){return a.f[b].length}
	function mN(a,b){dO(a.a,a.a.length,b)}
	function cO(a){$N(a,0,a.length,null)}
	function yn(){rn();this.g=new mn;tn()}
	function Wl(a){Xl.call(this,a,new DK)}
	function oP(){kP.call(this,'Head',1)}
	function tP(){kP.call(this,'Tail',3)}
	function qP(){kP.call(this,'Range',2)}
	function YH(a,b,c,d){WH(this,a,b,c,d)}
	function zg(a,b,c,d){a.a=b;a.b=c;a.c=d}
	function Ue(a){a.q=new CK;a.p=6;a.r=0}
	function dB(a){a.g=JC(TF,QQ,44,0,0,1)}
	function Sh(a){return Th(a,a.o,a.p,Vg)}
	function QC(a){return RC(a.l,a.m,a.h)}
	function sK(a){return tK(a,0,a.length)}
	function oO(a){return a!=null?vc(a):0}
	function uJ(a,b){return a<b?-1:a>b?1:0}
	function ui(a,b){return (a.C[b]&_R)!=0}
	function li(a,b){return (a.s[b]&_R)!=0}
	function Ci(a,b){return (a.s[b]&QR)!=0}
	function wi(a,b){return (a.C[b]&QR)!=0}
	function vi(a,b){return (a.D[b]&HR)!=0}
	function pi(a,b){return (a.s[b]&jS)!=0}
	function si(a,b){return (a.s[b]&kS)!=0}
	function zi(a,b){return (a.C[b]&lS)!=0}
	function bl(a,b){return (a.s[b]&gS)!=0}
	function gl(a,b){return (a.s[b]&dR)!=0}
	function Wk(a,b){return (a.s[b]&TR)!=0}
	function Xk(a,b){return (a.s[b]&cR)!=0}
	function cl(a,b){return (a.C[b]&64)!=0}
	function Yh(a,b){return (a.C[b]&48)>>4}
	function Xh(a,b){return (a.D[b]&vR)>>7}
	function bK(a,b){return a.charCodeAt(b)}
	function QG(a){return a.backingJsObject}
	function Zq(a,b,c){bN(a.a,new Yq(b,c))}
	function vO(a,b,c){a.a=b^1502;a.b=c^PU}
	function sj(a,b,c,d){a.B[b][c]=d;a.Q=0}
	function rh(a,b){a.F[b]=128;jh(a);a.Q=0}
	function BQ(a,b){return a==b?0:a<b?-1:1}
	function Fh(a,b){return (a.s[b]&KR)>>19}
	function $h(a,b){return (a.C[b]&gS)>>10}
	function Yk(a,b){return (a.C[b]&256)!=0}
	function $k(a,b){return (a.C[b]&512)!=0}
	function Hi(a,b){return (a.s[b]&512)!=0}
	function fl(a,b){return (a.C[b]&128)!=0}
	function EQ(a){return a.$H||(a.$H=++DQ)}
	function EK(a){iI.call(this,(uQ(a),a))}
	function Do(a,b){Wg();Qj.call(this,a,b)}
	function Mn(a,b){a.i=$wnd.Math.max(b,1)}
	function mm(a,b,c){a.d=b;return om(a,c)}
	function RC(a,b,c){return {l:a,m:b,h:c}}
	function $C(a){return a.l+a.m*FU+a.h*GU}
	function yD(a,b){return a!=null&&wD(a,b)}
	function jK(a,b,c){return a.indexOf(b,c)}
	function lK(a,b){return a.lastIndexOf(b)}
	function mo(a,b){nh(a,b);!!a.b&&(b.Q=0)}
	function zo(a){no(a,15);!!a.b&&tf(a.b)}
	function aP(a){this.a=a;NM.call(this,a)}
	function pN(){this.a=JC(RF,OR,1,0,5,1)}
	function Lf(a){this.d=JC(LD,RR,6,a,14,1)}
	function lC(){lC=pH;jC((iC(),iC(),hC))}
	function EH(a){AH();BH(this);this.c=ZR|a}
	function XO(a){YO.call(this,a,(jP(),fP))}
	function pQ(a){if(!a){throw QG(new qJ)}}
	function yQ(a){if(!a){throw QG(new sJ)}}
	function sQ(a){if(!a){throw QG(new mO)}}
	function vI(a){if(!a){throw QG(new qJ)}}
	function FI(a){if(a.k!=null){return}TI(a)}
	function If(a,b){a.d[a.c]=RG(a.d[a.c],b)}
	function _i(a,b,c){a.s[b]&=-449;a.s[b]|=c}
	function oK(a,b,c){return a.substr(b,c-b)}
	function eK(a,b){return uQ(a),a+(uQ(b),b)}
	function nN(a){return cQ(a.a,a.a.length)}
	function nm(a){return a.length==0?0:bJ(a)}
	function BI(a){return a>=56320&&a<=57343}
	function Lc(a,b){return a==null?b:a+','+b}
	function ef(a,b){return a.d==null?-1:a.d[b]}
	function RA(a,b){return {type:b,value:a}}
	function zh(a,b){return (a.s[b]&98304)>>15}
	function sI(a,b){qI();return a==b?0:a?1:-1}
	function YB(a){UB();return parseInt(a)||-1}
	function rI(a){qI();return gK(TQ,typeof a)}
	function Mr(a,b,c,d,e){return Nq(a,b,c,d,e)}
	function CQ(b,c,d){try{b[c]=d}catch(a){}}
	function uj(a,b,c){a.C[b]&=-49;a.C[b]|=c<<4}
	function Kf(a,b){a.a=b;a.c=0;a.b=63;SN(a.d)}
	function zM(a,b){var c;c=a.d;a.d=b;return c}
	function Ag(a,b){zg(a,b.a,b.b,b.c);return a}
	function Pc(a,b,c){In(a,b-a.P/2,c-a.P/2,a.P)}
	function mK(a,b,c){return a.lastIndexOf(b,c)}
	function CD(a,b){return a&&b&&a instanceof b}
	function Fk(a,b){return a.f[b].length-a.c[b]}
	function yh(a,b){return ((a.s[b]&eS)>>>28)-1}
	function hq(a){return a<0?a+36:a>=36?a-36:a}
	function KH(a){this.a='Helvetica';this.b=a}
	function qB(){dB(this);eB(this);this.nb()}
	function WO(a){wL(a.a);JO(a.c,a.b);a.b=null}
	function GA(a){!a.a&&(a.a=new Np);return a.a}
	function IA(a){!a.d&&(a.d=new qm);return a.d}
	function JA(a){!a.e&&(a.e=new yn);return a.e}
	function KA(a){!a.f&&(a.f=new Vn);return a.f}
	function LA(a){!a.g&&(a.g=new co);return a.g}
	function MA(a){!a.i&&(a.i=new OA);return a.i}
	function jC(a){!a.a&&(a.a=new DC);return a.a}
	function KI(a){var b;b=JI(a);XI(a,b);return b}
	function EB(a,b,c){return a.apply(b,c);var d}
	function Dh(a,b){return a.r==null?null:a.r[b]}
	function Hh(a,b){return a.t==null?null:a.t[b]}
	function Ji(a,b){return a.F[b]==17||a.F[b]==9}
	function ik(a,b){return a.c[b]-a.g[b]+Ek(a,b)}
	function gN(a,b){return hN(a,b,a.a.length-1)}
	function Yv(a,b,c,d){$u();return Rj(a,b,c,d)}
	function PH(a,b){return SH(a,b.c,b.d,b.b,b.a)}
	function Ez(a,b){this.a=new Fq(new dI(a),b)}
	function Fd(a,b,c){this.b=a;this.c=b;this.a=c}
	function fq(a,b,c){this.c=a;this.a=b;this.b=c}
	function Co(){Wg();this.K=this.L=256;ni(this)}
	function BC(a,b){lC();AC.call(this,a,b,true)}
	function dO(a,b,c){qQ(b,a.length);$N(a,0,b,c)}
	function fQ(a,b,c){dQ(c,0,a,b,c.length,false)}
	function nK(a,b){return a.substr(b,a.length-b)}
	function cK(a,b){return BQ((uQ(a),a),(uQ(b),b))}
	function Dq(a,b){a.c==null&&zq(a,b);return a.c}
	function bN(a,b){a.a[a.a.length]=b;return true}
	function WH(a,b,c,d,e){a.c=b;a.d=c;a.b=d;a.a=e}
	function lj(a,b,c){a.s[b]&=-49;a.s[b]|=c;a.Q&=3}
	function Zi(a,b,c){a.s[b]&=-98305;a.s[b]|=c<<15}
	function FH(a,b,c){AH();GH.call(this,a,b,c,255)}
	function kI(){rB.call(this,'divide by zero')}
	function Pr(){Pr=pH;Or=(!FA&&(FA=new NA),FA)}
	function DJ(){DJ=pH;CJ=JC(KF,KU,32,256,0,1)}
	function OJ(){OJ=pH;NJ=JC(MF,KU,45,256,0,1)}
	function SJ(a){return a==0||isNaN(a)?a:a<0?-1:1}
	function bH(a,b){return UG(iD(XG(a)?cH(a):a,b))}
	function aH(a,b){return UG(hD(XG(a)?cH(a):a,b))}
	function ok(a,b){return !!a.n&&b<a.d?zm(a.n,b):0}
	function sk(a,b){return !!a.n&&b<a.e?Am(a.n,b):0}
	function qg(a,b){return b==1?a.a+a.f++:a.i+a.g++}
	function Gg(a,b){b.a=b.a*a.c+a.a;b.b=b.b*a.c+a.b}
	function eN(a,b){tQ(b,a.a.length);return a.a[b]}
	function aN(a,b,c){wQ(b,a.a.length);eQ(a.a,b,c)}
	function uo(a){no(a,7);return !a.b?null:cf(a.b)}
	function vo(a){no(a,7);return !a.b?null:af(a.b)}
	function eH(a){if(XG(a)){return a|0}return mD(a)}
	function bO(c){c.sort(function(a,b){return a-b})}
	function Cq(a){a.c==null&&zq(a,10240);return a.c}
	function MI(a){var b;b=JI(a);b.j=a;b.e=1;return b}
	function Nn(a,b){if(a.j!=b){a.j=b;a.e=new KH(b)}}
	function vQ(a,b){if(a==null){throw QG(new WJ(b))}}
	function LP(a,b){if(a<0||a>=b){throw QG(new nI)}}
	function mj(a,b,c){c?(a.s[b]|=512):(a.s[b]&=-513)}
	function TN(a,b){var c;for(c=0;c<b;++c){a[c]=-1}}
	function VN(a,b){var c;for(c=0;c<b;++c){a[c]=0}}
	function UN(a,b,c){var d;for(d=0;d<b;++d){a[d]=c}}
	function HC(a,b,c,d,e,f){return IC(a,b,c,d,e,0,f)}
	function fH(a){if(XG(a)){return ''+a}return nD(a)}
	function RB(a,b){!a&&(a=[]);a[a.length]=b;return a}
	function bv(a){$u();!a&&(a=new Do(32,32));this.a=a}
	function pB(a){dB(this);this.f=a;eB(this);this.nb()}
	function PO(a){this.b=null;this.a=(iO(),!a?hO:a)}
	function Pn(a,b){uK(a.c,'\t');uK(a.c,b);uK(a.c,SQ)}
	function hj(a,b,c){c?(a.s[b]|=QR):(a.s[b]&=-262145)}
	function wj(a,b,c){c?(a.C[b]|=QR):(a.C[b]&=-262145)}
	function tj(a,b,c){c?(a.C[b]|=_R):(a.C[b]&=-131073)}
	function Ri(a){var b;for(b=0;b<a.o;b++)a.s[b]&=-513}
	function Pi(a){var b;for(b=0;b<a.o;b++)a.s[b]&=-449}
	function WN(a,b){var c;for(c=0;c<b;++c){a[c]=false}}
	function ii(a,b){var c;c=ji(a,b);return c+hi(a,b,c)}
	function cQ(a,b){var c;c=a.slice(0,b);return NC(c,a)}
	function IO(a,b){var c;c=new dP;KO(a,b,c);return c.d}
	function vP(a,b){return HO(a.a,b,(qI(),pI))==null}
	function bD(a,b){return RC(a.l&b.l,a.m&b.m,a.h&b.h)}
	function gD(a,b){return RC(a.l|b.l,a.m|b.m,a.h|b.h)}
	function GJ(a,b){return TG(a,b)<0?-1:TG(a,b)>0?1:0}
	function LC(a){return Array.isArray(a)&&a.Lb===tH}
	function xD(a){return !Array.isArray(a)&&a.Lb===tH}
	function Tf(a,b){return a.f[b]&&(a.o[b]==1||a.o[b]==2)}
	function nj(a,b,c){a.s[b]&=-134217729;c&&(a.s[b]|=kS)}
	function gI(a,b,c){fI(a,b,b+1,String.fromCharCode(c))}
	function wK(a,b){a.a+=String.fromCharCode(b);return a}
	function qK(a){return String.fromCharCode.apply(null,a)}
	function cI(a){return a.a==a.b.length?-1:bK(a.b,a.a++)}
	function fI(a,b,c,d){a.a=oK(a.a,0,b)+(''+d)+nK(a.a,c)}
	function Te(a){a.r<<=a.p;wK(a.q,a.r+64&fR);return a.q.a}
	function ro(a){var b;b=new Do(a.o,a.p);mh(a,b);return b}
	function lf(a){var b;b=0;while(a>0){a>>=1;++b}return b}
	function yI(a){var b;b=a-10;return (b<0?48+a:97+b)&fR}
	function Qi(a){var b;for(b=0;b<a.o;b++)a.s[b]&=-262145}
	function Si(a){var b;for(b=0;b<a.p;b++)a.C[b]&=-393217}
	function LQ(){if(GQ==256){FQ=HQ;HQ={};GQ=0}++GQ}
	function uQ(a){if(a==null){throw QG(new UJ)}return a}
	function bf(a,b){if(a.e==null){Ze(a);Ve(a,b)}return a.e}
	function Bq(a,b){if(a.b==null)return null;return a.b[b]}
	function Xe(a,b){if(!b){Se(a,1,1);Se(a,15,4)}return true}
	function AK(a,b,c){a.a=oK(a.a,0,b)+''+nK(a.a,c);return a}
	function Al(a,b,c){a.c=6;a.d=c;a.a=b;a.e=(b[a.d]&63)<<11}
	function jj(a,b,c,d){a.s[b]&=-8;a.s[b]|=c;d&&(a.s[b]|=4)}
	function Og(a,b,c,d){this.b=a;this.a=b;this.c=c;this.d=d}
	function ZJ(a,b,c){this.a=RQ;this.d=a;this.b=b;this.c=c}
	function Qj(a,b){this.K=1>a?1:a;this.L=1>b?1:b;ni(this)}
	function LI(a,b){var c;c=JI(a);XI(a,c);c.e=b?8:0;return c}
	function Cf(a,b){if(a.c!=b.c)return a.c>b.c?1:-1;return 0}
	function Fg(a,b){b.c*=a.c;b.a=b.a*a.c+a.a;b.b=b.b*a.c+a.b}
	function BL(a,b){xL.call(this,a);wQ(b,a.size());this.a=b}
	function Ho(){ko.call(this);this.b=new pN;this.a=new pN}
	function UB(){UB=pH;var a,b;b=!ZB();a=new fC;TB=b?new $B:a}
	function kA(){kA=pH;jA=(!FA&&(FA=new NA),FA);cA=(Fr(),or)}
	function fK(a){var b;return sK(lQ(a,0,(b=a.length,iQ(),b)))}
	function NN(a,b){rQ(b);return PN(a,JC(KD,jR,6,b,15,1),b)}
	function Bk(a,b){var c;return c=ji(a,b),c+hi(a,b,c)-Hk(a,b)}
	function nO(a,b){return ED(a)===ED(b)||a!=null&&rc(a,b)}
	function hB(a,b){a.backingJsObject=b;b!=null&&CQ(b,XQ,a)}
	function iB(a,b){var c;c=GI(a.Jb);return b==null?c:c+': '+b}
	function LL(a,b){return b===a?'(this Map)':b==null?ZQ:sH(b)}
	function dK(a,b){return cK(a.toLowerCase(),b.toLowerCase())}
	function SG(a,b){return UG(bD(XG(a)?cH(a):a,XG(b)?cH(b):b))}
	function _G(a,b){return UG(gD(XG(a)?cH(a):a,XG(b)?cH(b):b))}
	function _I(a){return gK(UQ,typeof a)||a instanceof Number}
	function FD(a){return Math.max(Math.min(a,WQ),-2147483648)|0}
	function Ap(a){var b;b=hp(a);while(b){zp(a,b,1.5);b=hp(a)}}
	function Ep(a){var b;b=ip(a);while(b){zp(a,b,1.8);b=ip(a)}}
	function _u(a){var b;b=GA(Zu);b.g=new xO(0);xp(b,a.a);rl(a.a)}
	function Vc(a){var b,c;b=(AH(),wH);c=new EH(a);return WA(c,b)}
	function nd(a){var b;b=a.a;a.a=a.b;a.b=b;b=a.c;a.c=a.d;a.d=b}
	function sf(a){var b;for(b=0;b<a.L.d;b++){nj(a.L,b,a.H[b])}}
	function kN(a,b,c){var d;xQ(b,c,a.a.length);d=c-b;gQ(a.a,b,d)}
	function ud(a,b){var c;c=a.b;a.b=b.b;b.b=c;c=a.d;a.d=b.d;b.d=c}
	function OI(a,b){var c=a.a=a.a||[];return c[b]||(c[b]=a.sb(b))}
	function Ii(a,b){return (a.s[a.B[0][b]]&a.s[a.B[1][b]]&512)!=0}
	function Wh(a,b){return ((a.D[b]&vR)>>7)+((a.D[b]&30720)>>11)}
	function aj(a,b,c){c?(a.s[b]|=jS):(a.s[b]&=-67108865);a.Q&=3}
	function kj(a,b,c,d){d?(a.w[b]|=c):(a.w[b]&=~c);a.Q=0;a.I=true}
	function zj(a,b,c,d){d?(a.D[b]|=c):(a.D[b]&=~c);a.Q=0;a.I=true}
	function Ki(a,b,c){return (a.F[b]==17||a.F[b]==9)&&a.B[0][b]==c}
	function xj(a,b,c,d){a.C[b]&=-16777224;a.C[b]|=c;d&&(a.C[b]|=4)}
	function Xg(a,b,c,d){var e;e=Yg(a,6);zg(a.H[e],b,c,d);return e}
	function BK(a,b,c){a.a=oK(a.a,0,b)+(''+c)+nK(a.a,b);return a}
	function wn(a,b,c){a.b=null;a.a=b;c==null?(a.c=sn(a,b)):(a.c=c)}
	function xn(a,b,c){a.e=null;a.d=b;c==null?(a.f=sn(a,b)):(a.f=c)}
	function wL(a){yQ(a.b!=-1);a.c.removeAtIndex(a.b);a.a=a.b;a.b=-1}
	function IN(a){sQ(a.a<a.c.a.length);a.b=a.a++;return a.c.a[a.b]}
	function MO(a,b){var c;c=1-b;a.a[c]=NO(a.a[c],c);return NO(a,b)}
	function qH(a){function b(){}
	;b.prototype=a||{};return new b}
	function JB(a){DB();$wnd.setTimeout(function(){throw a},0)}
	function xO(a){sO();vO(this,eH(SG(bH(a,24),kR)),eH(SG(a,kR)))}
	function nP(){jP();return MC(FC(FG,1),KU,43,0,[fP,gP,hP,iP])}
	function Uh(a,b,c){return Rj(a.H[b].a,a.H[b].b,a.H[c].a,a.H[c].b)}
	function Vi(a,b){var c;for(c=0;c<a.o;c++){a.H[c].a*=b;a.H[c].b*=b}}
	function Hg(a,b){b.c=b.c*a.c+a.a;b.d=b.d*a.c+a.b;b.b*=a.c;b.a*=a.c}
	function DL(a,b,c){xQ(b,c,a.size());this.c=a;this.a=b;this.b=c-b}
	function wB(a){uB();sB.call(this,a);this.a='';this.b=a;this.a=''}
	function zI(a){return null!=String.fromCharCode(a).match(/\d/)}
	function AI(a){return null!=String.fromCharCode(a).match(/[A-Z]/i)}
	function Ch(a,b){return a.r==null?null:a.r[b]==null?null:fK(a.r[b])}
	function $l(a,b){a.d=null;return om(a,new aI(new dI(b)))?a.d:null}
	function HB(a,b,c){var d;d=FB();try{return EB(a,b,c)}finally{IB(d)}}
	function mk(a,b){var c;c=a.s[b]&gS;return c==0?0:c==wR?2:c==uR?3:4}
	function SA(a,b){var c;c=a-b;c>=sR?(c-=rR):c<nS&&(c+=rR);return c}
	function dH(a){var b;if(XG(a)){b=a;return b==-0.?0:b}return lD(a)}
	function vL(a){sQ(a.a<a.c.size());return a.c.getAtIndex(a.b=a.a++)}
	function lk(a,b){no(a,3);return a.k[b]==2&&a.g[b]==2?il(a,b):kl(a,b)}
	function _o(a){$o();var b,c;no(a,1);c=a.d;for(b=0;b<c;b++){ap(a,b)}}
	function Cp(a){var b,c;c=kp(a);while(c){b=sp(c);zp(a,b,1.2);c=kp(a)}}
	function pf(a,b){var c;c=JC(KD,jR,6,b,15,1);IK(a,c,a.length);return c}
	function eq(a){this.a=JC(KD,jR,6,a,15,1);this.b=JC(KD,jR,6,a,15,1)}
	function RK(a){this.a=(lC(),new BC(a,['USD','US$',2,'US$','$']))}
	function rQ(a){if(a<0){throw QG(new TJ('Negative array size: '+a))}}
	function zQ(a,b,c){if(a<0||b>c||b<a){throw QG(new FK(hR+a+iR+b+gR+c))}}
	function kB(b){if(!('stack' in b)){try{throw b}catch(a){}}return b}
	function RI(a){if(a.xb()){return null}var b=a.j;var c=lH[b];return c}
	function fn(a,b){if(b.o==0){a.A=null;return}a.A=b;a.F=false;no(a.A,1)}
	function _l(a,b){var c;c=!a.a?null:IM(a.a,new tJ(b));return !c?b-1:c.a}
	function am(a,b){var c;c=!a.b?null:IM(a.b,new tJ(b));return !c?b-1:c.a}
	function aB(a,b){var c;c=bB(a,b);if(c<0){c=-(c+1);aN(a.a,c,b)}return c}
	function lN(a,b,c){var d;d=(tQ(b,a.a.length),a.a[b]);a.a[b]=c;return d}
	function hN(a,b,c){for(;c>=0;--c){if(nO(b,a.a[c])){return c}}return -1}
	function yO(a,b){!a.a?(a.a=new EK(a.d)):zK(a.a,a.b);yK(a.a,b);return a}
	function ZH(a){var b;if(a.a!=-2){b=a.a;a.a=-2}else{b=cI(a.b)}return b}
	function np(a,b){var c;c=a-b;while(c<nS)c+=rR;while(c>sR)c-=rR;return c}
	function iN(a,b){var c;c=(tQ(b,a.a.length),a.a[b]);gQ(a.a,b,1);return c}
	function tq(a,b,c){var d;for(d=0;d<a.e.length;d++){a.a[d]+=b;a.b[d]+=c}}
	function GM(a,b){var c,d;c=b.Fb();d=CO(a,c);return !!d&&nO(d.d,b.Gb())}
	function PC(a){var b,c,d;b=a&uS;c=a>>22&uS;d=a<0?DU:0;return RC(b,c,d)}
	function Ae(a){var b,c;b=re(a);do{c=b;ne(a);b=re(a)}while(c!=b);return b}
	function eB(a){if(a.j){a.backingJsObject!==aR&&a.nb();a.g=null}return a}
	function Eo(a){Wg();Qj.call(this,!a?256:a.K,!a?256:a.L);!!a&&mh(a,this)}
	function cP(a,b){FM.call(this,a,b);this.a=JC(AG,OR,61,2,0,1);this.b=true}
	function zO(a,b){this.b=', ';this.d=a;this.e=b;this.c=this.d+(''+this.e)}
	function bQ(a,b,c,d){Array.prototype.splice.apply(a,[b,c].concat(d))}
	function DI(a){return String.fromCharCode(a).toLowerCase().charCodeAt(0)}
	function zB(){if(Date.now){return Date.now()}return (new Date).getTime()}
	function hQ(){if(Date.now){return Date.now()}return (new Date).getTime()}
	function GB(b){DB();return function(){return HB(b,this,arguments);var a}}
	function cf(a){if(a.D==null){Ze(a);kf(a);mf(a,1);mf(a,2);jf(a)}return a.D}
	function IB(a){a&&PB((NB(),MB));--AB;if(a){if(CB!=-1){KB(CB);CB=-1}}}
	function jP(){jP=pH;fP=new kP('All',0);gP=new oP;hP=new qP;iP=new tP}
	function iQ(){iQ=pH;new oQ;new kQ('ISO-LATIN-1');new kQ('ISO-8859-1')}
	function JO(a,b){var c;c=new dP;c.c=true;c.d=b.Gb();return KO(a,b.Fb(),c)}
	function og(a,b){var c,d;d=a.j.k[b];c=a.j.j[b];return d==0?a.b:d==1?c:a.a+c}
	function Sp(a){var b,c;b=a.c.e.length;c=a.c.e.length;return b<c?1:b==c?0:-1}
	function Wp(a){var b,c;b=a.c.e.length;c=a.c.e.length;return b<c?-1:b==c?0:1}
	function PN(a,b,c){var d,e;e=a.length;d=c<e?c:e;dQ(a,0,b,0,d,true);return b}
	function JC(a,b,c,d,e,f){var g;g=KC(e,d);e!=10&&MC(FC(a,f),b,c,e,g);return g}
	function $N(a,b,c,d){var e;d=(iO(),!d?hO:d);e=a.slice(b,c);_N(e,a,b,c,-b,d)}
	function RH(a,b,c){var d,e;d=a.c;e=a.d;return b>=d&&c>=e&&b<d+a.b&&c<e+a.a}
	function Ti(a,b){var c;for(c=0;c<a.o;c++)PJ(a.u[c])==(b<0?-b:b)&&(a.u[c]=0)}
	function Lo(a){var b;no(a,15);for(b=0;b<a.o;b++){(a.s[b]&3)!=0&&dj(a,b,1,0)}}
	function jN(a,b){var c;c=fN(a,b,0);if(c==-1){return false}iN(a,c);return true}
	function Sj(a,b){Wg();var c;c=a-b;while(c<nS)c+=rR;while(c>sR)c-=rR;return c}
	function Qv(a){$u();var b;b=new av;mm(IA(Zu),b.a,new aI(new dI(a)));return b}
	function NC(a,b){GC(b)!=10&&MC(tc(b),b.Kb,b.__elementTypeId$,GC(b),a);return a}
	function Hk(a,b){var c,d;a.gb(1);d=0;for(c=0;c<a.c[b];c++)d+=a.j[b][c];return d}
	function oq(a,b){var c;for(c=0;c<a.e.length;c++)if(b==a.e[c])return c;return -1}
	function fN(a,b,c){for(;c<a.a.length;++c){if(nO(b,a.a[c])){return c}}return -1}
	function wQ(a,b){if(a<0||a>b){throw QG(new mI('Index: '+a+', Size: '+b))}}
	function tQ(a,b){if(a<0||a>=b){throw QG(new mI('Index: '+a+', Size: '+b))}}
	function Fq(a,b){xq();this.c=b;this.g=new aI(a);this.f=new DK;this.a=new DK}
	function mn(){this.b=8;this.v=new pN;this.H=new xP(new ZA);this.c=new xP(new ZA)}
	function nn(){this.b=1;this.v=new pN;this.H=new xP(new ZA);this.c=new xP(new ZA)}
	function ip(a){if(a.c.a.length<2)return null;return new _p(eN(a.c,0),eN(a.c,1))}
	function lD(a){if(cD(a,(sD(),rD))<0){return -$C(fD(a))}return a.l+a.m*FU+a.h*GU}
	function ON(a,b){var c,d;rQ(b);return c=(d=a.slice(0,b),NC(d,a)),c.length=b,c}
	function Ul(a,b){var c,d;d=PK(a.a,b);for(c=d.length;c<10;c++)wK(a.b,32);zK(a.b,d)}
	function zC(a,b){var c;if(a.d>a.b+a.i&&eI(b,a.b+a.i)>=53){c=a.b+a.i-1;yC(a,b,c)}}
	function Mj(a,b,c){var d;for(d=0;d<a.o;d++){a.H[d].a+=b;a.H[d].b+=c}a.R+=b;a.S+=c}
	function mg(a,b){var c,d;c=0;for(d=0;d<a.b;d++)a.e[d][b]&&a.c[d]==-3&&++c;return c}
	function an(a,b){var c;for(c=0;c<b.length;c++)if(b[c]==a)return true;return false}
	function Tj(a){Wg();var b;for(b=1;b<Rg.length;b++)if(hK(a,Rg[b]))return b;return 0}
	function rl(a){var b,c;no(a,3);for(b=0;b<a.d;b++)pl(a,b);for(c=0;c<a.e;c++)ql(a,c)}
	function gn(a,b){if(!a.F){kn(a,b);a.F=true}if(!a.n){hn(a,b);Sm(a);Rm(a);a.n=true}}
	function Ln(a,b){a.d='rgb('+(b.c>>16&255)+','+(b.c>>8&255)+','+(b.c&255)+')'}
	function Bd(a,b){a.w=-5;a.d='rgb('+(b.c>>16&255)+','+(b.c>>8&255)+','+(b.c&255)+')'}
	function GH(a,b,c,d){BH(this);this.c=(d&255)<<24|(a&255)<<16|(b&255)<<8|c&255}
	function Eh(a,b){return (a.s[b]&KR)>>19!=1&&(a.s[b]&KR)>>19!=2?-1:(a.s[b]&fS)>>21}
	function Zh(a,b){return (a.C[b]&gS)>>10!=1&&(a.C[b]&gS)>>10!=2?-1:(a.C[b]&hS)>>12}
	function dl(a,b){return a.A[b]==1&&a.v[b]==0&&a.q[b]==0&&(a.r==null||a.r[b]==null)}
	function Cl(a,b){var c;return b==null||b.length==0?null:El(a,nQ((c=b,iQ(),c)),null)}
	function OB(a){var b,c;if(a.a){c=null;do{b=a.a;a.a=null;c=SB(b,c)}while(a.a);a.a=c}}
	function PB(a){var b,c;if(a.b){c=null;do{b=a.b;a.b=null;c=SB(b,c)}while(a.b);a.b=c}}
	function Ql(a){var b,c;c=a.a;for(b=0;b<a.b.length;b++)c+=a.b[b]*Ml[a.c[b]];return c}
	function Sl(a){var b,c;c=a.d;for(b=0;b<a.b.length;b++)c+=a.b[b]*Ol[a.c[b]];return c}
	function dr(a){var b,c,d;b=gr(a);d=0;for(c=0;c<ar.length;c++)d+=b[c]*ar[c];return d}
	function hH(){iH();var a=gH;for(var b=0;b<arguments.length;b++){a.push(arguments[b])}}
	function pk(a,b){if(b){no(a,1);return Th(a,a.d,a.e,Vg)}else{return Th(a,a.o,a.p,Vg)}}
	function so(a){var b,c;b=JC(KD,jR,6,a.o,15,1);c=Ak(a,b,false,false);return to(a,b,c)}
	function sD(){sD=pH;oD=RC(uS,uS,524287);pD=RC(0,0,_Q);qD=PC(1);PC(2);rD=PC(0)}
	function Lm(a,b,c){var d;d=eN(a.j,b).length;while(c>=d)c-=d;while(c<0)c+=d;return c}
	function pq(a,b){var c;for(c=0;c<a.e.length;c++)if(b==a.e[c])return true;return false}
	function XI(a,b){var c;if(!a){return}b.j=a;var d=RI(b);if(!d){lH[a]=[b];return}d.Jb=b}
	function JI(a){var b;b=new HI;b.k='Class$'+(a?'S'+a:''+b.g);b.b=b.k;b.i=b.k;return b}
	function vl(a,b,c){var d;d=Nj(a,b,c);if(d&&c==26){no(a,3);d=d&(a.C[b]&128)==0}return d}
	function ej(a,b,c){a.t==null&&(a.t=JC(KD,XR,7,a.K,0,2));bO(c);a.t[b]=c;a.Q=0;a.I=true}
	function He(a,b,c){if(a.a==null){a.a=JC(GD,$R,6,a.L.d,15,1);QN(a.a)}a.a[b]=c<<24>>24}
	function nh(a,b){b.I=a.I;b.J=a.J;b.P=a.P;b.G=a.G;b.M=a.M==null?null:AQ(a.M);b.Q=a.Q&12}
	function uh(a){a.o=0;a.p=0;a.I=false;a.J=false;a.G=0;a.t=null;a.r=null;a.M=null;a.Q=0}
	function GC(a){return a.__elementTypeCategory$==null?10:a.__elementTypeCategory$}
	function BD(a){return a!=null&&(typeof a===NQ||typeof a==='function')&&!(a.Lb===tH)}
	function kH(a,b){typeof window===NQ&&typeof window['$gwt']===NQ&&(window['$gwt'][a]=b)}
	function oH(a,b){for(var c in b){b[c]['configurable']=true}Object.defineProperties(a,b)}
	function Uk(a,b){var c;for(c=0;c<a.g[b];c++)if(a.q[a.f[b][c]]<0)return true;return false}
	function Vk(a,b){var c;for(c=0;c<a.g[b];c++)if(a.q[a.f[b][c]]>0)return true;return false}
	function gi(a,b){var c;c=a.A[b]<Sg.length?Sg[a.A[b]]:null;return c==null?6:c[c.length-1]}
	function jk(a){var b,c;no(a,3);b=0;for(c=0;c<a.n.i.a.length;c++)Fm(a.n,c)&&++b;return b}
	function rm(a){var b,c;c=0;for(b=0;b<a.a.o;b++)(Rh(a.a,b)==7||Rh(a.a,b)==8)&&++c;return c}
	function op(a,b,c){var d,e;d=0;for(e=0;e<gk(a.f,c);e++){pq(b,tk(a.f,c,e))&&++d}return d}
	function hr(a,b){var c;for(c=0;c<a.g[b];c++)if(Ah(a,a.f[b][c])<0)return true;return false}
	function Bl(a,b){var c,d,e,f;d=b/2|0;e=a>=d;e&&(a-=d);f=b/32|0;c=f*a/(d-a);return e?-c:c}
	function NO(a,b){var c,d;c=1-b;d=a.a[c];a.a[c]=d.a[b];d.a[b]=a;a.b=true;d.b=false;return d}
	function Nd(a,b){var c;for(c=0;c<uk(a.e,b);c++)if(a.d[vk(a.e,b,c)])return true;return false}
	function zJ(a){var b,c;if(a==0){return 32}else{c=0;for(b=1;(b&a)==0;b<<=1){++c}return c}}
	function PG(a){var b;if(yD(a,15)){return a}b=a&&a[XQ];if(!b){b=new wB(a);VB(b)}return b}
	function UG(a){var b;b=a.h;if(b==0){return a.l+a.m*FU}if(b==DU){return a.l+a.m*FU-GU}return a}
	function Md(a,b){var c;for(c=0;c<uk(a.e,b);c++)if(Di(a.e,tk(a.e,b,c)))return true;return false}
	function Em(a,b,c){var d;for(d=0;d<a.j.a.length;d++)if(Hm(a,d,b)&&Hm(a,d,c))return d;return -1}
	function Mp(a,b,c,d){var e;e=RJ(fN(a.c,b,0),fN(a.c,c,0));aN(a.c,e,d);jN(a.c,b);jN(a.c,c)}
	function zp(a,b,c){var d;$p(b,c,(a.e&6)!=0);d=tp(a,b.b[0],b.b[1],0);Mp(a,b.b[0],b.b[1],d)}
	function QH(a,b,c,d,e){var f;if(d<b){f=b;b=d;d=f}if(e<c){f=c;c=e;e=f}WH(a,b,c,d-b,e-c)}
	function cH(a){var b,c,d,e;e=a;d=0;if(e<0){e+=GU;d=DU}c=FD(e/FU);b=FD(e-c*FU);return RC(b,c,d)}
	function XB(a){var b=/function(?:\s+([\w$]+))?\s*\(/;var c=b.exec(a);return c&&c[1]||OQ}
	function qh(a,b){var c;if(b.length==0)return null;for(c=0;c<b.length;c++)Li(a,b[c]);return th(a)}
	function rk(a,b,c){var d;for(d=0;d<a.f[b].length;d++)if(a.f[b][d]==c)return a.i[b][d];return -1}
	function Vf(a){var b,c;c=true;for(b=0;b<a.i.d;b++){if(a.o[b]!=0&&!a.e[b]){c=false;break}}return c}
	function wo(a){var b,c;no(a,15);c=0;for(b=0;b<a.d;b++)(a.s[b]&3)!=0&&(a.s[b]&4)==0&&++c;return c}
	function fO(a){var b,c,d;d=0;for(c=a.yb();c.Bb();){b=c.Cb();d=d+(b!=null?vc(b):0);d=d|0}return d}
	function Gm(a,b,c){var d,e;e=eN(a.i,b);for(d=0;d<e.length;d++)if(c==e[d])return true;return false}
	function Hm(a,b,c){var d,e;e=eN(a.j,b);for(d=0;d<e.length;d++)if(c==e[d])return true;return false}
	function cq(a,b,c,d){var e,f;this.a=dq(a,b,c,d);e=c-a;f=d-b;this.b=$wnd.Math.sqrt(e*e+f*f)}
	function yl(a,b){return $wnd.Math.pow(10,$wnd.Math.log(2000)*$wnd.Math.LOG10E*a/(b-1)-1)}
	function WG(a){if(HU<a&&a<GU){return a<0?$wnd.Math.ceil(a):$wnd.Math.floor(a)}return UG(dD(a))}
	function rd(a,b){var c;if(b>0)return (a[b]+a[b-1])/2;c=sR+(a[0]+a[a.length-1])/2;return c>sR?c-rR:c}
	function Dl(a,b,c){var d,e;return b==null?null:El(a,nQ((e=b,iQ(),e)),c==null?null:nQ((d=c,d)))}
	function YO(a,b){var c;this.c=a;c=new pN;DO(a,c,b,a.b,null,false,null,false);this.a=new BL(c,0)}
	function hI(a){var b;b=a.a.length;0<b?(a.a=a.a.substr(0,0)):0>b&&(a.a+=sK(JC(HD,RR,6,-b,15,1)))}
	function yg(a,b){return $wnd.Math.sqrt((b.a-a.a)*(b.a-a.a)+(b.b-a.b)*(b.b-a.b)+(b.c-a.c)*(b.c-a.c))}
	function Ij(a,b){var c,d;d=0;for(c=0;c<a.p;c++)(a.B[0][c]==b||a.B[1][c]==b)&&(d+=bi(a,c));return d}
	function ng(a,b){var c;for(c=0;c<a.b;c++)if(a.e[c][b]&&a.c[c]==-3)return c<a.a?1:c<a.b?2:0;return -1}
	function pg(a,b,c){var d;for(d=0;d<a.j.g.length;d++)if(a.e[b][d]&&a.e[c][d])return true;return false}
	function Sd(a,b){var c;for(c=0;c<a.e.e;c++){if(a.d[c]&&Jm(b,c)){Td(a,Vh(a.e,0,c));Td(a,Vh(a.e,1,c))}}}
	function Td(a,b){var c,d;--a.b;for(d=0;d<uk(a.e,b);d++){c=vk(a.e,b,d);if(a.d[c]){a.d[c]=false;--a.c}}}
	function aD(a,b){var c,d,e;c=a.l+b.l;d=a.m+b.m+(c>>22);e=a.h+b.h+(d>>22);return RC(c&uS,d&uS,e&DU)}
	function kD(a,b){var c,d,e;c=a.l-b.l;d=a.m-b.m+(c>>22);e=a.h-b.h+(d>>22);return RC(c&uS,d&uS,e&DU)}
	function Fi(a,b){var c;c=a.A[b];return c==1||c>=5&&c<=9||c>=14&&c<=17||c>=32&&c<=35||c>=52&&c<=53}
	function tC(a,b){var c,d,e;e=a.a.length;for(d=0;d<e;++d){c=bK(a.a,d);c>=48&&c<=57&&gI(a,d,c-48+b&fR)}}
	function fD(a){var b,c,d;b=~a.l+1&uS;c=~a.m+(b==0?1:0)&uS;d=~a.h+(b==0&&c==0?1:0)&DU;return RC(b,c,d)}
	function gO(a){var b,c,d;d=1;for(c=a.yb();c.Bb();){b=c.Cb();d=31*d+(b!=null?vc(b):0);d=d|0}return d}
	function gr(a){var b,c;c=JC(KD,jR,6,ar.length+2,15,1);no(a,3);for(b=0;b<a.d;b++)++c[fr(a,b)];return c}
	function sm(a){var b,c;c=0;for(b=0;b<a.a.o;b++)(Rh(a.a,b)==7||Rh(a.a,b)==8)&&ik(a.a,b)>0&&++c;return c}
	function gd(a){var b,c;for(c=new JN(a.O);c.a<c.c.a.length;){b=IN(c);Ad(a,b.a);Pc(a,b.b,b.c)}Ad(a,a.K)}
	function HO(a,b,c){var d,e;d=new cP(b,c);e=new dP;a.b=FO(a,a.b,d,e);e.b||++a.c;a.b.b=false;return e.d}
	function HA(a,b){if(b){!a.c&&(a.c=new Hl(true));return a.c}else{!a.b&&(a.b=new Hl(false));return a.b}}
	function uI(a){if(gK(typeof a,VQ)){return true}return a!=null&&a.$implements__java_lang_CharSequence}
	function nB(a){var b;if(a!=null){b=a[XQ];if(b){return b}}return CD(a,$wnd.TypeError)?new VJ(a):new sB(a)}
	function dJ(a,b){if(a<b){return -1}if(a>b){return 1}if(a==b){return 0}return isNaN(a)?isNaN(b)?0:1:-1}
	function Tq(){if(!Qq){try{Pq=new Wq(Oq);Qq=true}catch(a){a=PG(a);if(yD(a,13)){HK()}else throw QG(a)}}}
	function AH(){AH=pH;zH=new FH(255,255,255);wH=zH;yH=new FH(128,128,128);xH=new FH(0,0,0)}
	function UA(){UA=pH;TA=MC(FC(JD,1),RR,6,15,[0.29899999499320984,0.5870000123977661,0.11400000005960464])}
	function xq(){xq=pH;wq=MC(FC(XF,1),bS,2,6,['Actelion No','ID','IDNUMBER','COMPOUND_ID','NAME','COMPND'])}
	function ld(a,b,c,d){bN(a.U,new YH(b-a.P,c-a.P,2*a.P,2*a.P));a.G||bN(a.O,new Fd(b,c,_c(a,d)?-3:a.o[d]))}
	function Fj(a,b){a.B[0]=NN(a.B[0],b);a.B[1]=NN(a.B[1],b);a.F=NN(a.F,b);a.C=NN(a.C,b);a.D=NN(a.D,b);a.L=b}
	function Se(a,b,c){while(c!=0){if(a.p==0){wK(a.q,a.r+64&fR);a.p=6;a.r=0}a.r<<=1;a.r|=b&1;b>>=1;--c;--a.p}}
	function sC(a,b,c,d){var e;if(d>0){for(e=d;e<a.b;e+=d+1){BK(b,a.b-e,String.fromCharCode(c));++a.b;++a.d}}}
	function yp(a,b,c,d){var e,f;for(f=0;f<uk(a.f,c);f++){e=tk(a.f,c,f);if(e!=d&&e<b)return false}return true}
	function Sf(a,b,c,d){var e,f;for(f=0;f<uk(a.i,c);f++){e=tk(a.i,c,f);if(!d[e]&&Wf(a,b,e))return e}return -1}
	function UC(a,b,c,d,e){var f;f=iD(a,b);c&&XC(f);if(e){a=WC(a,b);d?(OC=fD(a)):(OC=RC(a.l,a.m,a.h))}return f}
	function MC(a,b,c,d,e){e.Jb=a;e.Kb=b;e.Lb=tH;e.__elementTypeId$=c;e.__elementTypeCategory$=d;return e}
	function XN(a){var b,c,d,e;e=1;for(c=0,d=a.length;c<d;++c){b=a[c];e=31*e+(b!=null?vc(b):0);e=e|0}return e}
	function dN(a,b){var c,d;c=b.toArray();d=c.length;if(d==0){return false}fQ(a.a,a.a.length,c);return true}
	function CO(a,b){var c,d,e;e=a.b;while(e){c=a.a.eb(b,e.c);if(c==0){return e}d=c<0?0:1;e=e.a[d]}return null}
	function lg(a,b){var c;for(c=0;c<a.b;c++)if(a.e[c][b]&&a.c[c]==-3)return c<a.a?c:c<a.b?c-a.a:-1;return -1}
	function YC(a){var b,c;c=yJ(a.h);if(c==32){b=yJ(a.m);return b==32?yJ(a.l)+32:b+20-10}else{return c-12}}
	function Go(a,b){var c,d;c=io(a,b);if(c==-1)return -1;d=a.b.a.length;bN(a.b,b);aN(a.a,c,new tJ(d));return d}
	function UK(a,b){var c,d;uQ(b);for(d=b.yb();d.Bb();){c=d.Cb();if(!a.contains(c)){return false}}return true}
	function Ll(a,b){Kl();var c,d;d=b-a;for(c=0;c<Jl[a].length;c++)if(Jl[a][c].b==d)return Jl[a][c].a;return NaN}
	function Dn(a,b){rn();var c,d,e;e=0;c=0;for(d=0;d<a.length;d++){e+=zn(a[d]&b[d]);c+=zn(a[d]|b[d])}return e/c}
	function bp(a){$o();var b,c;no(a,1);c=0;for(b=0;b<a.o;b++){a.A[b]==1?++c:(c+=a.c[b]-a.g[b]+Ek(a,b))}return c}
	function XC(a){var b,c,d;b=~a.l+1&uS;c=~a.m+(b==0?1:0)&uS;d=~a.h+(b==0&&c==0?1:0)&DU;a.l=b;a.m=c;a.h=d}
	function gB(a){var b,c,d,e;for(b=(a.g==null&&(a.g=(UB(),e=TB.qb(a),WB(e))),a.g),c=0,d=b.length;c<d;++c);}
	function vh(a){var b,c;c=false;for(b=0;b<a.o;b++){if((a.s[b]&512)!=0){a.A[b]=-1;c=true}}return c&&th(a)!=null}
	function Kj(a){var b,c;a.J=false;for(b=0;b<a.o;b++)a.s[b]&=-133693441;for(c=0;c<a.p;c++)a.F[c]&=-25;a.Q&=-253}
	function Zj(a,b){var c,d;for(d=0;d<a.c[b];d++){c=a.i[b][d];(a.F[c]==17||a.F[c]==9)&&a.B[0][c]==b&&(a.F[c]=1)}}
	function _f(a,b,c){var d,e;for(e=0;e<a.g[b].length;e++){d=a.g[b][e];if(a.k[d]==2){a.k[d]=1;a.j[d]=c<<24>>24}}}
	function td(a,b,c,d){var e;if((a.B&1)!=0)return false;e=eN(a.U,d);return b>e.c&&b<e.c+e.b&&c>e.d&&c<e.d+e.a}
	function bd(a,b){var c;if(uk(a.H,b)!=2)return false;for(c=0;c<2;c++)if(wk(a.H,b,c)!=2)return false;return true}
	function dm(a){if(a.indexOf('ATOMS=(')!=-1)return rS;if(a.indexOf('BONDS=(')!=-1)return 'BONDS';return null}
	function ke(a,b){if(Pg(a)==-1||Pg(b)==-1)return 3;if(((Pg(a)|Pg(b))&1)!=0)return 3;return Pg(a)==Pg(b)?1:2}
	function TG(a,b){var c;if(XG(a)&&XG(b)){c=a-b;if(!isNaN(c)){return c}}return cD(XG(a)?cH(a):a,XG(b)?cH(b):b)}
	function tI(a,b){qI();return DD(a)?cK(a,b):AD(a)?dJ((uQ(a),a),(uQ(b),b)):zD(a)?sI((uQ(a),a),(uQ(b),b)):a.fb(b)}
	function tc(a){return DD(a)?XF:AD(a)?EF:zD(a)?CF:xD(a)?a.Jb:LC(a)?a.Jb:a.Jb||Array.isArray(a)&&FC(bF,1)||bF}
	function sB(a){dB(this);eB(this);this.backingJsObject=a;a!=null&&CQ(a,XQ,this);this.f=a==null?ZQ:sH(a)}
	function HI(){this.g=EI++;this.k=null;this.i=null;this.f=null;this.d=null;this.b=null;this.j=null;this.a=null}
	function wO(){sO();var a,b,c;c=rO+++hQ();a=FD($wnd.Math.floor(c*QU))&kR;b=FD(c-a*lS);this.a=a^1502;this.b=b^PU}
	function Mq(){Jq();var a,b,c,d;if(!Iq){if(!Iq){Iq=new cB;for(b=Gq,c=0,d=b.length;c<d;++c){a=MJ(b[c]);aB(Iq,a)}}}}
	function mC(a,b){var c,d;b.a+='E';if(a.e<0){a.e=-a.e;b.a+='-'}c=''+a.e;for(d=c.length;d<a.k;++d){b.a+='0'}b.a+=c}
	function cm(a,b){var c;for(c=b;c<a.length;c++){if(a.charCodeAt(c)==32||a.charCodeAt(c)==9){return c}}return -1}
	function VK(a,b){var c,d,e;uQ(b);c=false;for(d=a.yb();d.Bb();){e=d.Cb();if(b.contains(e)){d.Db();c=true}}return c}
	function PA(a){var b,c,d;d=a.a.a.length;b=new Array(d);for(c=0;c<d;c++){b[c]=RA(eN(a.a,c).a,eN(a.a,c).b)}return b}
	function ad(a){var b;a.p=JC(NG,nR,6,a.H.o,16,1);for(b=0;b<a.H.p;b++){a.p[Vh(a.H,0,b)]=true;a.p[Vh(a.H,1,b)]=true}}
	function cN(a,b,c){var d,e;wQ(b,a.a.length);d=c.toArray();e=d.length;if(e==0){return false}fQ(a.a,b,d);return true}
	function Mo(a,b,c){var d,e;d=HC(XF,[QQ,bS],[28,2],6,[a.d,b],2);no(a,3);for(e=0;e<a.d;e++){d[e]=No(a,e,b,c)}return d}
	function In(a,b,c,d){var e;e='<circle cx="'+FD(b)+IR+'cy="'+FD(c)+IR+'r="'+FD(d)+IR+'fill="'+a.d+'" />';Pn(a,e)}
	function ZN(a,b,c,d,e,f,g,h){var i;i=c;while(f<g){i>=d||b<c&&h.eb(a[b],a[i])<=0?(e[f++]=a[b++]):(e[f++]=a[i++])}}
	function go(a,b,c){var d,e,f;e=false;for(d=1;d<c;d++){for(f=0;f<d;f++){a[f]>a[d]&&(e=!e);b[f]>b[d]&&(e=!e)}}return e}
	function cr(a,b){var c,d;c=gr(a);for(d=0;d<ar.length;d++)c[d]!=0&&Zq(b,''+c[d]+' * '+ar[d]+'   AtomType: '+_q[d],2)}
	function BJ(a){var b,c;if(a>-129&&a<128){b=a+128;c=(DJ(),CJ)[b];!c&&(c=CJ[b]=new tJ(a));return c}return new tJ(a)}
	function Rl(a){var b,c;b=new vK;for(c=0;c<a.b.length;c++){uK(b,(Wg(),Rg)[a.c[c]]);a.b[c]>1&&uK(b,''+a.b[c])}return b.a}
	function RG(a,b){var c;if(XG(a)&&XG(b)){c=a+b;if(HU<c&&c<GU){return c}}return UG(aD(XG(a)?cH(a):a,XG(b)?cH(b):b))}
	function ZG(a,b){var c;if(XG(a)&&XG(b)){c=a*b;if(HU<c&&c<GU){return c}}return UG(eD(XG(a)?cH(a):a,XG(b)?cH(b):b))}
	function bi(a,b){switch(a.F[b]&103){case 1:case 64:return 1;case 2:return 2;case 4:return 3;default:return 0;}}
	function Po(a,b){if(a.A[b]!=6)return false;if(a.q[b]!=0)return false;if(Ek(a,b)+a.g[b]!=4)return false;return true}
	function hh(a,b,c){if(c){if(a.q[b]>8)return false;++a.q[b]}else{if(a.q[b]<-8)return false;--a.q[b]}a.Q=0;return true}
	function eo(a,b,c,d){if(a.b)return;if(a.g==4||a.g==3&&a.c!=-1){a.b=true;return}a.i[a.g]=d;a.f[a.g]=b;a.j[a.g]=c;++a.g}
	function xg(a,b){if(a.a!=b.a)return a.a<b.a?-1:1;if(a.b!=b.b)return a.b<b.b?-1:1;if(a.c!=b.c)return a.c<b.c?-1:1;return 0}
	function xI(a){if(a>=48&&a<58){return a-48}if(a>=97&&a<97){return a-97+10}if(a>=65&&a<65){return a-65+10}return -1}
	function sH(a){if(Array.isArray(a)&&a.Lb===tH){return GI(tc(a))+'@'+(vc(a)>>>0).toString(16)}return a.toString()}
	function mH(){lH={};!Array.isArray&&(Array.isArray=function(a){return Object.prototype.toString.call(a)==='[object Array]'})}
	function YN(a,b,c,d){var e,f,g;for(e=b+1;e<c;++e){for(f=e;f>b&&d.eb(a[f-1],a[f])>0;--f){g=a[f];a[f]=a[f-1];a[f-1]=g}}}
	function re(a){var b,c;b=0;cO(a.b);for(c=0;c<a.b.length;c++){(c==0||Jf(a.b[c],a.b[c-1])!=0)&&++b;a.c[a.b[c].a]=b}return b}
	function dg(a,b){var c,d;d=JC(KD,jR,6,a==null?1:a.length+1,15,1);for(c=0;c<d.length-1;c++)d[c]=a[c];d[d.length-1]=b;return d}
	function _c(a,b){var c;if(gk(a.H,b)==0)return false;for(c=0;c<gk(a.H,b);c++)if(!wi(a.H,vk(a.H,b,c)))return false;return true}
	function Om(a){var b;b=NN(a.w,a.w.length);if(a.j!=0){bO(b);if(!wP(a.H,b)){vP(a.H,b);bN(a.v,NN(a.w,a.w.length))}return}return}
	function qf(a){var b,c;if(a.R!=null)for(b=0;b<a.L.d;b++)Zi(a.L,b,a.R[b]);if(a.f!=null)for(c=0;c<a.L.e;c++)uj(a.L,c,a.f[c])}
	function fp(a,b){var c,d;d=0;$N(a,0,a.length,null);for(c=0;c<a.length;c++){(c==0||Jf(a[c],a[c-1])!=0)&&++d;b[a[c].a]=d}return d}
	function tK(a,b,c){var d,e,f,g;f=b+c;zQ(b,f,a.length);g='';for(e=b;e<f;){d=e+10000<f?e+10000:f;g+=qK(a.slice(e,d));e=d}return g}
	function ki(a,b){var c,d,e,f,g;f=3;for(d=0;d<2;d++){c=a.B[d][b];e=bi(a,b)+(g=ji(a,c),g+hi(a,c,g))-Hk(a,c);f>e&&(f=e)}return f}
	function dn(a,b){var c,d,e,f;e=0;f=0;while(e<a.length&&f<b.length){c=a[e];d=b[f];if(c==d)return true;c<d?++e:++f}return false}
	function _h(a,b){var c,d,e,f;c=a.B[0][b];d=a.B[1][b];e=a.H[d].a-a.H[c].a;f=a.H[d].b-a.H[c].b;return $wnd.Math.sqrt(e*e+f*f)}
	function ji(a,b){var c,d;c=((a.s[b]&eS)>>>28)-1;c==-1&&(c=(d=a.A[b]<Sg.length?Sg[a.A[b]]:null,d==null?6:d[d.length-1]));return c}
	function Di(a,b){var c;c=a.A[b];return c>=3&&c<=4||c>=11&&c<=13||c>=19&&c<=31||c>=37&&c<=51||c>=55&&c<=84||c>=87&&c<=103}
	function SH(a,b,c,d,e){var f,g;if(a.b<=0||a.a<=0||d<=0||e<=0){return false}f=a.c;g=a.d;return b>=f&&c>=g&&b+d<=f+a.b&&c+e<=g+a.a}
	function dq(a,b,c,d){var e,f,g;f=c-a;g=d-b;if(g!=0){e=$wnd.Math.atan(f/g);g<0&&(f<0?(e-=sR):(e+=sR))}else e=f>0?tR:GR;return e}
	function We(a,b){var c,d,e,f;c=b/2|0;e=a<0;a=$wnd.Math.abs(a);f=b/32|0;d=RJ(c-1,eH(WG($wnd.Math.round(a*c/(a+f)))));return e?c+d:d}
	function Jj(a){var b,c,d;c=false;d=false;for(b=0;b<a.o;b++){if(a.v[b]!=0){a.v[b]=0;c=true;a.A[b]==1&&(d=true)}}d&&(a.Q=0);return c}
	function KQ(a){IQ();var b,c,d;c=':'+a;d=HQ[c];if(!(d===undefined)){return d}d=FQ[c];b=d===undefined?JQ(a):d;LQ();HQ[c]=b;return b}
	function MJ(a){var b,c;if(TG(a,-129)>0&&TG(a,128)<0){b=eH(a)+128;c=(OJ(),NJ)[b];!c&&(c=NJ[b]=new FJ(a));return c}return new FJ(a)}
	function TK(a,b,c){var d,e;for(e=a.yb();e.Bb();){d=e.Cb();if(ED(b)===ED(d)||b!=null&&rc(b,d)){c&&e.Db();return true}}return false}
	function nf(a,b,c){var d,e;a.N=b;for(d=0;d<a.L.d;d++){a.c[d]=c[d];a.W[d]=0;a.$[d]=false}for(e=0;e<a.L.e;e++){a.k[e]=0;a.o[e]=false}}
	function Cj(a,b){var c,d;a.I=b;if(!b){a.t=null;for(c=0;c<a.o;c++)a.w[c]=0;for(d=0;d<a.p;d++){a.D[d]=0;a.F[d]==64&&(a.F[d]=1)}}a.Q=0}
	function Tc(a,b){var c,d;for(d=0;d<a.U.a.length;d++)a.t=VH(a.t,eN(a.U,d));Uc(a,b);c=0.1*b;a.t.c-=c;a.t.d-=c;a.t.b+=2*c;a.t.a+=2*c}
	function rj(a,b,c){if(c>=0&&c<=190){if(c==151||c==152){a.A[b]=1;a.v[b]=c-149}else{a.A[b]=c;a.v[b]=0}a.s[b]&=268435455;a.Q=0}}
	function Jk(a,b,c,d){var e,f;no(a,1);for(e=0;e<d;e++){for(f=0;f<a.c[b[e]];f++){if(a.f[b[e]][f]===b[e+1]){c[e]=a.i[b[e]][f];break}}}}
	function bm(a,b){var c;if(b==-1){return -1}for(c=b+1;c<a.length;c++){if(a.charCodeAt(c)!=32&&a.charCodeAt(c)!=9){return c}}return -1}
	function zl(a,b){var c,d;c=b;d=0;while(b!=0){if(a.c==0){a.e=(a.a[++a.d]&63)<<11;a.c=6}d|=(eR&a.e)>>16-c+b;a.e<<=1;--b;--a.c}return d}
	function wI(a,b,c){var d,e;d=bK(a,b++);if(d>=55296&&d<=56319&&b<c&&BI(e=a.charCodeAt(b))){return eR+((d&1023)<<10)+(e&1023)}return d}
	function pJ(a){var b;b=aJ(a);if(b>3.4028234663852886E38){return Infinity}else if(b<-3.4028234663852886E38){return -Infinity}return b}
	function xQ(a,b,c){if(a<0||b>c){throw QG(new mI(hR+a+iR+b+', size: '+c))}if(a>b){throw QG(new rJ(hR+a+' > toIndex: '+b))}}
	function qQ(a,b){if(0>a){throw QG(new rJ('fromIndex: 0 > toIndex: '+a))}if(a>b){throw QG(new oI('fromIndex: 0, toIndex: '+a+gR+b))}}
	function TC(a,b){if(a.h==_Q&&a.m==0&&a.l==0){b&&(OC=RC(0,0,0));return QC((sD(),qD))}b&&(OC=RC(a.l,a.m,a.h));return RC(0,0,0)}
	function nC(a,b,c){if(a.d==0){b.a=b.a.substr(0,0)+'0'+nK(b.a,0);++a.b;++a.d}if(a.b<a.d||a.c){BK(b,a.b,String.fromCharCode(c));++a.d}}
	function ZI(a){var b;b=typeof a;if(gK(b,TQ)||gK(b,UQ)||gK(b,VQ)){return true}return a!=null&&a.$implements__java_lang_Comparable}
	function hK(a,b){uQ(a);if(b==null){return false}if(gK(a,b)){return true}return a.length==b.length&&gK(a.toLowerCase(),b.toLowerCase())}
	function cg(a,b,c,d,e,f,g,h,i,j){this.i=a;this.a=b;this.f=c;this.o=d;this.c=e;this.k=f;this.j=g;this.p=h;this.d=i;this.n=j;Rf(this)}
	function Rj(a,b,c,d){Wg();var e,f,g;f=c-a;g=d-b;if(g!=0){e=$wnd.Math.atan(f/g);g<0&&(f<0?(e-=sR):(e+=sR))}else e=f>0?tR:GR;return e}
	function ai(a,b,c){var d;for(d=0;d<a.p;d++)if(a.B[0][d]==b&&a.B[1][d]==c||a.B[0][d]==c&&a.B[1][d]==b)if(a.F[d]!=128)return d;return -1}
	function Pf(a,b){var c,d;for(d=0;d<a.g[b].length;d++){c=a.g[b][d];if(a.f[c]&&(a.o[c]==1||a.o[c]==2)&&a.k[c]==0)return true}return false}
	function FB(){var a;if(AB!=0){a=zB();if(a-BB>2000){BB=a;CB=$wnd.setTimeout(LB,10)}}if(AB++==0){OB((NB(),MB));return true}return false}
	function Uj(a){Wg();switch(a){case 7:case 8:case 9:case 15:case 16:case 17:case 33:case 34:case 35:case 53:return true;}return false}
	function Tn(a){switch(a){case 5:case 6:case 7:case 8:case 9:case 15:case 16:case 17:case 36:case 53:return true;default:return false;}}
	function tm(b){var c;try{return Kq((new Mq,b.a))}catch(a){a=PG(a);if(yD(a,13)){c=a;fB(c,(HK(),GK),'');return -999}else throw QG(a)}}
	function ZB(){if(Error.stackTraceLimit>0){$wnd.Error.stackTraceLimit=Error.stackTraceLimit=64;return true}return 'stack' in new Error}
	function WI(a,b){var c=0;while(!b[c]||b[c]==''){c++}var d=b[c++];for(;c<b.length;c++){if(!b[c]||b[c]==''){continue}d+=a+b[c]}return d}
	function Cn(a,b){rn();var c,d,e,f;f=0;d=0;e=0;for(c=0;c<a.length;c++){f+=zn(a[c]&b[c]);d+=zn(a[c]);e+=zn(b[c])}return f/$wnd.Math.sqrt(d*e)}
	function Qf(a,b,c){var d,e,f,g,h;e=0;g=0;for(h=0;h<a.g[b].length;h++){d=a.g[b][h];if(a.k[d]==c){f=1<<a.j[d];if((g&f)==0){g|=f;++e}}}return e}
	function Wd(a,b){var c,d;c=0;for(d=0;d<a.g[b];d++)a.j[b][d]==2&&(Rh(a,a.f[b][d])==7||Rh(a,a.f[b][d])==8||Rh(a,a.f[b][d])==16)&&++c;return c}
	function Ok(a,b){var c,d,e,f;c=a.c[b];f=JC(KD,jR,6,c,15,1);for(e=0;e<c;e++)f[e]=(a.f[b][e]<<16)+e;bO(f);for(d=0;d<c;d++)f[d]&=fR;return f}
	function pA(a,b){b=b||{};var c=(typeof b.maxSphereSize===BU?5:b.maxSphereSize)|0;var d=(typeof b.type===BU?0:b.type)|0;return Oo(a,c,d)}
	function Mc(a){var b;b=a.L.c*Sh(a.H);a.S=b*0.06;a.N=b*0.15;a.M=b*0.38;a.Q=b*0.47;a.R=FD(b*a.F*0.6+0.5);a.P=b*0.12;a.T=b*0.4;a.v=b*0.5+0.5}
	function tn(){var a,b;if(qn==null){b=new Hl(false);qn=JC(uE,QQ,25,pn.length,0,1);for(a=0;a<pn.length;a++){qn[a]=Cl(b,pn[a]);no(qn[a],1)}}}
	function tf(a){var b,c;for(b=0;b<a.L.d;b++)!pi(a.L,b)&&a.W[b]==3&&aj(a.L,b,true);for(c=0;c<a.L.e;c++){a.k[c]==3&&bi(a.L,c)==2&&Aj(a.L,c,26)}}
	function tO(a,b){var c,d;pQ(b>0);if((b&-b)==b){return FD(b*uO(a)*4.6566128730773926E-10)}do{c=uO(a);d=c%b}while(c-d+(b-1)<0);return FD(d)}
	function cj(a,b,c){c!=null&&c.length==0&&(c=null);if(c==null){a.r!=null&&(a.r[b]=null)}else{a.r==null&&(a.r=JC(GD,dS,9,a.K,0,2));a.r[b]=c}}
	function Rv(a,b){var e,f;$u();b=b||{};var c=!b.noCoordinates;var d=!b.noStereo;return e=new av,Zn(LA(Zu),e.a,nQ((f=a,iQ(),f)),d),c&&_u(e),e}
	function uq(a,b,c){this.j=a;this.i=c;this.e=JC(KD,jR,6,b,15,1);this.k=JC(KD,jR,6,b,15,1);this.a=JC(ID,mR,6,b,15,1);this.b=JC(ID,mR,6,b,15,1)}
	function Nf(a,b,c,d){var e,f;this.a=JC(KD,jR,6,b,15,1);this.b=JC(KD,jR,6,d,15,1);for(e=0;e<b;e++)this.a[e]=a[e];for(f=0;f<d;f++)this.b[f]=c[f]}
	function vc(a){return DD(a)?KQ(a):AD(a)?FD((uQ(a),a)):zD(a)?(uQ(a),a)?1231:1237:xD(a)?a.cb():LC(a)?EQ(a):!!a&&!!a.hashCode?a.hashCode():EQ(a)}
	function rc(a,b){return DD(a)?gK(a,b):AD(a)?(uQ(a),a===b):zD(a)?(uQ(a),a===b):xD(a)?a.ab(b):LC(a)?a===b:!!a&&!!a.equals?a.equals(b):ED(a)===ED(b)}
	function CI(a,b,c){vI(a>=0&&a<=1114111);if(a>=eR){b[c++]=55296+(a-eR>>10&1023)&fR;b[c]=56320+(a-eR&1023)&fR;return 2}else{b[c]=a&fR;return 1}}
	function bn(a,b){var c,d,e;e=0;for(d=0;d<a.length;d++){c=a[d];while(b[e]<c){++e;if(e==b.length)return false}if(b[e]>c)return false}return true}
	function oN(a,b){var c,d,e;e=a.a.length;b.length<e&&(b=(d=new Array(e),NC(d,b)));for(c=0;c<e;++c){b[c]=a.a[c]}b.length>e&&(b[e]=null);return b}
	function eg(a,b){var c;if(a.length!=b.length)return a.length<b.length?-1:1;for(c=0;c<a.length;c++)if(a[c]!==b[c])return a[c]<b[c]?-1:1;return 0}
	function ck(a,b){var c;if(a.g[b]==3&&(a.s[b]&cR)!=0&&(!!a.n&&b<a.d?zm(a.n,b):0)>=6)for(c=0;c<a.g[b];c++)if(Zk(a,a.i[b][c]))return a.i[b][c];return -1}
	function vn(a){var b,c;if(a.I){for(b=0;b<a.o;b++){if((a.w[b]&oR)!=0){a=new Eo(a);for(c=b;c<a.o;c++)(a.w[c]&oR)!=0&&(a.A[c]=-1);th(a)}}}return a}
	function Ge(a){var b,c;for(b=0;b<a.L.d;b++)(!a.H[b]||a.W[b]==3)&&(a.U[b]=0);for(c=0;c<a.L.e;c++)(ei(a.L,c)!=1||a.k[c]==0||a.k[c]==3)&&(a.j[c]=0)}
	function Jf(a,b){var c;for(c=0;c<a.c;c++)if($G(a.d[c],b.d[c]))return YG(a.d[c],b.d[c])?-1:1;return VG(a.d[a.c],b.d[a.c])?0:YG(a.d[a.c],b.d[a.c])?-1:1}
	function im(a,b){var c,d,e;if(!a.d){if(gK(b.substr(0,6),'COUNTS')){c=bm(b,cm(b,7));d=bJ(oK(b,7,cm(b,7)));e=bJ(oK(b,c,cm(b,c)));a.d=new Do(d,e)}}}
	function wD(a,b){if(DD(a)){return !!vD[b]}else if(a.Kb){return !!a.Kb[b]}else if(AD(a)){return !!uD[b]}else if(zD(a)){return !!tD[b]}return false}
	function $n(a,b){var c,d,e;ei(a.b,b)==1&&Aj(a.b,b,2);for(d=0;d<2;d++){c=Vh(a.b,d,b);hj(a.b,c,false);for(e=0;e<uk(a.b,c);e++)a.a[vk(a.b,c,e)]=false}}
	function DO(a,b,c,d,e,f,g,h){var i,j;if(!d){return}i=d.a[0];!!i&&DO(a,b,c,i,e,f,g,h);EO(a,c,d.c,e,f,g,h)&&b.add(d);j=d.a[1];!!j&&DO(a,b,c,j,e,f,g,h)}
	function IK(a,b,c){HK();var d,e;vQ(a,'src');vQ(b,'dest');tc(a);tc(b);e=a.length;d=b.length;if(c<0||c>e||c>d){throw QG(new lI)}c>0&&dQ(a,0,b,0,c,true)}
	function JL(a,b){var c,d,e;for(d=new XO((new aP(a)).b);uL(d.a);){c=d.b=vL(d.a);e=c.Gb();if(ED(b)===ED(e)||b!=null&&rc(b,e)){return true}}return false}
	function AC(a,b,c){if(!b){throw QG(new rJ('Unknown currency code'))}this.s=a;this.a=b;vC(this,this.s);if(!c&&this.g){this.n=this.a[2]&7;this.i=this.n}}
	function pK(a){var b,c,d;c=a.length;d=0;while(d<c&&a.charCodeAt(d)<=32){++d}b=c;while(b>d&&a.charCodeAt(b-1)<=32){--b}return d>0||b<c?a.substr(d,b-d):a}
	function $f(a,b,c,d){var e,f;for(f=0;f<a.g[b].length;f++){e=a.g[b][f];if(a.f[e]&&(a.o[e]==1||a.o[e]==2)&&a.k[e]==0){a.k[e]=d<<24>>24;a.j[e]=c<<24>>24}}}
	function Vj(a){Wg();if(a==1||a==6)return false;if(Uj(a))return false;if(a==2||a==10||a==18||a==36||a==54)return false;if(a>103)return false;return true}
	function Jd(a,b,c){if(a.a){if(gk(a.e,b)!=3)return 0}else{if(gk(a.e,b)>3)return 0}if(Rh(a.e,b)==6){c&&$i(a.e,b,1);return 2}if(Rh(a.e,b)==5){return 4}return 0}
	function El(a,b,c){var d,e,f,g,h;if(b==null)return null;Al(a,b,0);d=zl(a,4);g=zl(a,4);d>8&&(d=g);e=zl(a,d);f=zl(a,g);h=new Do(e,f);Gl(a,h,b,c);return h}
	function cp(a,b,c){var d,e,f;f=b.length;d=new uq(a.f,f,a.e);d.a[0]=0;d.b[0]=0;for(e=0;e<f;e++){d.k[e]=128-f;d.e[e]=b[e]}f<8?lp(d):jp(a,d,b,c);bN(a.c,d)}
	function Km(a,b,c){var d,e,f;f=b.length;for(e=0;e<f;e++)(a.a[b[e]]==0||a.a[b[e]]>f)&&(a.a[b[e]]=f);for(d=0;d<f;d++)(a.b[c[d]]==0||a.b[c[d]]>f)&&(a.b[c[d]]=f)}
	function Jp(a){var b,c;for(b=0;b<a.f.o;b++){if(!Ci(a.f,b)&&gk(a.f,b)==0){c=new uq(a.f,1,a.e);a.a[b]=true;c.e[0]=b;c.a[0]=0;c.b[0]=0;c.k[0]=0;bN(a.c,c)}}}
	function WC(a,b){var c,d,e;if(b<=22){c=a.l&(1<<b)-1;d=e=0}else if(b<=44){c=a.l;d=a.m&(1<<b-22)-1;e=0}else{c=a.l;d=a.m;e=a.h&(1<<b-44)-1}return RC(c,d,e)}
	function fB(a,b,c){var d,e,f,g,h;gB(a);for(e=(a.i==null&&(a.i=JC(YF,QQ,15,0,0,1)),a.i),f=0,g=e.length;f<g;++f){d=e[f];fB(d,b,'\t'+c)}h=a.e;!!h&&fB(h,b,c)}
	function KC(a,b){var c=new Array(b);var d;switch(a){case 14:case 15:d=0;break;case 16:d=false;break;default:return c;}for(var e=0;e<b;++e){c[e]=d}return c}
	function pd(a){var b;b=new XH;if(a.a<=a.b){b.c=a.a;b.b=a.b-a.a}else{b.c=a.b;b.b=a.a-a.b}if(a.c<=a.d){b.d=a.c;b.a=a.d-a.c}else{b.d=a.d;b.a=a.c-a.d}return b}
	function _C(a,b){var c,d,e;e=a.h-b.h;if(e<0){return false}c=a.l-b.l;d=a.m-b.m+(c>>22);e+=d>>22;if(e<0){return false}a.l=c&uS;a.m=d&uS;a.h=e&DU;return true}
	function sO(){sO=pH;var a,b,c,d;pO=JC(ID,mR,6,25,15,1);qO=JC(ID,mR,6,33,15,1);d=JU;for(b=32;b>=0;b--){qO[b]=d;d*=0.5}c=1;for(a=24;a>=0;a--){pO[a]=c;c*=0.5}}
	function Eq(a){var b;if(a.e)return a.e;a.e=$l(new qm,(b=a.f.a,b));!!a.e&&(a.e.M==null||a.e.M.length==0)&&Gj(a.e,a.d==-1||a.b==null?null:a.b[a.d]);return a.e}
	function EO(a,b,c,d,e,f,g){var h,i;if(b.Hb()&&(i=a.a.eb(c,d),i<0||!e&&i==0)){return false}if(b.Ib()&&(h=a.a.eb(c,f),h>0||!g&&h==0)){return false}return true}
	function od(a,b,c){var d;d=b==0?rR+a[0]-a[a.length-1]:a[b]-a[b-1];c>-2.0943951023931953&&c<MR?(d-=2*$wnd.Math.cos(c+NR)):(d-=0.5*$wnd.Math.cos(c+NR));return d}
	function dQ(a,b,c,d,e,f){var g,h,i;if(ED(a)===ED(c)){a=a.slice(b,b+e);b=0}for(h=b,i=b+e;h<i;){g=h+10000<i?h+10000:i;e=g-h;bQ(c,d,f?e:0,a.slice(h,g));h=g;d+=e}}
	function Jn(a,b,c,d){var e;e='<circle id="'+(a.g!=null?a.g:'mol'+En)+':Atom:'+b+IR+wS+'cx="'+FD(c)+IR+'cy="'+FD(d)+IR+'r="'+8+IR+'fill-opacity="0"/>';bN(a.a,e)}
	function ae(a,b){var c,d,e;for(d=0;d<a.g[b];d++){if(a.j[b][d]!=1){c=a.f[b][d];for(e=0;e<a.g[c];e++)if(a.j[c][e]==1&&Wd(a,a.f[c][e])!=0)return true}}return false}
	function mh(a,b){var c,d;b.t=null;b.r=null;b.I=a.I;b.o=0;for(c=0;c<a.o;c++)kh(a,b,c,0,0);b.p=0;for(d=0;d<a.p;d++)lh(a,b,d,0,0,null,false);nh(a,b);!!a.b&&(b.Q=0)}
	function dd(a,b,c,d){var e;if(b==0){c<0?(d.a=a.N):(d.a=-a.N);d.b=0;return}e=$wnd.Math.atan(c/b);b<0&&(e+=sR);d.a=-(a.N*$wnd.Math.sin(e));d.b=a.N*$wnd.Math.cos(e)}
	function lp(a){var b,c;b=sR-sR*(a.e.length-2)/a.e.length;for(c=1;c<a.e.length;c++){a.a[c]=a.a[c-1]+$wnd.Math.sin(b*(c-1));a.b[c]=a.b[c-1]+$wnd.Math.cos(b*(c-1))}}
	function Nj(a,b,c){var d,e;e=c&103;d=ki(a,b);switch(e){case 1:case 64:return d>=1;case 2:return d>=2;case 4:return d>=3;case 32:return true;default:return false;}}
	function cD(a,b){var c,d,e,f,g,h,i,j;i=a.h>>19;j=b.h>>19;if(i!=j){return j-i}e=a.h;h=b.h;if(e!=h){return e-h}d=a.m;g=b.m;if(d!=g){return d-g}c=a.l;f=b.l;return c-f}
	function JH(e,a){var b=IH;if(!b){b=$doc.createElement('canvas');IH=b}var c=''+e.b+'px '+e.a;var d=b.getContext('2d');d.font=c;var a=d.measureText(a);return a.width}
	function hf(a,b){var c,d,e;if(kk(a.L,b)<2)return false;if(uk(a.L,b)==2)return true;c=0;for(e=0;e<uk(a.L,b);e++){d=vk(a.L,b,e);Yk(a.L,d)&&(c+=bi(a.L,d)-1)}return c>1}
	function Pd(a,b){var c,d,e,f;if(ei(a.e,b)==1){Aj(a.e,b,2);a.f+=2}for(e=0;e<2;e++){c=Vh(a.e,e,b);for(f=0;f<uk(a.e,c);f++){d=vk(a.e,c,f);if(a.d[d]){a.d[d]=false;--a.c}}}}
	function Ud(a){var b,c,d,e,f;for(c=0;c<a.e.e;c++){if(bi(a.e,c)==2){for(e=0;e<2;e++){b=Vh(a.e,e,c);for(f=0;f<uk(a.e,b);f++){d=vk(a.e,b,f);if(a.d[d]){Td(a,b);break}}}}}}
	function Rm(a){var b,c;a.a=null;for(b=0;b<a.d.e;b++){if(vi(a.d,b)){!a.a&&(a.a=new pN);c=new on;c.a=Vh(a.d,0,b);c.b=Vh(a.d,1,b);c.d=Xh(a.d,b);c.c=Wh(a.d,b);bN(a.a,c)}}}
	function oC(a,b){var c,d;c=a.b+a.n;if(a.d<c){while(a.d<c){b.a+='0';++a.d}}else{d=a.b+a.i;d>a.d&&(d=a.d);while(d>c&&bK(b.a,d-1)==48){--d}if(d<a.d){AK(b,d,a.d);a.d=d}}}
	function yC(a,b,c){var d,e;d=true;while(d&&c>=0){e=bK(b.a,c);if(e==57){gI(b,c--,48)}else{gI(b,c,e+1&fR);d=false}}if(d){b.a=b.a.substr(0,0)+'1'+nK(b.a,0);++a.b;++a.d}}
	function jH(b,c,d,e){iH();var f=gH;$moduleName=c;$moduleBase=d;OG=e;function g(){for(var a=0;a<f.length;a++){f[a]()}}
	if(b){try{MQ(g)()}catch(a){b(c,a)}}else{MQ(g)()}}
	function sp(a){var b,c,d,e;e=0;d=null;for(c=new JN(a);c.a<c.c.a.length;){b=IN(c);if(e<b.b[0].e.length*b.b[1].e.length){e=b.b[0].e.length*b.b[1].e.length;d=b}}return d}
	function DH(a,b,c,d){AH();GH.call(this,FD(a*255+0.5),FD(b*255+0.5),FD(c*255+0.5),FD(d*255+0.5));this.b=JC(JD,RR,6,3,15,1);this.b[0]=a;this.b[1]=b;this.b[2]=c;this.a=d}
	function WB(a){var b,c,d,e;b='VB';c='mB';e=RJ(a.length,5);for(d=e-1;d>=0;d--){if(gK(a[d].d,b)||gK(a[d].d,c)){a.length>=d+1&&(a.splice(0,d+1),undefined);break}}return a}
	function aJ(a){$I==null&&($I=/^\s*[+-]?(NaN|Infinity|((\d+\.?\d*)|(\.\d+))([eE][+-]?\d+)?[dDfF]?)\s*$/);if(!$I.test(a)){throw QG(new YJ(YQ+a+'"'))}return parseFloat(a)}
	function _g(a,b,c,d,e,f,g){var h;h=wh(a,b,c);if(h==-1){a.o>=a.K&&Ej(a,a.K*2);h=Yg(a,d);zg(a.H[h],b,c,0);a.v[h]=e;Yi(a,h,f);lj(a,h,g);return true}return gh(a,h,d,e,f,g)}
	function Dd(a,b){var c,d;if(a.H.o==0)return null;Cd(a);c=a.L.c*Sh(a.H);d=new Mg(a.t,b,c);if(d.c==1&&d.a==0&&d.b==0){d=null}else{Fg(d,a.L);Hg(d,a.t)}zd(a,b,c,eR);return d}
	function il(a,b){var c,d,e,f,g,h,i,j;i=-1;d=0;for(g=0;g<2;g++){c=a.f[b][g];for(h=0;h<a.c[c];h++){e=a.f[c][h];if(e!=b){f=a.i[c][h];j=Qk(a,f,e);if(d<j){d=j;i=f}}}}return i}
	function wh(a,b,c){var d,e,f,g,h,i,j,k;g=-1;e=Th(a,a.o,a.p,Vg);h=iS;i=e*e/12;for(d=0;d<a.o;d++){j=a.H[d].a;k=a.H[d].b;f=(b-j)*(b-j)+(c-k)*(c-k);if(f<i&&f<h){h=f;g=d}}return g}
	function IC(a,b,c,d,e,f,g){var h,i,j,k,l;k=e[f];j=f==g-1;h=j?d:0;l=KC(h,k);d!=10&&MC(FC(a,g-f),b[f],c[f],h,l);if(!j){++f;for(i=0;i<k;++i){l[i]=IC(a,b,c,d,e,f,g)}}return l}
	function Ir(b){var c,d,e;e=new aI(new dI(b));d=new ko;while(true){try{c=_H(e);if(c!=null)io(d,c);else break}catch(a){a=PG(a);if(yD(a,53)){break}else throw QG(a)}}return d}
	function Qc(a,b,c,d){if(wi(a.H,rk(a.H,c,d))){Ad(a,-3);Fn(a,b);Ad(a,a.K)}else if(a.o[c]!==a.o[d]){Nc(a,b,c,d)}else if(a.o[c]!=0){Ad(a,a.o[c]);Fn(a,b);Ad(a,a.K)}else{Fn(a,b)}}
	function Oj(a,b,c,d){var e,f,g;for(e=0;e<a.o;e++){if(!d||(a.s[e]&512)!=0){g=a.O[e]*b;f=a.N[e]-c;a.H[e].a=a.R+g*$wnd.Math.sin(f);a.H[e].b=a.S+g*$wnd.Math.cos(f)}}d&&(a.Q&=3)}
	function Qk(a,b,c){if(bi(a,b)!=1)return 0;return 16-a.c[c]+(a.A[c]==1?cR:0)+((a.F[b]&24)==0||a.B[0][b]!=c?uR:0)+((a.s[c]&3)==0?wR:0)+((a.C[b]&64)!=0?0:512)+(a.A[c]!=6?256:0)}
	function WK(a){var b,c,d;d=new zO('[',']');for(c=a.yb();c.Bb();){b=c.Cb();yO(d,b===a?'(this Collection)':b==null?ZQ:sH(b))}return !d.a?d.c:d.e.length==0?d.a.a:d.a.a+(''+d.e)}
	function zn(a){rn();a=(a&1431655765)+(a>>>1&1431655765);a=(a&858993459)+(a>>>2&858993459);a=(a&117901063)+(a>>>4&117901063);a=(a&983055)+(a>>>8&983055);return (a&31)+(a>>>16)}
	function Ko(a){var b,c,d,e;Jo(a);d=a.o;c=JC(XF,bS,2,d,6,1);for(b=0;b<d;b++){e=ro(a);no(e,15);bj(e,b,(Wg(),Rg)[e.A[b]]+'*');rj(e,b,Tj('X'));Lo(e);c[b]=cf(new wf(e,8))}return c}
	function XA(a,b){UA();return new FH(FD((a.c>>16&255)+lR*((b.c>>16&255)-(a.c>>16&255))),FD((a.c>>8&255)+lR*((b.c>>8&255)-(a.c>>8&255))),FD((a.c&255)+lR*((b.c&255)-(a.c&255))))}
	function Gk(a){var b,c,d,e;no(a,1);e=0;for(b=0;b<a.o;b++){d=a.v[b]!=0?a.v[b]:Ug[a.A[b]];e+=d+Ek(a,b)*Ug[1];if(a.A[b]>=171&&a.A[b]<=190){c=a.c[b];c>2&&(e-=(c-2)*Ug[1])}}return e}
	function Fn(a,b){var c,d,e,f,g;d=FD(b.a);e=FD(b.b);f=FD(b.c);g=FD(b.d);c='<line x1="'+d+IR+'y1="'+f+IR+'x2="'+e+IR+'y2="'+g+IR+'style="stroke:'+a.d+';'+JR+FD(a.i)+'"/>';Pn(a,c)}
	function Kq(b){var c,d,e,f;d=0;hl(b);no(b,3);for(c=0;c<b.d;c++){try{f=(e=bB(Iq,MJ(ee(b,c,6241))),e<0?-1:e);f!=-1&&(d+=Hq[f])}catch(a){a=PG(a);if(!yD(a,13))throw QG(a)}}return d}
	function Xc(a,b){var c,d,e;e=-1;d=-1;if((a.B&128)!=0)return -1;if(si(a.H,b)){e=Fh(a.H,b);d=Eh(a.H,b)}c=ck(a.H,b);if(c!=-1){e=$h(a.H,c);d=Zh(a.H,c)}e!=-1&&e!=0&&(e|=d<<8);return e}
	function Ne(a,b,c,d,e,f,g,h){var i,j;for(j=1;j<h;j++){for(i=g[j];i<g[j+1];i++)c[i]=f[e[i]]+(c[d[i]]<<8);Oe(a,b,c,d,e,g,j);if(c[1]!==c[2])return true;j>1&&Le(c,d,g,j)}return false}
	function tl(a,b){var c;if((a.s[b]&eS)!=0)return true;if(a.A[b]==1)return false;return c=a.A[b],c==1||c>=5&&c<=9||c>=14&&c<=17||c>=32&&c<=35||c>=52&&c<=53||a.A[b]==13||a.A[b]>=171}
	function Vl(a,b){var c,d,e;if(b<0||b>999){zK(a.b,'  ?');return}c=false;for(d=0;d<3;d++){e=b/100|0;if(e==0){d==2||c?wK(a.b,48):wK(a.b,32)}else{wK(a.b,48+e&fR);c=true}b=10*(b%100)}}
	function VH(a,b){var c,d,e,f,g;c=new XH;d=$wnd.Math.min(a.c,b.c);e=$wnd.Math.min(a.d,b.d);f=$wnd.Math.max(a.c+a.b,b.c+b.b);g=$wnd.Math.max(a.d+a.a,b.d+b.a);QH(c,d,e,f,g);return c}
	function rK(a){var b,c;if(a>=eR){b=55296+(a-eR>>10&1023)&fR;c=56320+(a-eR&1023)&fR;return String.fromCharCode(b)+(''+String.fromCharCode(c))}else{return String.fromCharCode(a&fR)}}
	function jl(a,b){var c,d,e,f,g,h,i,j;i=-1;d=0;for(g=0;g<2;g++){c=a.B[g][b];for(h=0;h<a.c[c];h++){e=a.f[c][h];if(e!=a.B[1-g][b]){f=a.i[c][h];j=Qk(a,f,e);if(d<j){d=j;i=f}}}}return i}
	function Jr(b){var c,d,e;e=new aI(new dI(b));c=new pN;while(true){try{d=_H(e);if(d!=null)c.a[c.a.length]=d;else break}catch(a){a=PG(a);if(yD(a,53)){break}else throw QG(a)}}return c}
	function KL(a,b,c){var d,e,f;for(e=new XO((new aP(a)).b);uL(e.a);){d=e.b=vL(e.a);f=d.Fb();if(ED(b)===ED(f)||b!=null&&rc(b,f)){if(c){d=new FM(d.Fb(),d.Gb());WO(e)}return d}}return null}
	function Xd(a,b){var c,d,e,f,g,h;if(a.q[b]==0){return false}h=true;c=a.q[b];f=a.g[b];g=0;for(d=0;d<f;d++){e=a.f[b][d];g+=a.q[e]}(c<0?-c:c)<=(g<0?-g:g)&&SJ(c)!=SJ(g)&&(h=false);return h}
	function sn(a,b){var c,d;if(!b)return null;d=JC(KD,jR,6,(pn.length+31)/32|0,15,1);b=vn(b);fn(a.g,b);for(c=0;c<pn.length;c++){en(a.g,qn[c]);Xm(a.g,4)>0&&(d[c/32|0]|=1<<31-c%32)}return d}
	function md(a,b,c,d,e){var f,g,h,i,j;if(e){g=(f=(h=JH(a.e,d),new YH(0,0,h,0)).b,f);i=g/2+(a.j/8|0);j=a.j/2|0;(d=='+'||d=='-')&&(j=j*2/3);bN(a.U,new YH(b-i,c-j,2*i,2*j))}a.G||Hn(a,d,b,c)}
	function Kc(a){var b,c;if((a.B&32)!=0)return;c=qo(a.H);if(c!=null){if(a.u.a==0&&a.u.b==0){b=a.L.c*Sh(a.H);Cd(a);Tc(a,b);zd(a,null,b,0)}Nn(a,FD(a.v));Ad(a,448);Hn(a,c,a.u.a,a.u.b+lR*a.v)}}
	function Pe(a){var b,c;c=HC(KD,[QQ,XR],[24,7],0,[2,32],2);for(b=0;b<a.L.d;b++){a.H[b]&&(a.U[b]==1?(c[0][a.T[b]]=dg(c[0][a.T[b]],b)):a.U[b]==2&&(c[1][a.T[b]]=dg(c[0][a.T[b]],b)))}return c}
	function LO(a,b,c,d){var e,f;f=b;e=f.c==null||a.a.eb(c.c,f.c)>0?1:0;while(f.a[e]!=c){f=f.a[e];e=a.a.eb(c.c,f.c)>0?1:0}f.a[e]=d;d.b=c.b;d.a[0]=c.a[0];d.a[1]=c.a[1];c.a[0]=null;c.a[1]=null}
	function Dm(a,b){var c,d,e,f,g;f=b.length;g=JC(KD,jR,6,f,15,1);for(d=0;d<f;d++){c=d==f-1?b[0]:b[d+1];for(e=0;e<uk(a.g,b[d]);e++){if(tk(a.g,b[d],e)==c){g[d]=vk(a.g,b[d],e);break}}}return g}
	function YA(a,b){var c;if(a==null)return b==null?0:1;if(b==null)return -1;for(c=0;c<a.length;c++){if(b.length==c)return 1;if(a[c]!==b[c])return a[c]<b[c]?-1:1}return b.length>a.length?-1:0}
	function Ih(a,b){var c,d,e;if(a.t==null||a.t[b]==null)return (a.w[b]&1)!=0?'':Rg[a.A[b]];e='';for(d=0;d<a.t[b].length;d++){d>0&&(e=(uQ(e),e+(uQ(','),',')));c=a.t[b][d];e=eK(e,Rg[c])}return e}
	function Tm(a,b,c){var d,e,f;if(a.a){for(e=new JN(a.a);e.a<e.c.a.length;){d=IN(e);if((a.u[d.a]||a.u[d.b])==c){f=Lk(a.A,a.w[d.a],a.w[d.b],d.c+1,b)-1;if(f<d.d||f>d.c)return false}}}return true}
	function Ck(a){var b,c,d,e;e=JC(KD,jR,6,a.o,15,1);c=fk(a);d=a.o-1;while(d>=0&&c[d]){e[d]=d;--d}for(b=0;b<=d;b++){if(c[b]){e[b]=d;e[d]=b;--d;while(d>=0&&c[d]){e[d]=d;--d}}else{e[b]=b}}return e}
	function ln(a,b,c,d,e,f){var g,h;g=tk(a.d,a.o[b],d);if(g!=a.q[b]){h=vk(a.d,a.o[b],d);if(!f[h]&&!vi(a.d,h)){a.o[++c]=g;a.q[c]=a.o[b];a.r[c]=h;f[h]=true;e[g]?(a.p[c]=true):(e[g]=true)}}return c}
	function hD(a,b){var c,d,e;b&=63;if(b<22){c=a.l<<b;d=a.m<<b|a.l>>22-b;e=a.h<<b|a.m>>22-b}else if(b<44){c=0;d=a.l<<b-22;e=a.m<<b-22|a.l>>44-b}else{c=0;d=0;e=a.l<<b-44}return RC(c&uS,d&uS,e&DU)}
	function jD(a,b){var c,d,e,f;b&=63;c=a.h&DU;if(b<22){f=c>>>b;e=a.m>>b|c<<22-b;d=a.l>>b|a.m<<22-b}else if(b<44){f=0;e=c>>>b-22;d=a.m>>b-22|a.h<<44-b}else{f=0;e=0;d=c>>>b-44}return RC(d&uS,e&uS,f&DU)}
	function KJ(a){var b,c;if(TG($Q,a)<=0&&TG(a,WQ)<=0){return eH(a).toString(16)}b=JC(HD,RR,6,17,15,1);c=17;do{b[--c]=yI(eH(a)&15);a=UG(jD(XG(a)?cH(a):a,4))}while(TG(a,0)!=0);return tK(b,c,17-c)}
	function Pv(a,b){$u();var c;typeof b===BU&&(b=true);if(typeof b===TQ){c=new bv(Cl(HA(Zu,false),a));b===true&&c.inventCoordinates()}else typeof b===VQ&&(c=new bv(Dl(HA(Zu,false),a,b)));return c}
	function SB(b,c){var d,e,f,g;for(e=0,f=b.length;e<f;e++){g=b[e];try{g[1]?g[0].Mb()&&(c=RB(c,g)):g[0].Mb()}catch(a){a=PG(a);if(yD(a,15)){d=a;DB();JB(yD(d,78)?d.ob():d)}else throw QG(a)}}return c}
	function rH(a,b){var c=$wnd;if(a===''){return c}var d=a.split('.');!(d[0] in c)&&c.execScript&&c.execScript('var '+d[0]);for(var e;d.length&&(e=d.shift());){c=c[e]=c[e]||!d.length&&b||{}}return c}
	function _H(a){var b,c,d;c=ZH(a);if(c==-1)return null;d=new CK;b=false;while(!b){if(c==10){b=true}else if(c==13){b=true;c=ZH(a);c!=10&&(a.a=c)}if(!b){if(c==-1){break}wK(d,c&fR);c=ZH(a)}}return d.a}
	function Mg(a,b,c){var d,e,f,g;Ig(this);e=b.b/a.b;g=b.a/a.a;f=0;f==0&&(f=24);d=f/c;this.c=$wnd.Math.min(d,$wnd.Math.min(e,g));this.a=b.c+b.b/2-this.c*(a.c+a.b/2);this.b=b.d+b.a/2-this.c*(a.d+a.a/2)}
	function Yg(a,b){a.o>=a.K&&Ej(a,a.K*2);a.A[a.o]=0;rj(a,a.o,b);a.q[a.o]=0;a.s[a.o]=0;a.w[a.o]=0;a.u[a.o]=0;zg(a.H[a.o],0,0,0);a.t!=null&&(a.t[a.o]=null);a.r!=null&&(a.r[a.o]=null);a.Q=0;return a.o++}
	function $g(a,b){var c,d,e,f,g;a.I=a.I|b.I;d=JC(KD,jR,6,b.o,15,1);f=Ui(a,1);g=Ui(a,2);for(c=0;c<b.o;c++){d[c]=kh(b,a,c,f,g)}for(e=0;e<b.p;e++){lh(b,a,e,f,g,d,false)}a.J=a.J&&b.J;a.G=0;a.Q=0;return d}
	function un(a){var b;for(b=0;b<a.f.length;b++)if((a.c[b]&~a.f[b])!=0)return false;!a.d&&(a.d=El(new Hl(false),a.e,null));!a.a&&(a.a=El(new Hl(false),a.b,null));fn(a.g,a.d);en(a.g,a.a);return _m(a.g)}
	function Bn(a){rn();var b,c,d,e;if(a.length==0||(a.length&7)!=0)return null;d=JC(KD,jR,6,a.length/8|0,15,1);for(c=0;c<a.length;c++){e=c/8|0;b=a.charCodeAt(c)-48;b>16&&(b-=7);d[e]<<=4;d[e]+=b}return d}
	function iq(a,b,c){var d,e,f;for(f=0;f<a.e.length;f++){e=$wnd.Math.sqrt((a.a[f]-b)*(a.a[f]-b)+(a.b[f]-c)*(a.b[f]-c));d=0-dq(b,c,a.a[f],a.b[f]);a.a[f]=b+e*$wnd.Math.sin(d);a.b[f]=c+e*$wnd.Math.cos(d)}}
	function sq(a,b,c,d){var e,f,g;for(g=0;g<a.e.length;g++){f=$wnd.Math.sqrt((a.a[g]-b)*(a.a[g]-b)+(a.b[g]-c)*(a.b[g]-c));e=dq(b,c,a.a[g],a.b[g])+d;a.a[g]=b+f*$wnd.Math.sin(e);a.b[g]=c+f*$wnd.Math.cos(e)}}
	function vB(a){var b;if(a.c==null){b=ED(a.b)===ED(tB)?null:a.b;a.d=b==null?ZQ:BD(b)?b==null?null:b.name:DD(b)?'String':GI(tc(b));a.a=a.a+': '+(BD(b)?b==null?null:b.message:b+'');a.c='('+a.d+') '+a.a}}
	function Pj(a,b,c){var d,e,f;a.R=b;a.S=c;a.N=JC(ID,mR,6,a.o,15,1);a.O=JC(ID,mR,6,a.o,15,1);for(d=0;d<a.o;d++){e=b-a.H[d].a;f=c-a.H[d].b;a.O[d]=$wnd.Math.sqrt(e*e+f*f);a.N[d]=Rj(b,c,a.H[d].a,a.H[d].b)}}
	function lr(b){var c,d,e,f;e=-0.5299999713897705;for(c=0;c<b.d;c++){f=-1;try{f=ee(b,c,2144)}catch(a){a=PG(a);if(!yD(a,13))throw QG(a)}for(d=0;d<jr.length;d++){if(VG(ir[d],f)){e+=jr[d];break}}}return e}
	function CH(a){var b;b=JC(JD,RR,6,4,15,1);if(a.b==null){b[0]=(a.c>>16&255)/255;b[1]=(a.c>>8&255)/255;b[2]=(a.c&255)/255;b[3]=(a.c>>24&255)/255}else{b[0]=a.b[0];b[1]=a.b[1];b[2]=a.b[2];b[3]=a.a}return b}
	function uO(a){var b,c,d,e,f,g;e=a.a*PU+a.b*1502;g=a.b*PU+11;b=$wnd.Math.floor(g*QU);e+=b;g-=b*lS;e%=lS;a.a=e;a.b=g;d=a.a*128;f=$wnd.Math.floor(a.b*qO[31]);c=d+f;c>=2147483648&&(c-=4294967296);return c}
	function Nc(a,b,c,d){var e,f;e=new Gd;f=new Gd;e.a=b.a;e.c=b.c;e.b=(b.a+b.b)/2;e.d=(b.c+b.d)/2;f.a=e.b;f.c=e.d;f.b=b.b;f.d=b.d;if(wd(a,e)){Ad(a,a.o[c]);Fn(a,e)}if(wd(a,f)){Ad(a,a.o[d]);Fn(a,f)}Ad(a,a.K)}
	function ph(a,b,c){var d,e;d=wh(a,b,c);if(d!=-1){(a.s[d]&512)!=0?vh(a):oh(a,d);a.Q=0;return true}e=xh(a,b,c);if(e!=-1){(a.s[a.B[0][e]]&a.s[a.B[1][e]]&512)!=0?vh(a):sh(a,e);a.Q=0;return true}return false}
	function Gn(a,b,c,d){var e,f;f=new EK('<polygon points="');for(e=0;e<d;e++){xK(f,FD(b[e]));f.a+=',';xK(f,FD(c[e]));f.a+=' '}zK(f,'" style="fill:'+a.d+';'+'stroke:'+a.d+';'+'stroke-width:1"/>');Pn(a,f.a)}
	function bk(a,b){var c,d,e,f,g;c=-1;if(a.k[b]==1){for(f=0;f<a.g[b];f++){if(a.j[b][f]==2){d=a.f[b][f];if(a.g[d]==2&&a.k[d]==2){for(g=0;g<2;g++){e=a.f[d][g];if(e!=b&&a.k[e]==1){c=d;break}}}break}}}return c}
	function Wc(a,b){var c,d;if((a.B&128)!=0)return a.o[b];d=Xc(a,b);if(d==-1){c=bk(a.H,b);if(c!=-1){b=c;d=Xc(a,c)}}if(d==-1)return a.o[b];switch(d&255){case 1:return 384;case 2:return 64;default:return 448;}}
	function ue(a,b){var c,d,e,f;e=false;for(d=0;d<a.L.e;d++)if(je(a,d,false)){a.o[d]=a.G;b&&Ie(a,d);e=true}f=false;for(c=0;c<a.L.d;c++)if(oe(a,c,false)){a.$[c]=a.G;b&&Je(a,c);f=true}f&&(a.G=!a.G);return e||f}
	function _N(a,b,c,d,e,f){var g,h,i,j;g=d-c;if(g<7){YN(b,c,d,f);return}i=c+e;h=d+e;j=i+(h-i>>1);_N(b,a,i,j,-e,f);_N(b,a,j,h,-e,f);if(f.eb(a[j-1],a[j])<=0){while(c<d){b[c++]=a[i++]}return}ZN(a,i,j,h,b,c,d,f)}
	function Dk(a,b,c){var d,e,f,g;e=Hk(a,b);e-=hi(a,b,e);c&&(e-=a.c[b]-a.g[b]);g=a.A[b]<Sg.length?Sg[a.A[b]]:null;f=g==null?6:g[0];if(e<=f)return -1;if(g!=null)for(d=1;f<e&&d<g.length;d++)f=g[d];return f>e?f:e}
	function sh(a,b){var c,d,e;for(d=0;d<2;d++){c=0;for(e=0;e<a.p;e++){if(e==b)continue;(a.B[0][e]===a.B[d][b]||a.B[1][e]===a.B[d][b])&&++c}if(c==0){Ti(a,a.u[a.B[d][b]]);a.A[a.B[d][b]]=-1}}a.F[b]=128;jh(a);a.Q=0}
	function Fr(){Fr=pH;nr=MC(FC(XF,1),bS,2,6,['mutagenic','tumorigenic','irritant','reproductive effective']);or=MC(FC(XF,1),bS,2,6,['Mutagenicity','Tumorigenicity','Irritating effects','Reproductive effects'])}
	function JQ(a){var b,c,d,e;b=0;d=a.length;e=d-4;c=0;while(c<e){b=a.charCodeAt(c+3)+31*(a.charCodeAt(c+2)+31*(a.charCodeAt(c+1)+31*(a.charCodeAt(c)+31*b)));b=b|0;c+=4}while(c<d){b=b*31+bK(a,c++)}b=b|0;return b}
	function fh(a,b,c){var d,e,f,g,h;e=JC(KD,jR,6,b.o,15,1);g=Ui(a,1);h=Ui(a,2);for(d=0;d<b.o;d++){b.A[d]!=0?(e[d]=kh(b,a,d,g,h)):(e[d]=c)}for(f=0;f<b.p;f++){lh(b,a,f,g,h,e,false)}a.J=a.J&&b.J;a.G=0;a.Q=0;return e}
	function jo(a,b){var c,d,e,f;f=a.c.a.length;if(f==0)return -1;e=1;while(2*e<=f)e<<=1;d=e;--e;while(d!=0){d>>=1;if(e>=f){e-=d;continue}c=cK(b,eN(a.c,e));if(c==0)return e;if(d==0)break;c<0?(e-=d):(e+=d)}return -1}
	function Gi(a){var b;for(b=0;b<a.o;b++){switch(a.A[b]){case 1:case 5:case 6:case 7:case 8:case 9:case 14:case 15:case 16:case 17:case 33:case 34:case 35:case 52:case 53:continue;default:return false;}}return true}
	function Hn(a,b,c,d){var e,f,g,h;g=(e=(h=JH(a.e,b),new YH(0,0,h,0)).b,e);f='<text x="'+FD(c-g/2)+IR+'y="'+FD(d+(a.j/3|0))+IR+'font-family=" '+a.e.a+IR+'font-size="'+a.e.b+IR+'fill="'+a.d+'">'+b+'<\/text>';Pn(a,f)}
	function qd(a,b){var c,d,e,f,g,h,i;c=JC(ID,mR,6,gk(a.H,b),15,1);for(e=0;e<gk(a.H,b);e++)c[e]=Uh(a.H,b,tk(a.H,b,e));bO(c);f=rd(c,0);g=od(c,0,f);for(d=1;d<c.length;d++){h=rd(c,d);i=od(c,d,h);if(g<i){g=i;f=h}}return f}
	function ll(a){var b,c,d,e;no(a,7);a.o=a.d;a.p=a.e;for(c=0;c<a.d;c++){if(a.c[c]!==a.g[c]){b=Dk(a,c,false);a.c[c]=a.g[c];if(b!=-1){e=Dk(a,c,true);if(b!=e){d=((a.s[c]&eS)>>>28)-1;(d==-1||d<b)&&Yi(a,c,b)}}}}rl(a);a.Q=0}
	function _d(a,b,c){var d,e,f;d=false;for(f=0;f<a.g[b];f++){if(!Yk(a,a.i[b][f])&&a.j[b][f]==1){e=a.f[b][f];if((a.s[e]&cR)==0&&(a.A[e]==6&&Wd(a,e)==1||a.A[e]==16&&Wd(a,e)==2)){if(d||!c)return true;d=true}}}return false}
	function Yc(a){var b,c,d,e;Mn(a,2*a.M);e=new Gd;for(d=0;d<a.H.p;d++){b=Vh(a.H,0,d);c=Vh(a.H,1,d);if(ui(a.H,d)){e.a=Jg(a.L,Oh(a.H,b));e.c=Kg(a.L,Ph(a.H,b));e.b=Jg(a.L,Oh(a.H,c));e.d=Kg(a.L,Ph(a.H,c));Ad(a,-2);Fn(a,e)}}}
	function Kn(a,b,c,d,e,f,g){var h;h='<line id="'+(a.g!=null?a.g:'mol'+En)+':Bond:'+b+'-'+c+IR+wS+'x1="'+FD(d)+IR+'y1="'+FD(e)+IR+'x2="'+FD(f)+IR+'y2="'+FD(g)+IR+'stroke-width="'+8+IR+'stroke-opacity="0"'+'/>';bN(a.b,h)}
	function Yi(a,b,c){var d;if(c>=-1&&c<=14){a.s[b]&=268435455;c!=(d=a.A[b]<Sg.length?Sg[a.A[b]]:null,d==null?6:d[d.length-1])&&(a.s[b]|=1+c<<28);if(a.A[b]==6){if(c==-1||c==0||c==2||c==4){a.s[b]&=-49;c==2&&(a.s[b]|=16)}}}}
	function Fl(a,b,c){var d,e,f,g;if(c==null||c.length==0){Gl(a,b,null,null);return}d=iK(c,rK(32));d>0&&d<c.length-1?Gl(a,b,nQ((f=c.substr(0,d),iQ(),f)),nQ((g=c.substr(d+1,c.length-(d+1)),g))):Gl(a,b,nQ((e=c,iQ(),e)),null)}
	function tg(a,b){var c,d;if(a==null)return b==null?0:1;if(b==null)return -1;c=RJ(a.length,b.length);for(d=0;d<c;d++)if((a[d]&aS)!=(b[d]&aS))return (a[d]&aS)<(b[d]&aS)?-1:1;return a.length==b.length?0:a.length<b.length?-1:1}
	function Me(a,b){var c,d,e,f,g,h,i;g=gk(a.L,b);h=JC(KD,jR,6,g,15,1);for(e=0;e<g;e++)h[e]=tk(a.L,b,e);for(d=g;d>1;d--){c=false;for(f=1;f<d;f++){if(Ke(a,b,h[f-1],h[f])){c=true;i=h[f-1];h[f-1]=h[f];h[f]=i}}if(!c)break}return h}
	function jm(a,b){var c,d,e,f,g,h;f=a.indexOf(b+'=(')+b.length+2;g=jK(a,rK(41),f);e=cm(a,f);c=bJ(a.substr(f,e-f));h=JC(KD,jR,6,c,15,1);for(d=0;d<c;d++){f=bm(a,e);e=cm(a,f);(e==-1||e>g)&&(e=g);h[d]=bJ(a.substr(f,e-f))}return h}
	function An(a){rn();var b,c,d,e,f,g;if(a==null)return null;b=JC(GD,$R,6,a.length*8,15,1);for(d=0;d<a.length;d++){g=a[d];for(e=7;e>=0;e--){c=g&15;c>9&&(c+=7);b[d*8+e]=48+c<<24>>24;g>>=4}}return sK(lQ(b,0,(f=b.length,iQ(),f)))}
	function yJ(a){var b,c,d;if(a<0){return 0}else if(a==0){return 32}else{d=-(a>>16);b=d>>16&16;c=16-b;a=a>>b;d=a-256;b=d>>16&8;c+=b;a<<=b;d=a-cR;b=d>>16&4;c+=b;a<<=b;d=a-dR;b=d>>16&2;c+=b;a<<=b;d=a>>14;b=d&~(d>>1);return c+2-b}}
	function Ej(a,b){var c,d;a.A=NN(a.A,b);a.q=NN(a.q,b);a.u=NN(a.u,b);d=a.H.length;a.H=ON(a.H,b);for(c=d;c<b;c++)a.H[c]=new Bg;a.v=NN(a.v,b);a.s=NN(a.s,b);a.w=NN(a.w,b);a.t!=null&&(a.t=ON(a.t,b));a.r!=null&&(a.r=ON(a.r,b));a.K=b}
	function Op(a,b){var c,d,e,f,g;g=0;c=0;for(d=0;d<b;d++){g+=a[d].b*$wnd.Math.sin(a[d].a);c+=a[d].b*$wnd.Math.cos(a[d].a)}if(c==0)f=g>0?tR:GR;else{f=$wnd.Math.atan(g/c);c<0&&(f+=sR)}e=$wnd.Math.sqrt(g*g+c*c)/b;return new bq(f,e)}
	function bj(a,b,c){var d,e;if(c!=null){if(c.length==0)c=null;else{d=Tj(c);if(d!=0&&gK(c,Rg[d])||gK(c,'?')){rj(a,b,d);c=null}}}if(c==null){a.r!=null&&(a.r[b]=null)}else{a.r==null&&(a.r=JC(GD,dS,9,a.K,0,2));a.r[b]=nQ((e=c,iQ(),e))}}
	function xf(a,b){var c,d,e,f;if(a.d!=b.d)return a.d>b.d?1:-1;e=a.a.length;f=b.a.length;c=e<f?e:f;for(d=0;d<c;d++){--e;--f;if(a.a[e]!==b.a[f])return a.a[e]>b.a[f]?1:-1}if(e!=f)return e>f?1:-1;if(a.b!=b.b)return a.b>b.b?1:-1;return 0}
	function ah(a,b,c,d){var e;for(e=0;e<a.p;e++){if(a.B[0][e]==b&&a.B[1][e]==c||a.B[0][e]==c&&a.B[1][e]==b){ih(a,e,d);a.Q=0;return e}}a.p>=a.L&&Fj(a,a.L*2);a.B[0][a.p]=b;a.B[1][a.p]=c;a.F[a.p]=d;a.C[a.p]=0;a.D[a.p]=0;a.Q=0;return a.p++}
	function th(a){var b,c,d;d=false;for(b=0;b<a.o;b++){if(a.A[b]==-1){d=true;Ti(a,a.u[b])}}for(c=0;c<a.p;c++){if(a.F[c]==128){d=true}else if(a.A[a.B[0][c]]==-1||a.A[a.B[1][c]]==-1){a.F[c]=128;d=true}}if(d){a.Q=0;return jh(a)}return null}
	function fj(a,b,c,d){var e;if(c==null){a.t!=null&&(a.t[b]=null);return}if(c.length==1&&!d){e=c[0];a.A[b]!=e&&gh(a,b,e,0,-1,0);a.t!=null&&(a.t[b]=null);return}a.t==null&&(a.t=JC(KD,XR,7,a.K,0,2));a.t[b]=c;d&&(a.w[b]|=1);a.Q=0;a.I=true}
	function bh(a,b,c,d,e){var f,g,h;while(a.o+d>a.K)Ej(a,a.K*2);while(a.p+d>a.L)Fj(a,a.L*2);f=wh(a,b,c);if(f!=-1)return dh(a,f,d,e);g=xh(a,b,c);if(g!=-1)return eh(a,g,d,e);f=Xg(a,b,c,0);h=sR*(d-2)/d;Ni(a,f,d,f,e,0,sR-h);a.Q=0;return true}
	function ho(a,b,c,d,e,f){this.k=a;if(d!=0&&d!=1){this.b=true}else{this.a=b;this.c=c;this.d=d;this.e=f;this.g=0;this.i=JC(NG,nR,6,4,16,1);this.f=JC(KD,jR,6,4,15,1);this.j=JC(KD,jR,6,4,15,1);if(c!=-1&&d==1){eo(this,WQ,e,true);this.d=0}}}
	function gf(a,b){var c,d,e,f,g,h,i;i=Mk(a.L);for(c=0;c<i.i.a.length;c++){if(i.d[c]&&Gm(i,c,b)){for(e=eN(i.i,c),f=0,g=e.length;f<g;++f){d=e[f];if(d!=b)for(h=0;h<uk(a.L,d);h++)if(Zk(a.L,vk(a.L,d,h)))return true}return false}}return false}
	function Sq(a){var b,c,d,e,f,g;if(!Qq)return vU;f=0;d=0;g=new nn;c=new Co;for(e=0;e<Pq.a.a.length;e++){Fl(new Hl(false),c,Uq(Pq,e));fn(g,a);en(g,c);if(Xm(g,g.b)>0){f+=Vq(Pq,e);++d}}b=d==0?-1:f/$wnd.Math.sqrt(d);return b+'\t'+d+'\t'+a.d}
	function iD(a,b){var c,d,e,f,g;b&=63;c=a.h;d=(c&_Q)!=0;d&&(c|=-1048576);if(b<22){g=c>>b;f=a.m>>b|c<<22-b;e=a.l>>b|a.m<<22-b}else if(b<44){g=d?DU:0;f=c>>b-22;e=a.m>>b-22|c<<44-b}else{g=d?DU:0;f=d?uS:0;e=c>>b-44}return RC(e&uS,f&uS,g&DU)}
	function jg(a,b,c){var d,e,f,g,h;h=false;g=1;b[c]=1;d=true;while(d){d=false;for(e=0;e<a.b;e++){if(b[e]==g){for(f=0;f<a.b;f++){if(b[f]==0&&pg(a,e,f)){if(a.c[f]==-2){b[f]=g+1;d=true}else if(a.c[f]!==a.c[c]){b[f]=g+1;h=true}}}}}++g}return h}
	function Zm(a,b){var c;c=0;if((a.C[b]&512)!=0||a.F[b]==64)c|=8;else switch(bi(a,b)){case 0:c|=32;break;case 1:c|=1;break;case 2:c|=2;break;case 3:c|=4;}(a.C[b]&64)!=0?(c|=64):a.I||(c|=32);(a.C[b]&256)!=0?(c|=_Q):a.I||(c|=1048576);return c}
	function Oo(a,b,c){var d,e,f,g,h;g=Cl(new Hl(true),a);e=-1;for(;0<g.o;f++){d=g.r==null?null:g.r[0]==null?null:fK(g.r[0]);d!=null&&(h='*'.length,gK(d.substr(d.length-h,h),'*'));e=0;break}if(e>=0){return No(g,e,b,c)}return JC(XF,bS,2,0,6,1)}
	function Wq(a){var b,c,d,e,f;f=new aI(new dI(a));this.a=new pN;while(true){e=_H(f);if(e==null)break;d=iK(e,rK(9));if(d==-1)throw QG(new pB('line without TAB'));b=e.substr(0,d);c=AQ(aJ(e.substr(d+1,e.length-(d+1))));bN(this.a,new Xq(b,c))}}
	function bB(a,b){var c,d,e,f;f=a.a.a.length;if(f==0){return -1}e=1;while(2*e<=f)e<<=1;d=e;--e;while(d!=0){d>>=1;if(e>=f){e-=d;continue}c=EJ(b,eN(a.a,e));if(c==0)return e;if(d==0)break;c<0?(e-=d):(e+=d)}e<f&&EJ(b,eN(a.a,e))>0&&++e;return -(e+1)}
	function nl(a,b,c,d){var e,f,g,h,i,j;e=a.c[b];h=JC(KD,jR,6,e,15,1);j=yk(a,b,c,d,h);if(j==3)return false;g=(a.s[b]&3)==j?17:9;for(i=0;i<e;i++){if((h[i]&1)==1){f=a.i[b][c[i]];a.F[f]=g;if(a.B[0][f]!=b){a.B[1][f]=a.B[0][f];a.B[0][f]=b}}}return true}
	function zq(b,c){var d,e,f,g;g=0;e=new Ho;while(g<c){try{f=_H(b.g)}catch(a){a=PG(a);if(yD(a,53)){break}else throw QG(a)}if(f==null){break}gK(f.substr(0,4),tS)&&++g;if(gK(f.substr(0,1),'>')){d=Aq(f);d!=null&&Go(e,d)}}b.c=oN(e.b,JC(XF,bS,2,0,6,1))}
	function nQ(a){var b,c,d,e,f,g,h;g=a.length;b=0;for(f=0;f<g;){d=wI(a,f,a.length);f+=d>=eR?2:1;d<128?++b:d<uR?(b+=2):d<eR?(b+=3):d<CR?(b+=4):d<jS&&(b+=5)}c=JC(GD,$R,6,b,15,1);h=0;for(e=0;e<g;){d=wI(a,e,a.length);e+=d>=eR?2:1;h+=mQ(c,h,d)}return c}
	function TI(a){if(a.wb()){var b=a.c;b.xb()?(a.k='['+b.j):!b.wb()?(a.k='[L'+b.ub()+';'):(a.k='['+b.ub());a.b=b.tb()+'[]';a.i=b.vb()+'[]';return}var c=a.f;var d=a.d;d=d.split('/');a.k=WI('.',[c,WI('$',d)]);a.b=WI('.',[c,WI('.',d)]);a.i=d[d.length-1]}
	function Zd(a,b){var c,d,e,f,g,h;c=false;if(a.A[b]!=8)return false;if(a.g[b]!=1)return false;g=a.f[b][0];if(a.A[g]==15){h=a.g[g];for(d=0;d<h;d++){e=a.f[g][d];if(e==b){continue}if(a.A[e]!=8){continue}f=rk(a,g,e);if(a.F[f]==2){c=true;break}}}return c}
	function Jm(a,b){var c,d,e,f,g,h;for(g=0;g<2;g++){c=Vh(a.g,g,b);if(Rh(a.g,c)==7&&uk(a.g,c)==2){d=Vh(a.g,1-g,b);for(h=0;h<uk(a.g,d);h++){e=tk(a.g,d,h);f=vk(a.g,d,h);if((Rh(a.g,e)==8||Rh(a.g,e)==16)&&bi(a.g,f)==2&&uk(a.g,e)==1)return true}}}return false}
	function nH(a,b,c){var d=lH,h;var e=d[a];var f=e instanceof Array?e[0]:null;if(e&&!f){_=e}else{_=(h=b&&b.prototype,!h&&(h=lH[b]),qH(h));_.Kb=c;_.constructor=_;!b&&(_.Lb=tH);d[a]=_}for(var g=3;g<arguments.length;++g){arguments[g].prototype=_}f&&(_.Jb=f)}
	function Rd(a){var b,c,d,e,f,g,h;do{h=false;for(c=0;c<a.e.e;c++){if(a.d[c]){f=false;for(e=0;e<2;e++){d=Vh(a.e,e,c);b=false;for(g=0;g<uk(a.e,d);g++){if(c!=vk(a.e,d,g)&&a.d[vk(a.e,d,g)]){b=true;break}}if(!b){f=true;break}}if(f){h=true;Pd(a,c)}}}}while(h)}
	function _n(a){var b,c,d,e,f,g,h;do{h=false;for(c=0;c<a.b.e;c++){if(a.a[c]){f=false;for(e=0;e<2;e++){b=false;d=Vh(a.b,e,c);for(g=0;g<uk(a.b,d);g++){if(c!=vk(a.b,d,g)&&a.a[vk(a.b,d,g)]){b=true;break}}if(!b){f=true;break}}if(f){h=true;$n(a,c)}}}}while(h)}
	function Sk(a,b,c){var d,e,f,g,h,i;no(a,1);f=JC(KD,jR,6,a.d,15,1);i=JC(NG,nR,6,a.d,16,1);f[0]=b;f[1]=c;i[b]=true;i[c]=true;e=1;g=1;while(e<=g){for(h=0;h<a.g[f[e]];h++){d=a.f[f[e]][h];if(d==b){if(e!=1)return -1}if(!i[d]){i[d]=true;f[++g]=d}}++e}return g}
	function Kk(a,b,c){var d,e,f,g,h,i;if(b==c)return 0;no(a,1);g=JC(KD,jR,6,a.o,15,1);f=JC(KD,jR,6,a.o,15,1);f[0]=b;g[b]=1;e=0;h=0;while(e<=h){for(i=0;i<a.c[f[e]];i++){d=a.f[f[e]][i];if(d==c)return g[f[e]];if(g[d]==0){f[++h]=d;g[d]=g[f[e]]+1}}++e}return -1}
	function fe(a,b,c,d,e,f,g){var h,i,j,k;j=0;for(i=0;i<a.L.d;i++)(Mh(a.L,a.t[i])&e)!=0&&++j;if(j==0)return false;if(b>15){Xe(a,c);b-=16}Se(a,1,1);Se(a,b,4);Se(a,j,d);for(h=0;h<a.L.d;h++){k=Mh(a.L,a.t[h])&e;if(k!=0){Se(a,h,d);f!=1&&Se(a,k>>g,f)}}return true}
	function ge(a,b,c,d,e,f,g){var h,i,j,k;j=0;for(i=0;i<a.L.e;i++)(di(a.L,a.u[i])&e)!=0&&++j;if(j==0)return false;if(b>15){Xe(a,c);b-=16}Se(a,1,1);Se(a,b,4);Se(a,j,d);for(h=0;h<a.L.e;h++){k=di(a.L,a.u[h])&e;if(k!=0){Se(a,h,d);f!=1&&Se(a,k>>g,f)}}return true}
	function vC(a,b){var c,d;d=0;c=new CK;d+=uC(a,b,0,c,false);a.t=c.a;d+=wC(a,b,d,false);d+=uC(a,b,d,c,false);a.u=c.a;if(d<b.length&&b.charCodeAt(d)==59){++d;d+=uC(a,b,d,c,true);a.q=c.a;d+=wC(a,b,d,true);d+=uC(a,b,d,c,true);a.r=c.a}else{a.q='-'+a.t;a.r=a.u}}
	function Zg(a,b,c,d){var e;if(b==c)return -1;for(e=0;e<a.p;e++){if(a.B[0][e]==b&&a.B[1][e]==c||a.B[0][e]==c&&a.B[1][e]==b){a.F[e]<d&&(a.F[e]=d);return e}}a.p>=a.L&&Fj(a,a.L*2);a.B[0][a.p]=b;a.B[1][a.p]=c;a.F[a.p]=d;a.C[a.p]=0;a.D[a.p]=0;a.Q=0;return a.p++}
	function Pk(a,b){var c,d;no(a,1);if(a.g[b]==2&&a.j[b][0]==2&&a.j[b][1]==2){for(c=0;c<2;c++)for(d=0;d<a.c[a.f[b][c]];d++)if(Ki(a,a.i[a.f[b][c]][d],a.f[b][c]))return a.i[a.f[b][c]][d]}else{for(c=0;c<a.c[b];c++)if(Ki(a,a.i[b][c],b))return a.i[b][c]}return -1}
	function Yf(a,b){var c,d,e,f,g,h;if(!a.b)return false;e=false;for(f=a.b.a.length-1;f>=0;f--){d=false;g=eN(a.b,f);g.a==2?(d=Xf(a,g.b,g.c,g.d,b)):g.a==1&&(d=ag(a,g.b,b));if(d){jN(a.b,g);for(h=0;h<a.g[g.b].length;h++){c=a.g[g.b][h];a.n[c]=false}e=true}}return e}
	function pC(a,b){var c,d;d=0;while(d<a.d-1&&bK(b.a,d)==48){++d}if(d>0){b.a=b.a.substr(0,0)+''+nK(b.a,d);a.d-=d;a.e-=d}if(a.j>a.o&&a.j>0){a.e+=a.b-1;c=a.e%a.j;c<0&&(c+=a.j);a.b=c+1;a.e-=c}else{a.e+=a.b-a.o;a.b=a.o}if(a.d==1&&b.a.charCodeAt(0)==48){a.e=0;a.b=a.o}}
	function io(a,b){var c,d,e,f;f=a.c.a.length;if(f==0){aN(a.c,0,b);return 0}e=1;while(2*e<=f)e<<=1;d=e;--e;while(d!=0){d>>=1;if(e>=f){e-=d;continue}c=cK(b,eN(a.c,e));if(c==0)return -1;if(d==0)break;c<0?(e-=d):(e+=d)}e<f&&cK(b,eN(a.c,e))>0&&++e;aN(a.c,e,b);return e}
	function me(a,b){var c,d,e,f;c=yh(a.L,b);d=Dk(a.L,b,false);e=Dk(a.L,b,true);f=-1;if(d!=e){c!=-1&&c>d?(f=c<<24>>24):(f=d<<24>>24)}else if(c!=-1){(c>e||c<e&&c>=Hk(a.L,b))&&(f=c<<24>>24)}else if(!tl(a.L,b)&&Ek(a.L,b)!=0){f=Hk(a.L,b);f-=hi(a.L,b,f)}He(a,b,f);return f}
	function $o(){$o=pH;Qo=$wnd.Math.cos(NR);Vo=$wnd.Math.sin(NR);So=$wnd.Math.cos(AS);Xo=$wnd.Math.sin(AS);Uo=$wnd.Math.cos(MR);Zo=$wnd.Math.sin(MR);Ro=$wnd.Math.cos(BS);Wo=$wnd.Math.sin(BS);To=$wnd.Math.cos(oS);Yo=$wnd.Math.sin(oS);$wnd.Math.cos(CS);$wnd.Math.sin(CS)}
	function wp(a,b,c,d){var e,f,g,h,i,j;g=JC(KD,jR,6,a.f.o,15,1);h=JC(KD,jR,6,a.f.o,15,1);g[0]=c;g[1]=b;h[c]=1;h[b]=2;f=1;i=1;while(f<=i){for(j=0;j<gk(a.f,g[f]);j++){e=tk(a.f,g[f],j);if(e==d)return 1+h[g[f]];if(h[e]==0&&bl(a.f,e)){g[++i]=e;h[e]=h[g[f]]+1}}++f}return 0}
	function ZC(a){var b,c,d;c=a.l;if((c&c-1)!=0){return -1}d=a.m;if((d&d-1)!=0){return -1}b=a.h;if((b&b-1)!=0){return -1}if(b==0&&d==0&&c==0){return -1}if(b==0&&d==0&&c!=0){return zJ(c)}if(b==0&&d!=0&&c==0){return zJ(d)+22}if(b!=0&&d==0&&c==0){return zJ(b)+44}return -1}
	function Qm(a,b,c){var d,e,f,g;if((a.D[b]&~a.g[c])!=0)return false;g=(di(a.d,c)&LR)>>15;if(g!=0){if(a.A.I&&g==(di(a.A,c)&LR)>>15)return true;d=false;f=Mk(a.A);for(e=0;e<f.i.a.length;e++){if(eN(f.j,e).length==g){if(Hm(f,e,b)){d=true;break}}}if(!d)return false}return true}
	function dD(a){var b,c,d,e,f;if(isNaN(a)){return sD(),rD}if(a<-9223372036854775808){return sD(),pD}if(a>=9223372036854775807){return sD(),oD}e=false;if(a<0){e=true;a=-a}d=0;if(a>=GU){d=FD(a/GU);a-=d*GU}c=0;if(a>=FU){c=FD(a/FU);a-=c*FU}b=FD(a);f=RC(b,c,d);e&&XC(f);return f}
	function Nq(a,b,c,d,e){var f,g,h,i,j,k;f=1/(1+$wnd.Math.exp(a-5));k=1-1/(1+$wnd.Math.exp(b+5));j=1/(1+$wnd.Math.exp(0.012*c-6));g=1-1/(1+$wnd.Math.exp(d));h=(0.5+f/2)*(0.5+k/2)*(0.5+j/2)*(0.5+g/2);for(i=0;e!=null&&i<e.length;i++){e[i]==2?(h*=0.8):e[i]==3&&(h*=0.6)}return h}
	function Re(a,b,c,d,e,f){var g,h,i;g=c==-1?(Oh(a.L,b)-Oh(a.L,a.t[0]))/8:Oh(a.L,b)-Oh(a.L,c);h=c==-1?(Ph(a.L,b)-Ph(a.L,a.t[0]))/8:Ph(a.L,b)-Ph(a.L,c);Se(a,FD((d+g)/e),f);Se(a,FD((d+h)/e),f);if(a._){i=c==-1?(Qh(a.L,b)-Qh(a.L,a.t[0]))/8:Qh(a.L,b)-Qh(a.L,c);Se(a,FD((d+i)/e),f)}}
	function qk(a){var b,c,d,e,f,g,h,i;no(a,1);h=JC(JD,RR,6,a.d,15,1);d=JC(KD,jR,6,a.d,15,1);for(i=0;i<a.d;i++){d[0]=i;e=JC(KD,jR,6,a.d,15,1);e[i]=1;c=0;f=0;while(c<=f){for(g=0;g<a.g[d[c]];g++){b=a.f[d[c]][g];if(e[b]==0){e[b]=e[d[c]]+1;d[++f]=b;h[i]+=e[b]-1}}++c}h[i]/=f}return h}
	function Xn(a){var b,c,d,e;for(b=0;b<a.b.d;b++){if(Rh(a.b,b)==7&&Ah(a.b,b)==0&&Hk(a.b,b)>3&&kk(a.b,b)>0){for(e=0;e<uk(a.b,b);e++){c=tk(a.b,b,e);d=vk(a.b,b,e);if(bi(a.b,d)>1&&Ai(a.b,c)){ei(a.b,d)==4?Aj(a.b,d,2):Aj(a.b,d,1);$i(a.b,b,Ah(a.b,b)+1);$i(a.b,c,Ah(a.b,c)-1);break}}}}}
	function aq(a,b,c,d){this.b=JC(EE,OR,26,2,0,1);this.b[0]=a;this.b[1]=b;this.c=JC(ID,mR,6,2,15,1);this.d=JC(ID,mR,6,2,15,1);this.c[0]=kq(this.b[0],c);this.d[0]=lq(this.b[0],c);this.c[1]=kq(this.b[1],d);this.d[1]=lq(this.b[1],d);this.a=JC(KD,jR,6,2,15,1);this.a[0]=1;this.a[1]=1}
	function Id(a,b,c){if(Rh(a.e,b)==7){if(gk(a.e,b)==3)return 3;if(uk(a.e,b)==2)return 2}if(Rh(a.e,b)==8){return 5}if(Rh(a.e,b)==15||Rh(a.e,b)==33){if(uk(a.e,b)==3)return 4}if(Rh(a.e,b)==16||Rh(a.e,b)==34){if(uk(a.e,b)==2)return 6}if(Rh(a.e,b)==6){c&&$i(a.e,b,-1);return 1}return 0}
	function ep(a){var b,c,d,e,f,g,h;c=JC(UD,YR,67,a.f.o,0,1);for(b=0;b<a.f.o;b++){c[b]=new Lf(2);Kf(c[b],b)}h=JC(KD,jR,6,a.f.o,15,1);for(d=0;d<a.f.e;d++){e=ci(a.f,d);if(e==1||e==2){If(c[Vh(a.f,0,d)],e);If(c[Vh(a.f,1,d)],e)}}f=fp(c,h);do{g=f;dp(a,c,h);f=fp(c,h)}while(g!=f);return h}
	function xC(a,b){var c,d,e;if(a.b>a.d){while(a.d<a.b){b.a+='0';++a.d}}if(!a.v){if(a.b<a.o){d=new CK;while(a.b<a.o){d.a+='0';++a.b;++a.d}BK(b,0,d.a)}else if(a.b>a.o){e=a.b-a.o;for(c=0;c<e;++c){if(bK(b.a,c)!=48){e=c;break}}if(e>0){b.a=b.a.substr(0,0)+''+nK(b.a,e);a.d-=e;a.b-=e}}}}
	function qq(a){var b,c,d,e,f,g;d=0;for(f=0;f<a.e.length;f++){b=a.e[f];c=gk(a.j,b);for(g=0;g<c;g++)tk(a.j,b,g)>b&&++d}a.f=JC(KD,jR,6,d,15,1);a.g=JC(KD,jR,6,a.j.o,15,1);d=0;for(e=0;e<a.e.length;e++){b=a.e[e];c=gk(a.j,b);a.g[b]=e;for(g=0;g<c;g++)tk(a.j,b,g)>b&&(a.f[d++]=vk(a.j,b,g))}}
	function Hf(a,b,c){if(a.b==0){++a.c;a.b=63}if(a.b==63){a.d[a.c]=_G(a.d[a.c],c);a.b-=b}else{if(a.b>=b){a.d[a.c]=aH(a.d[a.c],b);a.d[a.c]=_G(a.d[a.c],c);a.b-=b}else{a.d[a.c]=aH(a.d[a.c],a.b);a.d[a.c]=_G(a.d[a.c],bH(c,b-a.b));b-=a.b;++a.c;a.b=63-b;a.d[a.c]=_G(a.d[a.c],SG(c,(1<<b)-1))}}}
	function zk(a,b){var c,d,e,f,g,h,i,j,k,l;no(a,1);l=JC(NG,nR,6,a.o,16,1);i=JC(KD,jR,6,a.o,15,1);i[0]=b;l[b]=true;f=0;j=0;h=1;while(f<=j){e=a.c[i[f]];for(k=0;k<e;k++){d=a.f[i[f]][k];if(!l[d]){i[++j]=d;l[d]=true;++h}}++f}g=JC(KD,jR,6,h,15,1);h=0;for(c=0;c<a.o;c++)l[c]&&(g[h++]=c);return g}
	function _p(a,b){var c,d;this.b=JC(EE,OR,26,2,0,1);this.b[0]=a;this.b[1]=b;this.c=JC(ID,mR,6,2,15,1);this.d=JC(ID,mR,6,2,15,1);this.a=JC(KD,jR,6,2,15,1);for(c=0;c<2;c++){for(d=0;d<this.b[c].e.length;d++){this.c[c]+=kq(this.b[c],d);this.d[c]+=lq(this.b[c],d)}this.a[c]=this.b[c].e.length}}
	function ig(a,b){var c,d,e,f,g,h;for(e=0;e<a.b;e++){if(a.e[e][b]&&a.c[e]!=-3){for(d=0;d<=a.j.g.length;d++){if(d!=b&&a.e[e][d]){a.e[e][b]=false;h=e<a.a?e:e<a.b?e-a.a:-1;g=qg(a,e<a.a?1:e<a.b?2:0);for(f=0;f<a.j.g[b].length;f++){c=a.j.g[b][f];Tf(a.j,c)&&a.j.j[c]==h&&(a.j.j[c]=g<<24>>24)}}}}}}
	function er(a){var b;b=new $q;bN(b.a,new Yq('The polar surface area prediction is based on an atom-type based',2));bN(b.a,new Yq('increment system, published by P. Ertl, B. Rohde, P. Selzer',2));bN(b.a,new Yq('in J. Med. Chem. 2000, 43, 3714-3717',2));bN(b.a,new Yq(uU,2));cr(a,b);return b}
	function of(a,b){var c,d,e;c=Vh(a.L,0,b);if(c>=a.L.d)return false;if(a.W[c]==1||a.W[c]==2)return true;if(a.W[c]==3)return false;d=ck(a.L,c);if(d!=-1)return a.k[d]==1||a.k[d]==2;for(e=0;e<uk(a.L,c);e++){if(wk(a.L,c,e)==2){if(a.W[tk(a.L,c,e)]==1||a.W[tk(a.L,c,e)]==2)return true}}return false}
	function dp(a,b,c){var d,e,f,g,h,i,j,k;e=JC(KD,jR,6,16,15,1);for(d=0;d<a.f.o;d++){for(g=0;g<gk(a.f,d);g++){k=c[tk(a.f,d,g)];for(h=0;h<g;h++)if(k<e[h])break;for(i=g;i>h;i--)e[i]=e[i-1];e[h]=k}j=RJ(6,gk(a.f,d));Kf(b[d],d);Hf(b[d],16,c[d]);Hf(b[d],(6-j)*17,0);for(f=0;f<j;f++)Hf(b[d],17,e[f])}}
	function CC(a,b){var c,d,e,f,g;g=a.a.length;zK(a,b.toPrecision(20));f=0;e=jK(a.a,'e',g);e<0&&(e=jK(a.a,'E',g));if(e>=0){d=e+1;d<a.a.length&&bK(a.a,d)==43&&++d;d<a.a.length&&(f=bJ(nK(a.a,d)));AK(a,e,a.a.length)}c=jK(a.a,'.',g);if(c>=0){a.a=oK(a.a,0,c)+''+nK(a.a,c+1);f-=a.a.length-c}return f}
	function FO(a,b,c,d){var e,f;if(!b){return c}else{e=a.a.eb(c.c,b.c);if(e==0){d.d=zM(b,c.d);d.b=true;return b}f=e<0?0:1;b.a[f]=FO(a,b.a[f],c,d);if(GO(b.a[f])){if(GO(b.a[1-f])){b.b=true;b.a[0].b=false;b.a[1].b=false}else{GO(b.a[f].a[f])?(b=NO(b,1-f)):GO(b.a[f].a[1-f])&&(b=MO(b,1-f))}}}return b}
	function Uc(a,b){var c,d,e,f,g,h,i;e=JC(NG,nR,6,a.H.o,16,1);for(d=0;d<a.H.p;d++){if(ui(a.H,d)){e[Vh(a.H,0,d)]=true;e[Vh(a.H,1,d)]=true}}g=new XH;for(c=0;c<a.H.o;c++){f=(Mh(a.H,c)&oR)!=0?b*0.47:e[c]?b*0.38:0;if(f!=0){h=Jg(a.L,Oh(a.H,c));i=Kg(a.L,Ph(a.H,c));WH(g,h-f,i-f,f*2,f*2);a.t=VH(a.t,g)}}}
	function mq(a){var b,c,d,e,f,g,h,i;a.c=0;c=new pN;for(e=1;e<a.e.length;e++){for(f=0;f<e;f++){h=$wnd.Math.abs(a.a[e]-a.a[f]);i=$wnd.Math.abs(a.b[e]-a.b[f]);d=$wnd.Math.sqrt(h*h+i*i);if(d<0.8){b=JC(KD,jR,6,2,15,1);b[0]=a.e[e];b[1]=a.e[f];c.a[c.a.length]=b}g=1-$wnd.Math.min(d,1);a.c+=g*g}}return c}
	function dk(a,b,c,d,e){var f,g,h,i,j,k;no(a,3);if((a.s[b]&gS)==0||c&&(a.s[b]&cR)==0)return;i=JC(KD,jR,6,a.d,15,1);i[0]=b;d[b]=true;h=0;j=0;while(h<=j){for(k=0;k<a.g[i[h]];k++){g=a.i[i[h]][k];if(!e[g]&&(a.C[g]&64)!=0&&(!c||(a.C[g]&256)!=0)){e[g]=true;f=a.f[i[h]][k];if(!d[f]){d[f]=true;i[++j]=f}}}++h}}
	function Lk(a,b,c,d,e){var f,g,h,i,j,k;if(b==c)return 0;no(a,1);i=JC(KD,jR,6,a.o,15,1);h=JC(KD,jR,6,a.o,15,1);h[0]=b;i[b]=1;g=0;j=0;while(g<=j&&i[h[g]]<=d){for(k=0;k<a.c[h[g]];k++){f=a.f[h[g]][k];if(f==c)return i[h[g]];if(i[f]==0&&(e==null||e.length<=f||!e[f])){h[++j]=f;i[f]=i[h[g]]+1}}++g}return -1}
	function al(a,b){var c,d,e,f,g,h;if(bi(a,b)!=1)return false;for(f=0;f<2;f++){c=a.B[f][b];h=a.B[1-f][b];while(a.k[c]==2&&a.g[c]==2&&a.A[c]<10){for(g=0;g<2;g++){d=a.f[c][g];if(d!=h){if(a.g[d]==1)return true;e=a.i[c][g];if(bi(a,e)==1&&e<b)return true;h=c;c=d;break}}}if(a.g[c]==1)return true}return false}
	function yk(a,b,c,d,e){var f,g,h,i,j,k,l,m;f=a.c[b];e==null&&(e=JC(KD,jR,6,f,15,1));if(!xk(a,b,c,d,e))return 3;i=-1;for(j=0;j<f;j++){if((e[j]&1)==1){g=a.F[a.i[b][c[j]]];if(i!=-1&&i!=g)return 3;i=g}}k=PJ(e[0]-e[1])==2?1:0;h=e[k]-e[k+1];m=(h<0?-h:h)==3^e[k]<e[k+1];l=f==3||(e[3]&1)==1;return m^l^i==9?1:2}
	function Um(a,b){var c,d,e,f,g,h,i,j;for(e=0;e<a.d.e;e++){if((di(a.d,e)&QR)!=0){f=ci(a.d,e);if(f==0)continue;c=Vh(a.d,0,e);d=Vh(a.d,1,e);if((a.u[c]||a.u[d])==b){g=a.w[c];h=a.w[d];i=rk(a.A,g,h);j=ci(a.A,i);if(j==0)continue;if(f==3)continue;if(j==3)continue;if($m(a,e,i)==(f==j))return false}}}return true}
	function fm(a){var b,c,d,e,f,g,h,i;h=null;c=a.indexOf('[');d=a.indexOf(']',c);if(c>=0&&d>0){b=JC(KD,jR,6,16,15,1);i=a.substr(c+1,d-(c+1));e=0;g=true;while(g&&e<16){c=i.indexOf(',');if(c==-1){f=i;g=false}else{f=i.substr(0,c);i=i.substr(c+1,i.length-(c+1))}b[e++]=Tj(f)}h=JC(KD,jR,6,e,15,1);IK(b,h,e)}return h}
	function Ee(a){var b,c,d,e;a.G=true;a.R=JC(GD,$R,6,a.L.d,15,1);a.f=JC(GD,$R,6,a.L.e,15,1);e=ue(a,true);while(a.N<a.L.d&&e){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],20,a.c[b]<<4|a.W[b]<<2)}for(c=0;c<a.L.e;c++){If(a.b[Vh(a.L,0,c)],a.k[c]);If(a.b[Vh(a.L,1,c)],a.k[c])}d=Ae(a);if(a.N==d)break;a.N=d;e=ue(a,true)}}
	function ao(a,b){var c;if(Rh(a.b,b)==16&&Ah(a.b,b)<=0||Rh(a.b,b)==6&&Ah(a.b,b)!=0||!Ci(a.b,b))return false;c=Ch(a.b,b)==null?0:Dh(a.b,b)[0];if(Bk(a.b,b)-c<1)return false;if(Rh(a.b,b)!=5&&Rh(a.b,b)!=6&&Rh(a.b,b)!=7&&Rh(a.b,b)!=8&&Rh(a.b,b)!=15&&Rh(a.b,b)!=16&&Rh(a.b,b)!=33&&Rh(a.b,b)!=34)return false;return true}
	function zd(a,b,c,d){var e;e=c/2;switch(d&PR){case PR:if(b){a.u.a=b.c+b.b/2;a.u.b=b.d+b.a-e;break}case 0:a.u.a=a.t.c+a.t.b/2;a.u.b=a.t.d+a.t.a+e;!!b&&a.u.b>b.d+b.a-e&&(a.u.b=b.d+b.a-e);break;case _Q:if(b){a.u.a=b.c+b.b/2;a.u.b=b.d+e;break}case QR:a.u.a=a.t.c+a.t.b/2;a.u.b=a.t.d-e;!!b&&a.u.b<b.d+e&&(a.u.b=b.d+e);}}
	function Oi(a,b,c){var d,e;if(bi(a,b)!=1)return false;if((a.s[c]&3)!=0)return true;for(e=0;e<a.p;e++)if(e!=b&&a.F[e]==2&&(a.B[0][e]==c&&(a.s[a.B[1][e]]&3)!=0||a.B[1][e]==c&&(a.s[a.B[0][e]]&3)!=0))return true;for(d=0;d<a.p;d++)if(d!=b&&a.F[d]==1&&(a.B[0][d]==c||a.B[1][d]==c)&&(a.C[d]&3)!=0)return true;return false}
	function Kr(){Fr();if(!zr){try{Br=JC(tE,QQ,59,4,0,1);yr=JC(tG,QQ,16,4,0,1);Ar=JC(tG,QQ,16,4,0,1);yr[0]=Jr(sr);yr[1]=Jr(Cr);yr[2]=Jr(pr);yr[3]=Jr(vr);Ar[0]=Jr(tr);Ar[1]=Jr(Dr);Ar[2]=Jr(qr);Ar[3]=Jr(wr);Br[0]=Ir(ur);Br[1]=Ir(Er);Br[2]=Ir(rr);Br[3]=Ir(xr);zr=true}catch(a){a=PG(a);if(yD(a,13)){HK()}else throw QG(a)}}}
	function Gr(a,b){var c,d,e,f;if(!zr)return 0;if(Br[b].hb(cf(new vf(a)))!=-1)return 3;f=new nn;c=new Co;for(e=0;e<yr[b].a.length;e++){Fl(new Hl(false),c,eN(yr[b],e));fn(f,a);en(f,c);if(Xm(f,f.b)>0)return 3}for(d=0;d<Ar[b].a.length;d++){Fl(new Hl(false),c,eN(Ar[b],d));fn(f,a);en(f,c);if(Xm(f,f.b)>0)return 2}return 1}
	function bJ(a){var b,c,d,e,f;if(a==null){throw QG(new YJ(ZQ))}d=a.length;e=d>0&&(a.charCodeAt(0)==45||a.charCodeAt(0)==43)?1:0;for(b=e;b<d;b++){if(xI(a.charCodeAt(b))==-1){throw QG(new YJ(YQ+a+'"'))}}f=parseInt(a,10);c=f<$Q;if(isNaN(f)){throw QG(new YJ(YQ+a+'"'))}else if(c||f>WQ){throw QG(new YJ(YQ+a+'"'))}return f}
	function Le(a,b,c,d){var e,f,g,h,i,j,k,l,m;l=c[d];g=c[d+1]-l;m=JC(SD,OR,91,g,0,1);for(i=0;i<g;i++){m[i]=new Gf;m[i].c=a[i+l];m[i].b=b[i+l];m[i].a=i+l}e=new Df;for(k=d;k>1;k--){for(j=0;j<g;j++){m[j].c+=a[m[j].b]<<16;m[j].b=b[m[j].b]}$N(m,0,m.length,e);f=1;for(h=0;h<g;h++){a[m[h].a]=f;h!=g-1&&Cf(m[h],m[h+1])!=0&&++f}}}
	function qC(a,b){var c,d,e,f;if(isNaN(b)){return 'NaN'}d=b<0||b==0&&1/b<0;d&&(b=-b);c=new CK;if(!isNaN(b)&&!isFinite(b)){zK(c,d?a.q:a.t);c.a+='\u221E';zK(c,d?a.r:a.u);return c.a}b*=a.p;f=CC(c,b);e=c.a.length+f+a.i+3;if(e>0&&e<c.a.length&&bK(c.a,e)==57){yC(a,c,e-1);f+=c.a.length-e;AK(c,e,c.a.length)}rC(a,d,c,f);return c.a}
	function Ak(a,b,c,d){var e,f,g,h,i,j,k,l,m;no(a,1);for(f=0;f<a.o;f++)b[f]=-1;j=0;for(e=0;e<a.o;e++){if(b[e]==-1&&(!c||(a.s[e]&QR)!=0)){b[e]=j;k=JC(KD,jR,6,a.o,15,1);k[0]=e;i=0;l=0;while(i<=l){h=d?a.f[k[i]].length:a.c[k[i]];for(m=0;m<h;m++){g=a.f[k[i]][m];if(b[g]==-1&&(!c||(a.s[g]&QR)!=0)){k[++l]=g;b[g]=j}}++i}++j}}return j}
	function qp(a,b,c,d){var e,f,g,h,i,j;f=d==b.length-1?0:d+1;h=d==0?b.length-1:d-1;g=f==b.length-1?0:f+1;if(bi(a.f,c[d])==2){e=ci(a.f,c[d]);if(e==1||e==2){yp(a,b[h],b[d],b[f])^yp(a,b[g],b[f],b[d])&&(e=e==1?2:1);return e}}if(fl(a.f,c[d])){i=Em(Mk(a.f),c[h],c[d]);j=Em(Mk(a.f),c[f],c[d]);if(i!=-1||j!=-1)return i==j?2:1}return 0}
	function rC(a,b,c,d){var e,f,g,h,i;if(a.g){f='.'.charCodeAt(0);g=','.charCodeAt(0)}else{f='.'.charCodeAt(0);g=','.charCodeAt(0)}a.e=0;a.d=c.a.length;a.b=a.d+d;h=a.v;e=a.f;a.b>wR&&(h=true);h&&pC(a,c);xC(a,c);zC(a,c);sC(a,c,g,e);oC(a,c);nC(a,c,f);h&&mC(a,c);i='0'.charCodeAt(0);i!=48&&tC(c,i);BK(c,0,b?a.q:a.t);zK(c,b?a.r:a.u)}
	function Cd(a){var b,c,d,e,f;e=Jg(a.L,Oh(a.H,0));c=Jg(a.L,Oh(a.H,0));f=Kg(a.L,Ph(a.H,0));d=Kg(a.L,Ph(a.H,0));for(b=0;b<a.H.o;b++){e>Jg(a.L,Oh(a.H,b))&&(e=Jg(a.L,Oh(a.H,b)));c<Jg(a.L,Oh(a.H,b))&&(c=Jg(a.L,Oh(a.H,b)));f>Kg(a.L,Ph(a.H,b))&&(f=Kg(a.L,Ph(a.H,b)));d<Kg(a.L,Ph(a.H,b))&&(d=Kg(a.L,Ph(a.H,b)))}a.t=new YH(e,f,c-e,d-f)}
	function kn(a,b){var c,d,e,f;no(a.A,a.G);e=a.A.d;a.C=JC(KD,jR,6,e,15,1);a.B=JC(KD,jR,6,e,15,1);for(c=0;c<e;c++){a.B[c]=(Ym(a.A,c)|Mh(a.A,c))&vS^vS;a.C[c]=Rh(a.A,c);(b&1)!=0&&(a.C[c]+=Ah(a.A,c)+16<<8);(b&2)!=0&&(a.C[c]+=Kh(a.A,c)<<16)}f=a.A.e;a.D=JC(KD,jR,6,f,15,1);for(d=0;d<f;d++)a.D[d]=(Zm(a.A,d)|di(a.A,d))&1605631^1572960}
	function nD(a){var b,c,d,e,f;if(a.l==0&&a.m==0&&a.h==0){return '0'}if(a.h==_Q&&a.m==0&&a.l==0){return '-9223372036854775808'}if(a.h>>19!=0){return '-'+nD(fD(a))}c=a;d='';while(!(c.l==0&&c.m==0&&c.h==0)){e=PC(1000000000);c=SC(c,e,true);b=''+mD(OC);if(!(c.l==0&&c.m==0&&c.h==0)){f=9-b.length;for(;f>0;f--){b='0'+b}}d=b+d}return d}
	function hJ(){hJ=pH;gJ=MC(FC(ID,1),mR,6,15,[1.3407807929942597E154,1.157920892373162E77,3.4028236692093846E38,1.8446744073709552E19,4294967296,eR,256,16,4,2]);fJ=MC(FC(ID,1),mR,6,15,[7.458340731200207E-155,8.636168555094445E-78,2.9387358770557188E-39,5.421010862427522E-20,2.3283064365386963E-10,JU,0.00390625,0.0625,0.25,0.5])}
	function oh(a,b){var c,d,e,f;for(c=0;c<a.p;c++){for(e=0;e<2;e++){if(a.B[e][c]==b){a.F[c]=128;d=0;for(f=0;f<a.p;f++){if(f==c)continue;(a.B[0][f]===a.B[1-e][c]||a.B[1][f]===a.B[1-e][c])&&++d}if(d==0){Ti(a,a.u[a.B[1-e][c]]);a.A[a.B[1-e][c]]=-1}}}}Ti(a,a.u[b]);a.A[b]=-1;a.t!=null&&(a.t[b]=null);a.r!=null&&(a.r[b]=null);jh(a);a.Q=0}
	function no(a,b){var c,d,e,f;ak(a,b);if((b&~a.Q)==0)return;a.a&&(b|=128);for(c=0;c<a.o;c++)a.s[c]&=-134447112;for(d=0;d<a.e;d++)a.C[d]&=-64;e=0;f=0;if((b&16)!=0){e=16;f=1}else if((b&32)!=0){e=32;f=3}else if((b&64)!=0){e=64;f=5}if((b&128)!=0){e|=128;f|=32}a.b=new wf(a,f);rf(a.b);sf(a.b);qf(a.b);Bo(a)&&(a.b=new wf(a,f));a.Q|=12|e}
	function HH(a,b,c,d){AH();var e,f,g,h,i;i=0;h=$wnd.Math.min(a,$wnd.Math.min(b,c));g=$wnd.Math.max(a,$wnd.Math.max(b,c));e=g-h;if(e==0){f=0;d[0]=f;d[1]=i;d[2]=h;return d}if(g!=0)i=e/g;else{i=0;f=0;d[0]=f;d[1]=i;d[2]=g;return d}a==g?(f=(b-c)/e):b==g?(f=2+(c-a)/e):(f=4+(a-b)/e);f*=60;f<0&&(f+=360);d[0]=f/360;d[1]=i;d[2]=g;return d}
	function Jo(a){var b,c,d,e,f;for(d=0;d<a.o;d++){f=ro(a);no(f,15);bj(f,d,(Wg(),Rg)[f.A[d]]+'*');rj(f,d,Tj('X'));if(wo(f)>0){for(c=0;c<f.d;c++){if((f.s[c]&kS)!=0&&Pk(f,c)==-1){e=(no(f,3),f.k[c]==2&&f.g[c]==2?il(f,c):kl(f,c));if(e!=-1){a.F[e]=17;a.Q=0;if(a.B[1][e]==c){b=a.B[0][e];a.B[0][e]=c;a.Q=0;a.B[1][e]=b;a.Q=0}dj(a,c,1,0)}}}}}}
	function $c(a){var b,c,d,e;if(a.H.I){Ad(a,320);if((a.B&8)!=0)for(b=0;b<a.H.d;b++)(Mh(a.H,b)&-536870913)!=0&&In(a,Jg(a.L,Oh(a.H,b))-a.T/2,Kg(a.L,Ph(a.H,b))-a.T/2,a.T);for(e=0;e<a.H.e;e++){if(di(a.H,e)!=0){c=Vh(a.H,0,e);d=Vh(a.H,1,e);In(a,(Jg(a.L,Oh(a.H,c))+Jg(a.L,Oh(a.H,d))-a.T)/2,(Kg(a.L,Ph(a.H,c))+Kg(a.L,Ph(a.H,d))-a.T)/2,a.T)}}}}
	function lm(a){var b,c;if(a.indexOf('[')>=0){b=a.indexOf(' NOT[');c=a.indexOf(']',b);if(b>=0&&c>0){return -(c+1)}else{b=a.indexOf(' [');c=a.indexOf(']',b);if(b>=0&&c>0){return c+1}}b=a.indexOf(" 'NOT[");c=a.indexOf("]'",b);if(b>=0&&c>0){return -(c+2)}else{b=a.indexOf(" '[");c=a.indexOf("]'",b);if(b>=0&&c>0){return c+2}}HK()}return 0}
	function df(a,b,c,d){var e,f,g;e=c==-1?$wnd.Math.abs(Oh(a.L,b)-Oh(a.L,a.t[0]))/8:$wnd.Math.abs(Oh(a.L,b)-Oh(a.L,c));d<e&&(d=e);f=c==-1?$wnd.Math.abs(Ph(a.L,b)-Ph(a.L,a.t[0]))/8:$wnd.Math.abs(Ph(a.L,b)-Ph(a.L,c));d<f&&(d=f);if(a._){g=c==-1?$wnd.Math.abs(Qh(a.L,b)-Qh(a.L,a.t[0]))/8:$wnd.Math.abs(Qh(a.L,b)-Qh(a.L,c));d<g&&(d=g)}return d}
	function cn(a,b){var c,d,e,f,g,h,i,j;g=false;if(kk(a.d,b)==0){for(f=1;f<uk(a.d,b);f++){for(h=0;h<f;h++){d=tk(a.d,b,f);e=tk(a.d,b,h);a.w[d]>a.w[e]^d>e&&(g=!g)}}}else{for(f=0;f<uk(a.d,b);f++){c=tk(a.d,b,f);j=0;i=JC(KD,jR,6,3,15,1);for(h=0;h<uk(a.d,c);h++){i[j]=tk(a.d,c,h);i[j]!=b&&++j}j==2&&a.w[i[0]]>a.w[i[1]]^i[0]>i[1]&&(g=!g)}}return g}
	function Of(a,b,c){var d,e,f,g,h,i,j,k,l;if(b==null)return;h=0;for(e=0;e<a.i.d;e++)b[e]&&++h;l=JC(KD,jR,6,h,15,1);h=0;for(d=0;d<a.i.d;d++)b[d]&&(l[h++]=d);j=false;for(g=new JN(c);g.a<g.c.a.length;){f=IN(g);if(f.length==l.length){i=false;for(k=0;k<f.length;k++){if(f[k]!==l[k]){i=true;break}}if(!i){j=true;break}}}j||(c.a[c.a.length]=l,true)}
	function gh(a,b,c,d,e,f){if((c==1||c==151||c==152)&&Hk(a,b)>1)return false;a.w[b]&=-2;a.t!=null&&(a.t[b]=null);a.r!=null&&(a.r[b]=null);if(c==a.A[b]&&d==a.v[b]&&e==((a.s[b]&eS)>>>28)-1&&f==(a.s[b]&48))return false;if(c==151||c==152){d=c-149;c=1}a.s[b]&=960;a.A[b]=c;a.v[b]=d;a.q[b]=0;a.w[b]=0;Yi(a,b,e);lj(a,b,f);Ti(a,a.u[b]);a.Q=0;return true}
	function Nk(a){var b,c,d,e,f,g,h,i,j;j=0;no(a,3);for(d=0;d<a.e;d++){if(bi(a,d)==1&&(a.C[d]&64)==0){h=true;for(g=0;g<2;g++){b=a.B[g][d];if(a.g[b]==1){h=false;break}if(a.A[b]==7&&(a.s[b]&cR)==0){c=a.B[1-g][d];for(i=0;i<a.g[c];i++){e=a.f[c][i];f=a.i[c][i];if(f!=d&&bi(a,f)>1&&(a.s[e]&cR)==0&&Uj(a.A[e])){h=false;break}}}}h&&!al(a,d)&&++j}}return j}
	function Zc(a){var b,c,d,e,f,g;if(a.H.I){g=a.Q;Ad(a,-7);for(b=0;b<a.H.d;b++)(Mh(a.H,b)&oR)!=0&&In(a,Jg(a.L,Oh(a.H,b))-g,Kg(a.L,Ph(a.H,b))-g,2*g);Mn(a,2*a.Q);f=new Gd;for(e=0;e<a.H.p;e++){c=Vh(a.H,0,e);d=Vh(a.H,1,e);if((Mh(a.H,c)&Mh(a.H,d)&oR)!=0){f.a=Jg(a.L,Oh(a.H,c));f.c=Kg(a.L,Ph(a.H,c));f.b=Jg(a.L,Oh(a.H,d));f.d=Kg(a.L,Ph(a.H,d));Fn(a,f)}}}}
	function Ld(a,b,c){var d,e;d=Rh(a.e,b);if(d>=5&&d<=8||d==15||d==16||d==33||d==34){e=Bk(a.e,b);if(e==1||e==2)return true;if(Ah(a.e,b)==0){if((d==15||d==33)&&e==3){c&&$i(a.e,b,1);return true}if((d==16||d==34)&&e==4){c&&$i(a.e,b,1);return true}if(d==5&&e==0){c&&$i(a.e,b,-1);return true}if((d==7||d==8)&&e==0){c&&$i(a.e,b,1);return true}}}return false}
	function tp(a,b,c,d){var e,f,g,h,i;f=new uq(a.f,b.e.length+c.e.length-d,a.e);e=0;for(h=0;h<b.e.length;h++){f.e[e]=b.e[h];f.k[e]=b.k[h];f.a[e]=b.a[h];f.b[e++]=b.b[h]}for(g=0;g<c.e.length;g++){i=oq(b,c.e[g]);if(i==-1){f.e[e]=c.e[g];f.k[e]=c.k[g];f.a[e]=c.a[g];f.b[e++]=c.b[g]}else{if(f.k[i]<c.k[g]){f.k[i]=c.k[g];f.a[i]=c.a[g];f.b[i]=c.b[g]}}}return f}
	function Rc(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p;l=b.b-b.a;o=b.d-b.c;i=$wnd.Math.sqrt(l*l+o*o);j=2*eH(WG($wnd.Math.round(i/(4*a.S))));m=l/(j-1);p=o/(j-1);if(wi(a.H,rk(a.H,c,d))){e=-3;f=-3}else{e=a.o[c];f=a.o[d]}k=b.a-a.S/2;n=b.c-a.S/2;Ad(a,e);for(h=0;h<(j/2|0);h++){In(a,k,n,a.S);k+=m;n+=p}Ad(a,f);for(g=0;g<(j/2|0);g++){In(a,k,n,a.S);k+=m;n+=p}Ad(a,a.K)}
	function sd(a,b,c,d){var e,f,g,h;h=new Gd;if(b.a==b.b&&b.c==b.d)return;h.a=b.a;h.c=b.c;h.b=b.b;h.d=b.d;g=pd(h);for(e=0;e<a.U.a.length;e++){f=eN(a.U,e);if(f.c>g.c+g.b||f.d>g.d+g.a||g.c>f.c+f.b||g.d>f.d+f.a)continue;if(td(a,h.a,h.c,e)){if(td(a,h.b,h.d,e))return;xd(a,h,0,e);sd(a,h,c,d);return}if(td(a,h.b,h.d,e)){xd(a,h,1,e);sd(a,h,c,d);return}}Sc(a,h,c,d)}
	function km(a){var b,c,d,e,f,g,h,i,j;i=JC(KD,jR,6,a.d.o,15,1);for(d=0;d<a.d.p;d++)if(ei(a.d,d)==64)for(g=0;g<2;g++)i[Vh(a.d,g,d)]=1;for(e=0;e<a.d.p;e++){j=bi(a.d,e);for(f=0;f<2;f++)i[Vh(a.d,f,e)]+=j}for(c=0;c<a.d.p;c++){if(bi(a.d,c)==1){for(f=0;f<2;f++){h=Vh(a.d,1-f,c);if(Di(a.d,h)){b=Vh(a.d,f,c);if(Ai(a.d,b)&&i[b]>ii(a.d,b)){Aj(a.d,c,32);continue}}}}}}
	function vm(a,b,c){var d,e,f,g,h,i,j;i=JC(KD,jR,6,a.f,15,1);g=JC(KD,jR,6,a.f,15,1);j=JC(NG,nR,6,a.g.d,16,1);d=Vh(a.g,0,b);e=Vh(a.g,1,b);i[0]=d;i[1]=e;g[1]=-1;j[e]=true;h=1;while(h>=1){++g[h];if(g[h]==uk(a.g,i[h])){j[i[h]]=false;--h;continue}f=tk(a.g,i[h],g[h]);if(j[f]||c[f])continue;if(f==d&&h>1){um(a,i,h+1);continue}if(h+1<a.f){++h;i[h]=f;j[f]=true;g[h]=-1}}}
	function Ie(b,c){var d,e,f,g,h,i;if((b.k[c]==1||b.k[c]==2)&&!fl(b.L,c)){h=false;try{for(g=0;g<2;g++){d=Vh(b.L,g,c);if(uk(b.L,d)==3){e=JC(KD,jR,6,2,15,1);f=0;for(i=0;i<uk(b.L,d);i++)vk(b.L,d,i)!=c&&(e[f++]=tk(b.L,d,i));b.c[e[0]]>b.c[e[1]]^Ke(b,d,e[0],e[1])&&(h=!h)}}}catch(a){a=PG(a);if(yD(a,13)){b.f[c]=3;return}else throw QG(a)}b.k[c]==1^h?(b.f[c]=1):(b.f[c]=2)}}
	function Bp(a,b,c,d){var e,f,g,h,i,j,k,l,m,n;e=JC(KD,jR,6,d,15,1);f=0;for(g=0;g<b.e.length;g++)for(h=0;h<c.e.length;h++)b.e[g]===c.e[h]&&(e[f++]=b.e[g]);i=d==1?(j=oq(b,e[0]),k=oq(c,e[0]),tq(c,b.a[j]-c.a[k],b.b[j]-c.b[k]),l=Lp(a,b,e[0]),m=Lp(a,c,e[0]),n=0,op(a,b,e[0])==1&&op(a,c,e[0])==1&&(n=MR),sq(c,c.a[k],c.b[k],l-m+n+sR),tp(a,b,c,1)):pp(a,b,c,e,d);Mp(a,b,c,i)}
	function Aq(a){var b,c,d,e;if(a.length==0||a.charCodeAt(0)!=62)return null;d=1;e=0;b=0;while(d<a.length){if(a.charCodeAt(d)==60){if(e!=0)return null;e=d}else if(a.charCodeAt(d)==62){if(b!=0)return null;b=d}++d}if(e!=0&&e<b)return a.substr(e+1,b-(e+1));d=a.indexOf('DT',1);if(d==-1)return null;c=d+2;while(zI(a.charCodeAt(c)))++c;return c==d+2?null:a.substr(d,c-d)}
	function Oc(a,b,c,d){var e,f,g,h,i;h=(b.b-b.a)/10;i=(b.d-b.c)/10;e=new Gd;if(wi(a.H,rk(a.H,c,d))){f=-3;g=-3}else{f=a.o[c];g=a.o[d]}Ad(a,f);e.a=b.a;e.c=b.c;e.b=b.a+h*2;e.d=b.c+i*2;Fn(a,e);e.a=b.a+h*4;e.c=b.c+i*4;e.b=b.a+h*5;e.d=b.c+i*5;Fn(a,e);Ad(a,g);e.a=b.a+h*5;e.c=b.c+i*5;e.b=b.a+h*6;e.d=b.c+i*6;Fn(a,e);e.a=b.a+h*8;e.c=b.c+i*8;e.b=b.b;e.d=b.d;Fn(a,e);Ad(a,a.K)}
	function Th(a,b,c,d){var e,f,g,h,i,j,k,l,m;j=false;k=0;while(k==0&&!j){for(i=0;i<c;i++)(j||a.F[i]!=32)&&(a.D[i]&HR)==0&&++k;k==0&&(j=true)}if(k==0){if(b<2)return d;m=iS;for(e=1;e<b;e++){for(f=0;f<e;f++){l=yg(a.H[e],a.H[f]);l>0&&l<m&&(m=l)}}return m!=iS?0.6*m:d}g=0;for(h=0;h<c;h++){(j||a.F[h]!=32)&&(a.D[h]&HR)==0&&(g+=yg(a.H[a.B[1][h]],a.H[a.B[0][h]]))}return g/k}
	function qo(a){var b;no(a,15);b=a.G&fR;switch(a.G&aS){case eR:return null;case _R:return b==1?'meso':''+b+' meso diastereomers';case 0:return 'unknown chirality';case 196608:return 'racemate';case QR:return 'this enantiomer';case 327680:return 'this or other enantiomer';case DR:return 'two epimers';default:return b==1?'one stereo isomer':''+b+' stereo isomers';}}
	function ih(a,b,c){var d,e,f,g,h;f=false;g=a.F[b];if(c==127){f=mi(a,b)}else if(vl(a,b,c)){if(c==17||c==9){d=Oi(a,b,a.B[0][b]);e=Oi(a,b,a.B[1][b]);if(c==g){if(d==e||e){h=a.B[0][b];a.B[0][b]=a.B[1][b];a.B[1][b]=h;f=true}}else{if(!d&&e){h=a.B[0][b];a.B[0][b]=a.B[1][b];a.B[1][b]=h}a.F[b]=c;f=true}}else{a.F[b]=c;f=true}}if(f){a.Q=(g&103)==(c&103)?a.Q&3:0;a.D[b]=0}return f}
	function dh(a,b,c,d){var e,f,g,h,i,j;if(d&&Hk(a,b)>1||!d&&Hk(a,b)>2)return false;f=0;e=JC(ID,mR,6,4,15,1);for(h=0;h<a.p;h++){for(i=0;i<2;i++){if(a.B[i][h]==b){if(f==2){f=3;break}e[f++]=Uh(a,b,a.B[1-i][h])}}if(f==3)break}if(f==3)return false;j=f==1?e[0]+sR:$wnd.Math.abs(e[0]-e[1])>sR?(e[0]+e[1])/2:(e[0]+e[1])/2+sR;g=sR*(c-2)/c;Ni(a,b,c,b,d,j-g/2,sR-g);a.Q=0;return true}
	function Qn(a,b,c){var d;Jc();this.t=new XH;this.H=a;this.B=b;this.F=1;this.L=new Lg;this.U=new pN;this.O=new pN;this.q=JC(NG,nR,6,this.H.o,16,1);this.u=new NH;this.K=0;this.w=-1;d=(AH(),wH);this.r=XA(d,zc);this.s=WA(Ac,d);this.C=yc;this.D=Ic;this.i=1;this.j=10;this.k=400;this.f=400;this.d='black';this.b=new pN;this.a=new pN;this.c=new vK;this.e=new KH(12);this.g=c;++En}
	function Qd(a){var b,c,d,e,f,g,h,i;for(c=0;c<a.e.e;c++){if(a.d[c]){for(e=0;e<2;e++){h=Vh(a.e,e,c);b=false;for(g=0;g<uk(a.e,h);g++){if(c!=vk(a.e,h,g)&&a.d[vk(a.e,h,g)]){b=true;break}}if(!b){i=c;d=Vh(a.e,1-e,c);while(i!=-1){a.d[i]=false;--a.c;Aj(a.e,i,64);i=-1;h=d;for(f=0;f<uk(a.e,h);f++){if(a.d[vk(a.e,h,f)]){if(i==-1){i=vk(a.e,h,f);d=tk(a.e,h,f)}else{i=-1;break}}}}break}}}}}
	function Qg(a,b,c,d){var e,f,g,h;this.e=a;this.g=c;this.a=d;g=-1;for(h=0;h<gk(this.e,this.a);h++){e=tk(this.e,this.a,h);f=vk(this.e,this.a,h);if(e==this.g){ei(this.e,f)==26&&(this.j=-1);continue}if(Ki(this.e,f,this.a)){this.i&&(a.s[d]|=_R);this.i=true}if(g==b[e]){this.d=e;this.f=true;this.c=cl(this.e,f);continue}else if(g<b[e]){g=b[e];this.d=this.b;this.b=e}else{this.d=e}}}
	function Wj(a,b,c,d){var e,f,g,h,i,j,k,l,m;no(b,1);d==null&&(d=JC(KD,jR,6,b.o,15,1));h=Ui(a,1);i=Ui(a,2);m=JC(NG,nR,6,b.o,16,1);j=JC(KD,jR,6,b.o,15,1);j[0]=c;m[c]=true;d[c]=kh(b,a,c,h,i);g=0;k=0;while(g<=k){for(l=0;l<b.c[j[g]];l++){f=b.f[j[g]][l];if(!m[f]){j[++k]=f;m[f]=true;d[f]=kh(b,a,f,h,i)}}++g}for(e=0;e<b.p;e++)m[b.B[0][e]]&&lh(b,a,e,h,i,d,false);Ui(a,1);Ui(a,2);a.Q=0}
	function ag(a,b,c){var d,e,f,g,h,i,j,k;f=a.g[b];e=1;for(i=0;i<f.length;i++){d=f[i];if(a.f[d]&&a.k[d]==2){e=2;break}}g=JC(KD,XR,7,32,0,2);for(j=0;j<f.length;j++){d=f[j];a.f[d]&&a.k[d]==e&&(g[a.j[d]]=dg(g[a.j[d]],(c[d]<<16)+d))}for(k=0;k<32;k++)g[k]!=null&&bO(g[k]);eO(g,new ug);if(tg(g[0],g[1])==0)return false;for(h=0;h<g[0].length;h++){d=g[0][h]&fR;a.k[d]=0;a.j[d]=-1}return true}
	function VC(a,b,c,d,e,f){var g,h,i,j,k,l,m;j=YC(b)-YC(a);g=hD(b,j);i=RC(0,0,0);while(j>=0){h=_C(a,g);if(h){j<22?(i.l|=1<<j,undefined):j<44?(i.m|=1<<j-22,undefined):(i.h|=1<<j-44,undefined);if(a.l==0&&a.m==0&&a.h==0){break}}k=g.m;l=g.h;m=g.l;g.h=l>>>1;g.m=k>>>1|(l&1)<<21;g.l=m>>>1|(k&1)<<21;--j}c&&XC(i);if(f){if(d){OC=fD(a);e&&(OC=kD(OC,(sD(),qD)))}else{OC=RC(a.l,a.m,a.h)}}return i}
	function en(a,b){var c,d,e,f;if(b.o==0||!b.I){a.d=null;return}a.d=b;a.n=false;no(a.d,1);a.G=3;for(d=0;d<a.d.d;d++)(Mh(a.d,d)&TR)!=0&&(a.G=7);for(f=0;f<a.d.e;f++)(di(a.d,f)&QR)!=0&&(a.G=7);a.F&&a.G!=3&&no(a.A,a.G);a.j=0;a.u=JC(NG,nR,6,a.d.d,16,1);for(c=0;c<a.d.d;c++){a.u[c]=(Mh(a.d,c)&oR)!=0;a.u[c]&&++a.j}a.k=0;if(a.j!=0)for(e=0;e<a.d.e;e++)(a.u[Vh(a.d,0,e)]||a.u[Vh(a.d,1,e)])&&++a.k}
	function sl(b,c){var d,e,f,g,h,i,j,k,l,m;i=JC(KD,jR,6,b.o,15,1);h=Ak(b,i,false,c);if(h<=1)return null;j=JC(KD,jR,6,h,15,1);for(e=0;e<b.d;e++)++j[i[e]];l=0;m=j[0];for(k=1;k<h;k++){if(m<j[k]){m=j[k];l=k}}for(d=0;d<b.o;d++)i[d]!=l&&(b.A[d]=-1);for(g=0;g<b.p;g++)(!c&&b.F[g]==32||i[b.B[0][g]]!=l)&&(b.F[g]=128);f=jh(b);b.Q=0;try{Yj(b,true)}catch(a){a=PG(a);if(!yD(a,13))throw QG(a)}return f}
	function ye(a){var b,c,d,e,f,g,h,i,j,k;f=0;for(c=0;c<a.L.d;c++)a.U[c]!=0&&++f;if(f==0)return;k=JC(KD,jR,6,f,15,1);f=0;for(d=0;d<a.L.d;d++){if(a.U[d]!=0){k[f]=a.U[d]<<29|a.T[d]<<24|a.c[d]<<12|d;++f}}bO(k);g=0;j=0;h=k[0]&ZR;while(true){++j;if(j==k.length||h!=(k[j]&ZR)){e=JC(KD,jR,6,j-g,15,1);for(i=g;i<j;i++){b=k[i]&4095;e[i-g]=b;a.Y[b]=true}bN(a.Z,e);if(j==k.length)break;h=k[j]&ZR;g=j}}}
	function ul(a){var b,c,d,e,f,g,h,i,j;f=Th(a,a.o,a.p,Vg);g=f*f/16;for(d=1;d<a.o;d++){for(e=0;e<d;e++){i=a.H[e].a-a.H[d].a;j=a.H[e].b-a.H[d].b;if(i*i+j*j<g)throw QG(new pB('The distance between two atoms is too close.'))}}no(a,1);b=0;for(c=0;c<a.d;c++){if(Hk(a,c)>(h=ji(a,c),h+hi(a,c,h)))throw QG(new pB('atom valence exceeded'));b+=a.q[c]}if(b!=0)throw QG(new pB('unbalanced atom charge'))}
	function xk(a,b,c,d,e){var f,g,h,i;g=a.c[b];if(a.k[b]!=0||(a.s[b]&cR)!=0||a.g[b]<3||g>4)return false;i=JC(NG,nR,6,4,16,1);for(h=0;h<g;h++){f=3.9269908169872414-d[h];if($wnd.Math.abs(oS-f%tR)>0.0872664675116539)return false;e[h]=3&FD(f/tR);if(i[e[h]])return false;i[e[h]]=true;if((e[h]&1)==0){if(a.F[a.i[b][c[h]]]!=1)return false}else{if(!Ki(a,a.i[b][c[h]],b))return false}}return i[0]&&i[2]}
	function Zk(a,b){var c,d,e,f,g,h;if(a.F[b]!=1||(a.C[b]&256)!=0||(a.C[b]&64)!=0&&(!!a.n&&b<a.e?Am(a.n,b):0)<7)return false;c=a.B[0][b];if((a.s[c]&cR)==0||(!!a.n&&c<a.d?zm(a.n,c):0)<6)return false;d=a.B[1][b];if((a.s[d]&cR)==0||(!!a.n&&d<a.d?zm(a.n,d):0)<6)return false;h=0;for(g=0;g<a.g[c];g++){e=a.f[c][g];e!=d&&a.g[e]>2&&++h}for(f=0;f<a.g[d];f++){e=a.f[d][f];e!=c&&a.g[e]>2&&++h}return h>2}
	function um(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p;k=a.g.K;l=0;for(f=0;f<c;f++){if(k>b[f]){k=b[f];l=f}}p=JC(KD,jR,6,c,15,1);j=l>0?l-1:c-1;m=l<c-1?l+1:0;h=b[j]<b[m];for(g=0;g<c;g++){p[g]=b[l];h?--l<0&&(l=c-1):++l==c&&(l=0)}for(e=0;e<a.i.a.length;e++){o=eN(a.i,e);if(o.length!=c)continue;d=true;for(i=0;i<c;i++){if(o[i]!==p[i]){d=false;break}}if(d)return}bN(a.i,p);n=Dm(a,p);bN(a.j,n);Km(a,p,n)}
	function jn(a,b,c){var d,e,f,g;f=b.d;a.e=JC(KD,jR,6,b.d,15,1);a.f=JC(KD,jR,6,b.d,15,1);for(d=0;d<f;d++){a.e[d]=(Ym(b,d)|b.w[d])&vS^vS;a.f[d]=b.A[d];(c&1)!=0&&(a.f[d]+=b.q[d]+16<<8);(c&2)!=0&&(a.f[d]+=b.v[d]<<16)}g=b.e;a.g=JC(KD,jR,6,b.e,15,1);for(e=0;e<g;e++){a.g[e]=(Zm(b,e)|b.D[e])&1572991^1572960;(c&4)!=0?(a.g[e]&2)!=0&&(a.g[e]|=8):(c&8)!=0&&(a.g[e]&2)!=0&&(b.C[e]&256)!=0&&(a.g[e]|=8)}}
	function ni(a){var b;a.Q=0;a.A=JC(KD,jR,6,a.K,15,1);a.q=JC(KD,jR,6,a.K,15,1);a.u=JC(KD,jR,6,a.K,15,1);a.H=JC(_D,{201:1,4:1,11:1,5:1,17:1,8:1},64,a.K,0,1);for(b=0;b<a.K;b++)a.H[b]=new Bg;a.v=JC(KD,jR,6,a.K,15,1);a.s=JC(KD,jR,6,a.K,15,1);a.w=JC(KD,jR,6,a.K,15,1);a.t=null;a.r=null;a.B=HC(KD,[XR,jR],[7,6],15,[2,a.L],2);a.F=JC(KD,jR,6,a.L,15,1);a.C=JC(KD,jR,6,a.L,15,1);a.D=JC(KD,jR,6,a.L,15,1)}
	function Fp(a){var b,c,d,e,f,g,h;while(true){f=null;for(b=0;b<a.f.o;b++){h=0;for(e=0;e<gk(a.f,b);e++)a.b[vk(a.f,b,e)]||++h;if(h==1){g=rp(a,b);(!f||g.a.length>f.a.length)&&(f=g)}}if(!f)break;c=new uq(a.f,f.a.length,a.e);for(d=0;d<f.a.length;d++){a.a[f.a[d]]=true;d<f.a.length-1&&(a.b[f.b[d]]=true);c.e[d]=f.a[d];c.a[d]=$wnd.Math.cos(NR)*d;c.b[d]=(d&1)==1?0:0.5;c.k[d]=128+f.a.length}bN(a.c,c)}}
	function Ek(a,b){var c,d,e,f,g,h;if(a.I&&(a.w[b]&uR)==0)return 0;if(!tl(a,b))return 0;no(a,1);g=0;for(e=0;e<a.c[b];e++)g+=a.j[b][e];if(a.I){c=1;for(d=0;d<a.g[b];d++)a.F[a.i[b][d]]==64&&++c;g+=c>>1}g-=hi(a,b,g);f=((a.s[b]&eS)>>>28)-1;if(f==-1){if(a.A[b]>=171&&a.A[b]<=190){f=2}else{h=a.A[b]<Sg.length?Sg[a.A[b]]:null;if(h==null){f=6}else{f=h[0];for(d=1;f<g&&d<h.length;d++)f=h[d]}}}return 0>f-g?0:f-g}
	function Sn(a,b){var c,d,e,f;f=false;a.b=b;no(a.b,7);c=a.b.d;d=a.b.e;a.j=JC(NG,nR,6,d,16,1);for(e=0;e<d;++e)a.j[e]=false;a.g=JC(NG,nR,6,c,16,1);a.c=JC(KD,jR,6,c,15,1);for(e=0;e<c;++e){a.g[e]=false;a.c[e]=-1}a.e=JC(XF,bS,2,3*c,6,1);a.i=0;a.d=0;a.a=0;while(!f){for(e=0;e<c;++e){if(!a.g[e]){a.a>0&&(a.e[a.i++]='.');Un(a,e,-1);++a.a;break}}e==c&&(f=true)}a.f='';for(e=0;e<a.i;++e)a.f+=''+a.e[e];return a.f}
	function Ed(a,b){var c,d,e,f;if(a.H.o==0)return null;e=(a.k=FD(b.b),a.f=FD(b.a),Dd(a,b));no(a.H,(a.B&256)!=0?31:(a.B&512)!=0?47:(a.B&wR)!=0?79:15);ad(a);a.O.a=JC(RF,OR,1,0,5,1);a.U.a=JC(RF,OR,1,0,5,1);Mc(a);Nn(a,a.R);a.G=true;for(d=0;d<a.H.o;d++)hd(a,d);a.G=false;c=a.L.c*Sh(a.H);Tc(a,c);zd(a,b,c,eR);if(PH(b,a.t))return e;f=new Mg(a.t,b,c);Fg(f,a.L);Hg(f,a.t);Gg(f,a.u);if(!e)return f;Fg(f,e);return e}
	function Oe(a,b,c,d,e,f,g){var h,i,j,k,l,m,n,o,p,q,r;for(l=g;l>1;l--){p=f[l]-f[l-1];r=JC(QD,OR,90,p,0,1);h=f[l];for(o=0;o<p;o++){q=f[l-1]+o;m=h;while(m<f[l+1]&&d[m]==q)++m;r[o]=new Bf;r[o].c=q;r[o].d=c[q];r[o].b=b[q]?0:ik(a.L,e[q]);r[o].a=JC(KD,jR,6,m-h,15,1);for(k=h;k<m;k++)r[o].a[k-h]=c[k];bO(r[o].a);h=m}i=new yf;$N(r,0,r.length,i);j=1;for(n=0;n<p;n++){c[r[n].c]=j;n!=p-1&&xf(r[n],r[n+1])!=0&&++j}}}
	function Bo(a){var b,c,d,e,f,g;g=false;for(c=0;c<a.d;c++)((a.s[c]&kS)==0||(a.s[c]&3)==3)&&(a.s[c]&=mS);if(a.J){if((a.G&aS)!=_R){f=JC(NG,nR,6,a.d,16,1);for(d=0;d<a.d;d++)(a.s[d]&kS)!=0&&(a.s[d]&3)!=3&&(a.s[d]&KR)>>19==1&&(f[d]=true);for(e=0;e<a.d;e++){if((a.s[e]&kS)!=0&&(a.s[e]&3)!=3){dj(a,e,1,0);g=true}}for(b=0;b<a.d;b++){if(f[b]){jj(a,b,1,false);dj(a,b,1,-1);g=true}}}a.J=false}Ui(a,1);Ui(a,2);return g}
	function xd(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o;if(c==0){l=b.a;n=b.c;m=b.b;o=b.d}else{l=b.b;n=b.d;m=b.a;o=b.c}k=eN(a.U,d);i=m>l?k.c+k.b:k.c;j=o>n?k.d+k.a:k.d;e=m-l;f=o-n;if($wnd.Math.abs(e)>$wnd.Math.abs(f)){if(n==o){g=i;h=n}else{g=l+e*(j-n)/f;if(m>l==i>g){h=j}else{g=i;h=n+f*(i-l)/e}}}else{if(l==m){g=l;h=j}else{h=n+f*(i-l)/e;if(o>n==j>h){g=i}else{g=l+e*(j-n)/f;h=j}}}if(c==0){b.a=g;b.c=h}else{b.b=g;b.d=h}}
	function ne(a){var b,c,d,e,f,g,h,i,j,k,l;d=JC(KD,jR,6,a.I,15,1);for(b=0;b<a.L.d;b++){k=uk(a.L,b)+Fk(a.L,b);j=0;for(f=0;f<hk(a.L,b);f++){if(f<uk(a.L,b)||f>=gk(a.L,b)){l=2*a.c[tk(a.L,b,f)];c=vk(a.L,b,f);bi(a.L,c)==2&&(Yk(a.L,c)||++l);for(h=0;h<j;h++)if(l<d[h])break;for(i=j;i>h;i--)d[i]=d[i-1];d[h]=l;++j}}Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);for(g=k;g<a.I;g++)Hf(a.b[b],17,0);for(e=0;e<k;e++)Hf(a.b[b],17,d[e])}}
	function Rk(a,b,c,d,e,f){var g,h,i,j,k,l;no(a,1);if(e){uh(e);e.I=false}j=JC(KD,jR,6,a.o,15,1);d==null?(d=JC(NG,nR,6,a.o,16,1)):WN(d,d.length);j[0]=b;j[1]=c;d[b]=true;d[c]=true;i=1;k=1;while(i<=k){h=a.f[j[i]].length;for(l=0;l<h;l++){g=a.f[j[i]][l];if(g==b){if(i!=1)return -1}if(!d[g]){d[g]=true;j[++k]=g}}++i}if(e){f==null&&(f=JC(KD,jR,6,d.length,15,1));$j(a,e,d,false,f);gh(e,f[b],0,0,-1,0)}d[b]=false;return k}
	function Ik(a,b,c,d,e,f){var g,h,i,j,k,l,m,n,o;if(c==d){b[0]=c;return 0}no(a,1);j=JC(KD,jR,6,a.o,15,1);i=JC(KD,jR,6,a.o,15,1);o=JC(KD,jR,6,a.o,15,1);i[0]=c;j[c]=1;h=0;k=0;while(h<=k&&j[i[h]]<=e){n=i[h];for(l=0;l<a.c[n];l++){if(f==null||f.length<=a.i[n][l]||!f[a.i[n][l]]){g=a.f[n][l];if(g==d){m=j[n];b[m]=g;b[--m]=n;while(m>0){b[m-1]=o[b[m]];--m}return j[n]}if(j[g]==0){i[++k]=g;j[g]=j[n]+1;o[g]=n}}}++h}return -1}
	function De(a){var b,c,d,e,f,g;a.G=true;f=ue(a,false);while(a.N<a.L.d&&f){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);g=a.W[b]<<7;if((a.W[b]==1||a.W[b]==2)&&a.U[b]!=0){g|=a.U[b]<<5;g|=a.T[b]}Hf(a.b[b],18,g<<9)}for(c=0;c<a.L.e;c++){d=a.k[c]<<7;if((a.k[c]==1||a.k[c]==2)&&ei(a.L,c)==1&&a.j[c]!=0){d|=a.j[c]<<5;d|=a.i[c]}If(a.b[Vh(a.L,0,c)],d);If(a.b[Vh(a.L,1,c)],d)}e=Ae(a);if(a.N==e)break;a.N=e;f=ue(a,false)}}
	function ym(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;e=Vh(a.g,0,b);f=Vh(a.g,1,b);i=JC(KD,jR,6,a.g.d,15,1);j=JC(KD,jR,6,a.g.d,15,1);k=JC(KD,jR,6,a.g.d,15,1);i[0]=e;i[1]=f;j[e]=1;j[f]=2;k[e]=-1;k[f]=e;h=1;l=1;while(h<=l){for(m=0;m<uk(a.g,i[h]);m++){g=tk(a.g,i[h],m);if(h>1&&g==e){o=JC(KD,jR,6,j[i[h]],15,1);d=i[h];for(n=0;n<o.length;n++){o[n]=d;d=k[d]}return o}if(j[g]==0&&!c[g]){i[++l]=g;j[g]=j[i[h]]+1;k[g]=i[h]}}++h}return null}
	function rg(a,b){var c,d,e,f,g,h,i,j,k,l;k=WQ;i=-1;l=-1;j=-1;for(d=0;d<a.j.i.d;d++){if(Tf(a.j,d)&&a.j.k[d]!=0){for(h=0;h<b.length;h++){e=b[h]<a.a?b[h]:b[h]<a.b?b[h]-a.a:-1;f=b[h]<a.a?1:b[h]<a.b?2:0;if(a.j.k[d]==f&&a.j.j[d]==e){if(k>a.j.a[d]+(f==1?eR:0)){k=a.j.a[d]+(f==1?eR:0);i=e;l=f;j=b[h]}}}}}for(c=0;c<a.j.i.d;c++){if(Tf(a.j,c)&&a.j.k[c]==l&&a.j.j[c]==i){a.j.k[c]=0;a.j.j[c]=-1}}for(g=0;g<a.j.g.length;g++)a.e[j][g]=false}
	function xh(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;m=-1;o=Th(a,a.o,a.p,Vg);n=iS;for(d=0;d<a.p;d++){p=a.H[a.B[0][d]].a;r=a.H[a.B[0][d]].b;q=a.H[a.B[1][d]].a;s=a.H[a.B[1][d]].b;k=q-p;l=s-r;e=$wnd.Math.sqrt(k*k+l*l);f=(p+q)/2;g=(r+s)/2;k=b-f;l=c-g;if($wnd.Math.sqrt(k*k+l*l)>e/2)continue;if(q==p)j=$wnd.Math.abs(p-b);else{h=(s-r)/(p-q);i=-h*p-r;j=$wnd.Math.abs((h*b+c+i)/$wnd.Math.sqrt(h*h+1))}if(j<o&&j<n){n=j;m=d}}return m}
	function up(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;h=JC(KD,jR,6,a.f.o,15,1);i=JC(KD,jR,6,a.f.o,15,1);j=JC(KD,jR,6,a.f.o,15,1);k=JC(KD,jR,6,a.f.o,15,1);h[0]=c;j[c]=1;k[0]=-1;g=0;l=0;while(g<=l){for(m=0;m<gk(a.f,h[g]);m++){e=tk(a.f,h[g],m);o=vk(a.f,h[g],m);if(e==b){f=j[h[g]];d=JC(KD,jR,6,f,15,1);d[0]=o;for(n=1;n<f;n++){d[n]=i[g];g=k[g]}return d}if(j[e]==0){h[++l]=e;i[l]=o;j[e]=j[h[g]]+1;k[l]=g}}if(g==l)return null;++g}return null}
	function nk(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;no(a,3);f=JC(NG,nR,6,a.e,16,1);l=JC(NG,nR,6,a.e,16,1);o=JC(KD,jR,6,a.d,15,1);g=0;for(h=1;h<a.g[b];h++){d=a.i[b][h];if((a.C[d]&64)!=0){for(j=0;j<h;j++){e=a.i[b][j];if((a.C[e]&64)!=0){l[d]=true;l[e]=true;n=Ik(a,o,a.f[b][h],a.f[b][j],c-2,l);l[d]=false;l[e]=false;if(n!=-1){i=false;m=JC(KD,jR,6,n,15,1);Jk(a,o,m,n);for(k=0;k<n;k++){if(!f[m[k]]){f[m[k]]=true;i=true}}i&&++g}}}}}return g}
	function mi(a,b){var c,d,e;d=ki(a,b);c=Di(a,a.B[0][b])||Di(a,a.B[1][b]);e=c?32:1;if(a.F[b]==4){a.F[b]=e;a.Q=0;return true}if(a.F[b]==2){a.F[b]=26;a.Q&=3;if((a.C[b]&128)==0)return true}if(a.F[b]==26){d==3?(a.F[b]=4):(a.F[b]=e);a.Q=0;return true}if((24&a.F[b])!=0){a.F[b]=1;a.Q&=3;return true}if(!c&&d<2)return false;if(a.F[b]==1){a.F[b]=2;a.Q=0;return true}if(d<1)return false;if(a.F[b]==32){a.F[b]=1;a.Q=0;return true}return false}
	function ze(a){var b,c,d,e,f,g,h,i,j,k,l;e=false;for(f=0;f<a.Z.a.length;f++){d=eN(a.Z,f);b=true;l=-1;g=false;for(j=0;j<d.length;j++){c=d[j];if(a.W[c]==0){b=false;break}if(a.W[c]!=3){h=true;for(k=0;k<d.length;k++){if(k!=j&&a.c[c]===a.c[d[k]]){h=false;break}}if(h&&l<a.c[c]){l=a.c[c];g=a.W[c]==1}}}if(b&&l!=-1){for(i=0;i<d.length;i++){c=d[i];g&&(a.W[c]==1?(a.W[c]=2):a.W[c]==2&&(a.W[c]=1));a.Y[c]=false}jN(a.Z,d);e=true;--f}}return e}
	function Xf(a,b,c,d,e){var f,g,h,i,j,k;i=null;f=null;for(k=0;k<a.g[b].length;k++){g=a.g[b][k];a.f[g]&&(a.o[g]==1||a.o[g]==2)&&(a.k[g]==0?(f=dg(f,(e[g]<<16)+g)):a.k[g]==d&&a.j[g]==c&&(i=dg(i,(e[g]<<16)+g)))}h=tg(i,f);if(h==0)return false;if(h<0){for(j=0;j<a.g[b].length;j++){g=a.g[b][j];if(a.f[g]&&(a.o[g]==1||a.o[g]==2)){if(a.k[g]==0){a.k[g]=d<<24>>24;a.j[g]=c<<24>>24}else if(a.k[g]==d&&a.j[g]==c){a.k[g]=0;a.j[g]=-1}}}}return true}
	function Yl(a,b,c,d,e,f){var g,h,i,j;j=1;h=false;switch(e){case 1:j=17;break;case 3:j=26;break;case 4:j=17;h=true;break;case 6:j=9;break;default:switch(d){case 1:j=1;break;case 2:j=2;break;case 3:j=4;break;case 4:j=64;break;case 8:a.e&&(j=32);}}g=Zg(a.d,b,c,j);i=0;h&&dj(a.d,b,1,-1);if(d>4){switch(d){case 5:i|=3;break;case 6:i|=9;break;case 7:i|=10;break;case 8:a.e||(i|=31);}}f==1&&(i|=64);f==2&&(i|=32);i!=0&&zj(a.d,g,i,true);return g}
	function Hp(a,b,c){var d,e,f,g,h,i,j,k,l,m;for(f=0;f<a.f.p;f++){d=Vh(a.f,0,f);e=Vh(a.f,1,f);if(cl(a.f,f)||bi(a.f,f)!=1||gk(a.f,d)==1||gk(a.f,e)==1)continue;if((a.e&2)!=0&&Ci(a.f,d)&&Ci(a.f,e))continue;l=false;for(j=0;j<2;j++){g=Vh(a.f,j,f);if(gk(a.f,g)>2){m=true;i=-1;for(k=0;k<gk(a.f,g);k++){h=tk(a.f,g,k);h!=Vh(a.f,1-j,f)&&(i==-1?(i=c[h]):i!=c[h]&&(m=false))}if(m){l=true;break}}}l||((a.e&4)!=0&&Ci(a.f,d)&&Ci(a.f,e)?(b[f]=1):(b[f]=2))}}
	function rp(a,b){var c,d,e,f,g,h,i,j,k,l,m,n;e=JC(KD,jR,6,a.f.o,15,1);f=JC(KD,jR,6,a.f.o,15,1);g=JC(KD,jR,6,a.f.o,15,1);h=JC(KD,jR,6,a.f.o,15,1);e[0]=b;g[b]=1;h[0]=-1;d=0;i=0;while(d<=i){if(d==0||!a.a[e[d]]){for(j=0;j<gk(a.f,e[d]);j++){c=tk(a.f,e[d],j);m=vk(a.f,e[d],j);if(g[c]==0&&!a.b[m]){e[++i]=c;f[i]=m;g[c]=g[e[d]]+1;h[i]=d}}}if(d==i){n=new eq(g[e[d]]);k=d;for(l=0;l<n.a.length;l++){n.a[l]=e[k];n.b[l]=f[k];k=h[k]}return n}++d}return null}
	function fk(a){var b,c,d,e,f,g,h,i;h=JC(NG,nR,6,a.o,16,1);for(c=0;c<a.o;c++)h[c]=a.A[c]==1&&a.v[c]==0&&a.q[c]==0&&(a.r==null||a.r[c]==null);i=JC(NG,nR,6,a.o,16,1);for(g=0;g<a.p;g++){d=a.B[0][g];e=a.B[1][g];if(bi(a,g)!=1){h[d]=false;h[e]=false;continue}i[d]&&(h[d]=false);i[e]&&(h[e]=false);i[d]=true;i[e]=true}for(f=0;f<a.p;f++){if(h[a.B[0][f]]&&h[a.B[1][f]]){h[a.B[0][f]]=false;h[a.B[1][f]]=false}}for(b=0;b<a.o;b++)i[b]||(h[b]=false);return h}
	function ek(a){var b,c,d,e,f,g,h,i;a.n=new Mm(a,7);c=JC(KD,jR,6,a.d,15,1);for(d=0;d<a.e;d++){if(Am(a.n,d)!=0){a.C[d]|=64;++c[a.B[0][d]];++c[a.B[1][d]]}}for(b=0;b<a.d;b++){c[b]==2?(a.s[b]|=wR):c[b]==3?(a.s[b]|=uR):c[b]>3&&(a.s[b]|=gS)}for(i=0;i<a.n.i.a.length;i++){f=Bm(a.n,i);h=Cm(a.n,i);g=f.length;for(e=0;e<g;e++){a.s[f[e]]|=8;a.C[h[e]]|=128;if(Fm(a.n,i)){a.s[f[e]]|=cR;a.C[h[e]]|=256}Im(a.n,i)&&(a.C[h[e]]|=512);a.F[h[e]]==26&&(a.F[h[e]]=2)}}}
	function Lj(a,b,c){var d,e,f,g,h;g=a.A[b];a.A[b]=a.A[c];a.A[c]=g;g=a.q[b];a.q[b]=a.q[c];a.q[c]=g;g=a.v[b];a.v[b]=a.v[c];a.v[c]=g;g=a.s[b];a.s[b]=a.s[c];a.s[c]=g;g=a.w[b];a.w[b]=a.w[c];a.w[c]=g;g=a.u[b];a.u[b]=a.u[c];a.u[c]=g;f=a.H[b];a.H[b]=a.H[c];a.H[c]=f;if(a.t!=null){h=a.t[b];a.t[b]=a.t[c];a.t[c]=h}if(a.r!=null){h=a.r[b];a.r[b]=a.r[c];a.r[c]=h}for(d=0;d<a.p;d++){for(e=0;e<2;e++){a.B[e][d]==b?(a.B[e][d]=c):a.B[e][d]==c&&(a.B[e][d]=b)}}a.Q=0}
	function kl(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;c=a.c[b];d=JC(ID,mR,6,c,15,1);for(m=0;m<c;m++)d[m]=Uh(a,b,a.f[b][m]);for(n=1;n<c;n++){for(o=0;o<n;o++){e=$wnd.Math.abs(Sj(d[n],d[o]));if(e<0.08||e>pS){f=0;g=0;for(p=0;p<c;p++){if(p!=n&&p!=o){f+=$wnd.Math.abs(SA(d[n],d[p]));g+=$wnd.Math.abs(SA(d[o],d[p]))}}i=f<g?a.i[b][n]:a.i[b][o];if(bi(a,i)==1)return i}}}q=-1;h=0;for(l=0;l<c;l++){j=a.f[b][l];k=a.i[b][l];r=Qk(a,k,j);if(h<r){h=r;q=k}}return q}
	function Zl(a){var b,c,d,e,f,g,h,i,j,k,l,m,n;g=JC(KD,jR,6,a.d.o,15,1);for(c=0;c<a.d.o;c++)g[c]=-Ah(a.d,c);Od(new Vd(a.d),null,true);for(d=0;d<a.d.o;d++)g[d]+=Ah(a.d,d);for(b=0;b<a.d.o;b++){if(g[b]!=0){h=-g[b];for(e=0;e<a.d.p;e++){for(j=0;j<2;j++){if(h>0&&ei(a.d,e)==32&&Vh(a.d,1-j,e)==b){l=Vh(a.d,j,e);if(Di(a.d,l)){k=(m=Rh(a.d,l),n=m<(Wg(),Tg).length?Tg[m]:null,n==null?0:n[n.length-1]);f=Ah(a.d,l);if(f<k){i=h<k-f?h:k-f;$i(a.d,l,f+i);h-=i}}}}}}}}
	function $m(a,b,c){var d,e,f,g,h,i,j,k,l,m;h=false;for(g=0;g<2;g++){d=Vh(a.d,g,b);k=a.w[d];if(uk(a.d,d)==2){if(uk(a.A,k)==2)continue;e=-1;for(j=0;j<2;j++)vk(a.d,d,j)!=b&&(e=tk(a.d,d,j));m=0;l=JC(KD,jR,6,2,15,1);for(i=0;i<3;i++)vk(a.A,k,i)!=c&&(l[m++]=tk(a.A,k,i));a.w[e]!==l[0]&&(h=!h)}else if(uk(a.d,d)==3&&uk(a.A,k)==3){e=JC(KD,jR,6,2,15,1);f=0;for(i=0;i<3;i++)vk(a.d,d,i)!=b&&(e[f++]=tk(a.d,d,i));a.w[e[0]]>a.w[e[1]]^e[0]>e[1]&&(h=!h)}}return h}
	function No(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p;i=new Do(a.d,a.e);k=new GP;n=0;m=0;g=JC(NG,nR,6,a.d,16,1);f=JC(KD,jR,6,a.d,15,1);for(p=0;p<c&&m<a.d;p++){if(m==0){f[0]=b;g[b]=true;m=1}else{o=m;for(j=n;j<m;j++){e=f[j];for(l=0;l<a.g[e];l++){h=a.f[e][l];if(!g[h]){switch(d){case 0:g[h]=true;f[o++]=h;break;case 1:if(!(Po(a,e)&&Po(a,h))){g[h]=true;f[o++]=h}}}}}n=m;m=o}$j(a,i,g,true,null);EP(k,cf(new wf(i,8)))}return FP(k,JC(XF,bS,2,k.a.a.length,6,1))}
	function Pg(a){var b,c,d,e,f,g;if(a.j!=0)return a.j;if(a.i&&Rh(a.e,a.a)!=15&&Rh(a.e,a.a)!=16){for(g=0;g<gk(a.e,a.a);g++){f=vk(a.e,a.a,g);if(Ki(a.e,f,a.a)){tk(a.e,a.a,g)==a.b?(a.j=ei(a.e,f)==17?3:1):(a.j=ei(a.e,f)==17?1:3);return a.j}}}b=Uh(a.e,a.a,a.g);d=Uh(a.e,a.a,a.b);d<b&&(d+=rR);if(gk(a.e,a.a)==2){c=d-b;if(c>3.0915926535897933&&c<3.191592653589793){a.j=-1;return a.j}a.j=c<sR?4:2;return a.j}else{e=Uh(a.e,a.a,a.d);e<b&&(e+=rR);a.j=e<d?2:4;return a.j}}
	function Sc(a,b,c,d){var e,f,g,h,i,j,k,l;k=(b.c-b.d)/9;l=(b.b-b.a)/9;g=JC(ID,mR,6,3,15,1);h=JC(ID,mR,6,3,15,1);i=JC(ID,mR,6,4,15,1);j=JC(ID,mR,6,4,15,1);g[0]=b.a;h[0]=b.c;i[2]=b.b+k;j[2]=b.d+l;i[3]=b.b-k;j[3]=b.d-l;g[1]=(g[0]+i[2])/2;h[1]=(h[0]+j[2])/2;g[2]=(g[0]+i[3])/2;h[2]=(h[0]+j[3])/2;i[0]=g[2];j[0]=h[2];i[1]=g[1];j[1]=h[1];if(wi(a.H,rk(a.H,c,d))){e=-3;f=-3}else{e=a.o[c];f=Wc(a,c);e==Bh(a.H,c)&&(e=f)}Ad(a,e);Gn(a,g,h,3);Ad(a,f);Gn(a,i,j,4);Ad(a,a.K)}
	function se(a){var b,c,d,e,f,g,h,i,j,k,l,m;if(a.s)return;a.s=new pN;k=0;l=JC(KD,jR,6,a.L.d,15,1);g=JC(KD,jR,6,a.L.d,15,1);i=JC(KD,jR,6,a.L.e,15,1);for(b=0;b<a.L.d;b++){if(l[b]==0&&(bl(a.L,b)||kk(a.L,b)==1)){g[0]=b;h=1;j=0;l[b]=++k;c=JC(NG,nR,6,a.L.e,16,1);for(f=0;f<h;f++){for(m=0;m<uk(a.L,g[f]);m++){e=vk(a.L,g[f],m);if(cl(a.L,e)||bi(a.L,e)==2||Zk(a.L,e)){d=tk(a.L,g[f],m);if(!c[e]){i[j++]=e;c[e]=true}if(l[d]==0){g[h++]=d;l[d]=k}}}}bN(a.s,new Nf(g,h,i,j))}}}
	function $j(a,b,c,d,e){var f,g,h,i,j;d&&no(a,3);b.t=null;a.I&&Cj(b,true);i=c.length;e==null&&(e=JC(KD,jR,6,i,15,1));b.o=0;for(f=0;f<i;f++)e[f]=c[f]?kh(a,b,f,0,0):-1;b.p=0;for(j=0;j<a.p;j++){g=a.B[0][j];h=a.B[1][j];if(g<i&&h<i){if(c[g]&&c[h])lh(a,b,j,0,0,e,d);else if(a.q[g]!=0&&a.q[h]!=0&&a.q[g]<0^a.q[h]<0){c[g]&&(a.q[g]+=a.q[g]<0?1:-1);c[h]&&(a.q[h]+=a.q[h]<0?1:-1)}}}nh(a,b);!!a.b&&(b.Q=0);b.Q=0;Ui(b,1);Ui(b,2);b.o!=i&&Cj(b,true);d&&Od(new Vd(b),null,false)}
	function vq(a,b){var c,d;this.j=a.j;this.i=b;this.e=JC(KD,jR,6,a.e.length,15,1);this.k=JC(KD,jR,6,a.e.length,15,1);this.a=JC(ID,mR,6,a.e.length,15,1);this.b=JC(ID,mR,6,a.e.length,15,1);for(d=0;d<a.e.length;d++){this.e[d]=a.e[d];this.k[d]=a.k[d];this.a[d]=a.a[d];this.b[d]=a.b[d]}if(a.f!=null){this.f=JC(KD,jR,6,a.f.length,15,1);for(c=0;c<a.f.length;c++)this.f[c]=a.f[c]}if(a.g!=null){this.g=JC(KD,jR,6,a.g.length,15,1);for(c=0;c<a.g.length;c++)this.g[c]=a.g[c]}}
	function Wn(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;j=JC(KD,jR,6,a.b.d,15,1);h=JC(KD,jR,6,a.b.d,15,1);i=JC(KD,jR,6,a.b.d,15,1);k=JC(KD,jR,6,a.b.d,15,1);c=Vh(a.b,0,b);d=Vh(a.b,1,b);h[0]=c;h[1]=d;i[0]=-1;i[1]=b;j[c]=1;j[d]=2;k[c]=-1;k[d]=c;g=1;l=1;while(g<=l&&j[h[g]]<15){o=h[g];for(m=0;m<uk(a.b,o);m++){e=tk(a.b,o,m);if(e!=k[o]){f=vk(a.b,o,m);if(e==c){i[0]=f;for(n=0;n<=l;n++)a.a[i[m]]=true;return}if(Ci(a.b,e)&&j[e]==0){++l;h[l]=e;i[l]=f;j[e]=j[o]+1;k[e]=o}}}++g}return}
	function wd(a,b){var c,d,e,f,g,h;if(b.a==b.b&&b.c==b.d){for(e=0;e<a.U.a.length;e++){g=eN(a.U,e);if(RH(g,b.a,b.c))return false}return true}h=pd(b);c=false;if(b.a>b.b){nd(b);c=true}for(d=0;d<a.U.a.length;d++){g=eN(a.U,d);if(g.c>h.c+h.b||g.d>h.d+h.a||h.c>g.c+g.b||h.d>g.d+g.a)continue;if(td(a,b.a,b.c,d)){if(td(a,b.b,b.d,d)){c&&nd(b);return false}xd(a,b,0,d);f=wd(a,b);c&&nd(b);return f}if(td(a,b.b,b.d,d)){xd(a,b,1,d);f=wd(a,b);c&&nd(b);return f}}c&&nd(b);return true}
	function lh(a,b,c,d,e,f,g){var h,i,j,k,l;i=b.p;i>=b.L&&Fj(b,b.L*2);k=(a.C[c]&gS)>>10;j=-1;k==1&&(d==-1?(j=Ui(b,1)):(j=RJ(32,d+((a.C[c]&gS)>>10!=1&&(a.C[c]&gS)>>10!=2?-1:(a.C[c]&hS)>>12))));k==2&&(e==-1?(j=Ui(b,2)):(j=RJ(32,e+((a.C[c]&gS)>>10!=1&&(a.C[c]&gS)>>10!=2?-1:(a.C[c]&hS)>>12))));for(l=0;l<2;l++)b.B[l][i]=f==null?a.B[l][c]:f[a.B[l][c]];h=g&&(a.C[c]&512)!=0?64:a.F[c];b.F[i]=h;b.C[i]=a.C[c];b.D[i]=b.I?a.D[c]:0;if(j!=-1){b.C[i]&=-126977;b.C[i]|=j<<12}++b.p;b.Q=0;return i}
	function we(a,b){var c,d,e,f,g,h,i,j,k,l,m;f=HC(KD,[XR,jR],[7,6],15,[2,32],2);for(g=0;g<2;g++){c=JC(KD,XR,7,32,0,2);m=0;for(e=0;e<32;e++){if(b[g][e]!=null){k=b[g][e].length;c[e]=JC(KD,jR,6,k,15,1);for(h=0;h<k;h++)c[e][h]=a.c[b[g][e][h]];bO(c[e]);++m}}for(l=m;l>0;l--){j=0;i=null;for(d=0;d<32;d++){if(c[d]!=null){if(i==null||i.length<c[d].length){i=c[d];j=d}else if(i.length==c[d].length){for(h=i.length-1;h>=0;h--){if(i[h]<c[d][h]){i=c[d];j=d;break}}}}}f[g][j]=l;c[j]=null}}return f}
	function Fe(a){var b,c,d,e,f,g;a.G=true;d=Pe(a);!!a.J&&Yf(a.J,a.c)&&(d=Pe(a));ue(a,false)&&ze(a);g=true;while(a.N<a.L.d&&g){e=we(a,d);for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);Hf(a.b[b],20,0);!a.V[b]&&a.U[b]!=0&&If(a.b[b],(a.U[b]<<18)+(e[a.U[b]==1?0:1][a.T[b]]<<8));If(a.b[b],a.W[b]<<4)}for(c=0;c<a.L.e;c++){If(a.b[Vh(a.L,0,c)],a.k[c]);If(a.b[Vh(a.L,1,c)],a.k[c])}f=Ae(a);if(a.N==f)break;a.N=f;g=false;if(!!a.J&&Yf(a.J,a.c)){g=true;d=Pe(a)}if(ue(a,false)){g=true;ze(a)}}}
	function hi(a,b,c){var d,e;if(a.A[b]>=171&&a.A[b]<=190)return 0;e=0;(a.s[b]&48)==32&&(e-=1);((a.s[b]&48)==16||(a.s[b]&48)==48)&&(e-=2);d=a.q[b];if(d==0&&a.I){(a.w[b]&xR)==zR&&(d=-1);(a.w[b]&xR)==yR&&(d=1)}a.A[b]==7||a.A[b]==8||a.A[b]==9?(e+=d):a.A[b]==6||a.A[b]==14||a.A[b]==32?(e-=d<0?-d:d):a.A[b]==15||a.A[b]==33?c-e-d<=3?(e+=d):(e-=d):a.A[b]==16||a.A[b]==34||a.A[b]==52?c-e-d<=4?(e+=d):(e-=d<0?-d:d):a.A[b]==17||a.A[b]==35||a.A[b]==53?c-e-d<=5?(e+=d):(e-=d<0?-d:d):(e-=d);return e}
	function Yd(a,b){var c,d,e,f,g,h,i,j;c=false;if(a.A[b]!=8)return false;if(a.g[b]!=1)return false;if(a.j[b][0]!=1)return false;g=a.f[b][0];if(a.A[g]==6){h=a.g[g];for(d=0;d<h;d++){e=a.f[g][d];if(e==b){continue}if(a.A[e]!=8){continue}f=rk(a,g,e);if(a.F[f]==2){c=true;break}}}else if(a.A[g]==7){a.q[g]==1&&(c=true)}else if(a.A[g]==16){i=a.g[g];j=0;for(d=0;d<i;d++){e=a.f[g][d];if(e==b){continue}if(a.A[e]!=8){continue}f=rk(a,g,e);a.F[f]==2&&++j}j==2&&(c=true)}else Zd(a,b)&&(c=true);return c}
	function dj(a,b,c,d){var e,f,g;if(c==0){a.s[b]&=mS;a.s[b]|=0}else{if(d>=32)return;if(d==-1){g=-1;for(f=0;f<a.o;f++)f!=b&&c==(a.s[f]&KR)>>19&&g<((a.s[f]&KR)>>19!=1&&(a.s[f]&KR)>>19!=2?-1:(a.s[f]&fS)>>21)&&(g=(a.s[f]&KR)>>19!=1&&(a.s[f]&KR)>>19!=2?-1:(a.s[f]&fS)>>21);for(e=0;e<a.p;e++)c==(a.C[e]&gS)>>10&&g<((a.C[e]&gS)>>10!=1&&(a.C[e]&gS)>>10!=2?-1:(a.C[e]&hS)>>12)&&(g=(a.C[e]&gS)>>10!=1&&(a.C[e]&gS)>>10!=2?-1:(a.C[e]&hS)>>12);d=g+1;if(d>=32)return}a.s[b]&=mS;a.s[b]|=c<<19|d<<21}a.Q&=3}
	function vj(a,b,c,d){var e,f,g;if(c==0){a.C[b]&=-130049;a.C[b]|=0}else{if(d>=32)return;if(d==-1){g=-1;for(f=0;f<a.o;f++)c==(a.s[f]&KR)>>19&&g<((a.s[f]&KR)>>19!=1&&(a.s[f]&KR)>>19!=2?-1:(a.s[f]&fS)>>21)&&(g=(a.s[f]&KR)>>19!=1&&(a.s[f]&KR)>>19!=2?-1:(a.s[f]&fS)>>21);for(e=0;e<a.p;e++)e!=b&&c==(a.C[e]&gS)>>10&&g<((a.C[e]&gS)>>10!=1&&(a.C[e]&gS)>>10!=2?-1:(a.C[e]&hS)>>12)&&(g=(a.C[e]&gS)>>10!=1&&(a.C[e]&gS)>>10!=2?-1:(a.C[e]&hS)>>12);d=g+1;if(d>=32)return}a.C[b]&=-130049;a.C[b]|=c<<10|d<<12}a.Q&=3}
	function kg(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o;for(i=d+1;i<a.j.g.length;i++){if(i!=d&&a.e[b][i]&&a.e[c][i]){g=JC(KD,jR,6,2,15,1);g[0]=c;g[1]=b;return g}}o=JC(KD,jR,6,a.b,15,1);k=JC(KD,jR,6,a.b,15,1);j=JC(KD,jR,6,a.b,15,1);f=0;l=0;j[0]=b;k[b]=1;while(f<=l){for(m=0;m<a.d[j[f]].length;m++){e=a.d[j[f]][m];if(e==c){if(f==0)continue;h=k[j[f]]+1;g=JC(KD,jR,6,h,15,1);g[0]=e;g[1]=j[f];for(n=2;n<h;n++)g[n]=o[g[n-1]];return g}if(k[e]==0&&a.c[e]!=-3){k[e]=k[j[f]]+1;j[++l]=e;o[e]=j[f]}}++f}return null}
	function On(a){var b,c,d,e,f,g;f='<svg id="'+(a.g!=null?a.g:'mol'+En)+IR+'xmlns="http://www.w3.org/2000/svg" version="1.1" '+'width="'+a.k+'px" '+'height="'+a.f+'px" '+'viewBox="0 0 '+a.k+' '+a.f+'">\n';g='<style> #'+(a.g!=null?a.g:'mol'+En)+' {pointer-events:none; } '+' #'+(a.g!=null?a.g:'mol'+En)+' .event '+' { pointer-events:all;} '+' <\/style>\n';f+='\t';f+=g;for(e=new JN(a.b);e.a<e.c.a.length;){d=IN(e);Pn(a,d)}for(c=new JN(a.a);c.a<c.c.a.length;){b=IN(c);Pn(a,b)}return f+a.c.a+'<\/svg>'}
	function to(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q;p=JC(uE,QQ,25,c,0,1);g=JC(KD,jR,6,c,15,1);j=JC(KD,jR,6,c,15,1);f=JC(KD,jR,6,a.o,15,1);for(e=0;e<a.o;e++)b[e]!=-1&&(f[e]=g[b[e]]++);for(i=0;i<a.p;i++){n=b[a.B[0][i]];o=b[a.B[1][i]];n==o&&n!=-1&&++j[n]}for(q=0;q<c;q++){p[q]=new Do(g[q],j[q]);mo(a,p[q])}for(d=0;d<a.o;d++)b[d]!=-1&&kh(a,p[b[d]],d,0,0);for(h=0;h<a.p;h++){n=b[a.B[0][h]];o=b[a.B[1][h]];n==o&&n!=-1&&lh(a,p[n],h,0,0,f,false)}for(l=0,m=p.length;l<m;++l){k=p[l];Ui(k,1);Ui(k,2)}return p}
	function VA(a,b){var c,d,e,f,g,h,i,j,k;c=CH(a);h=!a?1:(TA[0]*(a.c>>16&255)+TA[1]*(a.c>>8&255)+TA[2]*(a.c&255))/255;if(h==0)return new DH(h,h,h,c[3]);d=b/(!a?1:(TA[0]*(a.c>>16&255)+TA[1]*(a.c>>8&255)+TA[2]*(a.c&255))/255);k=0;j=0;for(f=0;f<3;f++){c[f]*=d;if(c[f]<1){j+=TA[f]}else{k+=(c[f]-1)*TA[f];c[f]=1}}if(k!=0){i=0;for(g=0;g<3;g++){if(c[g]<1){c[g]+=k/j;if(c[g]>1){i+=(c[g]-1)*TA[g];c[g]=1}}}if(i!=0){for(e=0;e<3;e++){if(c[e]<1){c[e]+=i/TA[e];c[e]>1&&(c[e]=1)}}}}return new DH(c[0],c[1],c[2],c[3])}
	function vp(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;c=Vh(a.f,0,b);d=Vh(a.f,1,b);g=JC(KD,jR,6,a.f.o,15,1);h=JC(KD,jR,6,a.f.o,15,1);i=JC(KD,jR,6,a.f.o,15,1);j=JC(KD,jR,6,a.f.o,15,1);g[0]=c;g[1]=d;h[1]=b;i[c]=1;i[d]=2;j[0]=-1;j[1]=0;f=1;k=1;while(f<=k){for(l=0;l<gk(a.f,g[f]);l++){e=tk(a.f,g[f],l);if(f>1&&e==c){o=new eq(i[g[f]]);h[0]=vk(a.f,g[f],l);m=f;for(n=0;n<o.a.length;n++){o.a[n]=g[m];o.b[n]=h[m];m=j[m]}return o}if(i[e]==0&&bl(a.f,e)){g[++k]=e;h[k]=vk(a.f,g[f],l);i[e]=i[g[f]]+1;j[k]=f}}++f}return null}
	function Tk(a){var b,c,d,e,f,g,h,i,j,k,l;h=fk(a);i=a.o;do --i;while(i>=0&&h[i]);for(b=0;b<i;b++){if(h[b]){Lj(a,b,i);k=h[b];h[b]=h[i];h[i]=k;do --i;while(h[i])}}a.d=i+1;if(a.o==a.d){a.e=a.p;return}g=JC(NG,nR,6,a.p,16,1);for(f=0;f<a.p;f++){c=a.B[0][f];d=a.B[1][f];(h[c]||h[d])&&(g[f]=true)}j=a.p;do --j;while(j>=0&&g[j]);for(e=0;e<j;e++){if(g[e]){l=a.B[0][e];a.B[0][e]=a.B[0][j];a.B[0][j]=l;l=a.B[1][e];a.B[1][e]=a.B[1][j];a.B[1][j]=l;l=a.F[e];a.F[e]=a.F[j];a.F[j]=l;g[e]=false;do --j;while(g[j])}}a.e=j+1}
	function vd(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;k=JC(NG,nR,6,16,16,1);l=JC(NG,nR,6,16,16,1);c=JC(ID,mR,6,16,15,1);f=JC(ID,mR,6,2,15,1);d=0;for(j=0;j<2;j++){e=Vh(a.H,j,b);for(m=0;m<uk(a.H,e);m++){h=vk(a.H,e,m);if(h==b)continue;if(d==4)return 0;k[d]=Yk(a.H,h);l[d]=cl(a.H,h);c[d++]=Uh(a.H,e,tk(a.H,e,m))}}f[0]=Uh(a.H,Vh(a.H,0,b),Vh(a.H,1,b));if(f[0]<0){f[1]=f[0]+sR;g=false}else{f[1]=f[0];f[0]=f[1]-sR;g=true}n=0;for(i=0;i<d;i++){k[i]?(o=20):l[i]?(o=17):(o=16);c[i]>f[0]&&c[i]<f[1]?(n-=o):(n+=o)}return g?-n:n}
	function hn(a,b){var c,d,e,f,g,h,i,j,k,l;f=null;i=null;g=null;no(a.d,a.G);a.i=JC(KD,jR,6,a.d.d,15,1);for(d=0;d<a.d.d;d++)a.i[d]=uk(a.d,d);if(a.j!=0){j=new Do(a.d.o,a.d.p);l=JC(NG,nR,6,a.d.o,16,1);for(e=0;e<a.d.o;e++)l[e]=!a.u[e];$j(a.d,j,l,true,null);no(j,a.G);jn(a,j,b);f=a.e;i=a.g;g=a.f;k=0;for(c=0;c<a.d.d;c++)a.u[c]||(a.i[c]=uk(j,k++))}jn(a,a.d,b);if(a.j!=0){k=0;for(c=0;c<a.d.o;c++){if(!a.u[c]){a.e[c]=f[k];a.f[c]=g[k++]}}k=0;for(h=0;h<a.d.p;h++){!a.u[Vh(a.d,0,h)]&&!a.u[Vh(a.d,1,h)]&&(a.g[h]=i[k++])}}}
	function Rq(a,b){var c,d,e,f,g,h,i,j,k;c=new $q;if(!Qq){bN(c.a,new Yq(vU,2));return -999}bN(c.a,new Yq('Found sub-structure fragments and their contributions:',2));bN(c.a,new Yq('(yellow atoms carry at least one more substituent)',2));j=0;i=0;f=0;k=new nn;e=new Co;for(g=0;g<Pq.a.a.length;g++){Fl(new Hl(false),e,Uq(Pq,g));fn(k,b);en(k,e);if(Xm(k,k.b)>0){h=Vq(Pq,g);if(h<-1)j+=h;else{i+=h;++f}Zq(c,Uq(Pq,g),1);bN(c.a,new Yq(''+h,3))}}if(f==0)return -1;d=j+i/$wnd.Math.sqrt(f);d=d+0.0625*(f-40);a.a=c;return d}
	function Je(b,c){var d,e,f,g,h,i,j;if(b.W[c]==1||b.W[c]==2){i=false;if(kk(b.L,c)==2){try{for(h=0;h<2;h++){d=tk(b.L,c,h);if(uk(b.L,d)==3){f=JC(KD,jR,6,2,15,1);g=0;for(j=0;j<uk(b.L,d);j++)wk(b.L,d,j)==1&&(f[g++]=tk(b.L,d,j));b.c[f[0]]>b.c[f[1]]^Ke(b,d,f[0],f[1])&&(i=!i)}}}catch(a){a=PG(a);if(yD(a,13)){b.R[c]=3;return}else throw QG(a)}}else{try{e=Me(b,c)}catch(a){a=PG(a);if(yD(a,13)){b.R[c]=3;return}else throw QG(a)}for(h=1;h<e.length;h++)for(j=0;j<h;j++)b.c[e[h]]<b.c[e[j]]&&(i=!i)}b.W[c]==1^i?(b.R[c]=1):(b.R[c]=2)}}
	function $e(a){var b,c,d,e,f,g,h,i,j,k,l,m,n;h=null;n=Mk(a.L);for(k=0;k<n.i.a.length;k++){if(n.e[k]){e=0;l=eN(n.i,k);for(c=0,d=l.length;c<d;++c){b=l[c];hf(a,b)&&++e}if(e!=0){m=eN(n.j,k);h==null&&(h=JC(NG,nR,6,a.L.e,16,1));if(e==l.length){i=-1;j=WQ;for(f=0;f<l.length;f++){if(j>a.t[m[f]]){j=a.t[m[f]];i=f}}while(e>0){h[m[i]]=true;i=uf(i+2,l.length);e-=2}}else{g=0;while(hf(a,l[g]))++g;while(!hf(a,l[g]))g=uf(g+1,l.length);while(e>0){h[m[g]]=true;g=uf(g+2,l.length);e-=2;while(!hf(a,l[g]))g=uf(g+1,l.length)}}}}}return h}
	function Zf(a){var b,c,d,e,f,g,h,i;if(a.g!=null){g=new sg(a);a.b=new pN;for(e=0;e<a.g.length;e++){d=mg(g,e);if(d==0){ig(g,e);h=Qf(a,e,2);b=Qf(a,e,1);c=Pf(a,e);if(h==1&&b==1&&!c){_f(a,e,g.a+g.f++);bN(a.b,new Og(e,1,-1,-1))}if(h>0){if(c){$f(a,e,g.i+g.g++,2);++h}bN(a.b,new Og(e,1,-1,-1))}else if(b>0){c&&$f(a,e,g.a+g.f++,1);bN(a.b,new Og(e,1,-1,-1))}else if(c){$f(a,e,g.a+g.f++,1);bN(a.b,new Og(e,1,-1,-1))}}else if(d==1){if(Pf(a,e)){f=lg(g,e);i=ng(g,e);bN(a.b,new Og(e,2,f,i))}else{ig(g,e);bN(a.b,new Og(e,1,-1,-1))}}}}}
	function mr(b){var c,d,e,f,g,h,i;e=new $q;bN(e.a,new Yq('Solubility values are estimated applying an atom-type based increment system.',2));bN(e.a,new Yq(tU,2));bN(e.a,new Yq(uU,2));bN(e.a,new Yq('Base value = -0.530',2));d=JC(KD,jR,6,jr.length,15,1);if(b){for(c=0;c<b.d;c++){i=-1;try{i=ee(b,c,2144)}catch(a){a=PG(a);if(!yD(a,13))throw QG(a)}for(h=0;h<jr.length;h++){if(VG(ir[h],i)){++d[h];break}}}}f=new RK('#0.000');for(g=0;g<jr.length;g++)d[g]!=0&&Zq(e,''+d[g]+' * '+QK(f,jr[g])+'   AtomType: 0x'+KJ(ir[g]),2);return e}
	function _j(a,b,c,d,e){var f,g,h,i,j;d&&no(a,3);b.t=null;a.I&&Cj(b,true);e==null&&(e=JC(KD,jR,6,a.o,15,1));b.o=0;for(f=0;f<a.o;f++){e[f]=-1;for(j=0;j<a.g[f];j++){if(c[a.i[f][j]]){e[f]=kh(a,b,f,0,0);break}}}b.p=0;for(i=0;i<a.p;i++)if(c[i]){lh(a,b,i,0,0,e,d)}else{g=a.B[0][i];h=a.B[1][i];if(e[g]==-1^e[h]==-1){if(a.q[g]!=0&&a.q[h]!=0&&a.q[g]<0^a.q[h]<0){e[g]!=-1&&(b.q[e[g]]+=a.q[g]<0?1:-1);e[h]!=-1&&(b.q[e[h]]+=a.q[h]<0?1:-1)}}}nh(a,b);!!a.b&&(b.Q=0);b.Q=0;Ui(b,1);Ui(b,2);b.o!=a.o&&Cj(b,true);d&&Od(new Vd(b),null,false);return e}
	function Ad(a,b){if(a.G)return;if(b==-10){a.w=-999;b=a.K}if(b==a.w)return;if(a.w==-8&&b!=-9)return;b==-8&&(a.J=a.w);b==-9&&(b=a.J);a.w=b;switch(b){case 0:Ln(a,(AH(),xH));break;case -6:Ln(a,a.A);break;case -4:Ln(a,a.I);break;case -2:Ln(a,a.r);break;case -3:Ln(a,a.s);break;case -7:Ln(a,a.C);break;case -8:Ln(a,a.D);break;case 64:Ln(a,Bc);break;case 128:Ln(a,Hc);break;case 256:Ln(a,Fc);break;case 192:Ln(a,Ec);break;case 320:Ln(a,Gc);break;case 384:Ln(a,Cc);break;case 448:Ln(a,Dc);break;case 1:Ln(a,(AH(),yH));break;default:Ln(a,(AH(),xH));}}
	function Ao(a){var b,c,d,e,f,g;ul(a);no(a,15);for(d=0;d<a.d;d++){if(((a.s[d]&KR)>>19==1||(a.s[d]&KR)>>19==2)&&((a.s[d]&kS)==0||(a.s[d]&3)==3))throw QG(new pB(yS));if((a.s[d]&_R)!=0)throw QG(new pB('Over- or under-specified stereofeature or more than one racemic type bond'));if(((a.s[d]&3)==1||(a.s[d]&3)==2)&&a.k[d]==0){b=JC(ID,mR,6,a.g[d],15,1);for(f=0;f<a.g[d];f++)b[f]=Uh(a,d,a.f[d][f]);for(e=1;e<a.g[d];e++)if(!Ki(a,a.i[d][e],d))for(g=0;g<e;g++)if(!Ki(a,a.i[d][g],d)){c=$wnd.Math.abs(Sj(b[e],b[g]));if(c<0.08||c>pS)throw QG(new pB(zS))}}}}
	function wf(a,b){var c;if(a.o>fR)throw QG(new rJ('Cannot canonize a molecule having more than 65535 atoms'));if(a.p>fR)throw QG(new rJ('Cannot canonize a molecule having more than 65535 bonds'));this.L=a;this.K=b;no(this.L,3);te(this);this._=(b&64)!=0;if(!this._){for(c=0;c<this.L.d;c++){if(Qh(this.L,c)!=0){this._=true;break}}}this.W=JC(GD,$R,6,this.L.d,15,1);this.X=JC(NG,nR,6,this.L.d,16,1);this.$=JC(NG,nR,6,this.L.d,16,1);this.k=JC(GD,$R,6,this.L.e,15,1);this.o=JC(NG,nR,6,this.L.e,16,1);this.n=JC(NG,nR,6,this.L.e,16,1);xe(this);Ce(this);Be(this)}
	function eD(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;c=a.l&8191;d=a.l>>13|(a.m&15)<<9;e=a.m>>4&8191;f=a.m>>17|(a.h&255)<<5;g=(a.h&1048320)>>8;h=b.l&8191;i=b.l>>13|(b.m&15)<<9;j=b.m>>4&8191;k=b.m>>17|(b.h&255)<<5;l=(b.h&1048320)>>8;B=c*h;C=d*h;D=e*h;F=f*h;G=g*h;if(i!=0){C+=c*i;D+=d*i;F+=e*i;G+=f*i}if(j!=0){D+=c*j;F+=d*j;G+=e*j}if(k!=0){F+=c*k;G+=d*k}l!=0&&(G+=c*l);n=B&uS;o=(C&511)<<13;m=n+o;q=B>>22;r=C>>9;s=(D&262143)<<4;t=(F&31)<<17;p=q+r+s+t;v=D>>18;w=F>>5;A=(G&4095)<<8;u=v+w+A;p+=m>>22;m&=uS;u+=p>>22;p&=uS;u&=DU;return RC(m,p,u)}
	function Ye(a){var b,c,d;for(b=0;b<a.L.d;b++){pi(a.L,b)^a.W[b]==3&&Hj(a.L,b);(Fh(a.L,b)==1||Fh(a.L,b)==2)&&(!a.H[b]||a.W[b]==3)&&Hj(a.L,b)}for(d=0;d<a.L.p;d++)Ji(a.L,d)&&!of(a,d)&&Hj(a.L,Vh(a.L,0,d));for(c=0;c<a.L.e;c++){if(bi(a.L,c)==2){if(zi(a.L,c)&&(a.k[c]==1||a.k[c]==2)){a.k[c]=3;Aj(a.L,c,26)}if(a.k[c]==3&&!a.n[c]){if(ei(a.L,c)!=26){Hj(a.L,Vh(a.L,0,c));Hj(a.L,Vh(a.L,1,c))}}}if(ei(a.L,c)==1&&a.k[c]==3){Hj(a.L,Vh(a.L,0,c));Hj(a.L,Vh(a.L,1,c))}if(($h(a.L,c)==1||$h(a.L,c)==2)&&(ei(a.L,c)!=1||a.k[c]!=1&&a.k[c]!=2)){Hj(a.L,Vh(a.L,0,c));Hj(a.L,Vh(a.L,1,c))}}}
	function SC(a,b,c){var d,e,f,g,h,i;if(b.l==0&&b.m==0&&b.h==0){throw QG(new kI)}if(a.l==0&&a.m==0&&a.h==0){c&&(OC=RC(0,0,0));return RC(0,0,0)}if(b.h==_Q&&b.m==0&&b.l==0){return TC(a,c)}i=false;if(b.h>>19!=0){b=fD(b);i=true}g=ZC(b);f=false;e=false;d=false;if(a.h==_Q&&a.m==0&&a.l==0){e=true;f=true;if(g==-1){a=QC((sD(),oD));d=true;i=!i}else{h=iD(a,g);i&&XC(h);c&&(OC=RC(0,0,0));return h}}else if(a.h>>19!=0){f=true;a=fD(a);d=true;i=!i}if(g!=-1){return UC(a,g,i,f,c)}if(cD(a,b)<0){c&&(f?(OC=fD(a)):(OC=RC(a.l,a.m,a.h)));return RC(0,0,0)}return VC(d?a:RC(a.l,a.m,a.h),b,i,f,e,c)}
	function eJ(a){var b,c,d,e,f,g;if(isNaN(a)){return {l:0,m:0,h:524160}}g=false;if(a==0){return 1/a==-Infinity?{l:0,m:0,h:_Q}:0}if(a<0){g=true;a=-a}if(!isNaN(a)&&!isFinite(a)){return g?{l:0,m:0,h:1048320}:{l:0,m:0,h:524032}}c=0;if(a<1){b=512;for(d=0;d<10;++d,b>>=1){if(a<(hJ(),fJ)[d]&&c-b>=-1023){a*=gJ[d];c-=b}}if(a<1&&c-1>=-1023){a*=2;--c}}else if(a>=2){b=512;for(d=0;d<10;++d,b>>=1){if(a>=(hJ(),gJ)[d]){a*=fJ[d];c+=b}}}c>-1023?(a-=1):(a*=0.5);e=WG(a*1048576);a-=dH(e)*9.5367431640625E-7;f=WG(a*4503599627370496);e=_G(e,c+1023<<20);g&&(e=_G(e,2147483648));return _G(aH(e,32),f)}
	function cd(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o;m=false;e.a=0;e.b=0;d>0?(f=pR):(f=qR);o=Uh(a.H,b,c);for(k=0;k<uk(a.H,b);k++){g=vk(a.H,b,k);h=o;Vh(a.H,0,g)==b?(l=Vh(a.H,1,g)):(l=Vh(a.H,0,g));if(l==c)continue;n=Uh(a.H,b,l);o<n&&(h+=rR);i=h-n;if(d>0){i<sR&&(m=true);i>pR&&(i=pR);i<0.523598776&&(i=0.523598776);if(i<=f){f=i;j=a.N*$wnd.Math.tan(i-tR)/2;e.a=-(j*$wnd.Math.sin(h));e.b=-(j*$wnd.Math.cos(h))}}else{i>=sR&&(m=true);i<qR&&(i=qR);i>5.759586531&&(i=5.759586531);if(i>=f){f=i;j=a.N*$wnd.Math.tan(4.712388981-i)/2;e.a=-(j*$wnd.Math.sin(h));e.b=-(j*$wnd.Math.cos(h))}}}return m}
	function bo(a){var b,c,d,e,f,g,h,i,j,k,l,m,n;no(a.b,3);l=false;m=JC(KD,jR,6,2,15,1);n=JC(KD,jR,6,2,15,1);k=JC(KD,jR,6,2,15,1);for(d=0;d<a.b.e;d++){if(!fl(a.b,d)&&ei(a.b,d)==2){for(g=0;g<2;g++){m[g]=-1;k[g]=-1;b=Vh(a.b,g,d);for(j=0;j<uk(a.b,b);j++){e=vk(a.b,b,j);if(e!=d){if(ei(a.b,e)==17||ei(a.b,e)==9){m[g]=tk(a.b,b,j);n[g]=e}else{k[g]=tk(a.b,b,j)}}}if(m[g]==-1)break}if(m[0]!=-1&&m[1]!=-1){i=ei(a.b,n[0])!=ei(a.b,n[1]);h=false;for(f=0;f<2;f++){k[f]!=-1&&k[f]<m[f]&&(h=!h)}xj(a.b,d,i^h?2:1,false);l=true}}}for(c=0;c<a.b.e;c++)(ei(a.b,c)==17||ei(a.b,c)==9)&&Aj(a.b,c,1);return l}
	function qe(a,b,c){var d,e,f,g,h,i;d=JC(KD,jR,6,4,15,1);for(h=0;h<gk(a.L,b);h++)d[h]=tk(a.L,b,c[h]);gk(a.L,b)==3&&(d[3]=b);e=HC(ID,[QQ,mR],[14,6],15,[3,3],2);for(g=0;g<3;g++){e[g][0]=Oh(a.L,d[g+1])-Oh(a.L,d[0]);e[g][1]=Ph(a.L,d[g+1])-Ph(a.L,d[0]);e[g][2]=Qh(a.L,d[g+1])-Qh(a.L,d[0])}i=JC(ID,mR,6,3,15,1);i[0]=e[0][1]*e[1][2]-e[0][2]*e[1][1];i[1]=e[0][2]*e[1][0]-e[0][0]*e[1][2];i[2]=e[0][0]*e[1][1]-e[0][1]*e[1][0];f=(e[2][0]*i[0]+e[2][1]*i[1]+e[2][2]*i[2])/($wnd.Math.sqrt(e[2][0]*e[2][0]+e[2][1]*e[2][1]+e[2][2]*e[2][2])*$wnd.Math.sqrt(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]));return f>0?1:2}
	function mQ(a,b,c){if(c<128){a[b]=(c&127)<<24>>24;return 1}else if(c<uR){a[b++]=(c>>6&31|192)<<24>>24;a[b]=(c&63|128)<<24>>24;return 2}else if(c<eR){a[b++]=(c>>12&15|224)<<24>>24;a[b++]=(c>>6&63|128)<<24>>24;a[b]=(c&63|128)<<24>>24;return 3}else if(c<CR){a[b++]=(c>>18&7|240)<<24>>24;a[b++]=(c>>12&63|128)<<24>>24;a[b++]=(c>>6&63|128)<<24>>24;a[b]=(c&63|128)<<24>>24;return 4}else if(c<jS){a[b++]=(c>>24&3|248)<<24>>24;a[b++]=(c>>18&63|128)<<24>>24;a[b++]=(c>>12&63|128)<<24>>24;a[b++]=(c>>6&63|128)<<24>>24;a[b]=(c&63|128)<<24>>24;return 5}throw QG(new rJ('Character out of range: '+c))}
	function WA(a,b){UA();var c,d,e,f,g,h,i,j,k,l,m;c=!b?1:(TA[0]*(b.c>>16&255)+TA[1]*(b.c>>8&255)+TA[2]*(b.c&255))/255;g=!a?1:(TA[0]*(a.c>>16&255)+TA[1]*(a.c>>8&255)+TA[2]*(a.c&255))/255;e=$wnd.Math.abs(c-g);if(e>lR)return a;h=JC(JD,RR,6,3,15,1);AH();HH((b.c>>16&255)/255,(b.c>>8&255)/255,(b.c&255)/255,h);i=JC(JD,RR,6,3,15,1);HH((a.c>>16&255)/255,(a.c>>8&255)/255,(a.c&255)/255,i);j=$wnd.Math.abs(i[0]-h[0]);j>0.5&&(j=1-j);m=1-$wnd.Math.max(i[1],h[1]);d=$wnd.Math.abs(g+c-1);k=$wnd.Math.cos(sR*j*3);l=lR*$wnd.Math.max(m,$wnd.Math.max(d,k));if(e>l)return a;f=g>c?g+l>1:g-l>0;return VA(a,f?c-l:c+l)}
	function xm(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p;e=JC(KD,XR,7,a.i.a.length,0,2);for(i=0;i<a.i.a.length;i++){e[i]=JC(KD,jR,6,eN(a.i,i).length,15,1);for(j=0;j<eN(a.i,i).length;j++)e[i][j]=-1}o=JC(KD,jR,6,a.g.e,15,1);for(m=0;m<a.j.a.length;m++){n=eN(a.j,m);if(n.length==3||n.length>=5&&n.length<=7){for(h=0;h<n.length;h++){g=n[h];if(uk(a.g,Vh(a.g,0,g))==3&&uk(a.g,Vh(a.g,1,g))==3){if(o[g]>0){e[o[g]>>>16][o[g]&32767]=m;e[m][h]=o[g]>>>16}else{o[g]=(m<<16)+32768+h}}}}}f=JC(NG,nR,6,a.i.a.length,16,1);p=0;k=-1;while(p>k){k=p;for(l=0;l<a.i.a.length;l++){if(!f[l]){if(wm(a,l,e,f,b,c,d)){f[l]=true;++p}}}}}
	function Wf(a,b,c){var d,e,f,g,h;if(b==c)return false;if(a.a[b]!==a.a[c])return false;if(a.o[b]!=0){if(a.o[b]==3||a.o[c]==3)return false;if(a.p[b]^a.o[b]!==a.o[c])return false;if(a.k[b]!==a.k[c]||a.j[b]!==a.j[c])return false}d=rk(a.i,b,c);if(d!=-1){if(bi(a.i,d)==1&&a.c[d]!=0)return false;if(bi(a.i,d)==2&&a.c[d]==2)return false}if(kk(a.i,b)==1&&!Xk(a.i,b)){e=-1;for(h=0;h<uk(a.i,b);h++){if(tk(a.i,b,h)!=c&&wk(a.i,b,h)==2){e=vk(a.i,b,h);break}}f=-1;for(g=0;g<uk(a.i,c);g++){if(tk(a.i,c,g)!=b&&wk(a.i,c,g)==2){f=vk(a.i,c,g);break}}if(e!=-1&&a.c[e]!=0&&a.d[e]^a.c[e]===a.c[f])return false}return true}
	function eh(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o;i=JC(KD,jR,6,2,15,1);h=JC(ID,mR,6,2,15,1);i[0]=a.B[0][b];i[1]=a.B[1][b];if(Hk(a,i[0])>3)return false;if(Hk(a,i[1])>3)return false;f=0;e=JC(ID,mR,6,4,15,1);for(l=0;l<a.p;l++){if(l==b)continue;for(m=0;m<2;m++){for(n=0;n<2;n++){if(a.B[m][l]===i[n]){if(f==4){f=5;break}e[f++]=Uh(a,i[n],a.B[1-m][l])}}if(f==5)break}if(f==5)break}if(f==5)return false;h[0]=Uh(a,i[0],i[1]);if(h[0]<0){h[1]=h[0]+sR;g=0}else{h[1]=h[0];h[0]=h[1]-sR;g=1}o=0;for(k=0;k<f;k++){e[k]>h[0]&&e[k]<h[1]?--o:++o}g=o>0?1-g:g;j=sR*(c-2)/c;Ni(a,i[g],c-1,i[1-g],d,h[o>0?0:1]+sR-j,sR-j);a.Q=0;return true}
	function fo(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(a.b)return 3;a.c!=-1&&(a.c=b[a.c]);for(g=0;g<a.g;g++)a.f[g]!=WQ&&(a.f[g]=b[a.f[g]]);if(a.c==-1&&a.d==0){n=WQ;m=-1;for(h=0;h<a.g;h++){if(n>a.j[h]){n=a.j[h];m=h}}a.c=a.f[m];for(i=m+1;i<a.g;i++){a.f[i-1]=a.f[i];a.j[i-1]=a.j[i];a.i[i-1]=a.i[i]}--a.g}p=(a.c==-1?0:1)+a.d+a.g;if(p>4||p<3)return 3;c=a.c==-1&&a.d==1||a.c!=-1&&dl(a.k.b,a.c);e=-1;for(j=0;j<a.g;j++){if(a.i[j]){if(e!=-1||c)return 3;e=j}}l=false;if(e!=-1)for(k=0;k<a.g;k++)!a.i[k]&&a.f[e]<a.f[k]&&(l=!l);d=false;if(a.c!=-1&&!c)for(f=0;f<a.g;f++)a.c<a.f[f]&&(d=!d);o=a.e^go(a.f,a.j,a.g)^d^l?2:1;return o}
	function mf(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;i=JC(KD,jR,6,32,15,1);j=0;for(d=0;d<a.L.d;d++){if((a.S[d]==1||a.S[d]==2)&&a.U[d]==b){h=a.T[d];if(i[h]<a.c[d]){i[h]==0&&++j;i[h]=a.c[d]}}}for(f=0;f<a.L.e;f++){if((a.g[f]==1||a.g[f]==2)&&a.j[f]==b&&ei(a.L,f)==1){h=a.i[f];o=QJ(a.c[Vh(a.L,0,f)],a.c[Vh(a.L,1,f)]);if(i[h]<o){i[h]==0&&++j;i[h]=o}}}g=JC(GD,$R,6,32,15,1);for(k=0;k<j;k++){m=-1;n=0;for(l=0;l<32;l++){if(n<i[l]){n=i[l];m=l}}i[m]=0;g[m]=k<<24>>24}for(c=0;c<a.L.d;c++)(a.S[c]==1||a.S[c]==2)&&a.U[c]==b&&(a.T[c]=g[a.T[c]]);for(e=0;e<a.L.e;e++)(a.g[e]==1||a.g[e]==2)&&a.j[e]==b&&ei(a.L,e)==1&&(a.i[e]=g[a.i[e]])}
	function Be(a){var b,c,d,e,f,g,h;a.P=JC(NG,nR,6,a.L.d,16,1);a.O=JC(NG,nR,6,a.L.e,16,1);if((a.K&6)!=0){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],28,a.c[b]<<12)}}if(a.N<a.L.d){f=0;for(b=0;b<a.L.d;b++)oe(a,b,true)&&++f;for(e=0;e<a.L.e;e++)je(a,e,true)&&++f}(a.K&6)!=0&&(a.N=Ae(a));if((a.K&1)!=0){a.d=JC(KD,jR,6,a.L.d,15,1);for(b=0;b<a.L.d;b++)a.d[b]=a.c[b]}while(a.N<a.L.d){for(c=0;c<a.L.d;c++){Kf(a.b[c],c);Hf(a.b[c],17,2*a.c[c])}h=JC(KD,jR,6,a.N+1,15,1);for(d=0;d<a.L.d;d++)++h[a.c[d]];g=1;while(h[g]==1)++g;for(b=0;b<a.L.d;b++){if(a.c[b]==g){If(a.b[b],1);break}}a.N=Ae(a);ze(a);!!a.J&&Yf(a.J,a.c)}ze(a);ve(a);Ye(a)}
	function Rf(a){var b,c,d,e,f,g,h,i,j,k,l,m;k=new pN;for(l=0;l<a.i.d;l++){if(kk(a.i,l)<2||uk(a.i,l)>2){for(g=1;g<uk(a.i,l);g++){b=tk(a.i,l,g);for(j=0;j<g;j++){c=tk(a.i,l,j);Wf(a,b,c)&&Of(a,bg(a,b,c),k)}}}}for(m=0;m<a.i.e;m++){if(a.c[m]!=0){if(bi(a.i,m)!=2||a.c[m]!=2)continue}b=Vh(a.i,0,m);c=Vh(a.i,1,m);Wf(a,b,c)&&Of(a,bg(a,b,c),k)}for(h=k.a.length-1;h>=0;h--){d=(tQ(h,k.a.length),k.a[h]);e=false;for(j=0;j<d.length;j++){if(a.f[d[j]]){e=true;break}}e||jN(k,d)}a.g=oN(k,HC(KD,[XR,jR],[7,6],15,[0,0],2));eO(a.g,new fg);a.e=JC(NG,nR,6,a.i.d,16,1);for(f=0;f<a.g.length;f++)for(i=0;i<a.g[f].length;i++)a.e[a.g[f][i]]=true}
	function ie(a,b,c){var d,e,f,g,h,i,j;if(!Zk(a.L,b))return false;d=Vh(a.L,0,b);e=Vh(a.L,1,b);g=new Qg(a.L,a.c,d,e);if(g.f&&!c)return false;h=new Qg(a.L,a.c,e,d);if(h.f&&!c)return false;if(g.f&&h.f)return false;if(c){g.f&&(a.O[b]=gf(a,e));h.f&&(a.O[b]=gf(a,d))}i=Pg(g);j=Pg(h);if(i==-1||j==-1||(i+j&1)==0){c||(a.k[b]=3);return true}f=0;switch(i+j){case 3:case 7:f=1;break;case 5:f=2;}if(c){if(a.Q&&(a.K&2)!=0||!a.Q&&(a.K&4)!=0){if(g.f){if(f==2){If(a.b[g.b],4);If(a.b[g.d],1)}else{If(a.b[g.b],1);If(a.b[g.d],4)}}if(h.f){if(f==2){If(a.b[h.b],4);If(a.b[h.d],1)}else{If(a.b[h.b],1);If(a.b[h.d],4)}}}}else{a.k[b]=f}return true}
	function QA(a){if(!a)return 0;var b=0;a.inflateToMaxAVBL&&(b|=eR);a.inflateToHighResAVBL&&(b|=_R);a.chiralTextBelowMolecule&&(b|=0);a.chiralTextAboveMolecule&&(b|=QR);a.chiralTextOnFrameTop&&(b|=_Q);a.chiralTextOnFrameBottom&&(b|=PR);a.noTabus&&(b|=1);a.showAtomNumber&&(b|=2);a.showBondNumber&&(b|=4);a.highlightQueryFeatures&&(b|=8);a.showMapping&&(b|=16);a.suppressChiralText&&(b|=32);a.suppressCIPParity&&(b|=64);a.suppressESR&&(b|=128);a.showSymmetrySimple&&(b|=256);a.showSymmetryDiastereotopic&&(b|=512);a.showSymmetryEnantiotopic&&(b|=wR);a.noImplicitAtomLabelColors&&(b|=uR);a.noStereoProblem&&(b|=cR);return b}
	function xp(a,b){var c,d,e,f,g,h,i;!a.g&&(a.g=new wO);(a.e&1)!=0&&ll(b);a.f=b;no(a.f,3);a.c=new pN;a.a=JC(NG,nR,6,a.f.o,16,1);a.b=JC(NG,nR,6,a.f.p,16,1);a.d=JC(NG,nR,6,a.f.p,16,1);for(e=0;e<a.f.p;e++)a.d[e]=ei(a.f,e)!=32;a.i=JC(KD,jR,6,a.f.o,15,1);for(c=0;c<a.f.o;c++)a.i[c]=Ah(a.f,c);if((a.e&6)!=0){for(d=0;d<a.f.p;d++)a.d[d]=!a.d[d]&&Ci(a.f,Vh(a.f,0,d))&&Ci(a.f,Vh(a.f,1,d));Gp(a)}Ip(a);Dp(a);Fp(a);Dp(a);for(g=new JN(a.c);g.a<g.c.a.length;){f=IN(g);qq(f)}gp(a);Kp(a);Jp(a);Cp(a);Ap(a);Ep(a);for(h=0;h<a.c.a.length;h++){f=eN(a.c,h);for(i=0;i<f.e.length;i++){oj(a.f,f.e[i],f.a[i]);pj(a.f,f.e[i],f.b[i]);qj(a.f,f.e[i],0)}}}
	function bC(a,b){var c,d,e,f,g,h,i,j,k;if(b.length==0){return a.rb(RQ,OQ,-1,-1)}k=pK(b);gK(k.substr(0,3),'at ')&&(k=k.substr(3,k.length-3));k=k.replace(/\[.*?\]/g,'');g=k.indexOf('(');if(g==-1){g=k.indexOf('@');if(g==-1){j=k;k=''}else{j=pK(k.substr(g+1,k.length-(g+1)));k=pK(k.substr(0,g))}}else{c=k.indexOf(')',g);j=k.substr(g+1,c-(g+1));k=pK(k.substr(0,g))}g=iK(k,rK(46));g!=-1&&(k=k.substr(g+1,k.length-(g+1)));(k.length==0||gK(k,'Anonymous function'))&&(k=OQ);h=lK(j,rK(58));e=mK(j,rK(58),h-1);i=-1;d=-1;f=RQ;if(h!=-1&&e!=-1){f=j.substr(0,e);i=YB(j.substr(e+1,h-(e+1)));d=YB(j.substr(h+1,j.length-(h+1)))}return a.rb(f,k,i,d)}
	function lQ(a,b,c){var d,e,f,g,h,i,j,k;f=0;for(j=0;j<c;){++f;e=a[b+j];if((e&192)==128){throw QG(new rJ(SU))}else if((e&128)==0){++j}else if((e&224)==192){j+=2}else if((e&240)==224){j+=3}else if((e&248)==240){j+=4}else{throw QG(new rJ(SU))}if(j>c){throw QG(new mI(SU))}}g=JC(HD,RR,6,f,15,1);k=0;h=0;for(i=0;i<c;){e=a[b+i++];if((e&128)==0){h=1;e&=127}else if((e&224)==192){h=2;e&=31}else if((e&240)==224){h=3;e&=15}else if((e&248)==240){h=4;e&=7}else if((e&252)==248){h=5;e&=3}while(--h>0){d=a[b+i++];if((d&192)!=128){throw QG(new rJ('Invalid UTF8 sequence at '+(b+i-1)+', byte='+(d>>>0).toString(16)))}e=e<<6|d&63}k+=CI(e,g,k)}return g}
	function Dp(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;while(true){s=0;n=0;q=null;r=null;for(g=1;g<a.c.a.length;g++){d=eN(a.c,g);for(h=0;h<g;h++){e=eN(a.c,h);b=0;c=0;o=0;p=0;for(k=0;k<d.e.length;k++){for(m=0;m<e.e.length;m++){if(d.e[k]===e.e[m]){++c;b=d.e[k];o<d.k[k]&&(o=d.k[k]);p<e.k[m]&&(p=e.k[m])}}}if(c>0){f=c==1&&op(a,d,b)==1&&op(a,e,b)==1?0:1;o>p?(i=(f<<24)+(o<<16)+(p<<8)+c):(i=(f<<24)+(p<<16)+(o<<8)+c);if(s<i){s=i;n=c;o=0;p=0;for(l=0;l<d.e.length;l++)o<d.k[l]&&(o=d.k[l]);for(j=0;j<e.e.length;j++)p<e.k[j]&&(p=e.k[j]);if(o>p){q=d;r=e}else{q=e;r=d}}}}}if(s==0)break;n==q.e.length?jN(a.c,q):n==r.e.length?jN(a.c,r):Bp(a,q,r,n)}}
	function wl(a){var b,c,d,e,f,g,h,i,j,k,l,m;if(!a.I)return false;for(c=0;c<a.o;c++)Hk(a,c)>=(m=ji(a,c),m+hi(a,c,m))&&(a.w[c]&=-6145);e=false;for(b=0;b<a.d;b++){f=a.c[b]-a.g[b];if(!a.P&&f>0){if((a.w[b]&uR)==0){i=(a.w[b]&vR)==896?3:(a.w[b]&vR)==384?2:(a.w[b]&128)==128?1:0;g=(l=ji(a,b),l+hi(a,b,l)-Hk(a,b));a.q[b]==0&&(a.w[b]&xR)==0&&a.A[b]!=6&&++g;j=f;f>3-i&&(j=3-i);j>g+f-i&&(j=g+f-i);if(j>0){k=i==0?0:(a.w[b]&vR)<<j;k|=(j==3?7:f==2?3:1)<<7;a.w[b]&=-1921;a.w[b]|=vR&k}}for(h=a.g[b];h<a.c[b];h++){d=a.i[b][h];if(a.F[d]==1){a.A[a.f[b][h]]=-1;a.F[d]=128;e=true}}}(a.w[b]&2)!=0&&(a.w[b]&=-9);a.q[b]!=0&&(a.s[b]&=-234881025)}e&&jh(a);return e}
	function Lp(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;e=JC(ID,mR,6,gk(a.f,c)+1,15,1);g=JC(KD,jR,6,gk(a.f,c)+1,15,1);h=JC(KD,jR,6,gk(a.f,c)+1,15,1);q=oq(b,c);f=0;for(j=0;j<gk(a.f,c);j++){g[f]=tk(a.f,c,j);h[f]=vk(a.f,c,j);l=oq(b,g[f]);l!=-1&&(e[f++]=dq(b.a[q],b.b[q],b.a[l],b.b[l]))}if(f==1)return e[0]+sR;for(k=f-1;k>0;k--){for(m=0;m<k;m++){if(e[m]>e[m+1]){r=e[m];e[m]=e[m+1];e[m+1]=r;s=g[m];g[m]=g[m+1];g[m+1]=s;t=h[m];h[m]=h[m+1];h[m+1]=t}}}e[f]=e[0]+rR;g[f]=g[0];h[f]=h[0];n=-100;o=0;for(i=0;i<f;i++){d=e[i+1]-e[i];if(f>2&&cl(a.f,h[i])&&cl(a.f,h[i+1])){p=wp(a,g[i],c,g[i+1]);p!=0&&(d-=100-p)}if(n<d){n=d;o=i}}return (e[o]+e[o+1])/2}
	function jh(a){var b,c,d,e,f,g,h,i;for(g=0;g<a.p;g++){if(a.F[g]==128){c=a.B[0][g];d=a.B[1][g];if(a.A[c]==-1^a.A[d]==-1){if(a.q[c]!=0&&a.q[d]!=0){if(a.q[c]<0^a.q[d]<0){if(a.q[c]<0){++a.q[c];--a.q[d]}else{--a.q[c];++a.q[d]}}}}}}i=JC(KD,jR,6,a.o,15,1);e=0;for(b=0;b<a.o;b++){if(a.A[b]==-1){i[b]=-1;continue}if(e<b){a.A[e]=a.A[b];a.q[e]=a.q[b];a.v[e]=a.v[b];a.s[e]=a.s[b];a.w[e]=a.w[b];a.u[e]=a.u[b];Ag(a.H[e],a.H[b]);a.t!=null&&(a.t[e]=a.t[b]);a.r!=null&&(a.r[e]=a.r[b])}i[b]=e;++e}a.o=e;h=0;for(f=0;f<a.p;f++){if(a.F[f]==128)continue;a.F[h]=a.F[f];a.C[h]=a.C[f];a.D[h]=a.D[f];a.B[0][h]=i[a.B[0][f]];a.B[1][h]=i[a.B[1][f]];++h}a.p=h;return i}
	function gm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;p=(i=cm(b,1),i==-1?b.length:i);f=bJ(b.substr(0,p));o=bm(b,p);p=(j=cm(b,o+1),j==-1?b.length:j);g=bJ(b.substr(o,p-o));o=bm(b,p);p=(k=cm(b,o+1),k==-1?b.length:k);c=_l(a,bJ(b.substr(o,p-o)));o=bm(b,p);p=(l=cm(b,o+1),l==-1?b.length:l);d=_l(a,bJ(b.substr(o,p-o)));r=0;s=0;while((o=bm(b,p))!=-1){p=(h=cm(b,o+1),h==-1?b.length:h);q=b.substr(o,p-o);n=iK(q,rK(61));m=q.substr(0,n);t=bJ(q.substr(n+1,q.length-(n+1)));if(gK(m,'CFG')){switch(t){case 1:r=1;break;case 2:r=g==2?3:4;break;case 3:r=6;}}else gK(m,'TOPO')?(s=t):undefined}e=Yl(a,c,d,g,r,s);e+1!=f&&(!a.b&&(a.b=new OO),HO(a.b,new tJ(f),new tJ(e)))}
	function kp(a){var b,c,d,e,f,g,h,i,j,k;b=null;j=null;for(g=0;g<a.f.e;g++){if(ei(a.f,g)==32){c=Vh(a.f,0,g);e=-1;h=0;for(;h<a.c.a.length;h++){e=oq(eN(a.c,h),c);if(e!=-1)break}d=Vh(a.f,1,g);f=-1;i=0;for(;i<a.c.a.length;i++){f=oq(eN(a.c,i),d);if(f!=-1)break}if(h!=i){if(h>i){k=h;h=i;i=k;k=e;e=f;f=k}j==null&&(j=JC(AE,QQ,197,a.c.a.length,0,2));j[i]==null&&(j[i]=JC(AE,{197:1,4:1,5:1,8:1},49,i,0,1));if(j[i][h]){j[i][h].c[0]+=kq(j[i][h].b[0],e);j[i][h].d[0]+=lq(j[i][h].b[0],e);j[i][h].c[1]+=kq(j[i][h].b[1],f);j[i][h].d[1]+=lq(j[i][h].b[1],f);++j[i][h].a[0];++j[i][h].a[1]}else{j[i][h]=new aq(eN(a.c,h),eN(a.c,i),e,f);!b&&(b=new pN);bN(b,j[i][h])}}}}return b}
	function yd(a){var b,c,d;if(a.H.o==0)return;no(a.H,(a.B&256)!=0?31:(a.B&512)!=0?47:(a.B&wR)!=0?79:15);Mc(a);c=false;a.o=JC(KD,jR,6,a.H.o,15,1);for(b=0;b<a.H.o;b++){a.o[b]=Bh(a.H,b);a.o[b]!=0&&(c=true);Hi(a.H,b)&&(a.o[b]=128);li(a.H,b)&&(a.B&cR)==0&&(a.o[b]=256)}Ad(a,-10);Zc(a);Yc(a);$c(a);Kc(a);Nn(a,a.R);Mn(a,a.S);Ad(a,a.K);ad(a);a.O.a=JC(RF,OR,1,0,5,1);a.U.a=JC(RF,OR,1,0,5,1);for(d=0;d<a.H.o;d++){if(_c(a,d)){Ad(a,-3);hd(a,d);Ad(a,a.K)}else if(a.o[d]!=0){Ad(a,a.o[d]);hd(a,d);Ad(a,a.K)}else if(!c&&Rh(a.H,d)!=1&&Rh(a.H,d)!=6&&(a.B&uR)==0&&Hh(a.H,d)==null&&Rh(a.H,d)<xc.length){Bd(a,Vc(xc[Rh(a.H,d)]));hd(a,d);Ad(a,a.K)}else{hd(a,d)}}gd(a);kd(a);fd(a)}
	function Kd(a,b,c){if(Ah(a.e,b)!=0)return 0;if(a.a){if(Rh(a.e,b)==5){if(Hk(a.e,b)!=2)return 0;c&&$i(a.e,b,1);return 1}if(Rh(a.e,b)==7){if(Hk(a.e,b)!=2)return 0;c&&$i(a.e,b,-1);return Md(a,b)?6:3}if(Rh(a.e,b)==8){if(Hk(a.e,b)!=1)return 0;c&&$i(a.e,b,-1);return Md(a,b)?7:4}if(Rh(a.e,b)==16){if(Hk(a.e,b)!=1)return 0;c&&$i(a.e,b,-1);return Md(a,b)?5:2}}else{if(Rh(a.e,b)==5){if(Hk(a.e,b)>2)return 0;c&&$i(a.e,b,1);return 1}if(Rh(a.e,b)==7){if(Hk(a.e,b)>2)return 0;c&&$i(a.e,b,-1);return Md(a,b)?5:3}if(Rh(a.e,b)==8){if(Hk(a.e,b)>1)return 0;c&&$i(a.e,b,-1);return Md(a,b)?7:4}if(Rh(a.e,b)==16){if(Hk(a.e,b)>1)return 0;c&&$i(a.e,b,-1);return Md(a,b)?5:2}}return 0}
	function Ce(a){var b,c,d,e,f,g;g=a.N;f=JC(KD,jR,6,a.L.d,15,1);for(c=0;c<a.L.d;c++)f[c]=a.c[c];if(!a.L.I){Ee(a);nf(a,g,f)}a.U=JC(GD,$R,6,a.L.d,15,1);a.T=JC(GD,$R,6,a.L.d,15,1);for(d=0;d<a.L.d;d++){a.U[d]=Fh(a.L,d)<<24>>24;a.T[d]=Eh(a.L,d)<<24>>24}a.j=JC(GD,$R,6,a.L.e,15,1);a.i=JC(GD,$R,6,a.L.e,15,1);for(e=0;e<a.L.e;e++){a.j[e]=$h(a.L,e)<<24>>24;a.i[e]=Zh(a.L,e)<<24>>24}De(a);a.Q=false;a.H=JC(NG,nR,6,a.L.d,16,1);for(b=0;b<a.L.d;b++){if(a.W[b]!=0){a.H[b]=true;a.Q=true}}Ge(a);a.J=null;a.V=JC(NG,nR,6,a.L.d,16,1);if(a.Q){a.J=new cg(a.L,f,a.H,a.W,a.k,a.U,a.T,a.$,a.o,a.V);Zf(a.J)}a.Y=JC(NG,nR,6,a.L.d,16,1);a.Z=new pN;ye(a);nf(a,g,f);Fe(a);!!a.J&&(a.F=Vf(a.J));Qe(a)}
	function gp(a){var b,c,d,e,f,g,h,i,j,k,l,m;for(i=0;i<a.c.a.length;i++){h=eN(a.c,i);for(j=0;j<h.f.length;j++){d=h.f[j];if(bi(a.f,d)==2){!fl(a.f,d)&&ci(a.f,d)==0&&yj(a.f,d);if(!cl(a.f,d)&&uk(a.f,Vh(a.f,0,d))>1&&uk(a.f,Vh(a.f,1,d))>1&&(ci(a.f,d)==1||ci(a.f,d)==2)){m=JC(KD,jR,6,2,15,1);e=JC(KD,jR,6,2,15,1);for(k=0;k<2;k++){m[k]=a.f.K;e[k]=Vh(a.f,k,d);for(l=0;l<gk(a.f,e[k]);l++){f=tk(a.f,e[k],l);f!=Vh(a.f,1-k,d)&&m[k]>f&&(m[k]=f)}}g=dq(h.a[h.g[e[0]]],h.b[h.g[e[0]]],h.a[h.g[e[1]]],h.b[h.g[e[1]]]);b=dq(h.a[h.g[m[0]]],h.b[h.g[m[0]]],h.a[h.g[e[0]]],h.b[h.g[e[0]]]);c=dq(h.a[h.g[e[1]]],h.b[h.g[e[1]]],h.a[h.g[m[1]]],h.b[h.g[m[1]]]);np(g,b)<0^np(g,c)<0^ci(a.f,d)==2&&jq(h,d)}}}}}
	function Gp(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;h=0;f=0;for(g=0;g<a.f.p;g++){if(Ci(a.f,Vh(a.f,0,g))&&Ci(a.f,Vh(a.f,1,g))){a.b[g]=true;f+=_h(a.f,g);++h}}if(h==0||f==0)return;f/=h;for(c=0;c<a.f.o;c++){Ci(a.f,c)&&(hk(a.f,c)==0?hj(a.f,c,false):(a.a[c]=true))}p=JC(KD,jR,6,a.f.o,15,1);i=Ak(a.f,p,true,true);o=JC(KD,jR,6,i,15,1);for(d=0;d<a.f.o;d++)p[d]!=-1&&++o[p[d]];n=JC(EE,OR,26,i,0,1);for(k=0;k<i;k++)n[k]=new uq(a.f,o[k],a.e);e=JC(KD,jR,6,i,15,1);for(b=0;b<a.f.o;b++){l=p[b];if(l!=-1){n[l].k[e[l]]=256;n[l].e[e[l]]=b;n[l].a[e[l]]=Oh(a.f,b)/f;n[l].b[e[l]]=Ph(a.f,b)/f;++e[l]}}q=-1;r=0;for(m=0;m<i;m++){if(r<o[m]){r=o[m];q=m}}bN(a.c,n[q]);for(j=0;j<i;j++)j!=q&&bN(a.c,n[j])}
	function KO(a,b,c){var d,e,f,g,h,i,j,k,l,m,n;if(!a.b){return false}g=null;m=null;i=new cP(null,null);e=1;i.a[1]=a.b;l=i;while(l.a[e]){j=e;h=m;m=l;l=l.a[e];d=a.a.eb(b,l.c);e=d<0?0:1;d==0&&(!c.c||nO(l.d,c.d))&&(g=l);if(!(!!l&&l.b)&&!GO(l.a[e])){if(GO(l.a[1-e])){m=m.a[j]=NO(l,e)}else if(!GO(l.a[1-e])){n=m.a[1-j];if(n){if(!GO(n.a[1-j])&&!GO(n.a[j])){m.b=false;n.b=true;l.b=true}else{f=h.a[1]==m?1:0;GO(n.a[j])?(h.a[f]=MO(m,j)):GO(n.a[1-j])&&(h.a[f]=NO(m,j));l.b=h.a[f].b=true;h.a[f].a[0].b=false;h.a[f].a[1].b=false}}}}}if(g){c.b=true;c.d=g.d;if(l!=g){k=new cP(l.c,l.d);LO(a,i,g,k);m==g&&(m=k)}m.a[m.a[1]==l?1:0]=l.a[!l.a[0]?1:0];--a.c}a.b=i.a[1];!!a.b&&(a.b.b=false);return c.b}
	function uC(a,b,c,d,e){var f,g,h,i;AK(d,0,d.a.length);g=false;h=b.length;for(i=c;i<h;++i){f=b.charCodeAt(i);if(f==39){if(i+1<h&&b.charCodeAt(i+1)==39){++i;d.a+="'"}else{g=!g}continue}if(g){d.a+=String.fromCharCode(f)}else{switch(f){case 35:case 48:case 44:case 46:case 59:return i-c;case 164:a.g=true;if(i+1<h&&b.charCodeAt(i+1)==164){++i;if(i<h-2&&b.charCodeAt(i+1)==164&&b.charCodeAt(i+2)==164){i+=2;zK(d,EC(a.a))}else{zK(d,a.a[0])}}else{zK(d,a.a[1])}break;case 37:if(!e){if(a.p!=1){throw QG(new rJ(EU+b+'"'))}a.p=100}d.a+='%';break;case 8240:if(!e){if(a.p!=1){throw QG(new rJ(EU+b+'"'))}a.p=1000}d.a+='\u2030';break;case 45:d.a+='-';break;default:d.a+=String.fromCharCode(f);}}}return h-c}
	function Hr(a,b){var c,d,e,f,g,h,i;i=new $q;if(!zr){bN(i.a,new Yq('Toxicity predictor not properly initialized.',2));return i}g=cf(new vf(a));if(Br[b].hb(g)!=-1){Zq(i,'This molecule is known to be '+nr[b]+':',2);bN(i.a,new Yq(g,1));return i}h=new nn;c=false;d=new Co;for(f=0;f<yr[b].a.length;f++){Fl(new Hl(false),d,eN(yr[b],f));fn(h,a);en(h,d);if(Xm(h,h.b)>0){c||Zq(i,'High-risk fragments indicating '+or[b]+':',2);c=true;Zq(i,eN(yr[b],f),1)}}c=false;for(e=0;e<Ar[b].a.length;e++){Fl(new Hl(false),d,eN(Ar[b],e));fn(h,a);en(h,d);if(Xm(h,h.b)>0){c||Zq(i,'Medium-risk fragments indicating '+or[b]+':',2);c=true;Zq(i,eN(Ar[b],e),1)}}i.a.a.length==0&&Zq(i,'No indication for '+or[b]+' found.',2);return i}
	function Ui(a,b){var c,d,e,f,g,h,i,j,k;if(b==0)return 0;h=null;for(d=0;d<a.o;d++){if((a.s[d]&KR)>>19==b){h==null&&(h=JC(NG,nR,6,32,16,1));h[(a.s[d]&KR)>>19!=1&&(a.s[d]&KR)>>19!=2?-1:(a.s[d]&fS)>>21]=true}}for(f=0;f<a.p;f++){if((a.C[f]&gS)>>10==b){h==null&&(h=JC(NG,nR,6,32,16,1));h[(a.C[f]&gS)>>10!=1&&(a.C[f]&gS)>>10!=2?-1:(a.C[f]&hS)>>12]=true}}k=0;if(h!=null){j=JC(KD,jR,6,32,15,1);for(i=0;i<32;i++)h[i]&&(j[i]=k++);for(c=0;c<a.o;c++){if((a.s[c]&KR)>>19==b){g=j[(a.s[c]&KR)>>19!=1&&(a.s[c]&KR)>>19!=2?-1:(a.s[c]&fS)>>21];a.s[c]&=-65011713;a.s[c]|=g<<21}}for(e=0;e<a.p;e++){if((a.C[e]&gS)>>10==b){g=j[(a.C[e]&gS)>>10!=1&&(a.C[e]&gS)>>10!=2?-1:(a.C[e]&hS)>>12];a.C[e]&=-126977;a.C[e]|=g<<12}}}return k}
	function hl(a){var b,c,d,e,f,g,h,i,j,k;no(a,1);i=false;for(c=0;c<a.d;c++){if(a.A[c]==7&&a.q[c]==0){k=Hk(a,c);if(k==4){for(j=0;j<a.g[c];j++){g=a.f[c][j];if(a.j[c][j]==1&&a.A[g]==8&&a.g[g]==1&&a.q[g]==0){i=true;++a.q[c];--a.q[g];break}}}else if(k==5){for(j=0;j<a.g[c];j++){g=a.f[c][j];h=a.i[c][j];if(a.j[c][j]==2&&a.A[g]==8){i=true;++a.q[c];--a.q[g];a.F[h]=1;break}if(a.j[c][j]==3&&a.A[g]==7){i=true;++a.q[c];--a.q[g];a.F[h]=2;break}}}}}f=false;for(e=0;e<a.e;e++){for(j=0;j<2;j++){if(Ai(a,a.B[j][e])){b=a.B[1-j][e];d=a.A[b];if(d==3||d==11||d==12||d==19||d==20||d==37||d==38||d==55||d==56){if(bi(a,e)==1){++a.q[b];--a.q[a.B[j][e]];a.F[e]=128;f=true}else if(a.F[e]==32){a.F[e]=128;f=true}}break}}}if(f){jh(a);i=true}i&&(a.Q=0);return i}
	function kd(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;o=false;for(d=0;d<a.H.e;d++){j=null;if(vi(a.H,d)){l=Xh(a.H,d);k=Wh(a.H,d);j=l==k?'['+l+']':'['+l+':'+k+']'}else (di(a.H,d)&KR)!=0?(j=(di(a.H,d)&KR)==_Q?'a':(di(a.H,d)&96)==64?'r!a':'!a'):(di(a.H,d)&96)!=0&&(j=(di(a.H,d)&96)==64?'r':'!r');n=(di(a.H,d)&LR)>>15;n!=0&&(j=(j==null?'':j)+n);if(j!=null){b=Vh(a.H,0,d);c=Vh(a.H,1,d);if(!o){Nn(a,(a.R*2+1)/3|0);o=true}q=(Jg(a.L,Oh(a.H,b))+Jg(a.L,Oh(a.H,c)))/2;r=(Kg(a.L,Ph(a.H,b))+Kg(a.L,Ph(a.H,c)))/2;f=Jg(a.L,Oh(a.H,c))-Jg(a.L,Oh(a.H,b));g=Kg(a.L,Ph(a.H,c))-Kg(a.L,Ph(a.H,b));e=$wnd.Math.sqrt(f*f+g*g);i=(m=(p=JH(a.e,j),new YH(0,0,p,0)).b,0.6*m);h=0.55*a.j;e!=0&&(f>0?md(a,q+i*g/e,r-h*f/e,j,true):md(a,q-i*g/e,r+h*f/e,j,true))}}o&&Nn(a,a.R)}
	function Sm(a){var b,c,d,e,f,g,h,i,j;no(a.d,a.G);h=a.d.e+12;a.o=JC(KD,jR,6,h,15,1);a.q=JC(KD,jR,6,h,15,1);a.r=JC(KD,jR,6,h,15,1);a.p=JC(NG,nR,6,h+1,16,1);f=JC(NG,nR,6,a.d.d,16,1);g=JC(NG,nR,6,a.d.e,16,1);e=0;for(c=0;c<a.d.d;c++){if(!a.u[c]&&!f[c]){a.o[e]=c;a.r[e]=-1;a.q[e]=-1;i=e;while(e<=i){for(j=0;j<hk(a.d,a.o[e]);j++){d=tk(a.d,a.o[e],j);d<a.d.d&&!a.u[d]&&(i=ln(a,e,i,j,f,g))}while(a.p[++e]);}}}a.s=e;if(a.j!=0){i=e-1;e=0;while(e<=i){for(j=0;j<hk(a.d,a.o[e]);j++){d=tk(a.d,a.o[e],j);d<a.d.d&&(a.u[d]||a.u[a.o[e]])&&(i=ln(a,e,i,j,f,g))}while(a.p[++e]);}for(b=0;b<a.d.d;b++){if(a.u[b]&&!f[b]){a.o[e]=b;a.r[e]=-1;a.q[e]=-1;i=e;while(e<=i){for(j=0;j<hk(a.d,a.o[e]);j++)tk(a.d,a.o[e],j)<a.d.d&&(i=ln(a,e,i,j,f,g));while(a.p[++e]);}}}}a.t=e}
	function je(a,b,c){var d,e,f,g,h;if(a.k[b]!=0)return false;if(bi(a.L,b)==1)return ie(a,b,c);if(bi(a.L,b)!=2)return false;if(Yk(a.L,b))return false;e=Vh(a.L,0,b);f=Vh(a.L,1,b);if(uk(a.L,e)==1||uk(a.L,f)==1)return false;if(uk(a.L,e)>3||uk(a.L,f)>3)return false;if(kk(a.L,e)==2||kk(a.L,f)==2)return false;g=new Qg(a.L,a.c,f,e);if(g.f&&!c)return false;h=new Qg(a.L,a.c,e,f);if(h.f&&!c)return false;if(g.f&&h.f)return false;if(c){g.f&&g.c&&(a.O[b]=true);h.f&&h.c&&(a.O[b]=true)}d=zi(a.L,b)?3:a._?le(a,g,h):ke(g,h);if(c){if((a.K&2)!=0){if(g.f){if(d==1){If(a.b[g.b],4);If(a.b[g.d],1)}else if(d==2){If(a.b[g.b],1);If(a.b[g.d],4)}}if(h.f){if(d==1){If(a.b[h.b],4);If(a.b[h.d],1)}else if(d==2){If(a.b[h.b],1);If(a.b[h.d],4)}}}}else{a.k[b]=d}return true}
	function yq(b){var c,d,e,f,g,h,i,j,k;if(!b.g)return false;hI(b.f);hI(b.a);b.e=null;k=false;d=-1;b.b=b.c==null?null:JC(XF,bS,2,b.c.length,6,1);b.d=-1;do{try{j=_H(b.g);if(j==null){hI(b.f);return false}}catch(a){a=PG(a);if(yD(a,53)){hI(b.f);return false}else throw QG(a)}if(k){zK(b.a,j);wK(b.a,10)}else{if(gK(j.substr(0,1),'>')){k=true;zK(b.f,sS);wK(b.f,10);zK(b.a,j);wK(b.a,10)}else{zK(b.f,j);wK(b.f,10);gK(j.substr(0,6),sS)&&(k=true);continue}}if(b.c!=null){if(j.length==0){d=-1}else if(d==-1){e=Aq(j);if(e!=null){d=-1;for(c=0;c<b.c.length;c++){if(gK(e,b.c[c])){d=c;break}}if(b.d==-1){for(g=wq,h=0,i=g.length;h<i;++h){f=g[h];if(gK(e,f)){b.d=d;break}}}}}else{b.b[d]==null?(b.b[d]=j):(b.b[d]=eK(eK(b.b[d],SQ),j))}}}while(!gK(j.substr(0,4),tS));return true}
	function pm(a,b){var c,d,e,f,g;!!a.a&&BO(a.a);!!a.b&&BO(a.b);e=0;d=_H(b);while(d!=null&&gK(d.substr(0,7),'M  V30 ')){d=pK(d.substr(7,d.length-7));while(g='-'.length,gK(d.substr(d.length-g,g),'-')){c=_H(b);if(!gK(c.substr(0,7),'M  V30 ')){return false}d=pK(eK(oK(d,0,d.length-1),c.substr(7,c.length-7)))}if(gK(d.substr(0,5),'BEGIN')){f=pK(d.substr(6,d.length-6));if(gK(f.substr(0,4),'CTAB')){e=1}else if(gK(f.substr(0,4),'ATOM')){e=2}else if(gK(f.substr(0,4),'BOND')){e=3}else if(gK(f.substr(0,10),'COLLECTION')){e=4}else{return false}}else if(gK(d.substr(0,3),'END')){e=0}else if(e==1){im(a,d)}else if(e==2){em(a,d)}else if(e==3){gm(a,d)}else if(e==4){hm(a,d)}else{return false}d=_H(b)}while(d!=null&&!(gK(d.substr(0,6),sS)||gK(d,tS))){d=_H(b)}return true}
	function Vm(a,b,c){var d,e,f,g,h;for(g=a.s;g<a.t;g++)c[g]=-1;f=a.s;while(true){h=a.q[f]==-1?a.A.d:hk(a.A,a.w[a.q[f]]);++c[f];if(c[f]==h){c[f]=-1;if(f==a.s)break;--f;if(!a.p[f]){b[a.w[a.o[f]]]=false;a.w[a.o[f]]=-1}continue}if(a.q[f]==-1){if(!b[c[f]]){if(Pm(a,c[f],a.o[f])){a.w[a.o[f]]=c[f];b[c[f]]=true;++f}}}else{if(tk(a.A,a.w[a.q[f]],c[f])>=a.A.d){++c[f];continue}e=tk(a.A,a.w[a.q[f]],c[f]);if(a.p[f]){e==a.w[a.o[f]]&&Qm(a,vk(a.A,a.w[a.q[f]],c[f]),a.r[f])&&++f}else{if(!b[e]){if(Pm(a,e,a.o[f])&&Qm(a,vk(a.A,a.w[a.q[f]],c[f]),a.r[f])){b[e]=true;a.w[a.o[f]]=e;++f}}}}if(f==a.t){if(Wm(a,true)&&Um(a,true)&&Tm(a,b,true)){for(d=0;d<a.d.d;d++){if(a.u[d]){b[a.w[d]]=false;a.w[d]=-1}}return true}--f;if(!a.p[f]){b[a.w[a.o[f]]]=false;a.w[a.o[f]]=-1}}}return false}
	function hm(a,b){var c,d,e,f,g,h;h=dm(b);if(h!=null){g=jm(b,h);if(gK(b.substr(0,13),'MDLV30/STEABS')){if(gK(h,rS))for(f=0;f<g.length;f++)dj(a.d,_l(a,g[f]),0,-1);else for(e=0;e<g.length;e++)vj(a.d,am(a,g[e]),0,-1)}else if(gK(b.substr(0,13),'MDLV30/STERAC')){d=bJ(oK(b,13,cm(b,13)));if(gK(h,rS))for(f=0;f<g.length;f++)dj(a.d,_l(a,g[f]),1,d-1);else for(e=0;e<g.length;e++)vj(a.d,am(a,g[e]),1,d-1)}else if(gK(b.substr(0,13),'MDLV30/STEREL')){d=bJ(oK(b,13,cm(b,13)));if(gK(h,rS))for(f=0;f<g.length;f++)dj(a.d,_l(a,g[f]),2,d-1);else for(e=0;e<g.length;e++)vj(a.d,am(a,g[e]),2,d-1)}else if(gK(b.substr(0,13),'MDLV30/HILITE')){if(gK(h,rS)){for(e=0;e<g.length;e++)_i(a.d,_l(a,g[e]),448)}else{for(e=0;e<g.length;e++){c=am(a,g[e]);_i(a.d,Vh(a.d,0,c),448);_i(a.d,Vh(a.d,1,c),448)}}}}}
	function he(a,b,c){var d,e,f,g,h,i,j;if(Rh(a.L,b)!=6&&Rh(a.L,b)!=7)return false;e=tk(a.L,b,0);f=tk(a.L,b,1);if(kk(a.L,e)!=1||kk(a.L,f)!=1)return false;if(uk(a.L,e)==1||uk(a.L,f)==1)return false;if(gk(a.L,e)>3||gk(a.L,f)>3)return false;g=new Qg(a.L,a.c,b,e);if(g.f&&!c)return false;h=new Qg(a.L,a.c,b,f);if(h.f&&!c)return false;if(g.f&&h.f)return false;if(c){g.f&&g.c&&(a.P[b]=true);h.f&&h.c&&(a.P[b]=true)}i=Pg(g);j=Pg(h);if(i==-1||j==-1||(i+j&1)==0){c||(a.W[b]=3);return true}d=0;switch(i+j){case 3:case 7:d=2;break;case 5:d=1;}if(c){if(a.Q&&(a.K&2)!=0||!a.Q&&(a.K&4)!=0){if(g.f){if(d==1){If(a.b[g.b],64);If(a.b[g.d],16)}else{If(a.b[g.b],16);If(a.b[g.d],64)}}if(h.f){if(d==2){If(a.b[h.b],64);If(a.b[h.d],16)}else{If(a.b[h.b],16);If(a.b[h.d],64)}}}}else{a.W[b]=d}return true}
	function Wm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;g=0;for(i=0;i<a.d.d;i++){if(a.u[i]==b&&(Mh(a.d,i)&TR)!=0){m=a.w[i];l=Lh(a.d,i);o=Lh(a.A,m);if(l==0)continue;if(o==0)continue;if(l==3)continue;if(o==3)continue;if(Fh(a.d,i)==1){++g;continue}if(Fh(a.A,m)==1)return false;if(Fh(a.d,i)==2){++g;continue}if(Fh(a.A,m)==2)return false;if(cn(a,i)==(l==o))return false}}if(g!=0){e=JC(KD,jR,6,g,15,1);f=0;for(j=0;j<a.d.d;j++){if(a.u[j]==b&&(Mh(a.d,j)&TR)!=0){l=Lh(a.d,j);l!=0&&l!=3&&(e[f++]=Eh(a.d,j)<<24|Fh(a.d,j)<<22|j)}}bO(e);f=0;while(f<e.length){k=e[f]&uS;n=a.w[k];c=e[f]&-4194304;d=cn(a,k)^Lh(a.d,k)==Lh(a.A,n);for(++f;f<e.length&&(e[f]&-4194304)==c;f++){h=e[f]&uS;m=a.w[h];if(Fh(a.A,m)!=Fh(a.A,n)||Eh(a.A,m)!=Eh(a.A,n))return false;p=cn(a,h)^Lh(a.d,h)==Lh(a.A,m);if(p!=d)return false}}}return true}
	function Lq(b){var c,d,e,f,g,h,i,j,k,l,m,n,o;f=new $q;bN(f.a,new Yq('cLogP Values are estimated applying an atom-type based increment system.',2));bN(f.a,new Yq(tU,2));bN(f.a,new Yq(uU,2));hl(b);no(b,3);if(b){i=0;e=new OO;j=new RK('#0.000');for(c=0;c<b.d;c++){try{d=ee(b,c,6241);o=IM(e,new FJ(d));!o?HO(e,new FJ(d),new tJ(1)):HO(e,new FJ(d),new tJ(o.a+1))}catch(a){a=PG(a);if(yD(a,13)){++i}else throw QG(a)}}i!=0&&bN(f.a,new Yq('Warning: '+i+' atom type(s) could not be determined.',2));for(n=(h=new XO((new aP((new SM(e)).a)).b),new YM(h));uL(n.a.a);){m=(g=VO(n.a),g.Fb());l=bB(Iq,m);(l<0?-1:l)!=-1?Zq(f,RL(CO(e,m))+' * '+QK(j,Hq[k=bB(Iq,m),k<0?-1:k])+' AtomType: 0x'+KJ(m.a),2):Zq(f,'Warning: For atom type 0x'+KJ(m.a)+' ('+RL(CO(e,m))+' times found) is no increment available.',2)}}return f}
	function rf(a){var b,c,d,e,f,g,h,i,j,k,l;for(b=0;b<a.L.d;b++){if(a.W[b]==1||a.W[b]==2){i=false;if(kk(a.L,b)!=0&&uk(a.L,b)==2&&wk(a.L,b,0)==2&&wk(a.L,b,1)==2){for(h=0;h<uk(a.L,b);h++){e=tk(a.L,b,h);l=0;k=JC(KD,jR,6,3,15,1);for(j=0;j<uk(a.L,e);j++){k[l]=tk(a.L,e,j);k[l]!=b&&++l}l==2&&a.c[k[0]]>a.c[k[1]]^k[0]<k[1]&&(i=!i)}}else{for(h=1;h<uk(a.L,b);h++){for(j=0;j<h;j++){f=tk(a.L,b,h);g=tk(a.L,b,j);a.c[f]>a.c[g]&&(i=!i);f<g&&(i=!i)}}}jj(a.L,b,a.W[b]==1^i?1:2,a.X[b])}else{jj(a.L,b,a.W[b],a.X[b])}}for(c=0;c<a.L.e;c++){if(a.k[c]==1||a.k[c]==2){i=false;for(h=0;h<2;h++){d=Vh(a.L,h,c);if(uk(a.L,d)==3){k=JC(KD,jR,6,2,15,1);l=0;for(j=0;j<3;j++)tk(a.L,d,j)!=Vh(a.L,1-h,c)&&(k[l++]=tk(a.L,d,j));a.c[k[0]]>a.c[k[1]]&&(i=!i);k[0]<k[1]&&(i=!i)}}xj(a.L,c,a.k[c]==1^i?1:2,a.n[c])}else{xj(a.L,c,a.k[c],a.n[c])}}}
	function ql(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A;if((a.C[b]&3)==0||(a.C[b]&3)==3||!Zk(a,b))return;v=-1;t=-1;u=-1;s=-1;e=0;for(l=0;l<2;l++){d=a.B[l][b];for(o=0;o<a.c[d];o++){h=a.i[d][o];if(h!=b&&bi(a,h)==1){g=a.f[d][o];w=Qk(a,h,g);if(e<w){e=w;t=g;v=h;u=d;s=a.B[1-l][b]}}}}if(t==-1)return;for(m=0;m<2;m++){for(o=0;o<a.c[a.B[m][b]];o++){h=a.i[a.B[m][b]][o];h!=b&&bi(a,h)==1&&(a.F[h]=1)}}if(a.B[1][v]!=t){a.B[0][v]=a.B[1][v];a.B[1][v]=t}i=WQ;for(n=0;n<a.g[u];n++){g=a.f[u][n];a.i[u][n]!=b&&i>g&&(i=g)}q=JC(KD,jR,6,2,15,1);r=0;for(k=0;k<a.g[s];k++)a.i[s][k]!=b&&(q[r++]=a.f[s][k]);f=Rj(a.H[u].a,a.H[u].b,a.H[s].a,a.H[s].b);if(r==2){if(q[0]>q[1]){A=q[0];q[0]=q[1];q[1]=A}j=Sj(f,Uh(a,s,q[0]));p=Sj(f,Uh(a,s,q[1]));c=j-p}else{c=Sj(f,Uh(a,s,q[0]))}c<0^(a.C[b]&3)==2^i==t?(a.F[v]=17):(a.F[v]=9)}
	function _k(a,b){var c,d,e,f,g,h,i,j,k,l,m;if(a.A[b]!=7)return false;if((a.s[b]&cR)!=0||a.k[b]!=0||(a.w[b]&FR)!=0)return true;if(a.q[b]==1)return false;f=0;for(h=0;h<a.g[b];h++){if(a.j[b][h]==1){c=a.A[a.f[b][h]];(c==8||c==9||c==17)&&++f}}if(f==0){for(g=0;g<a.g[b];g++){d=a.f[b][g];if(a.k[d]!=0){if((a.s[d]&cR)!=0){if((!!a.n&&d<a.d?zm(a.n,d):0)>=5){m=0;for(k=0;k<a.g[d];k++){l=a.f[d][k];l!=b&&a.g[l]>=3&&++m}if(m==2||m==1&&a.g[b]==3)continue}return true}for(j=0;j<a.g[d];j++){if((a.j[d][j]==2||Yk(a,a.i[d][j]))&&gl(a,a.f[d][j]))return true}}}}if(f<2){for(g=0;g<a.g[b];g++){d=a.f[b][g];i=false;e=false;for(j=0;j<a.g[d];j++){if(a.f[d][j]!=b){a.j[d][j]!=1&&(a.A[a.f[d][j]]==7||a.A[a.f[d][j]]==8||a.A[a.f[d][j]]==16)&&(i=true);a.j[d][j]==1&&a.A[a.f[d][j]]==7&&(e=true)}}if(i&&(!e||f==0))return true}}return false}
	function Kp(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;b=ep(a);f=JC(GD,$R,6,a.f.p,15,1);Hp(a,f,b);for(e=0;e<a.f.p;e++)f[e]==2&&(bl(a.f,Vh(a.f,0,e))||bl(a.f,Vh(a.f,1,e)))&&(f[e]=3);for(n=0;n<a.c.a.length;n++){l=eN(a.c,n);i=mq(l);r=l.c;q=new vq(l,a.e);p=-1;for(m=0;m<224&&i.a.length!=0;m++){j=tO(a.g,i.a.length);h=(tQ(j,i.a.length),i.a[j]);g=up(a,h[0],h[1]);c=JC(KD,jR,6,g.length,15,1);d=0;if(m<32){for(o=1;o<g.length-1;o++)f[g[o]]==3&&(c[d++]=g[o])}else if(m<96){for(o=1;o<g.length-1;o++)f[g[o]]>=2&&(c[d++]=g[o])}else{for(o=1;o<g.length-1;o++)f[g[o]]>=1&&(c[d++]=g[o])}if(d!=0){t=c[0];if(d>1){do{t=c[tO(a.g,d)]}while(t==p)}if(t!=p){p=t;jq(l,t);i=mq(l);if(r>l.c){r=l.c;q=new vq(l,a.e)}}}}lN(a.c,n,q);l=q;k=1;do{s=9999;for(o=0;o<l.e.length;o++){u=b[l.e[o]];u==k?rq(l,o):u>k&&u<s&&(s=u)}k=s}while(s!=9999)}}
	function ak(a,b){var c,d,e,f,g,h,i,j,k,l,m;if((b&~a.Q)==0)return;if((a.Q&1)==0){Tk(a);Xj(a);a.Q|=1;if(wl(a)){Tk(a);Xj(a)}}if((b&~a.Q)==0)return;if((a.Q&2)==0){for(d=0;d<a.d;d++)a.s[d]&=-31753;for(g=0;g<a.e;g++)a.C[g]&=-961;ek(a);for(f=0;f<a.e;f++){if(a.F[f]==64){a.s[a.B[0][f]]|=cR;a.s[a.B[1][f]]|=cR;a.C[f]|=256;a.C[f]|=512}}for(e=0;e<a.d;e++){for(l=0;l<a.g[e];l++){j=a.i[e][l];if((a.C[j]&256)!=0)continue;i=a.f[e][l];for(m=0;m<a.g[i];m++){if(a.i[i][m]==j)continue;a.j[i][m]>1&&(a.A[a.f[i][m]]==6?(a.s[e]|=TR):!Yk(a,a.i[i][m])&&Ai(a,a.f[i][m])&&(a.s[e]|=dR))}}}while(true){k=false;for(c=0;c<a.d;c++){if(a.k[c]>0&&(20480&a.s[c])==dR){for(l=0;l<a.g[c];l++){if(a.j[c][l]>1){i=a.f[c][l];j=a.i[c][l];for(m=0;m<a.g[i];m++){if(a.i[i][m]!=j){h=a.f[i][m];if((a.s[h]&dR)==0){a.s[h]|=dR;k=true}}}}}}}if(!k)break}a.Q|=2}}
	function kh(a,b,c,d,e){var f,g,h,i;f=b.o;f>=b.K&&Ej(b,b.K*2);h=(a.s[c]&KR)>>19;g=-1;h==1?d==-1?(g=Ui(b,1)):(g=RJ(32,d+((a.s[c]&KR)>>19!=1&&(a.s[c]&KR)>>19!=2?-1:(a.s[c]&fS)>>21))):h==2&&(e==-1?(g=Ui(b,2)):(g=RJ(32,e+((a.s[c]&KR)>>19!=1&&(a.s[c]&KR)>>19!=2?-1:(a.s[c]&fS)>>21))));b.A[f]=a.A[c];b.q[f]=a.q[c];b.v[f]=a.v[c];b.s[f]=a.s[c];b.w[f]=b.I?a.w[c]:0;Ag(b.H[f],a.H[c]);b.u[f]=a.u[c];b.t!=null&&(b.t[f]=null);if(a.t!=null&&a.t[c]!=null&&b.I){b.t==null&&(b.t=JC(KD,XR,7,b.A.length,0,2));b.t[f]=JC(KD,jR,6,a.t[c].length,15,1);for(i=0;i<a.t[c].length;i++)b.t[f][i]=a.t[c][i]}b.r!=null&&(b.r[f]=null);if(a.r!=null&&a.r[c]!=null){b.r==null&&(b.r=JC(GD,dS,9,b.A.length,0,2));b.r[f]=JC(GD,$R,6,a.r[c].length,15,1);for(i=0;i<a.r[c].length;i++)b.r[f][i]=a.r[c][i]}if(g!=-1){b.s[f]&=-65011713;b.s[f]|=g<<21}++b.o;b.Q=0;return f}
	function le(a,b,c){var d,e,f,g,h,i,j;f=JC(ID,mR,6,3,15,1);f[0]=Oh(a.L,c.a)-Oh(a.L,b.a);f[1]=Ph(a.L,c.a)-Ph(a.L,b.a);f[2]=Qh(a.L,c.a)-Qh(a.L,b.a);i=JC(ID,mR,6,3,15,1);i[0]=Oh(a.L,b.b)-Oh(a.L,b.a);i[1]=Ph(a.L,b.b)-Ph(a.L,b.a);i[2]=Qh(a.L,b.b)-Qh(a.L,b.a);j=JC(ID,mR,6,3,15,1);j[0]=Oh(a.L,c.b)-Oh(a.L,c.a);j[1]=Ph(a.L,c.b)-Ph(a.L,c.a);j[2]=Qh(a.L,c.b)-Qh(a.L,c.a);g=JC(ID,mR,6,3,15,1);g[0]=f[1]*i[2]-f[2]*i[1];g[1]=f[2]*i[0]-f[0]*i[2];g[2]=f[0]*i[1]-f[1]*i[0];h=JC(ID,mR,6,3,15,1);h[0]=f[1]*g[2]-f[2]*g[1];h[1]=f[2]*g[0]-f[0]*g[2];h[2]=f[0]*g[1]-f[1]*g[0];d=(i[0]*h[0]+i[1]*h[1]+i[2]*h[2])/($wnd.Math.sqrt(i[0]*i[0]+i[1]*i[1]+i[2]*i[2])*$wnd.Math.sqrt(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]));e=(j[0]*h[0]+j[1]*h[1]+j[2]*h[2])/($wnd.Math.sqrt(j[0]*j[0]+j[1]*j[1]+j[2]*j[2])*$wnd.Math.sqrt(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]));return d<0^e<0?1:2}
	function kf(a){var b,c,d,e,f,g,h,i,j,k,l;a.S=JC(GD,$R,6,a.L.d,15,1);for(b=0;b<a.L.d;b++){if(a.W[b]==1||a.W[b]==2){i=false;if(uk(a.L,b)==2&&wk(a.L,b,0)==2&&wk(a.L,b,1)==2){for(h=0;h<uk(a.L,b);h++){e=tk(a.L,b,h);l=0;k=JC(KD,jR,6,3,15,1);for(j=0;j<uk(a.L,e);j++){k[l]=tk(a.L,e,j);k[l]!=b&&++l}l==2&&a.c[k[0]]>a.c[k[1]]^a.B[k[0]]<a.B[k[1]]&&(i=!i)}}else{for(h=1;h<uk(a.L,b);h++){for(j=0;j<h;j++){f=tk(a.L,b,h);g=tk(a.L,b,j);a.c[f]>a.c[g]&&(i=!i);a.B[f]<a.B[g]&&(i=!i)}}}a.S[b]=a.W[b]==1^i?1:2}else{a.S[b]=a.W[b]}}a.g=JC(GD,$R,6,a.L.e,15,1);for(c=0;c<a.L.e;c++){if(a.k[c]==1||a.k[c]==2){i=false;for(h=0;h<2;h++){d=Vh(a.L,h,c);if(uk(a.L,d)==3){k=JC(KD,jR,6,2,15,1);l=0;for(j=0;j<3;j++)tk(a.L,d,j)!=Vh(a.L,1-h,c)&&(k[l++]=tk(a.L,d,j));a.c[k[0]]>a.c[k[1]]&&(i=!i);a.B[k[0]]<a.B[k[1]]&&(i=!i)}}a.g[c]=a.k[c]==1^i?1:2}else{a.g[c]=a.k[c]}}}
	function Ym(a,b){var c,d,e,f,g,h,i,j;i=0;if(a.I){(a.s[b]&cR)!=0&&(i|=2);j=(d=a.s[b]&gS,d==0?0:d==wR?2:d==uR?3:4);if(j!=0){i|=8;j>2&&(i|=16);j>3&&(i|=32)}c=a.q[b];c<0?(i|=zR):c>0&&(i|=yR);f=a.g[b];switch(f){case 0:break;case 1:i|=_R;break;case 2:i|=DR;break;case 3:i|=917504;break;default:i|=1966080;}}else{(a.s[b]&cR)!=0?(i|=2):(i|=4);j=(d=a.s[b]&gS,d==0?0:d==wR?2:d==uR?3:4);j==0?(i|=112):j==2?(i|=104):j==3?(i|=88):(i|=56);c=a.q[b];c==0?(i|=167772160):c<0?(i|=zR):c>0&&(i|=yR);e=a.c[b]-a.g[b]+Ek(a,b);switch(e){case 0:i|=1792;break;case 1:i|=1664;break;case 2:i|=1408;break;default:i|=896;}f=a.g[b];switch(f){case 0:i|=3932160;break;case 1:i|=3801088;break;case 2:i|=3538944;break;case 3:i|=3014656;break;default:i|=1966080;}h=a.k[b];switch(h){case 0:i|=98304;break;case 1:i|=81920;break;default:i|=49152;}}g=a.k[b];g>0&&(i|=dR);g>1&&(i|=32768);return i}
	function ml(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;if(a.g[b]!=2||a.j[b][0]!=2||a.j[b][1]!=2||a.g[a.f[b][0]]<2||a.g[a.f[b][1]]<2||a.k[a.f[b][0]]!=1||a.k[a.f[b][1]]!=1){jj(a,b,0,false);return}w=-1;v=-1;u=-1;r=-1;f=0;for(l=0;l<2;l++){d=a.f[b][l];for(p=0;p<a.c[d];p++){g=a.f[d][p];if(g!=b){h=a.i[d][p];A=Qk(a,h,g);if(f<A){f=A;v=g;w=h;u=d;r=a.f[b][1-l]}}}}if(v==-1)return;for(m=0;m<2;m++)for(o=0;o<a.c[a.f[b][m]];o++)a.f[a.f[b][m]][o]!=b&&(a.F[a.i[a.f[b][m]][o]]=1);if(a.B[1][w]!=v){a.B[0][w]=a.B[1][w];a.B[1][w]=v}i=WQ;for(n=0;n<a.g[u];n++){g=a.f[u][n];g!=b&&i>g&&(i=g)}s=JC(KD,jR,6,2,15,1);t=0;for(k=0;k<a.g[r];k++){g=a.f[r][k];g!=b&&(s[t++]=g)}c=Rj(a.H[b].a,a.H[b].b,a.H[r].a,a.H[r].b);if(t==2){if(s[0]>s[1]){B=s[0];s[0]=s[1];s[1]=B}j=Sj(c,Uh(a,r,s[0]));q=Sj(c,Uh(a,r,s[1]));e=j-q}else{e=Sj(c,Uh(a,r,s[0]))}e<0^(a.s[b]&3)==1^i==v?(a.F[w]=17):(a.F[w]=9)}
	function Qe(a){var b,c,d,e,f,g,h,i,j,k,l,m;f=0;k=0;g=0;h=0;i=0;j=0;l=0;m=false;b=JC(NG,nR,6,32,16,1);for(c=0;c<a.L.d;c++){if(a.W[c]!=0){++f;if(a.W[c]==3){++k}else{if(a.U[c]==0){++g;!!a.J&&Uf(a.J,c)&&++h}else if(a.U[c]==2){a.T[c]==0&&++j}else if(a.U[c]==1){e=a.T[c];if(!b[e]){++l;b[e]=true}a.T[c]==0&&++i;!!a.J&&Uf(a.J,c)&&(m=true)}}}}for(d=0;d<a.L.e;d++){if(a.k[d]!=0&&ei(a.L,d)==1){++f;if(a.k[d]==3){++k}else{if(a.j[d]==0){++g;!!a.J&&Uf(a.J,Vh(a.L,0,d))&&Uf(a.J,Vh(a.L,1,d))&&++h}else if(a.j[d]==2){a.i[d]==0&&++j}else if(a.j[d]==1){e=a.i[d];if(!b[e]){++l;b[e]=true}a.i[d]==0&&++i;!!a.J&&Uf(a.J,Vh(a.L,0,d))&&Uf(a.J,Vh(a.L,1,d))&&(m=true)}}}}if(f==0){a.L.G=eR;return}if(k!=0){a.L.G=0;return}if(a.F){Bj(a.L,_R+(1<<l));return}i+h==f&&!m?(a.L.G=196608,undefined):g==f?(a.L.G=QR,undefined):j==f?(a.L.G=327680,undefined):g==f-1&&i==1?(a.L.G=DR,undefined):Bj(a.L,458752+(1<<l))}
	function Ve(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(a.L.d==0){a.e='';return}k=false;if(a._&&a.L.o>a.L.d&&!a.L.I){k=true;for(h=0;h<a.L.d;h++){if(Ek(a.L,h)!=0){k=false;break}}}p=a._?16:8;Ue(a);wK(a.q,k?35:33);Se(a,a._?1:0,1);Se(a,b?1:0,1);Se(a,p/2|0,4);n=0;for(i=1;i<a.L.d;i++)n=df(a,a.t[i],a.w[i]==-1?-1:a.t[a.w[i]],n);if(k){for(h=0;h<a.L.d;h++){c=a.t[h];for(m=uk(a.L,c);m<gk(a.L,c);m++)n=df(a,tk(a.L,c,m),c,n)}}if(n==0){a.e='';return}f=1<<p;l=n/(f/2-1);o=n+l/2;for(j=1;j<a.L.d;j++)Re(a,a.t[j],a.w[j]==-1?-1:a.t[a.w[j]],o,l,p);if(k){for(g=0;g<a.L.d;g++){c=a.t[g];for(m=uk(a.L,c);m<gk(a.L,c);m++)Re(a,tk(a.L,c,m),c,o,l,p)}}if(b){e=a._?1.5:(Wg(),Wg(),Vg);d=Th(a.L,a.L.d,a.L.e,e);Se(a,RJ(f-1,QJ(0,FD(0.5+$wnd.Math.log(d/0.1)*$wnd.Math.LOG10E/($wnd.Math.log(2000)*$wnd.Math.LOG10E)*(f-1)))),p);Se(a,We(Oh(a.L,a.t[0])/d,f),p);Se(a,We(Ph(a.L,a.t[0])/d,f),p);a._&&Se(a,We(Qh(a.L,a.t[0]),f),p)}a.e=Te(a)}
	function jq(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;a.d==null&&(a.d=JC(KD,XR,7,a.j.p,0,2));if(a.d[b]==null){m=JC(KD,jR,6,a.e.length,15,1);s=JC(NG,nR,6,a.j.o,16,1);d=Vh(a.j,0,b);e=Vh(a.j,1,b);m[0]=d;s[d]=true;j=0;n=0;while(j<=n){for(p=0;p<gk(a.j,m[j]);p++){f=tk(a.j,m[j],p);if(!s[f]&&f!=e){m[++n]=f;s[f]=true}}if(j==n)break;++j}l=n+1>(a.e.length/2|0);if((a.i&6)!=0){h=false;g=false;for(p=0;p<a.e.length;p++){Ci(a.j,a.e[p])&&(s[a.e[p]]?(h=true):(g=true))}h!=g&&(l=h)}i=2;a.d[b]=JC(KD,jR,6,l?a.e.length-n:n+2,15,1);for(q=0;q<a.e.length;q++){a.e[q]==d?(a.d[b][l?0:1]=q):a.e[q]==e?(a.d[b][l?1:0]=q):l^s[a.e[q]]&&(a.d[b][i++]=q)}}u=a.a[a.d[b][0]];v=a.b[a.d[b][0]];t=dq(u,v,a.a[a.d[b][1]],a.b[a.d[b][1]]);for(o=2;o<a.d[b].length;o++){r=a.d[b][o];k=$wnd.Math.sqrt((a.a[r]-u)*(a.a[r]-u)+(a.b[r]-v)*(a.b[r]-v));c=2*t-dq(u,v,a.a[r],a.b[r]);a.a[r]=u+k*$wnd.Math.sin(c);a.b[r]=v+k*$wnd.Math.cos(c)}}
	function gq(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I;if(a.e.length==1)return 0;D=e+$wnd.Math.sqrt(d);j=JC(ID,mR,6,36,15,1);for(p=0;p<a.e.length;p++){f=dq(b,c,a.a[p],a.b[p]);h=hq(eH(WG($wnd.Math.round(f*36/rR))));k=b-a.a[p];l=c-a.b[p];G=k*k+l*l;j[h]<G&&(j[h]=G)}w=-1;v=-1;for(q=0;q<36;q++){j[q]=$wnd.Math.sqrt(j[q]);if(w<j[q]){w=j[q];v=q}}F=v-18<0?v-18+36:v-18>=36?v-18-36:v-18;for(r=0;r<=18;r++){j[F+r<0?F+r+36:F+r>=36?F+r-36:F+r]+=0.01*r;j[F-r<0?F-r+36:F-r>=36?F-r-36:F-r]+=0.01*r}H=JC(ID,mR,6,9,15,1);for(s=1;s<9;s++)H[s]=$wnd.Math.sin(s*0.17453292519943295);I=D*D;B=iS;A=-1;for(g=0;g<36;g++){if(j[g]>=B)continue;u=j[g];for(o=1;o<9;o++){for(t=-1;t<=1;t+=2){C=g+t*o<0?g+t*o+36:g+t*o>=36?g+t*o-36:g+t*o;if(j[C]<=u)continue;m=j[C]*H[o];if(m<D){n=m*m;i=$wnd.Math.sqrt(I-n)+$wnd.Math.sqrt(j[C]*j[C]-n)-D;if(u<i){u=i;if(B<=i)break}}}if(B<=u)break}if(B>u){B=u;A=g}}return rR*A/36}
	function $p(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;d=JC(ID,mR,6,2,15,1);for(j=0;j<2;j++){a.c[j]/=a.a[j];a.d[j]/=a.a[j];d[j]=gq(a.b[j],a.c[j],a.d[j],a.b[1-j].e.length,b)}sq(a.b[0],a.c[0],a.d[0],tR-d[0]);sq(a.b[1],a.c[1],a.d[1],4.71238898038469-d[1]);w=iS;v=-1.7976931348623157E308;g=a.d[0]-a.d[1];for(k=0;k<a.b[1].b.length;k++){a.b[1].b[k]+=g;w>a.b[1].b[k]&&(w=a.b[1].b[k]);v<a.b[1].b[k]&&(v=a.b[1].b[k])}t=v-w+2*b;e=FD($wnd.Math.ceil(t));w+=(t-e)/2-b;r=JC(ID,mR,6,e,15,1);for(l=0;l<e;l++)r[l]=a.c[1]+b;for(m=0;m<a.b[1].b.length;m++){u=a.b[1].b[m]-w;s=FD(u-b);h=RJ(FD(u+b),e-1);for(q=s;q<=h;q++){r[q]>a.b[1].a[m]&&(r[q]=a.b[1].a[m])}}for(n=0;n<e;n++)r[n]-=b;f=a.c[0]-a.c[1];for(o=0;o<a.b[0].a.length;o++){p=FD(a.b[0].b[o]-w);p>=0&&p<r.length&&f<a.b[0].a[o]-r[p]&&(f=a.b[0].a[o]-r[p])}for(i=0;i<a.b[1].a.length;i++)a.b[1].a[i]+=f;if(c){sq(a.b[0],a.c[0],a.d[0],d[0]-tR);sq(a.b[1],a.c[0],a.d[0],d[0]-tR)}}
	function mp(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;if(b==0){lp(a);return}q=-1;r=0;f=1<<a.e.length-2;e=1<<a.e.length-1;h=1;g=2;for(j=0;j<a.e.length;j++){if((c&(e|h))==0&&(b&(e|h))!=0&&(b&f)==0){o=0;(c&f)!=0&&(o+=4);(b&e)!=0&&(o+=2);(b&h)!=0&&(o+=1);if(r<o){r=o;q=j}}f=e;e=h;h=g;g=1<<(j+1<a.e.length?j+1:j+1-a.e.length)}if(q==-1){lp(a);return}m=0;m|=1<<q;n=2;while(n<a.e.length-1){l=q+n<a.e.length?q+n:q+n-a.e.length;e=1<<(l==0?a.e.length-1:l-1);if((c&e)!=0){++n;continue}h=1<<l;if((b&e)!=0){if((c&h)!=0){lp(a);return}m|=h;n+=2;continue}g=1<<(l+1<a.e.length?l+1:l+1-a.e.length);if((b&h)!=0&&(c&g)!=0){m|=h;n+=3;continue}++n}if(m==0){lp(a);return}d=sR-sR*(a.e.length-2)/a.e.length;for(k=1;k<a.e.length;k++){a.a[k]=a.a[k-1]+$wnd.Math.sin(d*(k-1));a.b[k]=a.b[k-1]+$wnd.Math.cos(d*(k-1))}h=1;p=2*$wnd.Math.sin(d/2);for(i=0;i<a.e.length;i++){if((m&h)!=0){a.a[i]+=p*$wnd.Math.cos(d*(i-0.5));a.b[i]-=p*$wnd.Math.sin(d*(i-0.5))}h<<=1}}
	function fd(a){var b,c,d,e,f,g,h,i,j,k,l;a.n=JC(oF,QQ,40,a.H.o,0,1);for(h=0;h<a.H.p;h++)(ei(a.H,h)==2||ei(a.H,h)==26||ei(a.H,h)==64)&&jd(a,h);for(i=0;i<a.H.p;i++)ei(a.H,i)!=2&&ei(a.H,i)!=26&&ei(a.H,i)!=64&&jd(a,i);if((a.B&64)==0){for(g=0;g<a.H.p;g++){if(Yh(a.H,g)!=0){switch(Yh(a.H,g)){case 1:d=bi(a.H,g)==2?'E':yi(a.H,g)?'p':'P';break;case 2:d=bi(a.H,g)==2?'Z':yi(a.H,g)?'m':'M';break;default:d='?';}Nn(a,(a.R*2+1)/3|0);Ad(a,wi(a.H,g)?-3:448);b=Vh(a.H,0,g);c=Vh(a.H,1,g);k=(Jg(a.L,Oh(a.H,b))+Jg(a.L,Oh(a.H,c)))/2;l=(Kg(a.L,Ph(a.H,b))+Kg(a.L,Ph(a.H,c)))/2;e=(Jg(a.L,Oh(a.H,b))-Jg(a.L,Oh(a.H,c)))/3;f=(Kg(a.L,Ph(a.H,b))-Kg(a.L,Ph(a.H,c)))/3;md(a,k+f,l-e,d,true);Ad(a,a.K);Nn(a,a.R)}}}if((a.B&4)!=0){Nn(a,(a.R*2+1)/3|0);Ad(a,384);for(g=0;g<a.H.p;g++){b=Vh(a.H,0,g);c=Vh(a.H,1,g);j=$k(a.H,g)?'d':Yk(a.H,g)?'a':'';k=(Jg(a.L,Oh(a.H,b))+Jg(a.L,Oh(a.H,c)))/2;l=(Kg(a.L,Ph(a.H,b))+Kg(a.L,Ph(a.H,c)))/2;md(a,k,l,j+(''+g),true)}Ad(a,a.K);Nn(a,a.R)}}
	function Un(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p;d=true;i=0;p=0;m=a.i;a.c[b]=m;h=Rh(a.b,b);g=Gh(a.b,b);e=Ah(a.b,b);f=Kh(a.b,b);k=uk(a.b,b);e==0&&f==0&&Tn(h)&&(d=false);a.e[m]='';if(c!=-1){switch(bi(a.b,c)){case 0:a.e[m]+='~';break;case 2:a.e[m]+='=';break;case 3:a.e[m]+='#';}}d&&(a.e[m]+='[');f!=0&&(a.e[m]+=''+f);a.e[m]+=''+g;if(d){if(0<(o=Ek(a.b,b))){a.e[m]+='H';1<o&&(a.e[m]+=o)}}if(e!=0){e>0?(a.e[m]+='+'):(a.e[m]+='-');(e<0?-e:e)>1&&(a.e[m]+=''+(e<0?-e:e))}d&&(a.e[m]+=']');c!=-1&&(a.j[c]=true);a.g[b]=true;++a.i;for(n=0;n<k;++n)a.j[vk(a.b,b,n)]||++i;for(n=0;n<k;++n){j=tk(a.b,b,n);l=vk(a.b,b,n);if(a.j[l]){++p;continue}if(a.g[j]){++a.d;a.j[l]=true;switch(bi(a.b,l)){case 0:a.e[a.c[j]]+='~';a.e[m]+='~';break;case 2:a.e[a.c[j]]+='=';a.e[m]+='=';break;case 3:a.e[a.c[j]]+='#';a.e[m]+='3';}if(a.d>9){a.e[a.c[j]]+='%';a.e[m]+='%'}a.e[a.c[j]]+=''+a.d;a.e[m]+=''+a.d;continue}n-p<i-1&&(a.e[a.i++]='(');Un(a,j,l);n-p<i-1&&(a.e[a.i++]=')')}}
	function Pm(a,b,c){var d,e,f,g,h,i,j,k,l,m;i=uk(a.A,b);e=a.i[c];if(e>i)return false;k=Mh(a.A,b);g=Mh(a.d,c);f=Hh(a.d,c);j=Hh(a.A,b);if((g&1)!=0){if(f!=null){if((k&1)!=0){if(j==null)return false;if(!bn(f,j))return false}else{if(j!=null){if(dn(j,f))return false}else{if(an(Rh(a.A,b),f))return false}}}}else{if((k&1)!=0)return false;if(f!=null){if(j!=null){if(!bn(j,f))return false}else{if(!an(Rh(a.A,b),f))return false}}else{if(j!=null)return false;if(a.C[b]!==a.f[c])return false}}if((k|g)!=0){if((g&uR)!=0){if(a.A.I&&(k&uR)==0)return false;else if(e!=i)return false}if((g&cR)!=0){if(e>=i&&(k&cR)==0)return false}}if((a.B[b]&~a.e[c])!=0)return false;if(Ah(a.d,c)!=0&&Ah(a.d,c)!=Ah(a.A,b))return false;if(Kh(a.d,c)!=0&&Kh(a.d,c)!=Kh(a.A,b))return false;m=(Mh(a.d,c)&ER)>>22;if(m!=0){if(a.A.I&&m==(Mh(a.A,c)&ER)>>22)return true;d=false;l=Mk(a.A);for(h=0;h<l.i.a.length;h++){if(eN(l.j,h).length==m){if(Gm(l,h,b)){d=true;break}}}if(!d)return false}return true}
	function vH(){var a,b,c;b=$doc.compatMode;a=MC(FC(XF,1),bS,2,6,[IU]);for(c=0;c<a.length;c++){if(gK(a[c],b)){return}}a.length==1&&gK(IU,a[0])&&gK('BackCompat',b)?"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\"document.compatMode\" value=\""+b+'"/&gt;':"Your *.gwt.xml module configuration prohibits the use of the current document rendering mode (document.compatMode=' "+b+"').<br>Modify your application's host HTML page doctype, or update your custom "+"'document.compatMode' configuration property settings."}
	function wC(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p;f=-1;g=0;p=0;h=0;j=-1;k=b.length;n=c;l=true;for(;n<k&&l;++n){e=b.charCodeAt(n);switch(e){case 35:p>0?++h:++g;j>=0&&f<0&&++j;break;case 48:if(h>0){throw QG(new rJ("Unexpected '0' in pattern \""+b+'"'))}++p;j>=0&&f<0&&++j;break;case 44:j=0;break;case 46:if(f>=0){throw QG(new rJ('Multiple decimal separators in pattern "'+b+'"'))}f=g+p+h;break;case 69:if(!d){if(a.v){throw QG(new rJ('Multiple exponential symbols in pattern "'+b+'"'))}a.v=true;a.k=0}while(n+1<k&&b.charCodeAt(n+1)==48){++n;d||++a.k}if(!d&&g+p<1||a.k<1){throw QG(new rJ('Malformed exponential pattern "'+b+'"'))}l=false;break;default:--n;l=false;}}if(p==0&&g>0&&f>=0){m=f;f==0&&++m;h=g-m;g=m-1;p=1}if(f<0&&h>0||f>=0&&(f<g||f>g+p)||j==0){throw QG(new rJ('Malformed pattern "'+b+'"'))}if(d){return n-c}o=g+p+h;a.i=f>=0?o-f:0;if(f>=0){a.n=g+p-f;a.n<0&&(a.n=0)}i=f>=0?f:o;a.o=i-g;if(a.v){a.j=g+a.o;a.i==0&&a.o==0&&(a.o=1)}a.f=j>0?j:0;a.c=f==0||f==o;return n-c}
	function rq(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;o=a.a[b];s=a.b[b];f=JC(BE,OR,19,4,0,1);k=0;for(l=0;l<a.f.length;l++){if(k>=4)break;if(b==a.g[Vh(a.j,0,a.f[l])]||b==a.g[Vh(a.j,1,a.f[l])])continue;p=a.a[a.g[Vh(a.j,0,a.f[l])]];t=a.b[a.g[Vh(a.j,0,a.f[l])]];q=a.a[a.g[Vh(a.j,1,a.f[l])]];u=a.b[a.g[Vh(a.j,1,a.f[l])]];h=$wnd.Math.sqrt((p-o)*(p-o)+(t-s)*(t-s));i=$wnd.Math.sqrt((q-o)*(q-o)+(u-s)*(u-s));e=$wnd.Math.sqrt((q-p)*(q-p)+(u-t)*(u-t));if(h<e&&i<e){if(p==q){g=$wnd.Math.abs(o-p);g<0.5&&(f[k++]=new bq(dq(p,s,o,s),(0.5-g)/2))}else if(t==u){g=$wnd.Math.abs(s-t);g<0.5&&(f[k++]=new bq(dq(o,t,o,s),(0.5-g)/2))}else{m=(u-t)/(q-p);n=-1/m;c=t-m*p;d=s-n*o;r=(d-c)/(m-n);v=m*r+c;g=$wnd.Math.sqrt((r-o)*(r-o)+(v-s)*(v-s));g<0.5&&(f[k++]=new bq(dq(r,v,o,s),(0.5-g)/2))}continue}if(h<0.5){f[k++]=new bq(dq(p,t,o,s),(0.5-h)/2);continue}if(i<0.5){f[k++]=new bq(dq(q,u,o,s),(0.5-i)/2);continue}}if(k>0){j=Op(f,k);a.a[b]+=j.b*$wnd.Math.sin(j.a);a.b[b]+=j.b*$wnd.Math.cos(j.a)}}
	function pe(a,b,c){var d,e,f,g,h,i,j,k,l,m;m=MC(FC(KD,2),XR,7,0,[MC(FC(KD,1),jR,6,15,[2,1,2,1]),MC(FC(KD,1),jR,6,15,[1,2,2,1]),MC(FC(KD,1),jR,6,15,[1,1,2,2]),MC(FC(KD,1),jR,6,15,[2,1,1,2]),MC(FC(KD,1),jR,6,15,[2,2,1,1]),MC(FC(KD,1),jR,6,15,[1,2,1,2])]);d=JC(ID,mR,6,gk(a.L,b),15,1);for(g=0;g<gk(a.L,b);g++)d[g]=Uh(a.L,tk(a.L,b,c[g]),b);j=yk(a.L,b,c,d,null)<<24>>24;if(j!=3)return j;k=0;l=0;for(h=0;h<gk(a.L,b);h++){e=vk(a.L,b,c[h]);if(Vh(a.L,0,e)==b){if(ei(a.L,e)==9){l!=0&&Hj(a.L,b);k=h;l=1}if(ei(a.L,e)==17){l!=0&&Hj(a.L,b);k=h;l=2}}}if(l==0)return 3;for(f=1;f<gk(a.L,b);f++)d[f]<d[0]&&(d[f]+=rR);if(gk(a.L,b)==3){switch(k){case 0:(d[1]<d[2]&&d[2]-d[1]<sR||d[1]>d[2]&&d[1]-d[2]>sR)&&(l=3-l);break;case 1:d[2]-d[0]>sR&&(l=3-l);break;case 2:d[1]-d[0]<sR&&(l=3-l);}return l==1?2:1}i=0;d[1]<=d[2]&&d[2]<=d[3]?(i=0):d[1]<=d[3]&&d[3]<=d[2]?(i=1):d[2]<=d[1]&&d[1]<=d[3]?(i=2):d[2]<=d[3]&&d[3]<=d[1]?(i=3):d[3]<=d[1]&&d[1]<=d[2]?(i=4):d[3]<=d[2]&&d[2]<=d[1]&&(i=5);return m[i][k]==l?2:1}
	function Ni(a,b,c,d,e,f,g){var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;if(b==d){n=Th(a,a.o,a.p,Vg)}else{u=a.H[b].a-a.H[d].a;v=a.H[b].b-a.H[d].b;n=$wnd.Math.sqrt(u*u+v*v)}h=b;o=Ij(a,b)!=3;for(t=1;t<c;t++){q=a.H[h].a+n*$wnd.Math.sin(f);r=a.H[h].b+n*$wnd.Math.cos(f);s=-1;for(p=0;p<a.o;p++){if($wnd.Math.abs(q-a.H[p].a)<4&&$wnd.Math.abs(r-a.H[p].b)<4){s=p;break}}if(s==-1){s=Xg(a,q,r,0);a.H[s].a=q;a.H[s].b=r;a.H[s].c=0}m=ai(a,h,s);if(m==-1){m=Zg(a,h,s,(j=a.A[h],j>=3&&j<=4||j>=11&&j<=13||j>=19&&j<=31||j>=37&&j<=51||j>=55&&j<=84||j>=87&&j<=103||(k=a.A[s],k>=3&&k<=4||k>=11&&k<=13||k>=19&&k<=31||k>=37&&k<=51||k>=55&&k<=84||k>=87&&k<=103)?32:1));if(e){o&&Ij(a,a.B[0][m])<4&&Ij(a,a.B[1][m])<3&&(a.F[m]=2);o=!o}}h=s;f+=g}m=ai(a,h,d);m==-1&&(m=Zg(a,h,d,(l=a.A[h],l>=3&&l<=4||l>=11&&l<=13||l>=19&&l<=31||l>=37&&l<=51||l>=55&&l<=84||l>=87&&l<=103||(i=a.A[d],i>=3&&i<=4||i>=11&&i<=13||i>=19&&i<=31||i>=37&&i<=51||i>=55&&i<=84||i>=87&&i<=103)?32:1)));e&&o&&Ij(a,a.B[0][m])<4&&Ij(a,a.B[1][m])<4&&(a.F[m]=2)}
	function Xj(a){var b,c,d,e,f,g,h,i,j,k,l,m,n;a.g=JC(KD,jR,6,a.o,15,1);a.c=JC(KD,jR,6,a.o,15,1);a.f=JC(KD,XR,7,a.o,0,2);a.i=JC(KD,XR,7,a.o,0,2);a.j=JC(KD,XR,7,a.o,0,2);a.k=JC(KD,jR,6,a.d,15,1);k=JC(KD,jR,6,a.o,15,1);for(h=0;h<a.p;h++){++k[a.B[0][h]];++k[a.B[1][h]]}for(d=0;d<a.o;d++){a.f[d]=JC(KD,jR,6,k[d],15,1);a.i[d]=JC(KD,jR,6,k[d],15,1);a.j[d]=JC(KD,jR,6,k[d],15,1)}m=false;for(i=0;i<a.e;i++){n=bi(a,i);if(n==0){m=true;continue}for(l=0;l<2;l++){e=a.B[l][i];b=a.c[e];a.j[e][b]=n;a.f[e][b]=a.B[1-l][i];a.i[e][b]=i;++a.c[e];++a.g[e];e<a.d&&(n>1?(a.k[e]+=n+n-2):a.F[i]==64&&(a.k[e]=2))}}for(j=a.e;j<a.p;j++){n=bi(a,j);if(n==0){m=true;continue}for(l=0;l<2;l++){e=a.B[l][j];b=a.c[e];a.j[e][b]=n;a.f[e][b]=a.B[1-l][j];a.i[e][b]=j;++a.c[e];a.B[1-l][j]<a.d&&++a.g[e]}}if(m){b=JC(KD,jR,6,a.o,15,1);for(e=0;e<a.o;e++)b[e]=a.c[e];for(g=0;g<a.p;g++){n=bi(a,g);if(n==0){for(l=0;l<2;l++){f=a.B[l][g];a.j[f][b[f]]=0;a.f[f][b[f]]=a.B[1-l][g];a.i[f][b[f]]=g;++b[f]}}}}for(c=0;c<a.d;c++)a.k[c]=a.k[c]/2|0}
	function hp(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;m=new pN;r=new pN;d=new pN;for(f=new JN(a.c);f.a<f.c.a.length;){e=IN(f);g=0;d.a=JC(RF,OR,1,0,5,1);for(h=0;h<e.e.length;h++){b=e.e[h];c=a.i[b];if(c!=0){bN(d,new fq(e,h,c));g+=c}}if(g!=0){mN(d,new Pp);for(j=new JN(d);j.a<j.c.a.length;){i=IN(j);if(g*i.b>0){c=(g<0?-g:g)>=PJ(i.b)?i.b:g;g-=c;bN(c<0?m:r,new fq(e,i.a,c));if(g==0)break}}}}if(m.a.length==0||r.a.length==0)return null;mN(r,new Tp);mN(m,new Xp);for(p=new JN(r);p.a<p.c.a.length;){n=IN(p);for(l=new JN(m);l.a<l.c.a.length;){k=IN(l);if(n.b==-k.b){a.i[nq(n.c,n.a)]-=n.b;a.i[nq(k.c,k.a)]-=k.b;return new aq(n.c,k.c,n.a,k.a)}}}for(q=new JN(r);q.a<q.c.a.length;){n=IN(q);for(l=new JN(m);l.a<l.c.a.length;){k=IN(l);if(n.b>-k.b){a.i[nq(n.c,n.a)]+=k.b;a.i[nq(k.c,k.a)]-=k.b;return new aq(n.c,k.c,n.a,k.a)}}}for(o=new JN(r);o.a<o.c.a.length;){n=IN(o);for(l=new JN(m);l.a<l.c.a.length;){k=IN(l);if(n.b<-k.b){a.i[nq(n.c,n.a)]-=n.b;a.i[nq(k.c,k.a)]+=n.b;return new aq(n.c,k.c,n.a,k.a)}}}return null}
	function Yj(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;no(a,1);for(j=0;j<a.p;j++){if(bi(a,j)<3){if(a.q[a.B[0][j]]>0&&a.q[a.B[1][j]]<0){e=a.B[0][j];f=a.B[1][j]}else if(a.q[a.B[0][j]]<0&&a.q[a.B[1][j]]>0){e=a.B[1][j];f=a.B[0][j]}else continue;i=a.A[e];if(i>=3&&i<=4||i>=11&&i<=13||i>=19&&i<=31||i>=37&&i<=51||i>=55&&i<=84||i>=87&&i<=103||(h=a.A[f],h>=3&&h<=4||h>=11&&h<=13||h>=19&&h<=31||h>=37&&h<=51||h>=55&&h<=84||h>=87&&h<=103))continue;if(a.A[e]<9)if(Hk(a,e)>3)continue;a.q[e]-=1;a.q[f]+=1;bi(a,j)==1?(a.F[j]=2):(a.F[j]=4);a.Q=0}}p=0;o=0;m=0;for(d=0;d<a.o;d++){p+=a.q[d];if(a.q[d]<0){++o;Uj(a.A[d])&&(m+=a.q[d])}}if(!b&&p!=0)throw QG(new pB("molecule's overall charges are not balanced"));no(a,1);q=0;for(g=0;g<a.o;g++){if(a.q[g]>0){if(!Uk(a,g)&&Uj(a.A[g])){k=RJ(Ek(a,g),a.q[g]);if(k!=0&&m>=k){q-=k;m+=k;a.q[g]-=k;a.Q&=1}}}}if(q<0){n=JC(KD,jR,6,o,15,1);o=0;for(e=0;e<a.o;e++){a.q[e]<0&&(Vk(a,e)||(n[o++]=(a.A[e]<<16)+e))}bO(n);for(l=n.length-1;p<0&&l>=n.length-o;l--){c=n[l]&fR;if(Uj(a.A[c])){k=RJ(-q,-a.q[c]);q+=k;a.q[c]+=k;a.Q&=1}}}return p}
	function Ze(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;if(a.L.d==0)return;if(a.A)return;a.C=0;v=0;for(c=1;c<a.L.d;c++)a.c[c]>a.c[v]&&(v=c);d=JC(NG,nR,6,a.L.d,16,1);g=JC(NG,nR,6,a.L.e,16,1);a.B=JC(KD,jR,6,a.L.d,15,1);a.t=JC(KD,jR,6,a.L.d,15,1);a.w=JC(KD,jR,6,a.L.d,15,1);a.u=JC(KD,jR,6,a.L.e,15,1);a.t[0]=v;a.B[v]=0;d[v]=true;e=1;i=0;j=1;k=0;while(i<a.L.d){if(i<j){while(true){o=0;p=0;m=-1;b=a.t[i];for(q=0;q<hk(a.L,b);q++){if(q<uk(a.L,b)||q>=gk(a.L,b)){h=tk(a.L,b,q);if(!d[h]&&a.c[h]>m){o=h;p=vk(a.L,b,q);m=a.c[h]}}}if(m==-1)break;a.B[o]=j;a.w[j]=i;a.t[j++]=o;a.u[k++]=p;d[o]=true;g[p]=true}++i}else{n=0;m=-1;for(b=0;b<a.L.d;b++){if(!d[b]&&a.c[b]>m){n=b;m=a.c[b]}}++e;a.B[n]=j;a.w[j]=-1;a.t[j++]=n;d[n]=true}}a.v=JC(KD,jR,6,2*(a.L.e-k),15,1);while(true){s=a.L.K;t=a.L.K;u=-1;for(f=0;f<a.L.e;f++){if(!g[f]){if(a.B[Vh(a.L,0,f)]<a.B[Vh(a.L,1,f)]){r=a.B[Vh(a.L,0,f)];l=a.B[Vh(a.L,1,f)]}else{r=a.B[Vh(a.L,1,f)];l=a.B[Vh(a.L,0,f)]}if(r<s||r==s&&l<t){s=r;t=l;u=f}}}if(u==-1)break;g[u]=true;a.u[k++]=u;a.v[2*a.C]=s;a.v[2*a.C+1]=t;++a.C}a.A=true}
	function oe(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;if(a.W[b]!=0)return false;if(Rh(a.L,b)!=6&&Rh(a.L,b)!=7&&Rh(a.L,b)!=14&&Rh(a.L,b)!=15&&Rh(a.L,b)!=16)return false;if(kk(a.L,b)!=0){if(uk(a.L,b)==2&&wk(a.L,b,0)==2&&wk(a.L,b,1)==2)return he(a,b,c);if(Rh(a.L,b)!=15&&Rh(a.L,b)!=16)return false}if(uk(a.L,b)<3||gk(a.L,b)>4)return false;if(Rh(a.L,b)==7&&!a.M[b])return false;n=JC(KD,jR,6,4,15,1);o=JC(KD,jR,6,4,15,1);j=JC(NG,nR,6,4,16,1);for(h=0;h<gk(a.L,b);h++){f=-1;e=0;for(i=0;i<gk(a.L,b);i++){if(!j[i]){if(f<a.c[tk(a.L,b,i)]){f=a.c[tk(a.L,b,i)];e=i}}}n[h]=e;o[h]=f;j[e]=true}if(gk(a.L,b)==4&&o[0]===o[1]&&o[2]===o[3])return false;if(gk(a.L,b)==4&&(o[0]===o[2]||o[1]===o[3]))return false;if(gk(a.L,b)==3&&o[0]===o[2])return false;k=0;l=0;m=false;for(g=1;g<gk(a.L,b);g++){if(o[g-1]===o[g]){if(!c||o[g]==0)return false;k=tk(a.L,b,n[g-1]);l=tk(a.L,b,n[g]);cl(a.L,vk(a.L,b,n[g]))&&(a.P[b]=true);m=true}}if(c&&!m)return false;d=a._?qe(a,b,n):pe(a,b,n);if(c){if(a.Q&&(a.K&2)!=0||!a.Q&&(a.K&4)!=0){if(d==1){If(a.b[k],wR);If(a.b[l],256)}else if(d==2){If(a.b[k],256);If(a.b[l],wR)}}}else{a.W[b]=d}return true}
	function de(){de=pH;be=MC(FC(MG,1),RR,6,15,[-1,-1,-1,0,0,1,2,3,4,5,-1,0,0,0,6,7,8,9,-1,0,0,10,10,10,10,10,10,10,10,10,10,1,11,11,12,13,-1,0,0,10,10,10,10,10,10,10,10,10,10,0,0,0,11,14,-1,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,10,10,10,10,10,10,10,10,1,1,1,1,-1,-1,-1,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);ce=MC(FC(MG,1),RR,6,15,[-1,-1,-1,0,0,0,2,5,5,5,-1,0,0,0,0,9,9,9,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,-1,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,9,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])}
	function Xm(a,b){var c,d,e,f,g,h,i,j,k,l;a.v=new pN;BO(a.H.a);BO(a.c.a);if(!a.A||!a.d)return 0;if(a.d.d-a.j>a.A.d||a.d.e-a.k>a.A.e)return 0;if(a.d.d-a.j==0)return 0;gn(a,b);c=JC(NG,nR,6,a.A.d,16,1);a.w=JC(KD,jR,6,a.d.d,15,1);RN(a.w);g=JC(KD,jR,6,a.t,15,1);UN(g,g.length,-1);e=0;while(true){j=a.q[e]==-1?a.A.d:hk(a.A,a.w[a.q[e]]);++g[e];if(g[e]==j){g[e]=-1;if(e==0)break;--e;a.p[e]||(c[a.w[a.o[e]]]=false);continue}if(a.q[e]==-1){if(!c[g[e]]){if(Pm(a,g[e],a.o[e])){a.w[a.o[e]]=g[e];c[g[e]]=true;++e}}}else{if(tk(a.A,a.w[a.q[e]],g[e])>=a.A.d)continue;d=tk(a.A,a.w[a.q[e]],g[e]);if(a.p[e]){d==a.w[a.o[e]]&&Qm(a,vk(a.A,a.w[a.q[e]],g[e]),a.r[e])&&++e}else{if(!c[d]){if(Pm(a,d,a.o[e])&&Qm(a,vk(a.A,a.w[a.q[e]],g[e]),a.r[e])){c[d]=true;a.w[a.o[e]]=d;++e}}}}if(e==a.s){if(Wm(a,false)&&Um(a,false)&&Tm(a,c,false)){if(a.j==0)return 1;h=false;if(a.j!=0){k=NN(a.w,a.w.length);bO(k);if(wP(a.c,k)){h=true}else if(Vm(a,c,g)){vP(a.c,k);l=JC(KD,jR,6,k.length,15,1);for(f=a.v.a.length-1;f>=0;f--){i=eN(a.v,f);IK(i,l,l.length);bO(l);YA(l,k)==0&&iN(a.v,f)}h=true}}h||Om(a)}--e;a.p[e]||(c[a.w[a.o[e]]]=false)}}return a.v.a.length}
	function Od(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;no(a.e,1);if(b!=null){a.d=b}else{a.d=JC(NG,nR,6,a.e.e,16,1);for(g=0;g<a.e.e;g++){if(ei(a.e,g)==64){a.d[g]=true;Aj(a.e,g,1)}}}a.f=0;m=JC(NG,nR,6,a.e.d,16,1);for(h=0;h<a.e.e;h++){if(a.d[h]){++a.c;for(k=0;k<2;k++){if(!m[Vh(a.e,k,h)]){m[Vh(a.e,k,h)]=true;++a.b}}}}if(a.c==0)return true;a.a=false;s=new Mm(a.e,1);a.e.I&&Qd(a);c&&Hd(a,s);for(e=0;e<a.e.d;e++){if(Nd(a,e)){s.a[e]==7&&(Rh(a.e,e)==5&&Ah(a.e,e)==0||Rh(a.e,e)==6&&Ah(a.e,e)==1)&&Td(a,e);s.a[e]==5&&(Rh(a.e,e)==6&&Ah(a.e,e)==-1||Rh(a.e,e)==7&&Ah(a.e,e)==0&&gk(a.e,e)==3||Rh(a.e,e)==8&&Ah(a.e,e)==0&&uk(a.e,e)==2||Rh(a.e,e)==16&&Ah(a.e,e)==0&&uk(a.e,e)==2)&&Td(a,e)}}Sd(a,s);Ud(a);Rd(a);while(a.c!=0){j=false;for(g=0;g<a.e.e;g++){if(a.d[g]){d=0;for(o=0;o<2;o++){i=Vh(a.e,o,g);for(p=0;p<uk(a.e,i);p++)a.d[vk(a.e,i,p)]&&++d}if(d==4){Pd(a,g);Rd(a);j=true;break}}}if(!j){for(q=0;q<s.i.a.length;q++){if(eN(s.j,q).length==6){n=true;r=eN(s.j,q);for(l=0;l<6;l++){if(!a.d[r[l]]){n=false;break}}if(n){for(k=0;k<6;k+=2)Pd(a,r[k]);j=true;break}}}}if(!j){for(f=0;f<a.e.e;f++){if(a.d[f]){Pd(a,f);Rd(a);break}}}}return a.b==a.f}
	function Yn(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;no(a.b,1);a.a=JC(NG,nR,6,a.b.e,16,1);for(g=0;g<a.b.e;g++){if(ei(a.b,g)==64){Aj(a.b,g,1);a.a[g]=true}}w=new Mm(a.b,3);m=JC(NG,nR,6,w.i.a.length,16,1);for(s=0;s<w.i.a.length;s++){u=eN(w.i,s);m[s]=true;for(l=0;l<u.length;l++){if(!Ci(a.b,u[l])){m[s]=false;break}}if(m[s]){v=eN(w.j,s);for(k=0;k<v.length;k++)a.a[v[k]]=true}}for(h=0;h<a.b.e;h++){!a.a[h]&&w.b[h]!=0&&Ci(a.b,Vh(a.b,0,h))&&Ci(a.b,Vh(a.b,1,h))&&Wn(a,h)}no(a.b,3);for(t=0;t<w.i.a.length;t++){if(m[t]){u=eN(w.i,t);for(k=0;k<u.length;k++){if(!ao(a,u[k])){hj(a.b,u[k],false);for(o=0;o<uk(a.b,u[k]);o++)a.a[vk(a.b,u[k],o)]=false}}}}_n(a);for(r=0;r<w.i.a.length;r++){if(m[r]&&eN(w.j,r).length==6){v=eN(w.j,r);n=true;for(e=0,f=v.length;e<f;++e){i=v[e];if(!a.a[i]){n=false;break}}if(n){$n(a,v[0]);$n(a,v[2]);$n(a,v[4]);_n(a)}}}for(q=5;q>=4;q--){do{p=false;for(i=0;i<a.b.e;i++){if(a.a[i]){b=0;for(k=0;k<2;k++){j=Vh(a.b,k,i);for(o=0;o<uk(a.b,j);o++)a.a[vk(a.b,j,o)]&&++b}if(b==q){$n(a,i);_n(a);p=true;break}}}}while(p)}for(d=0;d<a.b.e;d++)if(a.a[d])throw QG(new pB(xS));for(c=0;c<a.b.d;c++)if(Ci(a.b,c))throw QG(new pB(xS))}
	function Nm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;this.g=a;this.f=7;this.i=new pN;this.j=new pN;this.a=JC(KD,jR,6,this.g.d,15,1);this.b=JC(KD,jR,6,this.g.e,15,1);this.g.gb(1);m=JC(NG,nR,6,this.g.d,16,1);n=JC(NG,nR,6,this.g.e,16,1);do{g=false;for(c=0;c<this.g.d;c++){if(!m[c]){q=0;for(l=0;l<uk(this.g,c);l++)m[tk(this.g,c,l)]||++q;if(q<2||Di(this.g,c)){m[c]=true;for(k=0;k<uk(this.g,c);k++)n[vk(this.g,c,k)]=true;g=true}}}}while(g);s=0;while(s<this.g.d&&m[s])++s;if(s==this.g.d)return;i=JC(KD,jR,6,this.g.d,15,1);i[0]=s;p=JC(KD,jR,6,this.g.d,15,1);p[0]=-1;h=JC(KD,jR,6,this.g.d,15,1);h[s]=1;f=0;j=0;o=1;while(f<=j){for(k=0;k<uk(this.g,i[f]);k++){e=tk(this.g,i[f],k);if(e==p[i[f]])continue;if(h[e]!=0){vm(this,vk(this.g,i[f],k),m);continue}if(!m[e]){h[e]=o;p[e]=i[f];i[++j]=e}}++f;if(f>j){for(c=0;c<this.g.d;c++){if(h[c]==0&&!m[c]){h[c]=++o;i[++j]=c;p[c]=-1;break}}}}if((b&4)!=0){this.d=JC(NG,nR,6,this.i.a.length,16,1);this.e=JC(NG,nR,6,this.i.a.length,16,1);this.c=JC(KD,jR,6,this.i.a.length,15,1);xm(this,this.d,this.e,this.c)}if((b&2)!=0){for(d=0;d<this.g.e;d++){if(!n[d]&&bi(this.g,d)!=0){r=ym(this,d,m);r!=null&&Km(this,r,Dm(this,r))}}}}
	function ed(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p;e=new Gd;i=new Gd;k=new NH;j=new NH;g=Vh(a.H,0,c);h=Vh(a.H,1,c);if(d){m=b.a;b.a=b.b;b.b=m;m=b.c;b.c=b.d;b.d=m;n=g;g=h;h=n}if(!wd(a,b))return;if(cl(a.H,c)){e.a=b.a;e.c=b.c;e.b=b.b;e.d=b.d;l=d?-vd(a,c):vd(a,c);l==0&&(l=1);dd(a,b.b-b.a,b.d-b.c,k);if(l>0){i.a=b.a+k.a;i.c=b.c+k.b;i.b=b.b+k.a;i.d=b.d+k.b;if(cd(a,g,h,1,j)||uk(a.H,g)>1){i.a+=j.a+k.b;i.c+=j.b-k.a}}else{i.a=b.a-k.a;i.c=b.c-k.b;i.b=b.b-k.a;i.d=b.d-k.b;if(cd(a,g,h,-1,j)||uk(a.H,g)>1){i.a+=j.a+k.b;i.c+=j.b-k.a}}ei(a.H,c)==26&&ud(e,i);wd(a,e)&&Qc(a,e,g,h);ei(a.H,c)==64?wd(a,i)&&Oc(a,i,g,h):wd(a,i)&&Qc(a,i,g,h)}else{dd(a,b.b-b.a,b.d-b.c,k);o=k.a/2;p=k.b/2;f=false;e.a=b.a+o;e.c=b.c+p;e.b=b.b+o;e.d=b.d+p;if(uk(a.H,g)>1){if(cd(a,g,h,1,j)){e.a+=j.a;e.c+=j.b;if(uk(a.H,g)==2){if(j.a!=0||j.b!=0){e.a+=k.b;e.c-=k.a}}}else{a.n[g]=new OH(e.a,e.c)}}i.a=b.a-o;i.c=b.c-p;i.b=b.b-o;i.d=b.d-p;if(uk(a.H,g)>1){if(cd(a,g,h,0,j)){i.a+=j.a;i.c+=j.b;if(uk(a.H,g)==2){if(j.a!=0||j.b!=0){i.a+=k.b;i.c-=k.a}}}else{a.n[g]=new OH(i.a,i.c);f=true}}ei(a.H,c)==26&&ud(e,i);if(ei(a.H,c)==64){if(f){Oc(a,e,g,h);Qc(a,i,g,h)}else{Qc(a,e,g,h);Oc(a,i,g,h)}}else{Qc(a,e,g,h);Qc(a,i,g,h)}}}
	function wm(a,b,c,d,e,f,g){var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;s=eN(a.i,b);t=eN(a.j,b);u=t.length;j=0;i=0;v=false;for(q=0;q<u;q++){j<<=1;i<<=1;if(bi(a.g,t[q])>1||ei(a.g,t[q])==64){j|=1}else{h=c[b][q];if(h!=-1){if(d[h]){if(e[h]){j|=1;f[h]||(i|=1)}}else{v=true}}}}p=false;switch(u){case 3:k=MC(FC(KD,1),jR,6,15,[2,1,4]);p=true;for(o=0;o<3;o++){if((j&k[o])==k[o]){if(Rh(a.g,s[o])==6&&Ah(a.g,s[o])==1||Rh(a.g,s[o])==5&&Ah(a.g,s[o])==0){e[b]=true;g[b]=o;(i&k[o])==0&&(p=false)}}}break;case 5:l=MC(FC(KD,1),jR,6,15,[10,5,18,9,20]);p=true;for(r=0;r<5;r++){if((j&l[r])==l[r]){switch(Rh(a.g,s[r])){case 6:if(Ah(a.g,s[r])==-1){e[b]=true;g[b]=r;(i&l[r])==0&&(p=false)}break;case 7:if(Ah(a.g,s[r])<=0){e[b]=true;g[b]=r}break;case 8:e[b]=true;g[b]=r;break;case 16:if(uk(a.g,s[r])==2){e[b]=true;g[b]=r}}}}break;case 6:p=true;if((j&21)==21){e[b]=true;(i&21)==0&&(p=false)}if((j&42)==42){e[b]=true;(i&42)==0&&(p=false)}break;case 7:m=MC(FC(KD,1),jR,6,15,[42,21,74,37,82,41,84]);p=true;for(n=0;n<7;n++){if((j&m[n])==m[n]){if(Rh(a.g,s[n])==6&&Ah(a.g,s[n])==1||Rh(a.g,s[n])==5&&Ah(a.g,s[n])==0){e[b]=true;g[b]=n;(i&m[n])==0&&(p=false)}}}}e[b]&&!p&&(f[b]=true);if(e[b])return true;return !v}
	function pp(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L;t=JC(KD,jR,6,e,15,1);u=JC(KD,jR,6,e,15,1);for(p=0;p<e;p++){t[p]=oq(b,d[p]);u[p]=oq(c,d[p])}F=0;H=0;G=0;I=0;for(q=0;q<e;q++){F+=b.a[t[q]];H+=b.b[t[q]];G+=c.a[u[q]];I+=c.b[u[q]]}F/=e;H/=e;G/=e;I/=e;tq(c,F-G,H-I);j=JC(BE,OR,19,e,0,1);l=JC(BE,OR,19,e,0,1);f=JC(BE,OR,19,e,0,1);g=JC(BE,OR,19,e,0,1);for(r=0;r<e;r++){j[r]=new cq(F,H,b.a[t[r]],b.b[t[r]]);l[r]=new cq(F,H,c.a[u[r]],c.b[u[r]]);f[r]=new bq(j[r].a-l[r].a,j[r].b*l[r].b);g[r]=new bq(j[r].a+l[r].a,j[r].b*l[r].b)}w=Op(f,e);A=Op(g,e);K=0;L=0;for(s=0;s<e;s++){for(v=0;v<gk(a.f,d[s]);v++){h=tk(a.f,d[s],v);pq(b,h)&&!pq(c,h)&&++K;!pq(b,h)&&pq(c,h)&&++L}}k=JC(BE,OR,19,K,0,1);m=JC(BE,OR,19,L,0,1);n=JC(BE,OR,19,L,0,1);K=0;L=0;for(o=0;o<e;o++){for(v=0;v<gk(a.f,d[o]);v++){h=tk(a.f,d[o],v);if(pq(b,h)&&!pq(c,h)){i=oq(b,h);k[K]=new cq(b.a[t[o]],b.b[t[o]],b.a[i],b.b[i]);++K}if(!pq(b,h)&&pq(c,h)){i=oq(c,h);J=new cq(c.a[u[o]],c.b[u[o]],c.a[i],c.b[i]);m[L]=new bq(w.a+J.a,J.b);n[L]=new bq(A.a-J.a,J.b);++L}}}B=Op(k,K);C=Op(m,L);D=Op(n,L);if($wnd.Math.abs(np(B.a,C.a))>$wnd.Math.abs(np(B.a,D.a))){sq(c,F,H,w.a)}else{iq(c,F,H);sq(c,F,H,A.a)}return tp(a,b,c,e)}
	function ee(a,b,c){de();var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;no(a,3);p=JC(LD,RR,6,a.g[b],14,1);for(l=0;l<a.g[b];l++){g=0;i=0;if((c&32)!=0){h=a.j[b][l];TG(h,3)<0&&Yk(a,a.i[b][l])&&(h=0);i=RG(i,h)}f=a.f[b][l];if((c&128)!=0){if(be[a.A[f]]==-1)throw QG(new pB(SR+a.A[f]));g=RG(g,be[a.A[f]])}else if((c&64)!=0){if(ce[a.A[f]]==-1)throw QG(new pB(SR+a.A[f]));g=RG(g,ce[a.A[f]])}if((c&256)!=0){r=a.g[f]-1;r>3&&(r=3);(c&512)==0&&r>1&&(r=1);g=RG(g,r<<4)}(c&wR)!=0&&(a.s[f]&8)!=0&&(g=RG(g,64));(c&uR)!=0&&(a.s[f]&cR)!=0&&(g=RG(g,128));t=RG(g,aH(i,8));n=0;while(TG(t,p[n])<0)++n;for(o=l;o>n;o--)p[o]=p[o-1];p[n]=t}q=a.g[b]<4?a.g[b]:4;e=0;for(m=0;m<q;m++){e=aH(e,10);e=RG(e,p[m])}e=aH(e,10);if(be[a.A[b]]==-1)throw QG(new pB(SR+a.A[b]));e=_G(e,be[a.A[b]]);if((c&2)!=0){s=!!a.n&&b<a.d?zm(a.n,b):0;s>9&&(s=9);s>2&&(s-=2);e=_G(e,s<<4)}else (c&1)!=0&&(a.s[b]&8)!=0&&(e=_G(e,64));(c&4)!=0&&(a.s[b]&cR)!=0&&(e=RG(e,128));(c&8)!=0&&(a.s[b]&TR)!=0&&(e=RG(e,256));(c&16)!=0&&(a.s[b]&dR)!=0&&(e=RG(e,512));if($G(SG(e,UR),0)){j=new rB(VR);fB(j,(HK(),GK),'')}if($G(SG(e,WR),0)){j=new rB(VR);fB(j,(HK(),GK),'')}if((c&cR)!=0){Xd(a,b)&&(e=RG(e,UR));d=false;if($d(a,b)){for(k=0;k<a.d;k++){if(Yd(a,k)){d=true;break}}}d&&(e=RG(e,WR))}return e}
	function pl(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;if((a.s[b]&3)==0||(a.s[b]&3)==3)return;if(a.k[b]==2&&a.g[b]==2){ml(a,b);return}if(a.g[b]<3||a.g[b]>4){jj(a,b,0,false);return}p=Ok(a,b);c=a.c[b];d=JC(ID,mR,6,c,15,1);for(h=0;h<c;h++)d[h]=Uh(a,a.f[b][p[h]],b);for(i=0;i<c;i++)a.B[0][a.i[b][i]]==b&&bi(a,a.i[b][i])==1&&(a.F[a.i[b][i]]=1);if(nl(a,b,p,d))return;n=-1;for(j=0;j<c;j++){f=a.i[b][j];if((a.F[f]==17||a.F[f]==9)&&a.B[0][f]==b){a.F[a.i[b][j]]=1;n==-1?(n=f):(n=-2)}}n<0&&(n=kl(a,b));if(a.B[0][n]!=b){a.B[1][n]=a.B[0][n];a.B[0][n]=b}o=-1;for(k=0;k<c;k++){if(n==a.i[b][p[k]]){o=k;break}}q=MC(FC(KD,2),XR,7,0,[MC(FC(KD,1),jR,6,15,[2,1,2,1]),MC(FC(KD,1),jR,6,15,[1,2,2,1]),MC(FC(KD,1),jR,6,15,[1,1,2,2]),MC(FC(KD,1),jR,6,15,[2,1,1,2]),MC(FC(KD,1),jR,6,15,[2,2,1,1]),MC(FC(KD,1),jR,6,15,[1,2,1,2])]);for(g=1;g<c;g++)d[g]<d[0]&&(d[g]+=rR);if(c==3){l=false;switch(o){case 0:l=d[1]<d[2]&&d[2]-d[1]<sR||d[1]>d[2]&&d[1]-d[2]>sR;break;case 1:l=d[2]-d[0]>sR;break;case 2:l=d[1]-d[0]<sR;}e=(a.s[b]&3)==1^l?17:9}else{m=0;d[1]<=d[2]&&d[2]<=d[3]?(m=0):d[1]<=d[3]&&d[3]<=d[2]?(m=1):d[2]<=d[1]&&d[1]<=d[3]?(m=2):d[2]<=d[3]&&d[3]<=d[1]?(m=3):d[3]<=d[1]&&d[1]<=d[2]?(m=4):d[3]<=d[2]&&d[2]<=d[1]&&(m=5);e=(a.s[b]&3)==1^q[m][o]==1?9:17}a.F[n]=e}
	function te(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;a.M=JC(NG,nR,6,a.L.d,16,1);for(b=0;b<a.L.d;b++){if(Rh(a.L,b)==7){if(uk(a.L,b)==4){a.M[b]=true;continue}if(uk(a.L,b)==3){if(Ah(a.L,b)==1){a.M[b]=true;continue}if(_k(a.L,b))continue;if((a.K&32)!=0){a.M[b]=true;continue}if(mk(a.L,b)!=3)continue;v=ok(a.L,b);if(v>7)continue;t=Mk(a.L);u=0;while(u<t.i.a.length){if(eN(t.j,u).length==v&&Gm(t,u,b))break;++u}i=-1;j=-1;for(l=0;l<3;l++){h=vk(a.L,b,l);if(!Hm(t,u,h)){i=tk(a.L,b,l);j=h;break}}n=JC(NG,nR,6,a.L.e,16,1);n[j]=true;o=JC(KD,jR,6,11,15,1);p=Ik(a.L,o,i,b,10,n);if(p==-1)continue;d=1;while(!Gm(t,u,o[d]))++d;c=p-d;e=o[d];if(v==6&&c==2&&d==3){if(mk(a.L,o[1])>=3){m=false;s=eN(t.i,u);for(k=0;k<6;k++){if(b==s[k]){r=Lm(t,u,e==s[Lm(t,u,k+2)]?k-2:k+2);q=s[r];mk(a.L,q)>=3&&Lk(a.L,o[1],q,2,null)==2&&(m=true);break}}if(m){a.M[b]=true;continue}}}f=kk(a.L,e)==1||Xk(a.L,e)||_k(a.L,e);g=!f&&Rh(a.L,e)==7&&Ah(a.L,e)!=1;if(c==1){!f&&!g&&v<=4&&d<=3&&(a.M[b]=true);continue}switch(v){case 4:!f&&!g&&d<=4&&(a.M[b]=true);break;case 5:g?d<=3&&(a.M[b]=true):f||d<=4&&(a.M[b]=true);break;case 6:c==2?f?d<=4&&(a.M[b]=true):g||d<=3&&(a.M[b]=true):c==3&&(f?d<=6&&(a.M[b]=true):d<=4&&(a.M[b]=true));break;case 7:c==3&&d<=3&&(a.M[b]=true);}}}}}
	function sg(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;this.j=a;for(d=0;d<a.i.d;d++){a.f[d]&&(a.o[d]==1||a.o[d]==2)&&(a.k[d]==1?this.a<=a.j[d]&&(this.a=1+a.j[d]):a.k[d]==2&&this.i<=a.j[d]&&(this.i=1+a.j[d]))}this.b=this.a+this.i;this.e=HC(NG,[QQ,nR],[12,6],16,[this.b+1,a.g.length+1],2);for(e=0;e<a.i.d;e++)a.f[e]&&(a.o[e]==1||a.o[e]==2)&&!a.e[e]&&(this.e[og(this,e)][a.g.length]=true);for(i=0;i<a.g.length;i++){for(q=0;q<a.g[i].length;q++){c=a.g[i][q];a.f[c]&&(a.o[c]==1||a.o[c]==2)&&(this.e[og(this,c)][i]=true)}}this.d=JC(KD,XR,7,this.b,0,2);for(j=0;j<a.g.length;j++){for(n=1;n<this.b;n++){if(this.e[n][j]){for(o=0;o<n;o++){if(this.e[o][j]){this.d[n]=dg(this.d[n],o);this.d[o]=dg(this.d[o],n)}}}}}this.c=JC(KD,jR,6,this.b+1,15,1);for(m=0;m<this.b;m++){this.e[m][a.g.length]?(this.c[m]=-1):(this.c[m]=-2)}for(k=0;k<a.g.length;k++){if(this.e[this.b][k]){for(l=0;l<this.b;l++){this.e[l][k]&&this.c[l]!=k&&(this.c[l]==-2?(this.c[l]=k):(this.c[l]=-3))}}}for(b=0;b<this.b;b++){if(this.c[b]>=-1){f=JC(KD,jR,6,this.b,15,1);if(jg(this,f,b)){for(l=0;l<this.b;l++){f[l]!=0&&(this.c[l]=-3)}}}}for(h=0;h<a.g.length-1;h++){for(n=1;n<this.b;n++){if(this.e[n][h]&&this.c[n]!=-3){for(o=0;o<n;o++){if(this.e[o][h]&&this.c[o]!=-3){g=kg(this,n,o,h);if(g!=null){for(p=0;p<g.length;p++)this.c[g[p]]=-3;rg(this,g);break}}}}}}}
	function ve(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;s=JC(NG,nR,6,a.L.d,16,1);t=JC(NG,nR,6,a.L.e,16,1);b=0;v=false;for(d=0;d<a.L.d;d++){if(a.P[d]){if(!a.X[d]){if(oe(a,d,false)){a.X[d]=true;s[d]=true;++b}}}}for(f=0;f<a.L.e;f++){if(a.O[f]){if(!a.n[f]){if(je(a,f,false)){a.n[f]=true;t[f]=true;++b}}}}if(b==1){for(c=0;c<a.L.d;c++){if(s[c]){a.W[c]=0;break}}for(e=0;e<a.L.e;e++){if(t[e]){a.k[e]=0;break}}}else if(b>1){se(a);for(h=new JN(a.s);h.a<h.c.a.length;){g=IN(h);u=0;w=0;k=0;j=0;l=-1;i=-1;for(o=0;o<g.a.length;o++){if(s[g.a[o]]){++u;if(a.W[g.a[o]]==1||a.W[g.a[o]]==2){++w;v=true;if(l<a.c[g.a[o]]){l=a.c[g.a[o]];k=g.a[o]}}}}for(p=0;p<g.b.length;p++){if(t[g.b[p]]){++u;A=a.c[Vh(a.L,0,g.b[p])];B=a.c[Vh(a.L,1,g.b[p])];m=A>B?(A<<16)+B:(B<<16)+A;if(a.k[g.b[p]]==1||a.k[g.b[p]]==2){++w;v=true;if(i<m){i=m;j=g.b[p]}}}}if(u==0)continue;if(u==1){for(q=0;q<g.a.length;q++)s[g.a[q]]&&(a.W[g.a[q]]=0);for(n=0;n<g.b.length;n++)t[g.b[n]]&&(a.k[g.b[n]]=0)}else{if(w==1){for(q=0;q<g.a.length;q++)s[g.a[q]]&&(a.W[g.a[q]]=3);for(n=0;n<g.b.length;n++)t[g.b[n]]&&(a.k[g.b[n]]=3)}else{r=false;l!=-1?a.W[k]==2&&(r=true):a.k[j]==2&&(r=true);if(r){for(q=0;q<g.a.length;q++){if(s[g.a[q]]){switch(a.W[g.a[q]]){case 1:a.W[g.a[q]]=2;break;case 2:a.W[g.a[q]]=1;}}}for(n=0;n<g.b.length;n++){if(t[g.b[n]]){switch(a.k[g.b[n]]){case 1:a.k[g.b[n]]=2;break;case 2:a.k[g.b[n]]=1;}}}}}}}}return v}
	function bg(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;i=JC(KD,jR,6,a.i.d,15,1);s=JC(KD,jR,6,a.i.d,15,1);o=JC(NG,nR,6,a.i.d,16,1);p=JC(NG,nR,6,a.i.d,16,1);j=JC(NG,nR,6,a.i.d,16,1);i[0]=b;s[b]=c;s[c]=-2;o[b]=true;o[c]=true;f=0;k=0;while(f<=k){g=i[f];if(s[g]==g){for(l=0;l<uk(a.i,g);l++){d=tk(a.i,g,l);if(!o[d]){if(wk(a.i,g,l)==2&&Rh(a.i,d)<10){i[++k]=d;s[d]=d;j[d]=j[g]||kk(a.i,d)==2;p[d]=j[g]&&!p[g];o[d]=true}else if(j[g]&&p[g]){t=Sf(a,d,s[g],o);if(t==-1)return null;i[++k]=d;s[d]=t;s[t]=-2;j[d]=false;o[d]=true;o[t]=true}else if(cl(a.i,vk(a.i,g,l))){i[++k]=d;s[d]=d;j[d]=false;o[d]=true;if((Rh(a.i,d)==6&&kk(a.i,d)==0||Rh(a.i,d)==7&&Ah(a.i,d)==1||Rh(a.i,d)==14||Rh(a.i,d)==15&&uk(a.i,d)>2||Rh(a.i,d)==16&&uk(a.i,d)>2)&&uk(a.i,d)>2){h=false;for(q=1;q<uk(a.i,d);q++){u=tk(a.i,d,q);if(!o[u]){for(r=0;r<q;r++){v=tk(a.i,d,r);if(!o[v]){if(Wf(a,u,v)){i[++k]=u;s[u]=v;s[v]=-2;j[u]=false;o[u]=true;o[v]=true;h=true}}}}}if(!h)return null}}}}}else{e=JC(NG,nR,6,uk(a.i,g),16,1);for(m=0;m<uk(a.i,g);m++){d=tk(a.i,g,m);if(o[d]){e[m]=s[d]==d}else{for(q=0;q<uk(a.i,d);q++){if(tk(a.i,d,q)==s[g]){e[m]=true;break}}}}for(n=0;n<uk(a.i,g);n++){if(e[n]){d=tk(a.i,g,n);if(o[d]){if(rk(a.i,d,s[g])==-1)return null}else{i[++k]=d;s[d]=d;p[d]=false;j[d]=true;o[d]=true}}}for(l=0;l<uk(a.i,g);l++){if(!e[l]){d=tk(a.i,g,l);if(!o[d]){t=Sf(a,d,s[g],o);if(t==-1)return null;i[++k]=d;s[d]=t;s[t]=-2;j[d]=false;o[d]=true;o[t]=true}}}}++f}return o}
	function Jc(){Jc=pH;xc=MC(FC(KD,1),jR,6,15,[0,kR,14286847,13402367,12779264,16758197,9474192,3166456,16715021,9494608,11789301,11230450,9109248,12560038,15780000,16744448,16777008,2093087,8442339,9388244,4062976,15132390,12567239,10921643,9083335,10255047,14706227,15765664,5296208,13140019,8224944,12750735,6721423,12419299,16752896,10889513,6076625,7351984,65280,9764863,9756896,7586505,5551541,3907230,2396047,687500,27013,12632256,16767375,10909043,6717568,10380213,13924864,9699476,4366000,5707663,51456,7394559,16777159,14286791,13107143,10747847,9437127,6422471,4587463,3211207,2097095,65436,58997,54354,48952,43812,5096191,5089023,2200790,2522539,2516630,1528967,13684960,16765219,12105936,10900557,5724513,10375093,11230208,7688005,4358806,4325478,32000,7384058,47871,41471,36863,33023,27647,5528818,7888099,9064419,10565332,11739092,11739066,11734438,12389767,13041766,13369433,13697103,14221381,14680120,15073326,15400998,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13158600,1334015,56540,15075850,15132160,56540,15075850,15461355,8553170,1016335,1016335,1334015,15132160,3289770,14456450,16422400,16422400,11819700,3289770,1016335]);Ac=new FH(255,128,0);zc=new FH(92,160,255);Ic=new FH(160,0,64);yc=new FH(255,160,255);Bc=new FH(32,96,255);Hc=new FH(255,0,0);Ec=new FH(0,255,0);Fc=new FH(192,0,255);Gc=new FH(255,160,0);Cc=new FH(0,128,0);Dc=new FH(160,0,0)}
	function br(){br=pH;_q=MC(FC(XF,1),bS,2,6,['[N](-*)(-*)-*','[N](-*)=*','[N]#*','[N](-*)(=*)=* as in nitro','[N](=*)#* middle atom of azide','[N]1(-*)-*-*-1 3-membered ring','[NH](-*)-*','[NH]1-*-*-1 3-membered ring','[NH]=*','[NH2]-*','[N+](-*)(-*)(-*)-*','[N+](-*)(-*)=*','[N+](-*)#* N in isocyano','[NH+](-*)(-*)-*','[NH+](-*)=*','[NH2+](-*)-*','[NH2+]=*','[NH3+]-*','[n](:*):*','[n](:*)(:*):*','[n](-*)(:*):*','[n](=*)(:*):* as in pyridine-N-oxid','[nH](:*):*','[n+](:*)(:*):*','[n+](-*)(:*):*','[nH+](:*):*','[O](-*)-*','[O]1-*-*-1 3-membered ring','[O]=*','[OH]-*','[O-]-*','[o](:*):*','[S](-*)-*','[S]=*','[S](-*)(-*)=*','[S](-*)(-*)(=*)=*','[SH]-*','[s](:*):*','[s](=*)(:*):*','[P](-*)(-*)-*','[P](-*)=*','[P](-*)(-*)(-*)=*','[PH](-*)(-*)=*']);ar=MC(FC(JD,1),RR,6,15,[3.240000009536743,12.359999656677246,23.790000915527344,11.680000305175781,13.600000381469727,wU,12.029999732971191,21.940000534057617,23.850000381469727,26.020000457763672,0,wU,4.360000133514404,4.440000057220459,13.970000267028809,16.610000610351562,25.59000015258789,27.639999389648438,12.890000343322754,4.409999847412109,4.929999828338623,8.390000343322754,15.789999961853027,4.099999904632568,3.880000114440918,14.140000343322754,9.229999542236328,12.529999732971191,17.06999969482422,20.229999542236328,23.059999465942383,13.140000343322754,25.299999237060547,32.09000015258789,19.209999084472656,8.380000114440918,38.79999923706055,28.239999771118164,21.700000762939453,13.59000015258789,34.13999938964844,9.8100004196167,23.469999313354492])}
	function $u(){$u=pH;Zu=(!FA&&(FA=new NA),FA);ks=MC(FC(XF,1),bS,2,6,['?','H','He','Li','Be','B','C','N','O','F','Ne','Na','Mg','Al','Si','P','S','Cl','Ar','K','Ca','Sc','Ti','V','Cr','Mn','Fe','Co','Ni','Cu','Zn','Ga','Ge','As','Se','Br','Kr','Rb','Sr','Y','Zr','Nb','Mo','Tc','Ru','Rh','Pd','Ag','Cd','In','Sn','Sb','Te','I','Xe','Cs','Ba','La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb','Lu','Hf','Ta','W','Re','Os','Ir','Pt','Au','Hg','Tl','Pb','Bi','Po','At','Rn','Fr','Ra','Ac','Th','Pa','U','Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No','Lr',cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,'R4','R5','R6','R7','R8','R9','R10','R11','R12','R13','R14','R15','R16','R1','R2','R3','A','A1','A2','A3',cS,cS,'D','T','X','R','H2','H+','Nnn','HYD','Pol',cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,'Ala','Arg','Asn','Asp','Cys','Gln','Glu','Gly','His','Ile','Leu','Lys','Met','Phe','Pro','Ser','Thr','Trp','Tyr','Val']);Yu=MC(FC(MG,1),RR,6,15,[0,1,4,7,9,11,12,14,16,19,20,23,24,27,28,31,32,35,40,39,40,45,48,51,52,55,56,59,58,63,64,69,74,75,80,79,84,85,88,89,90,93,98,0,102,103,106,107,114,115,120,121,130,127,132,133,138,139,140,141,142,0,152,153,158,159,164,165,166,169,174,175,180,181,184,187,192,193,195,197,202,205,208,209,0,0,0,0,0,0,232,0,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,156,114,115,103,128,129,57,137,113,113,128,131,147,97,87,101,186,163,99]);Wr=MC(FC(XF,1),bS,2,6,[yS,AU,zS])}
	function em(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F;q=(h=cm(b,1),h==-1?b.length:h);d=bJ(b.substr(0,q));p=bm(b,q);q=(i=cm(b,p+1),i==-1?b.length:i);s=b.substr(p,q-p);A=null;e=false;r=lm(b);if(r!=0){A=fm(b);r<0&&(e=true);q=r<0?-r:r}p=bm(b,q);q=(j=cm(b,p+1),j==-1?b.length:j);C=pJ(b.substr(p,q-p));p=bm(b,q);q=(k=cm(b,p+1),k==-1?b.length:k);D=pJ(b.substr(p,q-p));p=bm(b,q);q=(l=cm(b,p+1),l==-1?b.length:l);F=pJ(b.substr(p,q-p));p=bm(b,q);q=(m=cm(b,p+1),m==-1?b.length:m);u=bJ(b.substr(p,q-p));c=Xg(a.d,C,-D,-F);c+1!=d&&(!a.a&&(a.a=new OO),HO(a.a,new tJ(d),new tJ(c)));A!=null&&fj(a.d,c,A,e);u!=0&&gj(a.d,c,u,false);if(gK(s,'A')){kj(a.d,c,1,true)}else if(gK(s,'Q')){t=JC(KD,jR,6,1,15,1);t[0]=6;fj(a.d,c,t,true)}else{rj(a.d,c,Tj(s))}while((p=bm(b,q))!=-1){q=(g=cm(b,p+1),g==-1?b.length:g);v=b.substr(p,q-p);o=iK(v,rK(61));n=v.substr(0,o);B=bJ(v.substr(o+1,v.length-(o+1)));if(gK(n,'CHG')){$i(a.d,c,B)}else if(gK(n,'RAD')){switch(B){case 1:lj(a.d,c,16);break;case 2:lj(a.d,c,32);break;case 3:lj(a.d,c,48);}}else if(gK(n,'CFG'));else if(gK(n,'MASS')){ij(a.d,c,B)}else if(gK(n,'VAL')){Yi(a.d,c,B==-1?0:B==0?-1:B)}else if(gK(n,'HCOUNT')){switch(B){case 0:break;case -1:kj(a.d,c,1792,true);break;case 1:kj(a.d,c,128,true);break;case 2:kj(a.d,c,384,true);break;default:kj(a.d,c,896,true);}}else if(gK(n,'SUBST')){if(B==-1){kj(a.d,c,uR,true)}else if(B>0){w=0;for(f=0;f<a.d.p;f++){(Vh(a.d,0,f)==c||Vh(a.d,1,f)==c)&&++w}B>w&&kj(a.d,c,cR,true)}}else if(gK(n,'RBCNT')){switch(B){case 3:case -1:kj(a.d,c,112,true);break;case 1:kj(a.d,c,8,true);break;case 2:kj(a.d,c,104,true);break;case 4:kj(a.d,c,56,true);}}}}
	function Tl(a){var b,c,d,e,f,g,h,i,j,k,l;no(a,1);e=JC(KD,jR,6,191,15,1);for(c=0;c<a.o;c++){switch(a.A[c]){case 171:e[1]+=5;e[6]+=3;e[7]+=1;e[8]+=1;break;case 172:e[1]+=12;e[6]+=6;e[7]+=4;e[8]+=1;break;case 173:e[1]+=6;e[6]+=4;e[7]+=2;e[8]+=2;break;case 174:e[1]+=5;e[6]+=4;e[7]+=1;e[8]+=3;break;case 175:e[1]+=5;e[6]+=3;e[7]+=1;e[8]+=1;e[16]+=1;break;case 176:e[1]+=8;e[6]+=5;e[7]+=2;e[8]+=2;break;case 177:e[1]+=7;e[6]+=5;e[7]+=1;e[8]+=3;break;case 178:e[1]+=3;e[6]+=2;e[7]+=1;e[8]+=1;break;case 179:e[1]+=7;e[6]+=6;e[7]+=3;e[8]+=1;break;case 181:case 180:e[1]+=11;e[6]+=6;e[7]+=1;e[8]+=1;break;case 182:e[1]+=12;e[6]+=6;e[7]+=2;e[8]+=1;break;case 183:e[1]+=9;e[6]+=5;e[7]+=1;e[8]+=1;e[16]+=1;break;case 184:e[1]+=9;e[6]+=9;e[7]+=1;e[8]+=1;break;case 185:e[1]+=7;e[6]+=5;e[7]+=1;e[8]+=1;break;case 186:e[1]+=5;e[6]+=3;e[7]+=1;e[8]+=2;break;case 187:e[1]+=7;e[6]+=4;e[7]+=1;e[8]+=2;break;case 188:e[1]+=10;e[6]+=11;e[7]+=2;e[8]+=1;break;case 189:e[1]+=9;e[6]+=9;e[7]+=1;e[8]+=2;break;case 190:e[1]+=9;e[6]+=5;e[7]+=1;e[8]+=1;break;case 1:switch(a.v[c]){case 0:case 1:++e[1];break;case 2:++e[151];break;case 3:++e[152];}break;default:++e[a.A[c]];}}for(d=0;d<a.o;d++)a.A[d]>=171&&a.A[d]<=190?(e[1]+=2-Hk(a,d)):(e[1]+=Ek(a,d));h=0;for(j=1;j<=190;j++)e[j]!=0&&++h;this.b=JC(KD,jR,6,h,15,1);this.c=JC(KD,jR,6,h,15,1);h=0;for(i=0;i<Nl.length;i++){if(e[Nl[i]]!=0){this.b[h]=e[Nl[i]];this.c[h]=Nl[i];++h;e[Nl[i]]=0}}while(true){l='zzz';k=-1;for(g=1;g<=190;g++)if(e[g]>0&&cK(l,(Wg(),Rg)[g])>0){l=(Wg(),Rg)[g];k=g}if(k==-1)break;this.b[h]=e[k];this.c[h]=k;++h;e[k]=0}this.a=0;this.d=0;for(b=0;b<a.d;b++){if(a.A[b]!=1&&a.v[b]!=0){g=a.A[b];f=a.v[b];this.a+=Ll(g,f)-Ml[g];this.d+=Ll(g,f)-Ol[g]}}}
	function Hd(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$;X=JC(KD,jR,6,a.e.d,15,1);for(V=0;V<b.i.a.length;V++)for(e=eN(b.i,V),i=0,m=e.length;i<m;++i){c=e[i];++X[c]}K=JC(NG,nR,6,a.e.d,16,1);for(W=0;W<b.i.a.length;W++){Y=eN(b.j,W).length;if(Y==3||Y==5||Y==6||Y==7){L=true;for(t=eN(b.j,W),u=0,v=t.length;u<v;++u){w=t[u];if(!a.d[w]){L=false;break}}if(L){for(f=eN(b.i,W),j=0,n=f.length;j<n;++j){c=f[j];K[c]=true}S=true;O=-1;P=0;for(g=eN(b.i,W),k=0,o=g.length;k<o;++k){c=g[k];if(Y==6||X[c]>1){if(!Ld(a,c,false)){S=false;break}}else{U=Y==5?Id(a,c,false):Jd(a,c,false);if(Ld(a,c,false)){if(P<U){P=U;O=c}}else{if(P==10){S=false;break}O=c;P=10}}}if(S){for(d=eN(b.i,W),h=0,l=d.length;h<l;++h){c=d[h];if(c==O){Y==5?Id(a,c,true):Jd(a,c,true);Td(a,c)}else{Ld(a,c,true)}}}}}}C=JC(KD,jR,6,a.e.d,15,1);F=JC(NG,nR,6,a.e.d,16,1);for(s=0;s<a.e.e;s++){p=Vh(a.e,0,s);q=Vh(a.e,1,s);if(!K[p]&&!K[q]){if(a.d[s]){++C[p];++C[q]}if(ei(a.e,s)==32){F[p]=true;F[q]=true}}}T=JC(KD,jR,6,a.e.d,15,1);D=JC(KD,jR,6,a.e.d,15,1);for($=0;$<a.e.d;$++){if(C[$]==1){D[0]=$;B=0;G=0;while(B<=G){for(H=0;H<uk(a.e,D[B]);H++){if(a.d[vk(a.e,D[B],H)]){A=tk(a.e,D[B],H);if((B==0||A!=D[B-1])&&C[A]!=0){D[++G]=A;if((C[A]&1)!=0){for(N=1;N<G;N+=2)T[D[N]]=-1;G=0}break}}}++B}}}r=JC(NG,nR,6,a.e.d,16,1);for(Z=0;Z<a.e.d;Z++){if(!r[Z]&&C[Z]!=0){D[0]=Z;r[Z]=true;B=0;G=0;while(B<=G){for(H=0;H<uk(a.e,D[B]);H++){if(a.d[vk(a.e,D[B],H)]){A=tk(a.e,D[B],H);if(!r[A]){D[++G]=A;r[A]=true}}}++B}if((G&1)==0){for(I=0;I<=G;I++)T[D[I]]==0&&(T[D[I]]=Kd(a,D[I],false));M=true;for(J=0;J<=G;J++){if(T[D[J]]<=0){if(!Ld(a,D[J],false)){M=false;break}}}if(M){R=0;Q=-1;for(H=0;H<=G;H++){if(R<T[D[H]]){R=T[D[H]];Q=D[H]}}if(R>0){Kd(a,Q,true);Td(a,Q)}}}}}}
	function fr(a,b){var c;switch(a.A[b]){case 7:if((a.s[b]&cR)!=0){if(a.q[b]==0){if(a.c[b]-a.g[b]+Ek(a,b)==0){if(a.g[b]==2)return 18;else{for(c=0;c<a.g[b];c++)if(!Yk(a,a.i[b][c]))return 20;return 19}}else return 22}else if(a.q[b]==1){if(a.c[b]-a.g[b]+Ek(a,b)==0){for(c=0;c<a.g[b];c++)if(!Yk(a,a.i[b][c]))return Ah(a,a.f[b][c])<0?21:24;return 23}else return 25}}else{if(a.q[b]==0){switch(a.c[b]-a.g[b]+Ek(a,b)){case 0:switch(a.k[b]){case 0:return (!!a.n&&b<a.d?zm(a.n,b):0)==3?5:0;case 1:return 1;case 2:return 2;}break;case 1:switch(a.k[b]){case 0:return (!!a.n&&b<a.d?zm(a.n,b):0)==3?7:6;case 1:return 8;}break;case 2:return 9;}}else if(a.q[b]==1){switch(a.c[b]-a.g[b]+Ek(a,b)){case 0:switch(a.k[b]){case 0:return 10;case 1:return hr(a,b)?3:11;case 2:return a.j[b][0]==2?hr(a,b)?4:ar.length+1:12;}break;case 1:switch(a.k[b]){case 0:return 13;case 1:return 14;}break;case 2:return a.k[b]==0?15:16;case 3:return 17;}}}return ar.length+1;case 8:if((a.s[b]&cR)!=0){if(a.q[b]==0)return 31}else{if(a.q[b]==0){if(a.k[b]>0)return 28;if(a.g[b]==1)return 29;if((!!a.n&&b<a.d?zm(a.n,b):0)==3)return 27;return 26}else if(a.q[b]==-1){if(a.g[b]==1&&Ah(a,a.f[b][0])>0)return 28;return 30}}return ar.length+1;case 15:if(a.q[b]==0){if(a.c[b]-a.g[b]+Ek(a,b)==0){if(a.g[b]==3&&a.k[b]==0)return 39;if(a.g[b]==2&&a.k[b]==1)return 40;if(a.g[b]==4&&a.k[b]==1)return 41}else if(a.c[b]-a.g[b]+Ek(a,b)==1){if(a.g[b]==3&&a.k[b]==1)return 42}}return ar.length+1;case 16:if(a.q[b]==0){if((a.s[b]&cR)!=0){return a.g[b]==2?37:38}else{if(a.c[b]-a.g[b]+Ek(a,b)==0){if(a.g[b]==2&&a.k[b]==0)return 32;if(a.g[b]==1&&a.k[b]==1)return 33;if(a.g[b]==3&&a.k[b]==1)return 34;if(a.g[b]==4&&a.k[b]==2)return 35}else if(a.c[b]-a.g[b]+Ek(a,b)==1){if(a.g[b]==1)return 36}}}return ar.length+1;}return ar.length}
	function xe(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;l=false;if(a.L.I){for(j=0;j<a.L.e;j++){if(di(a.L,j)!=0){l=true;break}}}a.I=2;for(c=0;c<a.L.d;c++)a.I=QJ(a.I,uk(a.L,c)+Fk(a.L,c));i=QJ(2,l?(78+a.I*37)/63|0:(78+a.I*21)/63|0);a.c=JC(KD,jR,6,a.L.o,15,1);a.b=JC(UD,YR,67,a.L.d,0,1);for(d=0;d<a.L.d;d++)a.b[d]=new Lf(i);h=false;for(e=0;e<a.L.d;e++){Kf(a.b[e],e);(Mh(a.L,e)&1)!=0||Hh(a.L,e)!=null?Hf(a.b[e],8,6):Hf(a.b[e],8,Rh(a.L,e));Hf(a.b[e],8,Kh(a.L,e));Hf(a.b[e],2,kk(a.L,e));Hf(a.b[e],4,uk(a.L,e)+Fk(a.L,e));(Mh(a.L,e)&1)!=0?Hf(a.b[e],4,8):Hf(a.b[e],4,8+Ah(a.L,e));Hf(a.b[e],5,RJ(31,ok(a.L,e)));Hf(a.b[e],4,me(a,e)+1);Hf(a.b[e],2,Nh(a.L,e)>>4);if(a.L.I){Hf(a.b[e],30,Mh(a.L,e));Hh(a.L,e)!=null&&(h=true)}}a.N=Ae(a);if(a.N<a.L.d){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);m=JC(KD,jR,6,uk(a.L,b),15,1);for(o=0;o<uk(a.L,b);o++){m[o]=a.c[tk(a.L,b,o)]<<5;m[o]|=RJ(31,sk(a.L,vk(a.L,b,o)))}bO(m);for(p=a.I;p>m.length;p--)Hf(a.b[b],21,0);for(n=m.length-1;n>=0;n--)Hf(a.b[b],21,m[n])}a.N=Ae(a)}if(h&&a.N<a.L.d){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);g=Hh(a.L,b);s=g==null?0:RJ(12,g.length);for(o=12;o>s;o--)Hf(a.b[b],8,0);for(n=s-1;n>=0;n--)Hf(a.b[b],8,g[n])}a.N=Ae(a)}if(l&&a.N<a.L.d){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);k=JC(LD,RR,6,uk(a.L,b)+Fk(a.L,b),14,1);q=0;for(o=0;o<hk(a.L,b);o++){if(o<uk(a.L,b)||o>=gk(a.L,b)){k[q]=a.c[tk(a.L,b,o)];k[q]=aH(k[q],21);k[q]=_G(k[q],di(a.L,vk(a.L,b,o)));++q}}aO(k,TG);for(p=a.I;p>k.length;p--)Hf(a.b[b],37,0);for(n=k.length-1;n>=0;n--)Hf(a.b[b],37,k[n])}a.N=Ae(a)}if((a.K&8)!=0&&a.N<a.L.d){r=new ko;for(f=0;f<a.L.d;f++)Ch(a.L,f)!=null&&io(r,Ch(a.L,f));for(b=0;b<a.L.d;b++){t=Ch(a.L,b)==null?0:1+jo(r,Ch(a.L,b));Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);Hf(a.b[b],16,t)}a.N=Ae(a)}if((a.K&16)!=0&&a.N<a.L.d){for(b=0;b<a.L.d;b++){Kf(a.b[b],b);Hf(a.b[b],16,a.c[b]);Hf(a.b[b],1,Hi(a.L,b)?1:0)}a.N=Ae(a)}}
	function Ke(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M;if(Rh(a.L,c)!=Rh(a.L,d))return Rh(a.L,c)>Rh(a.L,d);if(Kh(a.L,c)!=Kh(a.L,d)){H=Ei(a.L,c)?(Wg(),Ug)[Rh(a.L,c)]:Kh(a.L,c);I=Ei(a.L,d)?(Wg(),Ug)[Rh(a.L,d)]:Kh(a.L,d);return H>I}w=a.L.d;s=JC(KD,jR,6,w,15,1);u=JC(KD,jR,6,w,15,1);v=JC(KD,jR,6,w,15,1);t=JC(NG,nR,6,w,16,1);i=JC(NG,nR,6,a.L.o,16,1);s[0]=b;s[1]=c;s[2]=d;u[0]=-1;u[1]=0;u[2]=0;i[b]=true;i[c]=true;i[d]=true;m=1;A=2;G=JC(KD,jR,6,64,15,1);G[1]=1;G[2]=3;o=2;while(m<=A){while(m<G[o]){n=s[m];if(!t[m]){p=0;q=0;for(C=0;C<uk(a.L,n);C++){k=tk(a.L,n,C);if(A+wk(a.L,n,C)+1>=w){w+=a.L.d;s=pf(s,w);u=pf(u,w);v=pf(v,w);t=(M=JC(NG,nR,6,w,16,1),IK(t,M,t.length),M)}if($k(a.L,vk(a.L,n,C))){++p;q+=Rh(a.L,k)}else{for(F=1;F<wk(a.L,n,C);F++){++A;s[A]=k;u[A]=m;t[A]=true}}K=u[m];if(k==s[K])continue;h=false;if(i[k]){J=u[K];while(J!=-1){if(k==s[J]){h=true;break}J=u[J]}}if(h){++A;s[A]=k;u[A]=m;t[A]=true}else{++A;s[A]=k;u[A]=m;i[k]=true}}if(p!=0){++A;v[A]=(q<<2)/p|0;u[A]=m;t[A]=true}}++m;if(m==10000){throw QG(new pB('Emergency break in while loop.'))}}G.length==o+1&&(G=pf(G,G.length+64));G[o+1]=A+1;for(B=G[o];B<G[o+1];B++){v[B]==0&&(v[B]=(Rh(a.L,s[B])==151?1:Rh(a.L,s[B])==152?1:Rh(a.L,s[B]))<<2);v[B]+=v[u[B]]<<16}Oe(a,t,v,u,s,G,o);if(v[1]!==v[2])return v[1]>v[2];o>1&&Le(v,u,G,o);++o}l=JC(KD,jR,6,a.L.d,15,1);D=false;for(f=0;f<a.L.d;f++){if(i[f]&&!Ei(a.L,f)){D=true;break}}if(D){for(g=0;g<a.L.d;g++)l[g]=Ei(a.L,g)?(Wg(),Ug)[Rh(a.L,g)]:Kh(a.L,g);if(Ne(a,t,v,u,s,l,G,o))return v[1]>v[2]}UN(l,l.length,0);r=false;for(j=0;j<a.L.e;j++){if(i[Vh(a.L,0,j)]||i[Vh(a.L,1,j)]){if(a.f[j]==1){l[Vh(a.L,0,j)]=1;l[Vh(a.L,1,j)]=1;r=true}else if(a.f[j]==2){l[Vh(a.L,0,j)]=2;l[Vh(a.L,1,j)]=2;r=true}}}if(r&&Ne(a,t,v,u,s,l,G,o))return v[1]>v[2];UN(l,l.length,0);L=false;for(e=0;e<a.L.d;e++){if(i[e]){if(a.R[e]==2){l[e]=1;L=true}else if(a.R[e]==1){l[e]=2;L=true}}}if(L&&Ne(a,t,v,u,s,l,G,o))return v[1]>v[2];throw QG(new pB('no distinction applying CIP rules'))}
	function $d(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A;if(a.A[b]!=7)return false;if(a.g[b]+a.k[b]>3)return false;if((a.s[b]&cR)!=0){if(a.k[b]!=1)return false;if(nk(a,b,7)!=1)return false;u=(no(a,3),a.n);for(s=0;s<u.i.a.length;s++){if(Gm(u,s,b)){if(eN(u.j,s).length==5||eN(u.j,s).length==6){v=eN(u.i,s);q=-1;for(i=0;i<v.length;i++){if(v[i]==b){q=i;break}}e=0;r=null;p=null;if(v.length==5){r=JC(KD,jR,6,2,15,1);r[0]=v[q-1<0?q+4:q-1];r[1]=v[q-4<0?q+1:q-4];p=JC(KD,jR,6,2,15,1);p[0]=v[q-2<0?q+3:q-2];p[1]=v[q-3<0?q+2:q-3]}if(v.length==6){r=JC(KD,jR,6,3,15,1);r[0]=v[q-1<0?q+5:q-1];r[1]=v[q-3<0?q+3:q-3];r[2]=v[q-5<0?q+1:q-5];p=JC(KD,jR,6,2,15,1);p[0]=v[q-2<0?q+4:q-2];p[1]=v[q-4<0?q+2:q-4]}for(j=0;j<v.length;j++)b!=v[j]&&a.A[v[j]]==7&&a.k[v[j]]==1&&--e;for(k=0;k<r.length;k++){f=-1;g=-1;for(o=0;o<a.g[r[k]];o++){if(!Yk(a,a.i[r[k]][o])){f=a.f[r[k]][o];g=a.i[r[k]][o];break}}if(f!=-1){if(a.A[f]==7&&a.k[f]==0&&a.g[f]+a.k[f]<=3&&!_d(a,f,false)){++e;continue}if(a.A[f]==8&&a.g[f]==1){e+=2;continue}if((a.C[g]&256)!=0){for(w=0;w<u.i.a.length;w++){if(u.d[w]&&Gm(u,w,f)){t=eN(u.i,w);for(n=0;n<t.length;n++){if(a.A[t[n]]==7&&a.k[t[n]]==1){--e;break}}break}}}}}for(l=0;l<p.length;l++){f=-1;for(n=0;n<a.g[p[l]];n++)Yk(a,a.i[p[l]][n])||(f=a.f[p[l]][n]);if(a.A[p[l]]==7){a.k[p[l]]==0&&(f==-1||Wd(a,f)==0)&&++e;continue}if(f!=-1&&Wd(a,f)!=0){--e;continue}}return e>0}break}}return false}if(a.k[b]>1)return false;if(a.k[b]==1){m=-1;A=0;for(i=0;i<a.g[b];i++){d=a.f[b][i];if(a.j[b][i]==2){if(a.A[d]!=6)return false;m=d;continue}if(a.A[d]==8)return false;if(a.A[d]==7){--A;_d(a,d,false)&&--A;continue}(a.s[d]&cR)!=0&&--A}if(m==-1)return false;c=0;for(j=0;j<a.g[m];j++){if(a.j[m][j]==1){d=a.f[m][j];if(Wd(a,d)!=0)return false;(a.s[d]&cR)!=0&&++c;a.A[d]==7&&!_d(a,d,true)&&++A;(a.A[d]==8||a.A[d]==16)&&--A}}c==2&&--A;return A>=0}for(h=0;h<a.g[b];h++){d=a.f[b][h];if((a.s[d]&cR)!=0)return false;if(a.A[d]!=6)return false;if(Wd(a,d)!=0)return false;if(a.k[d]!=0&&ae(a,d))return false}return true}
	function jp(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;k=MC(FC(ID,2),QQ,14,0,[MC(FC(ID,1),mR,6,15,[-20]),null,null,null,null,null,MC(FC(ID,1),mR,6,15,[-4,12]),MC(FC(ID,1),mR,6,15,[0,0,7.5]),null,null,null,null,MC(FC(ID,1),mR,6,15,[8,-8]),null,null,null,MC(FC(ID,1),mR,6,15,[-2.4])]);l=MC(FC(KD,2),XR,7,0,[MC(FC(KD,1),jR,6,15,[146]),MC(FC(KD,1),jR,6,15,[627]),null,MC(FC(KD,1),jR,6,15,[2457]),null,MC(FC(KD,1),jR,6,15,[2451,8643,2519]),MC(FC(KD,1),jR,6,15,[9362,14798]),MC(FC(KD,1),jR,6,15,[34377,-2147448999,26214]),null,MC(FC(KD,1),jR,6,15,[37449,137313,95703,34371,37815,54891,132867,-2147309741,54857,55129,-2147449005,-2147449065]),null,MC(FC(KD,1),jR,6,15,[530697,531819,899169,137289,694617,-2146951863,-2146952797,-2146939175,-2146929547,-2146929564,-2146625111,-2146931799,-2146940503,-2146931935]),MC(FC(KD,1),jR,6,15,[1007293,610915]),MC(FC(KD,1),jR,6,15,[542985,137283,2122017,530691,2206773,-2144711351,219209,2840841,137555,-2146871031,-2147264167,613705,-2145360543,-2146625271,694611,2454837,-2145356703,-2147345133,-2146928951,-2146931805,-2144641719,-2146951869,-2146625237,-2146624183,2841963,1074905,-2146625117,2799955,-2144723645,138583,859225,-2145264843,-2145216253,-2146624149,-2144700727,-2146928917,-2143905527,-2144045771,-2146789097,2288547,544407,2104323,-2146911977,-2144479405,3633737,-2146870089,-2146952169]),null,MC(FC(KD,1),jR,6,15,[8487297,2172633,2116611,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8829813]),MC(FC(KD,1),jR,6,15,[14071213])]);q=1<<b.e.length;g=0;i=0;if(b.e.length>7){for(n=0;n<b.e.length;n++){h=qp(a,c,d,n);h==1?(g+=q):h==2&&(i+=q);g>>>=1;i>>>=1}}s=b.e.length-9;if(b.e.length>=9&&b.e.length<=25&&l[s]!=null){for(v=0;v<l[s].length;v++){p=($Q&l[s][v])==0;j=WQ&l[s][v];for(o=false;!o;o=!o){if(o){if(p)break;r=0;for(e=1;e!=q;e<<=1){r<<=1;(j&e)!=0&&(r|=1)}j=r}for(t=0;t<b.e.length;t++){if((j&g)==0&&(~j&i)==0){f=0;m=0.017453292519943295*(k[s]==null?0:k[s][v]);u=true;for(n=1;n<b.e.length;n++){b.a[n]=b.a[n-1]+$wnd.Math.sin(f);b.b[n]=b.b[n-1]+$wnd.Math.cos(f);(j&1)==0&&(u=!u);f+=m+(u?MR:BS);j>>>=1}return}(j&1)!=0&&(j|=q);j>>>=1}}}}mp(b,g,i)}
	function jd(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;n=new Gd;c=new Gd;f=new Gd;l=new NH;k=new NH;d=Vh(a.H,0,b);e=Vh(a.H,1,b);((Mh(a.H,d)|Mh(a.H,e))&oR)!=0;Kn(a,d,e,Jg(a.L,Oh(a.H,d)),Kg(a.L,Ph(a.H,d)),Jg(a.L,Oh(a.H,e)),Kg(a.L,Ph(a.H,e)));!Hi(a.H,d)&&!Hi(a.H,e)&&((Mh(a.H,d)|Mh(a.H,e))&oR)!=0&&Ad(a,-8);if(!a.n[d]){n.a=Jg(a.L,Oh(a.H,d));n.c=Kg(a.L,Ph(a.H,d))}else{n.a=a.n[d].a;n.c=a.n[d].b}if(!a.n[e]){n.b=Jg(a.L,Oh(a.H,e));n.d=Kg(a.L,Ph(a.H,e))}else{n.b=a.n[e].a;n.d=a.n[e].b}if((di(a.H,b)&HR)!=0){wd(a,n)&&(q=FD(n.a),r=FD(n.b),s=FD(n.c),t=FD(n.d),u='<line stroke-dasharray="3, 3" x1="'+q+IR+'y1="'+s+IR+'x2="'+r+IR+'y2="'+t+IR+'stroke="'+a.d+IR+JR+FD(a.i)+'"/>',Pn(a,u),undefined);Ad(a,-9);return}g=ei(a.H,b)==64?0:ei(a.H,b)==32?1:bi(a.H,b);switch(g){case 1:switch(ei(a.H,b)){case 1:wd(a,n)&&Qc(a,n,d,e);break;case 17:sd(a,n,d,e);break;case 9:o=n.b-n.a;p=n.d-n.c;if(wi(a.H,rk(a.H,d,e))){h=-3;i=-3}else{h=a.o[d];i=Wc(a,d);h==Bh(a.H,d)&&(h=i)}for(j=2;j<17;j+=2){c.a=n.a+j*o/17-j*p/128;c.c=n.c+j*p/17+j*o/128;c.b=n.a+j*o/17+j*p/128;c.d=n.c+j*p/17-j*o/128;if(wd(a,c)){Ad(a,j<9?h:i);Fn(a,c);Ad(a,a.K)}}break;case 32:wd(a,n)&&Rc(a,n,d,e);}break;case 0:case 2:if((a.q[d]||kk(a.H,d)==2)&&(a.q[e]||kk(a.H,e)==2)&&!cl(a.H,b)&&g==2){if(!wd(a,n))break;dd(a,n.b-n.a,n.d-n.c,l);o=l.a/2;p=l.b/2;c.a=n.a+o;c.c=n.c+p;c.b=n.b+o;c.d=n.d+p;f.a=n.a-o;f.c=n.c-p;f.b=n.b-o;f.d=n.d-p;ei(a.H,b)==26&&ud(c,f);Qc(a,c,d,e);Qc(a,f,d,e)}else if((a.q[e]||kk(a.H,e)==2)&&g==2){ed(a,n,b,false)}else if((a.q[d]||kk(a.H,d)==2)&&g==2){ed(a,n,b,true)}else{m=vd(a,b);m==0&&(m=1);c.a=n.a;c.c=n.c;c.b=n.b;c.d=n.d;dd(a,n.b-n.a,n.d-n.c,l);if(m>0){f.a=n.a+l.a;f.c=n.c+l.b;f.b=n.b+l.a;f.d=n.d+l.b;if(cd(a,d,e,1,k)||uk(a.H,d)>1){f.a+=k.a+l.b;f.c+=k.b-l.a}if(cd(a,e,d,-1,k)||uk(a.H,e)>1){f.b+=k.a-l.b;f.d+=k.b+l.a}}else{f.a=n.a-l.a;f.c=n.c-l.b;f.b=n.b-l.a;f.d=n.d-l.b;if(cd(a,d,e,-1,k)||uk(a.H,d)>1){f.a+=k.a+l.b;f.c+=k.b-l.a}if(cd(a,e,d,1,k)||uk(a.H,e)>1){f.b+=k.a-l.b;f.d+=k.b+l.a}}ei(a.H,b)==26&&ud(c,f);wd(a,c)&&Qc(a,c,d,e);g==2?wd(a,f)&&Qc(a,f,d,e):wd(a,f)&&Oc(a,f,d,e)}break;case 3:if(wd(a,n)){Qc(a,n,d,e);dd(a,n.b-n.a,n.d-n.c,l);c.a=n.a+l.a;c.c=n.c+l.b;c.b=n.b+l.a;c.d=n.d+l.b;Qc(a,c,d,e);c.a=n.a-l.a;c.c=n.c-l.b;c.b=n.b-l.a;c.d=n.d-l.b;Qc(a,c,d,e)}}a.w==-8&&Ad(a,-9)}
	function Pl(){Pl=pH;Ol=MC(FC(ID,1),mR,6,15,[0,1.00794,4.0026,6.941,9.0122,10.811,12.011,14.007,15.999,18.998,20.18,22.99,24.305,26.982,28.086,30.974,32.066,35.453,39.948,39.098,40.078,44.956,47.867,50.942,51.996,54.938,55.845,58.933,58.693,63.546,65.39,69.723,72.61,74.922,78.96,79.904,83.8,85.468,87.62,88.906,91.224,92.906,95.94,98.906,101.07,102.91,106.42,107.87,112.41,114.82,118.71,121.76,127.6,126.9,131.29,132.91,137.33,138.91,140.12,140.91,144.24,146.92,150.36,151.96,157.25,158.93,162.5,164.93,167.26,168.93,173.04,174.97,178.49,180.95,183.84,186.21,190.23,192.22,195.08,196.97,200.59,204.38,207.2,208.98,209.98,209.99,222.02,223.02,226.03,227.03,232.04,231.04,238.03,237.05,239.05,241.06,244.06,249.08,252.08,252.08,257.1,258.1,259.1,262.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.0141,3.016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Ml=MC(FC(ID,1),mR,6,15,[0,1.007825,4.0026,7.016003,9.012182,11.009305,12,14.003074,15.994915,18.998403,19.992435,22.989767,23.985042,26.98153,27.976927,30.973762,31.97207,34.968852,39.962384,38.963707,39.962591,44.95591,47.947947,50.943962,51.940509,54.938047,55.934939,58.933198,57.935346,62.939598,63.929145,68.92558,73.921177,74.921594,79.91652,78.918336,83.911507,84.911794,87.905619,88.905849,89.904703,92.906377,97.905406,89.92381,101.904348,102.9055,105.903478,106.905092,113.903357,114.90388,119.9022,120.903821,129.906229,126.904473,131.904144,132.905429,137.905232,138.906346,139.905433,140.907647,141.907719,135.92398,151.919729,152.921225,157.924099,158.925342,163.929171,164.930319,165.93029,168.934212,173.938859,174.94077,179.946545,180.947992,183.950928,186.955744,191.961467,192.962917,194.964766,196.966543,201.970617,204.974401,207.976627,208.980374,193.98818,195.99573,199.9957,201.00411,206.0038,210.00923,232.038054,216.01896,238.050784,229.03623,232.041169,237.05005,238.05302,242.06194,240.06228,243.06947,243.07446,248.08275,251.08887,253.09515,257.10295,257.10777,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.014,3.01605,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Nl=MC(FC(KD,1),jR,6,15,[6,1,7,8])}
	function ap(a,b){$o();var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P;H=Ek(a,b);O=a.H[b].a;P=a.H[b].b;switch(H){case 1:{J=a.g[b];if(J==0){n=iS;B=-1;for(f=0;f<a.o;f++){if(f==b)continue;l=O-a.H[f].a;m=P-a.H[f].b;j=$wnd.Math.sqrt(l*l+m*m);if(n>j){n=j;B=f}}p=O-a.H[B].a;s=P-a.H[B].b}else{p=O-Oh(a,a.f[b][0]);s=P-Ph(a,a.f[b][0])}if(J==1){C=Xg(a,O+To*p+Yo*s,P-Yo*p+To*s,0)}else if(J==2){p=O-0.5*(Oh(a,a.f[b][0])+Oh(a,a.f[b][1]));s=P-0.5*(Ph(a,a.f[b][0])+Ph(a,a.f[b][1]));C=Xg(a,O+p,P+s,0)}else if(J==3){L=a.f[b][0];for(w=1;w<3;w++){i=a.i[b][w];(a.F[i]==9||a.F[i]==17)&&(L=a.f[b][w])}c=$wnd.Math.abs(Sj(Rj(a.H[b].a,a.H[b].b,Oh(a,a.f[b][0]),Ph(a,a.f[b][0])),Rj(a.H[b].a,a.H[b].b,Oh(a,a.f[b][1]),Ph(a,a.f[b][1]))));d=$wnd.Math.abs(Sj(Rj(a.H[b].a,a.H[b].b,Oh(a,a.f[b][0]),Ph(a,a.f[b][0])),Rj(a.H[b].a,a.H[b].b,Oh(a,a.f[b][2]),Ph(a,a.f[b][2]))));e=$wnd.Math.abs(Sj(Rj(a.H[b].a,a.H[b].b,Oh(a,a.f[b][1]),Ph(a,a.f[b][1])),Rj(a.H[b].a,a.H[b].b,Oh(a,a.f[b][2]),Ph(a,a.f[b][2]))));K=true;if(c>d&&c>e){if(d+e<sR){K=false;p=O-0.5*(Oh(a,a.f[b][0])+Oh(a,a.f[b][1]));s=P-0.5*(Ph(a,a.f[b][0])+Ph(a,a.f[b][1]))}}else if(d>c&&d>e){if(c+e<sR){K=false;p=O-0.5*(Oh(a,a.f[b][0])+Oh(a,a.f[b][2]));s=P-0.5*(Ph(a,a.f[b][0])+Ph(a,a.f[b][2]))}}else{if(c+d<sR){K=false;p=O-0.5*(Oh(a,a.f[b][1])+Oh(a,a.f[b][2]));s=P-0.5*(Ph(a,a.f[b][1])+Ph(a,a.f[b][2]))}}if(K){M=a.f[b][0];o=iS;for(v=0;v<3;v++){g=a.f[b][v];if(g!=L){k=$wnd.Math.pow(a.H[b].a-a.H[g].a,2)+$wnd.Math.pow(a.H[b].b-a.H[g].b,2);if(k<o){M=g;o=k;HK()}}}C=Xg(a,(a.H[L].a+a.H[M].a)/2,(a.H[L].b+a.H[M].b)/2,0)}else{C=Xg(a,O+p,P+s,0)}}else{C=Xg(a,O+p,P+s,0)}rj(a,C,1);Zg(a,b,C,1)}break;case 2:I=a.g[b];if(I==1){p=O-Oh(a,a.f[b][0]);s=P-Ph(a,a.f[b][0]);C=Xg(a,O+(Uo*p-Zo*s)*0.7,P+(Zo*p+Uo*s)*0.7,0);rj(a,C,1);Zg(a,b,C,1);C=Xg(a,O+(Ro*p-Wo*s)*0.7,P+(Wo*p+Ro*s)*0.7,0);rj(a,C,1);Zg(a,b,C,1)}else if(I==2){q=O-Oh(a,a.f[b][0]);t=P-Ph(a,a.f[b][0]);r=O-Oh(a,a.f[b][1]);u=P-Ph(a,a.f[b][1]);F=$wnd.Math.sqrt(q*q+t*t)*0.7;G=$wnd.Math.sqrt(r*r+u*u)*0.7;p=q+r;s=t+u;D=$wnd.Math.sqrt(p*p+s*s);h=(F+G)/2;p=p/D*h;s=s/D*h;N=Pk(a,b);C=Xg(a,O+Qo*p-Vo*s,P+Vo*p+Qo*s,0);rj(a,C,1);N>-1?Zg(a,b,C,1):Zg(a,b,C,17);C=Xg(a,O+So*p-Xo*s,P+Xo*p+So*s,0);rj(a,C,1);Zg(a,b,C,1)}else{for(A=0;A<2;A++){C=Xg(a,O,P,0);rj(a,C,1);Zg(a,b,C,1)}}break;case 3:{p=(O-Oh(a,a.f[b][0]))*0.7;s=(P-Ph(a,a.f[b][0]))*0.7;C=Xg(a,O+p,P+s,0);rj(a,C,1);Zg(a,b,C,1);C=Xg(a,O-s,P+p,0);rj(a,C,1);Zg(a,b,C,1);C=Xg(a,O+s,P-p,0);rj(a,C,1);Zg(a,b,C,1)}break;default:{for(A=0;A<H;A++){C=Xg(a,O,P,0);rj(a,C,1);Zg(a,b,C,1)}break}}}
	function Ip(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M;for(d=0;d<a.f.o;d++){if(gk(a.f,d)>4){m=new uq(a.f,1+gk(a.f,d),a.e);m.a[gk(a.f,d)]=0;m.b[gk(a.f,d)]=0;m.k[gk(a.f,d)]=32;m.e[gk(a.f,d)]=d;a.a[d]=true;for(o=0;o<gk(a.f,d);o++){j=tk(a.f,d,o);m.a[o]=$wnd.Math.sin(MR*o-DS);m.b[o]=$wnd.Math.cos(MR*o-DS);m.k[o]=32;m.e[o]=j;a.a[j]=true;a.b[vk(a.f,d,o)]=true}bN(a.c,m)}}I=Mk(a.f);for(H=0;H<I.i.a.length;H++){J=eN(I.j,H).length;F=eN(I.i,H);K=false;if((a.e&6)!=0){K=true;for(o=0;o<J;o++){if(!Ci(a.f,F[o])){K=false;break}}}if(!K){r=false;for(p=0;p<J;p++){if(ok(a.f,F[p])==J){r=true;break}}if(r){G=eN(I.j,H);cp(a,F,G);for(o=0;o<J;o++){a.a[F[o]]=true;a.b[G[o]]=true}}}}for(h=0;h<a.f.p;h++){if(cl(a.f,h)&&!a.b[h]){M=vp(a,h);F=M.a;G=M.b;cp(a,F,G);for(o=0;o<M.a.length;o++){a.a[F[o]]=true;a.b[G[o]]=true}}}for(i=0;i<a.f.p;i++){if(!a.b[i]&&bi(a.f,i)==3){e=Vh(a.f,0,i);f=Vh(a.f,1,i);w=gk(a.f,e)+gk(a.f,f);if(w>2){m=new uq(a.f,w,a.e);k=0;for(p=0;p<gk(a.f,e);p++){j=tk(a.f,e,p);if(j!=f){m.e[k++]=j;a.a[j]=true;a.b[vk(a.f,e,p)]=true}}m.e[k++]=e;m.e[k++]=f;for(q=0;q<gk(a.f,f);q++){j=tk(a.f,f,q);if(j!=e){m.e[k++]=j;a.a[j]=true;a.b[vk(a.f,f,q)]=true}}for(o=0;o<w;o++){m.a[o]=o;m.b[o]=0;m.k[o]=1}a.a[e]=true;a.a[f]=true;a.b[i]=true;bN(a.c,m)}}}for(g=0;g<a.f.p;g++){if(!a.b[g]&&bi(a.f,g)==2){b=JC(KD,jR,6,a.f.o,15,1);for(o=0;o<2;o++){b[0]=Vh(a.f,o,g);b[1]=Vh(a.f,1-o,g);if(kk(a.f,b[0])==1&&kk(a.f,b[1])==2&&gk(a.f,b[1])==2){a.a[b[0]]=true;a.a[b[1]]=true;a.b[g]=true;v=1;do{A=tk(a.f,b[v],0)==b[v-1]?1:0;b[v+1]=tk(a.f,b[v],A);if(kk(a.f,b[v+1])==2&&gk(a.f,b[v+1])>2)break;a.a[b[v+1]]=true;a.b[vk(a.f,b[v],A)]=true;++v}while(kk(a.f,b[v])==2&&gk(a.f,b[v])==2);w=gk(a.f,b[0])+gk(a.f,b[v])+v-1;m=new uq(a.f,w,a.e);for(t=0;t<=v;t++){m.a[t]=t;m.b[t]=0;m.k[t]=64;m.e[t]=b[t]}l=v+1;n=false;for(u=0;u<gk(a.f,b[0]);u++){j=tk(a.f,b[0],u);if(j!=b[1]){m.a[l]=-0.5;m.b[l]=n?$wnd.Math.sin(MR):-$wnd.Math.sin(MR);m.k[l]=64;m.e[l]=j;++l;n=true}}n=false;for(s=0;s<gk(a.f,b[v]);s++){j=tk(a.f,b[v],s);if(j!=b[v-1]){m.a[l]=v+0.5;m.b[l]=n?-$wnd.Math.sin(MR):$wnd.Math.sin(MR);m.k[l]=64;m.e[l]=j;++l;n=true}}bN(a.c,m)}}}}for(c=0;c<a.f.o;c++){if(gk(a.f,c)==4){B=JC(KD,jR,6,4,15,1);C=JC(KD,jR,6,4,15,1);D=0;for(p=0;p<4;p++){B[D]=tk(a.f,c,p);C[D]=vk(a.f,c,p);gk(a.f,B[D])==1&&!a.b[C[D]]&&++D}if(D==2){m=new uq(a.f,3,a.e);for(o=0;o<2;o++){a.a[B[o]]=true;a.b[C[o]]=true;m.e[o]=B[o];m.k[o]=32}m.a[0]=-0.5;m.b[0]=0.866;m.a[1]=0.5;m.b[1]=0.866;m.a[2]=0;m.b[2]=0;m.k[2]=32;m.e[2]=c;bN(a.c,m)}if(D==3){for(q=0;q<2;q++){if(bi(a.f,C[q])==1){L=B[q];B[q]=B[2];B[2]=L;L=C[q];C[q]=C[2];C[2]=L}}m=new uq(a.f,4,a.e);for(o=0;o<3;o++){a.a[B[o]]=true;a.b[C[o]]=true;m.e[o]=B[o];m.k[o]=32}m.a[0]=-1;m.b[0]=0;m.a[1]=1;m.b[1]=0;m.a[2]=0;m.b[2]=1;m.a[3]=0;m.b[3]=0;m.k[3]=32;m.e[3]=c;bN(a.c,m)}}}}
	function om(b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X;try{if(b.d){uh(b.d);Cj(b.d,false)}D=_H(c);if(null==D){return false}if(null==_H(c)){return false}if(null==(w=_H(c))){return false}b.e=w.indexOf("From CSD data. Using bond type 'Any'")!=-1;b.c=w.indexOf('From CSD data.')!=-1;if(null==(w=_H(c))){return false}try{F=bJ(pK(w.substr(0,3)));G=bJ(pK(w.substr(3,3)));H=nm(pK(w.substr(6,3)));n=nm(pK(w.substr(12,3)));T=w.length>=39&&gK(w.substr(34,5),'V3000')?3:2}catch(a){a=PG(a);if(yD(a,13)){return false}else throw QG(a)}if(T==3){K=pm(b,c);Gj(b.d,D);return K}!b.d&&(b.d=new Do(F,G));Gj(b.d,D);n==0&&(b.d.J=true);if(0==F){while(w!=null&&!(gK(w,sS)||gK(w,tS)||gK(w.substr(1,w.length-1),'$'))){w=_H(c)}return true}for(r=0;r<F;r++){if(null==(w=_H(c))){return false}V=pJ(pK(w.substr(0,10)));W=pJ(pK(w.substr(10,10)));X=pJ(pK(w.substr(20,10)));e=Xg(b.d,V,-W,-X);v=pK(w.substr(31,3));h=Tj(v);rj(b.d,e,h);gK(v,'A')&&kj(b.d,e,1,true);C=nm(pK(w.substr(34,2)));C!=0&&ij(b.d,e,(Wg(),Ug)[h]+C);m=nm(pK(w.substr(36,3)));m!=0&&$i(b.d,e,4-m);A=w.length<63?0:nm(pK(w.substr(60,3)));gj(b.d,e,A,false);p=w.length<45?0:nm(pK(w.substr(42,3)));switch(p){case 0:break;case 1:kj(b.d,e,768,true);break;case 2:kj(b.d,e,128,true);break;case 3:kj(b.d,e,384,true);break;default:kj(b.d,e,896,true);}w.length>=48&&w.charCodeAt(47)==49&&kj(b.d,e,TR,true);S=w.length<51?0:nm(pK(w.substr(48,3)));switch(S){case 0:break;case 15:Yi(b.d,e,0);break;default:Yi(b.d,e,S);}}for(s=0;s<G;s++){if(null==(w=_H(c))){return false}f=bJ(pK(w.substr(0,3)))-1;g=bJ(pK(w.substr(3,3)))-1;k=bJ(pK(w.substr(6,3)));M=w.length<12?0:nm(pK(w.substr(9,3)));Q=w.length<18?0:nm(pK(w.substr(15,3)));Yl(b,f,g,k,M,Q)}for(q=0;q<H;q++){if(null==_H(c)){return false}}if(null==(w=_H(c))){n==0&&no(b.d,7);return true}while(w!=null&&!(gK(w,sS)||gK(w,tS))){if(gK(w.substr(0,6),'M  CHG')){t=bJ(pK(w.substr(6,3)));if(t>0){d=10;U=14;for(u=1;u<=t;++u,d+=8,U+=8){e=bJ(pK(w.substr(d,d+3-d)))-1;l=bJ(pK(w.substr(U,U+3-U)));$i(b.d,e,l)}}}if(gK(w.substr(0,6),'M  ISO')){t=bJ(pK(w.substr(6,3)));if(t>0){d=10;U=14;for(u=1;u<=t;++u,d+=8,U+=8){e=bJ(pK(w.substr(d,d+3-d)))-1;B=bJ(pK(w.substr(U,U+3-U)));ij(b.d,e,B)}}}if(gK(w.substr(0,6),'M  RAD')){t=bJ(pK(w.substr(6,3)));if(t>0){d=10;U=14;for(u=1;u<=t;++u,d+=8,U+=8){e=bJ(pK(w.substr(d,d+3-d)))-1;J=bJ(pK(w.substr(U,U+3-U)));switch(J){case 1:lj(b.d,e,16);break;case 2:lj(b.d,e,32);break;case 3:lj(b.d,e,48);}}}}if(gK(w.substr(0,6),'M  RBD')){t=bJ(pK(w.substr(6,3)));if(t>0){d=10;U=14;for(u=1;u<=t;++u,d+=8,U+=8){e=bJ(pK(w.substr(d,d+3-d)))-1;L=bJ(pK(w.substr(U,U+3-U)));switch(L){case 3:case -1:kj(b.d,e,112,true);break;case 1:kj(b.d,e,8,true);break;case 2:kj(b.d,e,104,true);break;case 4:kj(b.d,e,56,true);}}}}if(gK(w.substr(0,6),'M  ALS')){e=bJ(pK(w.substr(7,3)))-1;if(e>=0){I=bJ(pK(w.substr(10,3)));i=w.charCodeAt(14)==84;R=JC(KD,jR,6,I,15,1);d=16;for(u=0;u<I;++u,d+=4){P=pK(w.substr(d,d+4-d));R[u]=Tj(P)}fj(b.d,e,R,i)}}if(gK(w.substr(0,6),'M  SUB')){t=bJ(pK(w.substr(6,3)));if(t>0){d=10;U=14;for(u=1;u<=t;++u,d+=8,U+=8){e=bJ(pK(w.substr(d,d+3-d)))-1;N=bJ(pK(w.substr(U,U+3-U)));if(N==-2){kj(b.d,e,uR,true)}else if(N>0){O=0;for(j=0;j<b.d.p;j++){(Vh(b.d,0,j)==e||Vh(b.d,1,j)==e)&&++O}N>O&&kj(b.d,e,cR,true)}}}}w=_H(c)}}catch(a){a=PG(a);if(yD(a,13)){o=a;fB(o,(HK(),GK),'');return false}else throw QG(a)}if(b.c){km(b);Zl(b)}no(b.d,7);return true}
	function Zn(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X;a.b=b;uh(a.b);K=null;i=JC(KD,jR,6,64,15,1);i[0]=-1;N=JC(KD,jR,6,64,15,1);O=JC(KD,jR,6,64,15,1);for(u=0;u<64;u++)N[u]=-1;M=0;g=0;R=false;L=false;P=false;k=0;Q=c.length;j=1;while(c[M]<=32)++M;while(M<Q){S=c[M++]&fR;if(AI(S)||S==42){h=0;q=-1;w=false;J=false;v=false;if(R){if(S==82&&zI(c[M]&fR)){D=zI(c[M+1]&fR)?2:1;h=Tj(sK(lQ(c,M-1,(B=1+D,iQ(),B))));M+=D}else{A=DI(c[M]&fR)==(c[M]&fR)&&AI(c[M]&fR)?2:1;h=Tj(sK(lQ(c,M-1,(iQ(),A))));M+=A-1;q=0}if(c[M]==64){++M;if(c[M]==64){v=true;++M}J=true}if(c[M]==72){++M;q=1;if(zI(c[M]&fR)){q=c[M]-48;++M}}}else if(S==42){h=6;w=true}else{switch(String.fromCharCode(S).toUpperCase().charCodeAt(0)){case 66:if(M<Q&&c[M]==114){h=35;++M}else h=5;break;case 67:if(M<Q&&c[M]==108){h=17;++M}else h=6;break;case 70:h=9;break;case 73:h=53;break;case 78:h=7;break;case 79:h=8;break;case 80:h=15;break;case 83:h=16;}}if(h==0)throw QG(new pB('SmilesParser: unknown element label found'));f=Yg(a.b,h);if(w){P=true;kj(a.b,f,1,true)}else{hj(a.b,f,DI(S)==S&&AI(S))}if(q!=-1&&h!=1){l=JC(GD,$R,6,1,15,1);l[0]=q<<24>>24;cj(a.b,f,l)}r=i[k];i[k]!=-1&&j!=128&&Zg(a.b,f,i[k],j);j=1;i[k]=f;if(g!=0){ij(a.b,f,g);g=0}if(d){H=!K?null:IM(K,BJ(r));!!H&&eo(H,f,M,h==1);if(J){!K&&(K=new OO);HO(K,BJ(f),new ho(a,f,r,q,M,v))}}continue}if(S==46){j=128;continue}if(S==61){j=2;continue}if(S==35){j=4;continue}if(zI(S)){F=S-48;if(R){while(M<Q&&zI(c[M]&fR)){F=10*F+c[M]-48;++M}g=F}else{if(L&&M<Q&&zI(c[M]&fR)){F=10*F+c[M]-48;++M}L=false;if(F>=64)throw QG(new pB('SmilesParser: ringClosureAtom number out of range'));if(N[F]==-1){N[F]=i[k];O[F]=M-1}else{if(N[F]===i[k])throw QG(new pB('SmilesParser: ring closure to same atom'));if(d&&!!K){H=IM(K,BJ(N[F]));!!H&&eo(H,i[k],O[F],false);H=IM(K,BJ(i[k]));!!H&&eo(H,N[F],M-1,false)}Zg(a.b,i[k],N[F],j);N[F]=-1}j=1}continue}if(S==43){if(!R)throw QG(new pB("SmilesParser: '+' found outside brackets"));m=1;while(c[M]==43){++m;++M}if(m==1&&zI(c[M]&fR)){m=c[M]-48;++M}$i(a.b,i[k],m);continue}if(S==45){if(!R)continue;m=-1;while(c[M]==45){--m;++M}if(m==-1&&zI(c[M]&fR)){m=48-c[M];++M}$i(a.b,i[k],m);continue}if(S==40){if(i[k]==-1)throw QG(new pB('Smiles with leading parenthesis are not supported'));i[k+1]=i[k];++k;continue}if(S==41){--k;continue}if(S==91){if(R)throw QG(new pB('SmilesParser: nested square brackets found'));R=true;continue}if(S==93){if(!R)throw QG(new pB('SmilesParser: closing bracket without opening one'));R=false;continue}if(S==37){L=true;continue}if(S==58){if(!R){j=64;continue}C=0;while(zI(c[M]&fR)){C=10*C+c[M]-48;++M}gj(a.b,i[k],C,false);continue}if(S==47){d&&(j=17);continue}if(S==92){d&&(j=9);continue}throw QG(new pB("SmilesParser: unexpected character found: '"+String.fromCharCode(S)+"'"))}if(j!=1)throw QG(new pB('SmilesParser: dangling open bond'));for(t=0;t<64;t++)if(N[t]!=-1)throw QG(new pB('SmilesParser: dangling ring closure'));s=Ck(a.b);a.b.P=true;no(a.b,1);for(e=0;e<a.b.o;e++){if((b.r==null?null:b.r[e]==null?null:fK(b.r[e]))!=null){if(!Ci(a.b,e)){p=Dh(a.b,e)[0];if(Rh(a.b,e)<(Wg(),Sg).length&&Sg[Rh(a.b,e)]!=null){n=false;T=Hk(a.b,e);T-=hi(a.b,e,T);for(V=Sg[Rh(a.b,e)],W=0,X=V.length;W<X;++W){U=V[W];if(T<=U){n=true;U!=T+p&&Yi(a.b,e,T+p);break}}n||Yi(a.b,e,T+p)}}}}Xn(a);Yn(a);a.b.r=null;a.b.P=false;d&&bo(a)&&ol(a.b,0);if(d){xp(new Np,a.b);if(K){for(I=(G=new XO((new aP((new pM(K)).a)).b),new vM(G));uL(I.a.a);){H=(o=VO(I.a),o.Gb());jj(a.b,H.a,fo(H,s),false)}ol(a.b,0)}rl(a.b);zo(a.b)}P&&Cj(a.b,true)}
	function Xl(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T;this.a=new SK('0.0000');no(a,7);H=true;for(d=0;d<a.d;d++){if((a.s[d]&3)!=0&&(a.s[d]&3)!=3&&(a.s[d]&KR)>>19!=1){H=false;break}}J=-1;if(H){A=JC(KD,jR,6,32,15,1);for(e=0;e<a.d;e++){if((a.s[e]&3)!=0&&(a.s[e]&3)!=3&&(a.s[e]&KR)>>19==1){C=(a.s[e]&KR)>>19!=1&&(a.s[e]&KR)>>19!=2?-1:(a.s[e]&fS)>>21;++A[C];0<A[C]&&(J=C);break}}}this.b=b;L=a.M!=null?a.M:'';zK(this.b,L+SQ);zK(this.b,'Actelion Java MolfileCreator 1.0\n\n');Vl(this,a.o);Vl(this,a.p);zK(this.b,'  0  0');Vl(this,H?0:1);zK(this.b,'  0  0  0  0  0999 V2000\n');D=a.o==1;for(g=1;g<a.o;g++){if(a.H[g].a!=a.H[0].a||a.H[g].b!=a.H[0].b||a.H[g].c!=a.H[0].c){D=true;break}}B=1;if(D){p=Th(a,a.o,a.p,(Wg(),Vg));if(p!=0){(p<1||p>3)&&(B=1.5/p)}else{K=iS;for(e=1;e<a.o;e++){for(f=0;f<e;f++){u=a.H[f].a-a.H[e].a;v=a.H[f].b-a.H[e].b;w=a.H[f].c-a.H[e].c;t=u*u+v*v+w*w;K>t&&(K=t)}}B=3/K}}for(h=0;h<a.o;h++){if(D){Ul(this,B*a.H[h].a);Ul(this,B*-a.H[h].b);Ul(this,B*-a.H[h].c)}else{zK(this.b,'    0.0000    0.0000    0.0000')}if((a.t==null?null:a.t[h])!=null)zK(this.b,' L  ');else if((a.w[h]&1)!=0)zK(this.b,' A  ');else{n=(Wg(),Rg)[a.A[h]];zK(this.b,' '+n);n.length==1?zK(this.b,'  '):n.length==2&&zK(this.b,' ')}zK(this.b,' 0  0  0');F=vR&a.w[h];F==0?zK(this.b,'  0'):F==384?zK(this.b,'  3'):F==128?zK(this.b,'  2'):F==1792?zK(this.b,'  1'):F==1664&&zK(this.b,'  2');zK(this.b,(a.w[h]&TR)!=0?'  1':'  0');T=((a.s[h]&eS)>>>28)-1;T==-1?zK(this.b,'  0'):T==0?zK(this.b,' 15'):Vl(this,T);zK(this.b,'  0  0  0');Vl(this,PJ(a.u[h]));zK(this.b,'  0  0\n')}for(q=0;q<a.p;q++){switch(a.F[q]){case 1:N=1;Q=0;break;case 2:N=2;Q=0;break;case 4:N=3;Q=0;break;case 9:N=1;Q=6;break;case 17:N=1;Q=1;break;case 26:N=2;Q=3;break;case 64:N=4;Q=0;break;default:N=1;Q=0;}H&&(Q==1||Q==6)&&Eh(a,a.B[0][q])!=J&&(Q=0);r=a.D[q]&31;r!=0&&(r==8?(N=4):r==3?(N=5):r==9?(N=6):r==10?(N=7):(N=8));P=a.D[q]&96;S=P==0?0:P==64?1:2;Vl(this,1+a.B[0][q]);Vl(this,1+a.B[1][q]);Vl(this,N);Vl(this,Q);zK(this.b,'  0');Vl(this,S);zK(this.b,'  0\n')}M=0;for(i=0;i<a.o;i++)a.q[i]!=0&&++M;if(M!=0){zK(this.b,'M  CHG');Vl(this,M);for(e=0;e<a.o;e++){if(a.q[e]!=0){zK(this.b,' ');Vl(this,e+1);s=a.q[e];if(s<0){zK(this.b,'  -');s=-s}else zK(this.b,'   ');wK(this.b,48+s&fR)}}zK(this.b,SQ)}M=0;for(j=0;j<a.o;j++)a.v[j]==0||++M;if(M!=0){zK(this.b,'M  ISO');Vl(this,M);for(e=0;e<a.o;e++){if(a.v[e]!=0){zK(this.b,' ');Vl(this,e+1);zK(this.b,' ');Vl(this,a.v[e])}}zK(this.b,SQ)}M=0;for(k=0;k<a.o;k++)(a.s[k]&48)!=0&&++M;if(M!=0){zK(this.b,'M  RAD');Vl(this,M);for(c=0;c<a.o;c++){if((a.s[c]&48)!=0){zK(this.b,' ');Vl(this,c+1);switch(a.s[c]&48){case 16:zK(this.b,'   1');break;case 32:zK(this.b,'   2');break;case 48:zK(this.b,'   3');}}}zK(this.b,SQ)}if(a.I){M=0;for(e=0;e<a.o;e++)(a.w[e]&120)!=0&&++M;if(M!=0){zK(this.b,'M  RBD');Vl(this,M);for(f=0;f<a.o;f++){O=a.w[f]&120;if(O!=0){zK(this.b,' ');Vl(this,f+1);switch(O){case 112:zK(this.b,'  -1');break;case 8:zK(this.b,'   1');break;case 104:zK(this.b,'   2');break;case 88:zK(this.b,'   3');break;case 56:zK(this.b,'   4');}}}zK(this.b,SQ)}for(l=0;l<a.o;l++){o=a.t==null?null:a.t[l];if(o!=null){zK(this.b,'M  ALS ');Vl(this,l+1);Vl(this,o.length);zK(this.b,(a.w[l]&1)!=0?' T ':' F ');for(G=0;G<o.length;G++){I=(Wg(),Rg)[o[G]];switch(I.length){case 1:zK(this.b,I+'   ');break;case 2:zK(this.b,I+'  ');break;case 3:zK(this.b,I+' ');break;default:zK(this.b,'   ?');}}zK(this.b,SQ)}}M=0;for(m=0;m<a.o;m++)(a.w[m]&6144)!=0&&++M;if(M!=0){zK(this.b,'M  SUB');Vl(this,M);for(c=0;c<a.o;c++){R=a.w[c]&6144;if(R!=0){zK(this.b,' ');Vl(this,c+1);(R&cR)!=0?zK(this.b,'   '+(a.c[c]+1)):zK(this.b,'  -2')}}zK(this.b,SQ)}}zK(this.b,'M  END\n')}
	function jf(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y;Ue(a);Se(a,9,4);U=QJ(lf(a.L.d),lf(a.L.e));Se(a,U,4);if(U==0){Se(a,a.L.I?1:0,1);Se(a,0,1);a.D=Te(a);return}V=X=W=H=0;for(f=0;f<a.L.d;f++){if((Mh(a.L,f)&1)==0){switch(Rh(a.L,f)){case 6:break;case 7:++V;break;case 8:++X;break;default:++W;}Ah(a.L,f)!=0&&++H}}Se(a,a.L.d,U);Se(a,a.L.e,U);Se(a,V,U);Se(a,X,U);Se(a,W,U);Se(a,H,U);for(g=0;g<a.L.d;g++)Rh(a.L,a.t[g])==7&&(Mh(a.L,a.t[g])&1)==0&&Se(a,g,U);for(l=0;l<a.L.d;l++)Rh(a.L,a.t[l])==8&&(Mh(a.L,a.t[l])&1)==0&&Se(a,l,U);for(m=0;m<a.L.d;m++)if(Rh(a.L,a.t[m])!=6&&Rh(a.L,a.t[m])!=7&&Rh(a.L,a.t[m])!=8&&(Mh(a.L,a.t[m])&1)==0){Se(a,m,U);Se(a,Rh(a.L,a.t[m]),8)}for(n=0;n<a.L.d;n++)if(Ah(a.L,a.t[n])!=0&&(Mh(a.L,a.t[n])&1)==0){Se(a,n,U);Se(a,8+Ah(a.L,a.t[n]),4)}T=0;u=0;for(o=1;o<a.L.d;o++){if(a.w[o]==-1){L=0}else{L=1+a.w[o]-u;u=a.w[o]}T<L&&(T=L)}K=lf(T);Se(a,K,4);u=0;for(p=1;p<a.L.d;p++){if(a.w[p]==-1){L=0}else{L=1+a.w[p]-u;u=a.w[p]}Se(a,L,K)}for(N=0;N<2*a.C;N++)Se(a,a.v[N],U);for(w=0;w<a.L.e;w++){G=(di(a.L,a.u[w])&HR)!=0||ei(a.L,a.u[w])==32?1:$k(a.L,a.u[w])?0:bi(a.L,a.u[w]);Se(a,G,2)}c=0;for(q=0;q<a.L.d;q++)a.S[a.t[q]]!=0&&a.S[a.t[q]]!=3&&++c;Se(a,c,U);for(r=0;r<a.L.d;r++)if(a.S[a.t[r]]!=0&&a.S[a.t[r]]!=3){Se(a,r,U);if(a.U[a.t[r]]==0){Se(a,a.S[a.t[r]],3)}else{Y=a.S[a.t[r]]==1?a.U[a.t[r]]==1?4:6:a.U[a.t[r]]==1?5:7;Se(a,Y,3);Se(a,a.T[a.t[r]],3)}}b=0;for(A=0;A<a.L.e;A++)a.g[a.u[A]]!=0&&a.g[a.u[A]]!=3&&(!fl(a.L,a.u[A])||ei(a.L,a.u[A])==1)&&++b;Se(a,b,U);for(B=0;B<a.L.e;B++)if(a.g[a.u[B]]!=0&&a.g[a.u[B]]!=3&&(!fl(a.L,a.u[B])||ei(a.L,a.u[B])==1)){Se(a,B,U);if(ei(a.L,a.u[B])==1){if(a.j[a.u[B]]==0){Se(a,a.g[a.u[B]],3)}else{Y=a.g[a.u[B]]==1?a.j[a.u[B]]==1?4:6:a.j[a.u[B]]==1?5:7;Se(a,Y,3);Se(a,a.i[a.u[B]],3)}}else{Se(a,a.g[a.u[B]],2)}}Se(a,a.L.I?1:0,1);I=0;for(s=0;s<a.L.d;s++)Kh(a.L,a.t[s])!=0&&++I;if(I!=0){Se(a,1,1);Se(a,1,4);Se(a,I,U);for(h=0;h<a.L.d;h++){if(Kh(a.L,a.t[h])!=0){Se(a,h,U);Se(a,Kh(a.L,a.t[h]),8)}}}P=false;if(a.L.I){fe(a,0,false,U,uR,1,-1);ge(a,2,false,U,64,1,-1);fe(a,3,false,U,cR,1,-1);fe(a,4,false,U,120,4,3);fe(a,5,false,U,6,2,1);fe(a,6,false,U,1,1,-1);fe(a,7,false,U,vR,4,7);I=0;for(h=0;h<a.L.d;h++)Hh(a.L,a.t[h])!=null&&++I;if(I>0){Se(a,1,1);Se(a,8,4);Se(a,I,U);for(i=0;i<a.L.d;i++){t=Hh(a.L,a.t[i]);if(t!=null){Se(a,i,U);Se(a,t.length,4);for(M=0;M<t.length;M++)Se(a,t[M],8)}}}ge(a,9,false,U,96,2,5);ge(a,10,false,U,31,5,0);fe(a,11,false,U,TR,1,-1);ge(a,12,false,U,HR,8,7);fe(a,13,false,U,AR,3,14);fe(a,14,false,U,BR,5,17);P=P|fe(a,16,false,U,ER,3,22)}I=0;for(j=0;j<a.L.d;j++)a.a!=null&&a.a[a.t[j]]!=-1&&++I;if(I!=0){P=Xe(a,P);Se(a,1,1);Se(a,1,4);Se(a,I,U);for(h=0;h<a.L.d;h++){if(a.a!=null&&a.a[a.t[h]]!=-1){Se(a,h,U);Se(a,a.a[a.t[h]],4)}}}if((a.K&8)!=0){I=0;S=0;for(h=0;h<a.L.d;h++){Q=Ch(a.L,a.t[h]);if(Q!=null){++I;S=QJ(S,Q.length)}}if(I!=0){P=Xe(a,P);R=lf(S);Se(a,1,1);Se(a,2,4);Se(a,I,U);Se(a,R,4);for(i=0;i<a.L.d;i++){J=Ch(a.L,a.t[i]);if(J!=null){Se(a,i,U);Se(a,J.length,R);for(M=0;M<J.length;M++)Se(a,J.charCodeAt(M),7)}}}}if(a.L.I){P=P|fe(a,19,P,U,xR,3,25);P=P|ge(a,20,P,U,LR,3,15)}I=0;for(k=0;k<a.L.d;k++)Nh(a.L,a.t[k])!=0&&++I;if(I!=0){P=Xe(a,P);Se(a,1,1);Se(a,5,4);Se(a,I,U);for(e=0;e<a.L.d;e++){if(Nh(a.L,a.t[e])!=0){Se(a,e,U);Se(a,Nh(a.L,a.t[e])>>4,2)}}}if(a.L.I){P=P|fe(a,22,P,U,FR,1,-1);P=P|ge(a,23,P,U,QR,1,-1);P=P|ge(a,24,P,U,KR,2,19)}if((a.K&16)!=0){for(e=0;e<a.L.d;e++){if(Hi(a.L,a.t[e])){P=Xe(a,P);Se(a,1,1);Se(a,9,4);for(d=0;d<a.L.d;d++)Se(a,Hi(a.L,a.t[d])?1:0,1);break}}}O=$e(a);if(O!=null){I=0;for(C=0;C<a.L.e;C++)O[a.u[C]]&&++I;P=Xe(a,P);Se(a,1,1);Se(a,10,4);Se(a,I,U);for(D=0;D<a.L.e;D++)O[a.u[D]]&&Se(a,D,U)}a.L.I&&(P=P|fe(a,27,P,U,oR,1,-1));I=0;for(F=0;F<a.L.e;F++)ei(a.L,a.u[F])==32&&++I;if(I!=0){Xe(a,P);Se(a,1,1);Se(a,12,4);Se(a,I,U);for(v=0;v<a.L.e;v++)ei(a.L,a.u[v])==32&&Se(a,v,U)}Se(a,0,1);a.D=Te(a)}
	function hd(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W;a.G||Jn(a,b,(Gh(a.H,b),Jg(a.L,Oh(a.H,b))),Kg(a.L,Ph(a.H,b)));I=null;if(Ah(a.H,b)!=0){Q=PJ(Ah(a.H,b))==1?'':''+PJ(Ah(a.H,b));I=Ah(a.H,b)<0?Q+'-':Q+'+'}A=null;J=Mh(a.H,b);if(J!=0){(J&2)!=0&&(A='a');(J&4)!=0&&(A=A==null?'!a':A+','+'!a');(J&cR)!=0&&(A=A==null?'s':A+','+'s');(J&uR)!=0&&(A=A==null?'!s':A+','+'!s');if((J&vR)!=0){t=J&vR;t==1792?(A=A==null?'h0':A+','+'h0'):t==1664?(A=A==null?'h1':A+','+'h1'):t==1408?(A=A==null?'h2':A+','+'h2'):t==128?(A=A==null?'h>0':A+','+'h>0'):t==384?(A=A==null?'h>1':A+','+'h>1'):t==896?(A=A==null?'h>2':A+','+'h>2'):t==wR?(A=A==null?'h<3':A+','+'h<3'):t==1536&&(A=A==null?'h<2':A+','+'h<2')}if((J&xR)!=0){h=J&xR;h==167772160?(A=A==null?'c0':A+','+'c0'):h==yR?(A=A==null?'c+':A+','+'c+'):h==zR&&(A=A==null?'c-':A+','+'c-')}if((J&AR)!=0){H=J&AR;H==98304?(A=A==null?'pi0':A+','+'pi0'):H==81920?(A=A==null?'pi1':A+','+'pi1'):H==49152?(A=A==null?'pi2':A+','+'pi2'):H==dR&&(A=A==null?'pi>0':A+','+'pi>0')}if((J&BR)!=0){G=J&BR;G==3801088?(A=A==null?'n1':A+','+'n1'):G==3538944?(A=A==null?'n2':A+','+'n2'):G==3014656?(A=A==null?'n3':A+','+'n3'):G==3145728?(A=A==null?'n<3':A+','+'n<3'):G==CR?(A=A==null?'n<4':A+','+'n<4'):G==DR?(A=A==null?'n>1':A+','+'n>1'):G==917504?(A=A==null?'n>2':A+','+'n>2'):G==1966080&&(A=A==null?'n>3':A+','+'n>3')}if((J&120)!=0){M=J&120;M==112?(A=A==null?'!r':A+','+'!r'):M==8?(A=A==null?'r':A+','+'r'):M==104?(A=A==null?'rb2':A+','+'rb2'):M==88?(A=A==null?'rb3':A+','+'rb3'):M==56&&(A=A==null?'rb4':A+','+'rb4')}(J&ER)!=0&&(A=A==null?'r'+((J&ER)>>22):A+','+('r'+((J&ER)>>22)));(J&FR)!=0&&(A=A==null?'f':A+','+'f')}Kh(a.H,b)!=0&&(A=Lc(A,''+Kh(a.H,b)));P=0;if(Nh(a.H,b)!=0){switch(Nh(a.H,b)){case 16:I=I==null?'|':I+','+'|';break;case 32:P=1;break;case 48:P=2;}}k=null;if((a.B&64)==0){if(pi(a.H,b))k='?';else if(zh(a.H,b)!=0){if(uk(a.H,b)==2){switch(zh(a.H,b)){case 2:k=ri(a.H,b)?'p':'P';break;case 1:k=ri(a.H,b)?'m':'M';break;default:k='*';}}else{switch(zh(a.H,b)){case 1:k=ri(a.H,b)?'r':'R';break;case 2:k=ri(a.H,b)?'s':'S';break;default:k='*';}}}}(a.B&1792)!=0&&(k=Lc(k,''+xo(a.H,b)));D=null;(a.B&16)!=0&&Jh(a.H,b)!=0&&(D=''+Jh(a.H,b));o=null;if(Pk(a.H,b)!=-1){n=Xc(a,b);n!=-1&&(o=n==0?'abs':((n&255)==1?'&':'or')+(1+(n>>8)))}u=0;a.H.I?((Rh(a.H,b)!=6||!a.p[b])&&(Mh(a.H,b)&uR)!=0&&Ah(a.H,b)!=0||Nh(a.H,b)!=0)&&(u=Ek(a.H,b)):(Rh(a.H,b)!=6||!a.p[b]||Nh(a.H,b)!=0)&&(u=Ek(a.H,b));e=Ch(a.H,b);if(e!=null){u=0}else if(Hh(a.H,b)!=null){d=(Mh(a.H,b)&1)!=0?'[!':'[';e=d+Ih(a.H,b)+']';e.length>5&&(e=d+Hh(a.H,b).length+']');(Mh(a.H,b)&uR)!=0&&(u=-1)}else if((Mh(a.H,b)&1)!=0){e='?';(Mh(a.H,b)&uR)!=0&&(u=-1)}else (Rh(a.H,b)!=6||I!=null||A!=null||u>0||!a.p[b])&&(e=Gh(a.H,b));C=0;!Hi(a.H,b)&(Mh(a.H,b)&oR)!=0&&Ad(a,-8);if(e!=null){C=(K=(R=JH(a.e,e),new YH(0,0,R,0)).b,K);md(a,Jg(a.L,Oh(a.H,b)),Kg(a.L,Ph(a.H,b)),e,true);a.q[b]=true}else bd(a,b)&&ld(a,Jg(a.L,Oh(a.H,b)),Kg(a.L,Ph(a.H,b)),b);if(I!=null){Nn(a,(a.R*2+1)/3|0);T=Jg(a.L,Oh(a.H,b))+((C+(K=(R=JH(a.e,I),new YH(0,0,R,0)).b,K))/2+1);V=Kg(a.L,Ph(a.H,b))-((a.j*4-4)/8|0);md(a,T,V,I,true);Nn(a,a.R)}(a.B&2)!=0&&(A=''+b);if(A!=null){Nn(a,(a.R*2+1)/3|0);T=Jg(a.L,Oh(a.H,b))-(C+(K=(R=JH(a.e,A),new YH(0,0,R,0)).b,K))/2;V=Kg(a.L,Ph(a.H,b))-((a.j*4-4)/8|0);md(a,T,V,A,true);Nn(a,a.R)}if(k!=null){Nn(a,(a.R*2+1)/3|0);T=Jg(a.L,Oh(a.H,b))-(C+(K=(R=JH(a.e,k),new YH(0,0,R,0)).b,K))/2;V=Kg(a.L,Ph(a.H,b))+((a.j*4+4)/8|0);O=a.w;Ad(a,448);md(a,T,V,k,false);Ad(a,O);Nn(a,a.R)}if(D!=null){Nn(a,(a.R*2+1)/3|0);T=Jg(a.L,Oh(a.H,b))+((C+(K=(R=JH(a.e,D),new YH(0,0,R,0)).b,K))/2+1);V=Kg(a.L,Ph(a.H,b))+((a.j*4+4)/8|0);O=a.w;Ad(a,ti(a.H,b)?384:448);md(a,T,V,D,true);Ad(a,O);Nn(a,a.R)}if(o!=null){c=qd(a,b);Nn(a,(a.R*2+1)/3|0);T=Jg(a.L,Oh(a.H,b))+0.7*a.j*$wnd.Math.sin(c);V=Kg(a.L,Ph(a.H,b))+0.7*a.j*$wnd.Math.cos(c);O=a.w;Ad(a,Wc(a,b));md(a,T,V,o,false);Ad(a,O);Nn(a,a.R)}if(u==0&&P==0){a.w==-8&&Ad(a,-9);return}r=JC(ID,mR,6,4,15,1);for(w=0;w<gk(a.H,b);w++){g=vk(a.H,b,w);for(B=0;B<2;B++){if(Vh(a.H,B,g)==b){N=Uh(a.H,Vh(a.H,B,g),Vh(a.H,1-B,g));if(N<GR){r[0]-=N+tR;r[3]+=N+sR}else if(N<0){r[2]+=N+tR;r[3]-=N}else if(N<tR){r[1]+=N;r[2]+=tR-N}else{r[0]+=N-tR;r[1]+=sR-N}}}}uk(a.H,b)==0?Ai(a.H,b)?(r[3]-=0.2):(r[1]-=0.2):(r[1]-=0.1);(I!=null||D!=null)&&(r[1]+=10);(A!=null||k!=null)&&(r[3]+=10);p='';if(u!=0){s=(L=(S=JH(a.e,'H'),new YH(0,0,S,0)).b,L);q=0;if(u==-1){p='n';Nn(a,(a.R*2+1)/3|0);q=(K=(R=JH(a.e,'n'),new YH(0,0,R,0)).b,K)}else if(u>1){p=''+u;Nn(a,(a.R*2+1)/3|0);q=(K=(R=JH(a.e,p),new YH(0,0,R,0)).b,K)}if(r[1]<0.6||r[3]<0.6){j=Kg(a.L,Ph(a.H,b));if(r[1]<=r[3]){r[1]+=10;i=Jg(a.L,Oh(a.H,b))+(C+s)/2}else{r[3]+=10;i=Jg(a.L,Oh(a.H,b))-(C+s)/2-q}}else{i=Jg(a.L,Oh(a.H,b));if(r[0]<r[2]){r[0]+=10;j=Kg(a.L,Ph(a.H,b))-a.j}else{r[2]+=10;j=Kg(a.L,Ph(a.H,b))+a.j}}if(q>0){T=i+(s+q)/2;V=j+((a.j*4+4)/8|0);md(a,T,V,p,true);Nn(a,a.R)}md(a,i,j,'H',true)}f=0;if(P!=0){F=50;l=0;for(v=0;v<4;v++){m=v>1?v-2:v+2;if(r[v]<F){f=v;F=r[v];l=r[m]}else if(r[v]==F){if(r[m]>l){f=v;l=r[m]}}}switch(f){case 0:i=Jg(a.L,Oh(a.H,b));j=Kg(a.L,Ph(a.H,b))-a.P-C/2;break;case 1:i=Jg(a.L,Oh(a.H,b))+a.P+C/2;j=Kg(a.L,Ph(a.H,b));break;case 2:i=Jg(a.L,Oh(a.H,b));j=Kg(a.L,Ph(a.H,b))+a.P+C/2;break;default:i=Jg(a.L,Oh(a.H,b))-a.P-C/2;j=Kg(a.L,Ph(a.H,b));}if(P==1){bN(a.U,new YH(i-a.P,j-a.P,2*a.P,2*a.P));a.G||bN(a.O,new Fd(i,j,_c(a,b)?-3:a.o[b]))}else{switch(f){case 2:case 0:U=2*a.P;W=0;i-=a.P;break;case 1:U=0;W=2*a.P;j-=a.P;break;default:U=0;W=2*a.P;j-=a.P;}bN(a.U,new YH(i-a.P,j-a.P,2*a.P,2*a.P));a.G||bN(a.O,new Fd(i,j,_c(a,b)?-3:a.o[b]));bN(a.U,new YH(i+U-a.P,j+W-a.P,2*a.P,2*a.P));a.G||bN(a.O,new Fd(i+U,j+W,_c(a,b)?-3:a.o[b]))}}a.w==-8&&Ad(a,-9)}
	function Wg(){Wg=pH;Rg=MC(FC(XF,1),bS,2,6,['?','H','He','Li','Be','B','C','N','O','F','Ne','Na','Mg','Al','Si','P','S','Cl','Ar','K','Ca','Sc','Ti','V','Cr','Mn','Fe','Co','Ni','Cu','Zn','Ga','Ge','As','Se','Br','Kr','Rb','Sr','Y','Zr','Nb','Mo','Tc','Ru','Rh','Pd','Ag','Cd','In','Sn','Sb','Te','I','Xe','Cs','Ba','La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb','Lu','Hf','Ta','W','Re','Os','Ir','Pt','Au','Hg','Tl','Pb','Bi','Po','At','Rn','Fr','Ra','Ac','Th','Pa','U','Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No','Lr',cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,'R4','R5','R6','R7','R8','R9','R10','R11','R12','R13','R14','R15','R16','R1','R2','R3','A','A1','A2','A3',cS,cS,'D','T','X','R','H2','H+','Nnn','HYD','Pol',cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,cS,'Ala','Arg','Asn','Asp','Cys','Gln','Glu','Gly','His','Ile','Leu','Lys','Met','Phe','Pro','Ser','Thr','Trp','Tyr','Val']);Ug=MC(FC(MG,1),RR,6,15,[0,1,4,7,9,11,12,14,16,19,20,23,24,27,28,31,32,35,40,39,40,45,48,51,52,55,56,59,58,63,64,69,74,75,80,79,84,85,88,89,90,93,98,0,102,103,106,107,114,115,120,121,130,127,132,133,138,139,140,141,142,0,152,153,158,159,164,165,166,169,174,175,180,181,184,187,192,193,195,197,202,205,208,209,0,0,0,0,0,0,232,0,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,156,114,115,103,128,129,57,137,113,113,128,131,147,97,87,101,186,163,99]);Sg=MC(FC(GD,2),dS,9,0,[null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[0]),MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[4]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[0]),MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[4]),MC(FC(GD,1),$R,6,15,[3,5]),MC(FC(GD,1),$R,6,15,[2,4,6]),MC(FC(GD,1),$R,6,15,[1,3,5,7]),MC(FC(GD,1),$R,6,15,[0]),MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),null,null,null,null,null,null,null,null,null,null,MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[3,5]),MC(FC(GD,1),$R,6,15,[2,4,6]),MC(FC(GD,1),$R,6,15,[1,3,5,7]),MC(FC(GD,1),$R,6,15,[0,2]),MC(FC(GD,1),$R,6,15,[1,2,3,4]),MC(FC(GD,1),$R,6,15,[2]),null,null,null,null,null,null,null,null,null,null,MC(FC(GD,1),$R,6,15,[1,2,3]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[3,5]),MC(FC(GD,1),$R,6,15,[2,4,6]),MC(FC(GD,1),$R,6,15,[1,3,5,7]),MC(FC(GD,1),$R,6,15,[0,2,4,6]),MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[2])]);Tg=MC(FC(GD,2),dS,9,0,[null,MC(FC(GD,1),$R,6,15,[1]),null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),null,null,MC(FC(GD,1),$R,6,15,[-3]),MC(FC(GD,1),$R,6,15,[-2]),MC(FC(GD,1),$R,6,15,[-1]),null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),null,MC(FC(GD,1),$R,6,15,[-3]),MC(FC(GD,1),$R,6,15,[-2]),MC(FC(GD,1),$R,6,15,[-1]),null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,3,4]),MC(FC(GD,1),$R,6,15,[2,3,4,5]),MC(FC(GD,1),$R,6,15,[2,3,6]),MC(FC(GD,1),$R,6,15,[2,3,4,7]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[1,2]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[-3,3,5]),MC(FC(GD,1),$R,6,15,[-2]),MC(FC(GD,1),$R,6,15,[-1]),null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[4]),MC(FC(GD,1),$R,6,15,[3,5]),MC(FC(GD,1),$R,6,15,[6]),MC(FC(GD,1),$R,6,15,[4,6,7]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[-3,3,5]),MC(FC(GD,1),$R,6,15,[-2,4,6]),MC(FC(GD,1),$R,6,15,[-1]),null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3,4]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[4]),MC(FC(GD,1),$R,6,15,[5]),MC(FC(GD,1),$R,6,15,[6]),MC(FC(GD,1),$R,6,15,[4,6,7]),MC(FC(GD,1),$R,6,15,[3,4]),MC(FC(GD,1),$R,6,15,[3,4]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[1,3]),MC(FC(GD,1),$R,6,15,[1,2]),MC(FC(GD,1),$R,6,15,[1,3]),MC(FC(GD,1),$R,6,15,[2,4]),MC(FC(GD,1),$R,6,15,[3,5]),MC(FC(GD,1),$R,6,15,[-2,2,4]),MC(FC(GD,1),$R,6,15,[-1,1]),null,MC(FC(GD,1),$R,6,15,[1]),MC(FC(GD,1),$R,6,15,[2]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[4]),MC(FC(GD,1),$R,6,15,[4,5]),MC(FC(GD,1),$R,6,15,[3,4,5,6]),MC(FC(GD,1),$R,6,15,[3,4,5,6]),MC(FC(GD,1),$R,6,15,[3,4,5,6]),MC(FC(GD,1),$R,6,15,[3,4,5,6]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3,4]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[2,3]),MC(FC(GD,1),$R,6,15,[3])])}
	function Gl(b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,tb,ub,vb,wb,xb,yb,zb,Ab,Bb,Cb,Db,Eb,Fb,Gb,Hb,Ib,Jb,Kb,Lb,Mb,Nb,Ob,Pb,Qb,Rb,Sb,Tb,Ub,Vb,Wb,Xb,Yb,Zb,$b,_b,ac,bc,cc,dc,ec,fc,gc,hc,ic,jc,kc,lc,mc,nc,oc;ic=8;b.f=c;uh(b.f);if(d==null||d.length==0)return;e!=null&&e.length==0&&(e=null);Al(b,d,0);h=zl(b,4);A=zl(b,4);if(h>8){ic=h;h=A}if(h==0){Cj(b.f,zl(b,1)==1);return}i=zl(b,h);j=zl(b,A);Zb=zl(b,h);bc=zl(b,h);ac=zl(b,h);L=zl(b,h);for(n=0;n<i;n++)Yg(b.f,6);for(gb=0;gb<Zb;gb++)rj(b.f,zl(b,h),7);for(hb=0;hb<bc;hb++)rj(b.f,zl(b,h),8);for(sb=0;sb<ac;sb++)rj(b.f,zl(b,h),zl(b,8));for(Db=0;Db<L;Db++)$i(b.f,zl(b,h),zl(b,4)-8);M=1+j-i;T=zl(b,4);w=0;oj(b.f,0,0);pj(b.f,0,0);qj(b.f,0,0);U=e!=null&&e[0]>=39;hc=0;kc=0;mc=0;oc=0;P=false;Q=false;if(U){if(e.length>2*i-2&&e[2*i-2]==39||e.length>3*i-3&&e[3*i-3]==39){Q=true;P=e.length==3*i-3+9;Pb=P?3*i-3:2*i-2;v=86*(e[Pb+1]-40)+e[Pb+2]-40;hc=$wnd.Math.pow(10,v/2000-1);Pb+=2;jc=86*(e[Pb+1]-40)+e[Pb+2]-40;kc=$wnd.Math.pow(10,jc/1500-1);Pb+=2;lc=86*(e[Pb+1]-40)+e[Pb+2]-40;mc=$wnd.Math.pow(10,lc/1500-1);if(P){Pb+=2;nc=86*(e[Pb+1]-40)+e[Pb+2]-40;oc=$wnd.Math.pow(10,nc/1500-1)}}else{P=e.length==3*i-3}}if(b.b&&P){e=null;U=false}for(Jb=1;Jb<i;Jb++){V=zl(b,T);if(V==0){if(U){oj(b.f,Jb,b.f.H[0].a+8*(e[Jb*2-2]-83));pj(b.f,Jb,b.f.H[0].b+8*(e[Jb*2-1]-83));P&&qj(b.f,Jb,b.f.H[0].c+8*(e[2*i-3+Jb]-83))}++M;continue}w+=V-1;if(U){oj(b.f,Jb,Oh(b.f,w)+e[Jb*2-2]-83);pj(b.f,Jb,Ph(b.f,w)+e[Jb*2-1]-83);P&&qj(b.f,Jb,Qh(b.f,w)+(e[2*i-3+Jb]-83))}Zg(b.f,w,Jb,1)}for(Kb=0;Kb<M;Kb++)Zg(b.f,zl(b,h),zl(b,h),1);Rb=JC(NG,nR,6,j,16,1);for(G=0;G<j;G++){H=zl(b,2);switch(H){case 0:Rb[G]=true;break;case 2:Aj(b.f,G,2);break;case 3:Aj(b.f,G,4);}}g=zl(b,h);for(Lb=0;Lb<g;Lb++){m=zl(b,h);if(ic==8){cc=zl(b,2);if(cc==3){dj(b.f,m,1,0);jj(b.f,m,1,false)}else{jj(b.f,m,cc,false)}}else{cc=zl(b,3);switch(cc){case 4:jj(b.f,m,1,false);dj(b.f,m,1,zl(b,3));break;case 5:jj(b.f,m,2,false);dj(b.f,m,1,zl(b,3));break;case 6:jj(b.f,m,1,false);dj(b.f,m,2,zl(b,3));break;case 7:jj(b.f,m,2,false);dj(b.f,m,2,zl(b,3));break;default:jj(b.f,m,cc,false);}}}ic==8&&zl(b,1)==0&&(b.f.J=true);f=zl(b,A);for(Mb=0;Mb<f;Mb++){C=zl(b,A);if(ei(b.f,C)==1){cc=zl(b,3);switch(cc){case 4:xj(b.f,C,1,false);vj(b.f,C,1,zl(b,3));break;case 5:xj(b.f,C,2,false);vj(b.f,C,1,zl(b,3));break;case 6:xj(b.f,C,1,false);vj(b.f,C,2,zl(b,3));break;case 7:xj(b.f,C,2,false);vj(b.f,C,2,zl(b,3));break;default:xj(b.f,C,cc,false);}}else{xj(b.f,C,zl(b,2),false)}}Cj(b.f,zl(b,1)==1);l=null;_b=0;while(zl(b,1)==1){S=_b+zl(b,4);switch(S){case 0:$b=zl(b,h);for(Nb=0;Nb<$b;Nb++){m=zl(b,h);kj(b.f,m,uR,true)}break;case 1:$b=zl(b,h);for(Ob=0;Ob<$b;Ob++){m=zl(b,h);Xb=zl(b,8);ij(b.f,m,Xb)}break;case 2:$b=zl(b,A);for(ib=0;ib<$b;ib++){C=zl(b,A);Aj(b.f,C,64)}break;case 3:$b=zl(b,h);for(jb=0;jb<$b;jb++){m=zl(b,h);kj(b.f,m,cR,true)}break;case 4:$b=zl(b,h);for(kb=0;kb<$b;kb++){m=zl(b,h);gc=zl(b,4)<<3;kj(b.f,m,gc,true)}break;case 5:$b=zl(b,h);for(lb=0;lb<$b;lb++){m=zl(b,h);k=zl(b,2)<<1;kj(b.f,m,k,true)}break;case 6:$b=zl(b,h);for(mb=0;mb<$b;mb++){m=zl(b,h);kj(b.f,m,1,true)}break;case 7:$b=zl(b,h);for(nb=0;nb<$b;nb++){m=zl(b,h);db=zl(b,4)<<7;kj(b.f,m,db,true)}break;case 8:$b=zl(b,h);for(ob=0;ob<$b;ob++){m=zl(b,h);s=zl(b,4);q=JC(KD,jR,6,s,15,1);for(Sb=0;Sb<s;Sb++){r=zl(b,8);q[Sb]=r}ej(b.f,m,q)}break;case 9:$b=zl(b,A);for(pb=0;pb<$b;pb++){C=zl(b,A);gc=zl(b,2)<<5;zj(b.f,C,gc,true)}break;case 10:$b=zl(b,A);for(qb=0;qb<$b;qb++){C=zl(b,A);I=zl(b,5);zj(b.f,C,I,true)}break;case 11:$b=zl(b,h);for(rb=0;rb<$b;rb++){m=zl(b,h);kj(b.f,m,TR,true)}break;case 12:$b=zl(b,A);for(tb=0;tb<$b;tb++){C=zl(b,A);J=zl(b,8)<<7;zj(b.f,C,J,true)}break;case 13:$b=zl(b,h);for(ub=0;ub<$b;ub++){m=zl(b,h);dc=zl(b,3)<<14;kj(b.f,m,dc,true)}break;case 14:$b=zl(b,h);for(vb=0;vb<$b;vb++){m=zl(b,h);Yb=zl(b,5)<<17;kj(b.f,m,Yb,true)}break;case 15:_b=16;break;case 16:$b=zl(b,h);for(wb=0;wb<$b;wb++){m=zl(b,h);fc=zl(b,3)<<22;kj(b.f,m,fc,true)}break;case 17:$b=zl(b,h);for(xb=0;xb<$b;xb++){m=zl(b,h);Yi(b.f,m,zl(b,4))}break;case 18:$b=zl(b,h);Wb=zl(b,4);for(yb=0;yb<$b;yb++){m=zl(b,h);R=zl(b,Wb);Tb=JC(GD,$R,6,R,15,1);for(Sb=0;Sb<R;Sb++)Tb[Sb]=zl(b,7)<<24>>24;bj(b.f,m,sK(lQ(Tb,0,(Ub=Tb.length,iQ(),Ub))))}break;case 19:$b=zl(b,h);for(zb=0;zb<$b;zb++){m=zl(b,h);K=zl(b,3)<<25;kj(b.f,m,K,true)}break;case 20:$b=zl(b,A);for(Ab=0;Ab<$b;Ab++){C=zl(b,A);fc=zl(b,3)<<15;zj(b.f,C,fc,true)}break;case 21:$b=zl(b,h);for(Bb=0;Bb<$b;Bb++){m=zl(b,h);lj(b.f,m,zl(b,2)<<4)}break;case 22:$b=zl(b,h);for(Cb=0;Cb<$b;Cb++){m=zl(b,h);kj(b.f,m,FR,true)}break;case 23:$b=zl(b,A);for(Eb=0;Eb<$b;Eb++){C=zl(b,A);zj(b.f,C,QR,true)}break;case 24:$b=zl(b,A);for(Fb=0;Fb<$b;Fb++){C=zl(b,A);k=zl(b,2)<<19;zj(b.f,C,k,true)}break;case 25:for(Gb=0;Gb<i;Gb++)zl(b,1)==1&&mj(b.f,Gb,true);break;case 26:$b=zl(b,A);l=JC(KD,jR,6,$b,15,1);for(Hb=0;Hb<$b;Hb++)l[Hb]=zl(b,A);break;case 27:$b=zl(b,h);for(Ib=0;Ib<$b;Ib++){m=zl(b,h);kj(b.f,m,oR,true)}break;case 28:$b=zl(b,A);for(fb=0;fb<$b;fb++)Aj(b.f,zl(b,A),32);}}Od(new Vd(b.f),Rb,false);if(l!=null)for(D=0,F=l.length;D<F;++D){C=l[D];Aj(b.f,C,ei(b.f,C)==2?4:2)}N=0;if(e==null&&d.length>b.d+1&&(d[b.d+1]==32||d[b.d+1]==9)){e=d;N=b.d+2}if(e!=null){try{if(e[N]==33||e[N]==35){Al(b,e,N+1);P=zl(b,1)==1;Q=zl(b,1)==1;ec=2*zl(b,4);B=1<<ec;C=0;for(o=1;o<i;o++){if(C<j&&Vh(b.f,1,C)==o){bb=Vh(b.f,0,C++);ab=1}else{bb=0;ab=8}oj(b.f,o,Oh(b.f,bb)+ab*(zl(b,ec)-(B/2|0)));pj(b.f,o,Ph(b.f,bb)+ab*(zl(b,ec)-(B/2|0)));P&&qj(b.f,o,Qh(b.f,bb)+ab*(zl(b,ec)-(B/2|0)))}u=P?1.5:(Wg(),Wg(),Vg);t=Th(b.f,i,j,u);if(e[N]==35){eb=0;cb=JC(KD,jR,6,i,15,1);for(p=0;p<i;p++)eb+=cb[p]=Ek(b.f,p);for(m=0;m<i;m++){for(fb=0;fb<cb[m];fb++){db=Yg(b.f,1);Zg(b.f,m,db,1);oj(b.f,db,Oh(b.f,m)+(zl(b,ec)-(B/2|0)));pj(b.f,db,Ph(b.f,m)+(zl(b,ec)-(B/2|0)));P&&qj(b.f,db,Qh(b.f,m)+(zl(b,ec)-(B/2|0)))}}i+=eb;j+=eb}if(Q){hc=yl(zl(b,ec),B);kc=hc*Bl(zl(b,ec),B);mc=hc*Bl(zl(b,ec),B);P&&(oc=hc*Bl(zl(b,ec),B));ab=hc/t;for(m=0;m<i;m++){oj(b.f,m,kc+ab*Oh(b.f,m));pj(b.f,m,mc+ab*Ph(b.f,m));P&&qj(b.f,m,oc+ab*Qh(b.f,m))}}else{ab=1.5/t;for(m=0;m<i;m++){oj(b.f,m,ab*Oh(b.f,m));pj(b.f,m,ab*Ph(b.f,m));P&&qj(b.f,m,ab*Qh(b.f,m))}}}else{P&&!Q&&hc==0&&(hc=1.5);if(hc!=0&&b.f.p!=0){t=0;for(C=0;C<b.f.p;C++){W=Oh(b.f,Vh(b.f,0,C))-Oh(b.f,Vh(b.f,1,C));X=Ph(b.f,Vh(b.f,0,C))-Ph(b.f,Vh(b.f,1,C));Y=P?Qh(b.f,Vh(b.f,0,C))-Qh(b.f,Vh(b.f,1,C)):0;t+=$wnd.Math.sqrt(W*W+X*X+Y*Y)}t/=b.f.p;$=hc/t;for(m=0;m<b.f.o;m++){oj(b.f,m,Oh(b.f,m)*$+kc);pj(b.f,m,Ph(b.f,m)*$+mc);P&&qj(b.f,m,Qh(b.f,m)*$+oc)}}}}catch(a){a=PG(a);if(yD(a,13)){Z=a;fB(Z,(HK(),GK),'');'Faulty id-coordinates:'+iB(Z,Z.mb())+' '+sK(lQ(d,0,(Vb=d.length,iQ(),Vb)))+' '+sK(lQ(e,0,(Ub=e.length,Ub)));e=null;P=false}else throw QG(a)}}O=e!=null&&!P;if(O||b.b){no(b.f,3);for(C=0;C<b.f.e;C++)bi(b.f,C)==2&&!fl(b.f,C)&&ci(b.f,C)==0&&yj(b.f,C)}if(!O&&b.b){ol(b.f,0);Qb=new Np;Qb.g=new xO(78187493520);xp(Qb,b.f);O=true}if(O){rl(b.f);zo(b.f)}else P||ol(b.f,0)}
	function kr(){kr=pH;jr=MC(FC(JD,1),RR,6,15,[-0.1899999976158142,1.2699999809265137,-0.7009999752044678,2.690999984741211,-0.22699999809265137,0.029999999329447746,0.10599999874830246,-0.47600001096725464,-0.44699999690055847,-0.19099999964237213,-0.3330000042915344,0.0860000029206276,0.24699999392032623,-0.06199999898672104,0.01600000075995922,0.3869999945163727,0.23499999940395355,-0.4320000112056732,-0.902999997138977,0.38999998569488525,0.5809999704360962,4.52400016784668,-0.6349999904632568,0.7919999957084656,0.5920000076293945,0.9639999866485596,pU,-0.6850000023841858,-0.3149999976158142,-0.4129999876022339,-0.5950000286102295,0.2199999988079071,-0.2800000011920929,0.7699999809265137,-0.05000000074505806,1.0870000123977661,0.19200000166893005,0.19599999487400055,-0.5199999809265137,0.5419999957084656,0.3630000054836273,xU,2.384000062942505,1.75,-1.6660000085830688,-1.065999984741211,1.3270000219345093,0.8029999732971191,-1.5049999952316284,-2.5369999408721924,yU,0.14900000393390656,0.5210000276565552,2.9049999713897705,-0.25200000405311584,-1.4320000410079956,-2.253999948501587,0.4399999976158142,-0.27000001072883606,-0.13300000131130219,-0.26899999380111694,0.2669999897480011,0.5720000267028809,-0.5680000185966492,0.17399999499320984,-0.1850000023841858,-0.23499999940395355,yU,xU,-0.34200000762939453,-0.3479999899864197,-0.43700000643730164,-0.8040000200271606,-0.41200000047683716,-0.2150000035762787,-0.625,-0.8309999704360962,0.4970000088214874,-0.4309999942779541,-1.3309999704360962,0.5070000290870667,-0.6320000290870667,-0.5989999771118164,0.8600000143051147,0.3610000014305115,0.40299999713897705,0.004999999888241291,1.1460000276565552,0.9359999895095825,-0.30000001192092896,0.20900000631809235,-0.5830000042915344,-0.024000000208616257,-0.009999999776482582,1.6469999551773071,0.843999981880188,0.125,0.1420000046491623,-0.17100000381469727,0.44200000166893005,0.08799999952316284,3.065999984741211,1.6519999504089355,-0.15600000321865082,-0.3529999852180481,-0.164000004529953,-0.4410000145435333,-0.4970000088214874,-1.059999942779541,0.6110000014305115,0.4860000014305115,0.11500000208616257,-0.22499999403953552,-0.15399999916553497,-0.03099999949336052,0.8619999885559082,-0.03500000014901161,-0.5960000157356262,-1.5740000009536743,-1.093000054359436,1.1610000133514404,sU,-0.44999998807907104,-0.5559999942779541,-0.621999979019165,2.121999979019165,-1.4019999504089355,2.072999954223633,-3.131999969482422,-2.119999885559082,0.34700000286102295,-1.2649999856948853,-1.3170000314712524,2.500999927520752,-2.2260000705718994,0.9129999876022339,-2.9570000171661377,0.29100000858306885,-0.7250000238418579,-1.4249999523162842,zU,-0.017999999225139618,-0.8489999771118164,-2.259000062942505,-3.4760000705718994,-0.296999990940094,-1.659999966621399,0.023000000044703484,0.0729999989271164,0.2540000081062317,0.5540000200271606,0.5950000286102295,rU,-1.25,1.3940000534057617,-2.7269999980926514,0.08299999684095383,-1.281999945640564,-0.4059999883174896,-0.6370000243186951,-0.17399999499320984,-0.10100000351667404,-0.5429999828338623,-2.4059998989105225,-3.2920000553131104,-0.6809999942779541,-1.2580000162124634,1.0700000524520874,-3.0959999561309814,-0.2280000001192093,0.718999981880188,0.1379999965429306,1.3020000457763672,0.859000027179718,1.3589999675750732,0.6589999794960022,-0.9399999976158142,0.8999999761581421,0.3190000057220459,-2.571000099182129,1.9329999685287476,0.11900000274181366,2.1080000400543213,0.11299999803304672,3.3359999656677246,0.7540000081062317,-0.4650000035762787,-0.05299999937415123,-0.19300000369548798,1.850000023841858,-1.2610000371932983,-0.656000018119812,-0.7300000190734863,-0.9380000233650208,1.1089999675750732,0.972000002861023,1.652999997138977,2.6019999980926514,1.628000020980835,-0.3970000147819519,0.12800000607967377,1.1540000438690186,0.24199999868869781,-0.5289999842643738,-0.27799999713897705,-0.8019999861717224,0.9120000004768372,-1.38100004196167,0.46299999952316284,1.0740000009536743,-0.628000020980835,-0.9620000123977661,0.7289999723434448,1.065999984741211,1.0670000314712524,-0.3109999895095825,0.03099999949336052,1.3079999685287476,0.07699999958276749,-0.4790000021457672,zU,-1.8320000171661377,-1.4989999532699585,-2.115999937057495,-2.2070000171661377,-0.15299999713897705,0.14100000262260437,2.134999990463257,0.23399999737739563,0.460999995470047,0.6700000166893005,-0.3610000014305115,-1.0390000343322754,-0.4830000102519989,0.13699999451637268,-0.7680000066757202,-0.5109999775886536,3.4240000247955322,-0.8550000190734863,-0.5849999785423279,-1.5670000314712524,0.6570000052452087,1.1150000095367432,1.9759999513626099,1.7860000133514404,-0.035999998450279236,-1.0499999523162842,2.5390000343322754,2.234999895095825,2.2899999618530273,3.121000051498413,3.931999921798706,2.75,3.3429999351501465,1.840000033378601,0.3889999985694885,1.121999979019165,1.6299999952316284,1.3350000381469727,0.3659999966621399,-0.5569999814033508,1.0449999570846558,0.4320000112056732,0.20399999618530273,0.8820000290870667,0.4659999907016754,-0.4580000042915344,0.04399999976158142,1.0329999923706055,-1.0800000429153442,0.40400001406669617]);ir=MC(FC(LD,1),RR,6,14,[262146,262148,262153,262157,264194,264195,264196,264197,264200,264201,264205,264206,267266,267267,267268,267273,267277,271362,271363,271364,271365,271368,271369,395266,395267,395268,395269,395272,395273,395277,395278,398338,526338,526339,526340,526344,529412,533508,533512,788482,788483,136448002,136448003,136448004,136448008,139593730,139593731,139593732,139593736,139596802,139596803,139596804,143788034,143788035,143791106,268697604,270794754,270794756,270796802,270796803,270796804,270796808,270796812,273940482,273942530,273942531,273942532,273942536,273945602,273945608,273945612,278136834,278136835,278136836,278136840,278136844,278139906,278139907,278139908,278144002,278144003,278144004,278144008,405014530,405014531,405014532,405014536,405017602,405017603,405017604,405021698,405021699,405021700,405021704,405145602,405145603,405145604,405145608,408158210,408160258,408163330,408167426,408291330,539232258,539232259,539235330,539235331,539239426,539239427,539363330,539363331,542377986,542377987,542381058,542381059,542509058,542509059,542509070,546837506,807667714,807798786,810813442,810816514,810820610,139722885122,139722885123,142944110594,142944110595,142947256322,142947259394,147239077890,147242223618,277161838594,277161838595,277164984322,277164984323,277164987394,277164987395,277169178626,277169181698,ES,FS,280383064066,280386209794,280386212866,280390404098,280390407170,GS,HS,IS,JS,KS,284678031362,284681177090,284681177091,284681180162,284685371394,284685374466,LS,MS,NS,OS,PS,QS,284819727363,414600792066,414603937794,414603937795,414603940866,414603940867,RS,SS,TS,US,VS,WS,XS,414742483970,414742488066,YS,ZS,$S,_S,414869361667,aT,bT,cT,dT,eT,552177240067,fT,gT,552181437442,hT,iT,jT,kT,lT,mT,552311457794,nT,oT,pT,555398465539,qT,555398468611,rT,555398468616,sT,555402659848,tT,555402667010,uT,vT,wT,555529540615,xT,yT,zT,AT,555667032078,BT,CT,DT,559697634306,ET,FT,{l:2361347,m:1376832,h:16},GT,HT,IT,JT,KT,LT,MT,NT,OT,{l:1315842,m:2427201,h:16},PT,QT,RT,ST,TT,UT,VT,{l:2361346,m:592192,h:24},WT,XT,YT,{l:1315842,m:623169,h:24},{l:2361346,m:623200,h:24},ZT,{l:2368514,m:623200,h:24},{l:2361351,m:1376832,h:32},$T,_T,aU,bU,cU,dU,{l:1319943,m:1378626,h:32},eU,fU,gU,hU,{l:1312776,m:1443138,h:32},{l:1315848,m:1443138,h:32},iU,jU,{l:2368520,m:1443168,h:32},kU])}
	function rn(){rn=pH;pn=MC(FC(XF,1),bS,2,6,['QM@HzAmdqjF@','RF@Q``','qC`@ISTAlQE`','`J@H','QM@HzAmdqbF@','qC`@ISTAlQEhqPp@','sJP@DiZhAmQEb','RF@QPvR@','QM@HzA@','qC`@ISTAlQEhpPp@','qC`@Qz`MbHl','sJP@DiZhAmQEcFZF@','RFPDXH','qC`@IVtAlQE`','QM@HvAmdqfF@','sGP@DiVj`FsDVM@','`L@H','sJP@DizhAmQEcFBF@','sJP@DjvhAmQEb','sFp@DiTt@@AlqEcP','sGP@LdbMU@MfHlZ','QMHAIhD','QM@HzAy@','sJP@DkVhAmQEb','sNp@DiUjj@[\\QXu`','sJP@DiZhAmQEcFBF@','sGP@DjVj`FsDVM@','RFPDTH','RG@DXOH@','sGP@Divj`FsDVMcAC@','sGP@Dj}j`FsDVM@','qC`@Qz`MbHmFRF@','sNp@LdbJjj@[\\QXu`','QMHAIhGe@','QM@HzAyd`','QM`AIhD','qC`@ISTA@','sGP@DkUj`FsDVM@','qC`@IVtAlQEhqPp@','sNp@DiUjj@[\\QXuqea`@','KAx@@IRjuUPAlHPfES\\','QM`BN`P','sJP@DjZhAmQEcFJF@','Hid@@DjU^nBBH@FtaBXUMp`','sNp@Diujj@[\\QXuq`a`@','sJP@DjvhAmQEcFZF@','sJP@DjZhAmQEcFFF@','sOp@DjWkB@@FwDVM\\YhX@','sNp@Dj}Zj@[\\QXu`','sNp@DiWjj@[\\QXuq`a`@','sOp@DjWkB@@D','KAx@@ITouUPAlHPfES\\','KAx@@YIDTjjh@vDHSBin@','sNp@DkUZj@[\\QXu`','RFPDXOH@','QM`BN`^L`','qC`@ISTAy@','sGP@LdbMU@MfHl[FVF@','qCb@AIZ`H','KAx@@IRjuUPAlHPfES]FFa`@','KAx@@ITnuUPAlHPfES\\','HiD@@DiUVjj`AmHPfES\\H','sNp@DjUjj@[\\QXu`','sJP@DkVhAmQEcFJF@','sGP@DjVj`FsDVMcCC@','qC`@Qz`MbHmFBF@','sJP@DkfhAmQEb','qC`@IVtAlQEhsPp@','sGP@Djuj`FsDVM@','sGP@Dj}j`FsDVMcMC@','sJP@DiZhA@','KAx@@ISjuUPAlHPfES]F@a`@','sJP@DjZhAmQEcFRF@','KAx@@IRnuUPAlHPfES]F@a`@','HiD@@DjWvjj`AmHPfES\\H','QMHAIhGd@','sNp@DiUjj@[\\QXuq`a`@','KAx@@IVjmUPAlHPfES\\','sGP@DjVj`FsDVMcMC@','QM`AIhGe@','HiD@@LdbJRjjh@[RDIaTwB','qCp@AIZ`H','sGP@LdbMU@MfHl[FFF@','QMDARVA@','sNp@LdbJjj@[\\QXuqba`@','sNp@LdbJjj@[\\QXuqca`@','sGP@Dkej`FsDVM@','qCb@AIZ`OI@','HaD@@DjUZxHH@AlHPfES]FLa`@','sGP@DkYj`FsDVM@','qCb@AIV`H','sNp@LdbJjj@[\\QXuqea`@','sGP@DkUj`FsDVMcEC@','sFp@DiTt@@Axa@','Hmt@@DjU_ZxHHj@AmhPfES\\Lj','QM`BN`^P','qCb@AIZ`OH`','sFp@DiTt@@AxaP','sGP@Djuj`FsDVMcEC@','sGP@Djuj`FsDVMcIC@','sGP@DkUj`FsDVMcKC@','sJP@DkfhAmQEcFRF@','sGP@DjVj`FsDVMcIC@','HaD@@DjUZxHH@AlHPfES]FFa`@','qC`@IRtDVqDV@','sNp@Dj}Zj@[\\QXuqfa`@','KAx@@ITnuUPAlHPfES]FFa`@','HiD@@DkUUjj`AmHPfES\\H','sJQ@@dkU@H','qC`@Qz`H','KAx@@IUkmUPAlHPfES\\','KAx@@ITouUPAlHPfES]FJa`@','sJP@H~j@[TQX`','sGP@DjZj`FsDVM@','sJP@DkVhAmQEcFFF@','sJX@@eKU@H','sJP@DizhAy@','QMHAIhGbP','KAx@@ITouUPAlHPfES]FNa`@','HaD@@DjUZxHD@AlHPfES\\','HaD@@DjUZxHH@A@','sNp@LdbJjj@[\\QXuqaa`@','Hed@@LdbRQUUUP@vTHSBinFP','KAx@@ITouUPAlHPfES]FLa`@','sNp@DkUZj@[\\QXuqba`@','KAx@@ITjuUPAlHPfES]FNa`@','KAx@@YIDTjjh@vDHSBincGPp@','HaD@@DjYvxH`@AlHPfES]FLa`@','RF@QP`','qCb@AIj`H','sNp@DjUjj@[\\QXuqaa`@','sNp@DkVZj@[\\QXu`','KAx@@YIDUJjh@vDHSBin@','sGP@DkYj`FsDVMcIC@','sGP@DjVj`FsDVMcAC@','sGP@DiVj`D','sJP@DkVhAmQEcFZF@','sNp@LdbLjj@[\\QXu`','QM@HvAmdqbF@','HaD@@DjWjXHB@AlHPfES\\','sNp@DjwZj@[\\QXuqba`@','sNp@LdbJjj@[\\QXuqda`@','sFp@DiTt@@Axa`','HiD@@Djuujj`AmHPfES\\H','sNp@DkUZj@[\\QXuqca`@','sJP@DiZhAy@','KAx@@YIDTjjh@vDHSBincCPp@','KAx@@IWNmUPAlHPfES\\','KAx@@IVkMUPAlHPfES\\','sJQ@@dju@H','qCb@AIZ`OH@','qC`@ISTAxa@','sNp@DjyZj@[\\QXu`','Hid@@DjUfaBB`@FtaBXUMp`','HiD@@DiUVjj`AmHPfES\\LXBF@','KAx@@IUjmUPAlHPfES\\','HiD@@DjWvjj`AmHPfES\\LXjF@','sJP@DjVhAmQEb','qCb@AIV`OH`','HiD@@LdbJRjjh@[RDIaTwCFDa`@','KAx@@YIDTjjh@vDHSBinc@Pp@','sNp@DjUjj@[\\QXuqda`@','qC`@Qz`OED','sJP@DkfhAmQEcFZF@','KAx@@YIDbjjh@vDHSBincDPp@','sGP@Djyj`FsDVMcMC@','KAx@@IVrmUPAlHPfES\\','qCp@AIZ`OI@','sJX@@dkU@H','sJQ@@dkU@OH`','sNp@Di]ZjBBvxbqk@','Hkl@@DjU_Uk``bj`@[VDIaTwCJzX','sGP@DjZj`FsDVMcEC@','Hid@@DjU^nBBH@FtaBXUMpqcHX@','sNp@DkeZj@[\\QXu`','sNp@DjYjj@[\\QXuqca`@','sGQ@@djuT@`','HiD@@LdbJTjjh@[RDIaTwB','sOp@DjWkB@@Gd`','HeT@@LdbbRKBDQD@CYPaLJfxY@','qCr@XIKTA@','HiD@@DjW^jj`AmHPfES\\LXJF@','HeT@@DjU]k``b`@[JDIaTwCH','sGP@Djuj`FsDVMcCC@','`IH`B','sOp@DjWkB@@GdX','sJQ@@eKU@H','KAx@@YIDUJjh@vDHSBincBPp@','sJX@@eKU@OH@','KAx@@YIDTjjh@vDHSBincAPp@','sOq@@drm\\@@@`','KAx@@IUkMUPAlHPfES\\','qCp@AIj`H','Hed@@DjUUjjj@FraBXUMpr','sGX@@eJuT@`','sGP@DkUj`FsDVMcCC@','HiD@@Dj}Ujj`AmHPfES\\LXrF@','KAx@@ITouUPAlHPfES]FHa`@','Hed@@DjWujjj@FraBXUMpsFIa`@','sGP@DiUj``mfHlZ','sFp@DiTvjhAlqEcP','Hid@@DjU^nBBH@FtaBXUMpq`XX@','sJP@DkVdAmQEb','qCp@AIZ`OH`','QMhDRVA@','qC`@ISJAlQE`','qCp@BOTAyhl','sJX@@eOU@ODB','sFp@DiTt@@AyaB','sGP@DkUj`FsDVMcMC@','Hid@@DjYUaBH`@FtaBXUMpqcHX@','qC`@Qz`OH@','HiD@@DjUVjj`AmHPfES\\LXZF@','sJP@H~j@[TQXqda`@','sJX@@eKU@OI@','sNp@Djejj@[\\QXu`','sJQ@@dsU@H','sJQ@@dkU@OI`','KAx@@YIMDVjh@vDHSBin@','Hid@@DjU^nBBD@FtaBXUMp`','sNp@DkgZj@[\\QXuqca`@','qC`@IRtDVqDVcEC@','Hed@@LdbRQeUUP@vTHSBinFP','sNp@DiUjj@P','qC`@IRtDT','sNp@DkYZj@[\\QXuqca`@','KAx@@IUkmUPAlHPfES]FDa`@','KAx@@IVjmUPAlHPfES]FNa`@','sOx@@drm\\@@@`','KAx@@ITjuUPAlHPfES]FBa`@','QMDARVAyH','sJP`@dfvhA@','HeT@@DjU_k``b`@[JDIaTwCLXfF@','KAx@@IToUUPAlHPfES]FJa`@','sGP@DkYj`FsDVMcEC@','qCb@AIZ`ODH','`I@`B','KAx@@IUzmUPAlHPfES]FFa`@','sNp@DkfZj@[\\QXu`','KAx@@ITnuUPAlHPfES]F@a`@','HiD@@LddURjjh@[RDIaTwB','sNp@Dj~Zj@[\\QXuqfa`@','Hed@@Dj{uZjj@FraBXUMpr','KAx@@ITsUUPAlHPfES\\','Hid@@LdbRQk``b@AmHPfES\\LXrF@','sOp@DjWkB@@GdH','sJQ@@dkU@OH@','Hid@@DjU^nBBH@FtaBXUMpqahX@','sGP@DiYj``mfHlZ','KAx@@IToUUPAlHPfES]FLa`@','qCp@AJZ`ODH','Hmt@@DjU]ZxHHj@AmhPfES\\Lj','sGP@DkUjPFsDVM@','qC`@IVtA@','Hed@@LdbJReUUP@vTHSBinFP','sNp@DjuZj@[\\QXuqea`@','KAx@@IUkmUPAlHPfES]FNa`@','HiD@@DkVUjj`AmHPfES\\H','Hed@@DkUeZjj@FraBXUMpr','sNp@DkVZj@[\\QXuqea`@','sJP@DiVhHKZbKFLLL@','HiD@@Djuyjj`AmHPfES\\H','sNp@DjUjj@[\\QXuq`a`@','HeT@@DjYUXPbH`@[JDIaTwCH','HiD@@DjwUjj`AmHPfES\\LXRF@','sNq@@djmUPB','KAx@@YIEEZjh@vDHSBincCPp@','sGP@Di^V`dmfHlZ','Hid@@DjYUaBHP@FtaBXUMp`','sNp@DjYjj@[\\QXuqba`@','sGP@Dkej`FsDVMcKC@','HeT@@DjU^k``b`@[JDIaTwCH','qC`@Qv`MbHmFBF@','sGQ@@djmT@`','qCr@XIKTAyH','qC`@IVtAlQEhpPp@','Hid@@LdbbQxXF@@AmHPfES\\LXjF@','sGP@DkYj`FsDVMcCC@','KAx@@IVsMUPAlHPfES\\','qCp@AIj`ODl','HiD@@DkeUjj`AmHPfES\\H','HeT@@DjU[kjjjh@ZLDXSSYPaLJfxY@','sJP@DkVdAmQEcFRF@','HiD@@LdbJTjjh@[RDIaTwCFDa`@','HiD@@DkYyjj`AmHPfES\\H','sJP@DjZhAyH','KAx@@IVkMUPAlHPfES]FDa`@','sJX@@dkU@OI@','Hed@@LdbRQUUUP@vTHSBinFXpLL@','Hed@@DjuUZjj@FraBXUMpr','sGP@Djfj`FsDVMcKC@','sNp@DkVZj@[\\QXuqba`@','sNp@DjyZj@[\\QXuqfa`@','qCb@AIj`OH@','sNp@DjUZj@[\\QXu`','KAx@@IWOMUPAlHPfES\\','Hid@@DjU^nBBH@D','Hed@@DjuvZjj@FraBXUMpr','sJP@DiVhHKZbKFLtL@','Hmt@@DjU_Zzjjj`AhpQaLmmBDpj[aeXplL@','sNp@DjuZj@[\\QXuqca`@','sJP@DkfhAmQEcFJF@','sNp@LdbJZj@[\\QXu`','HeT@@DjU_k``b`@[JDIaTwCLXFF@','KAx@@IVlmUPAlHPfES]FNa`@','HeT@@LdbbRKBDQD@CYPaLJfxYcEPp@','Hid@@DjUZnBBH@FtaBXUMpqcHX@','qCa@CIKTA@','HiD@@Dj~]jj`AmHPfES\\LXFF@','sKP@Di\\Zj@[TQX`','sGP@Djfj`FsDVMcEC@','HiD@@DkgYjj`AmHPfES\\H','sNp@DjuZj@[\\QXuqaa`@','KAx@@YIMDVjh@vDHSBincDPp@','sJP@DjVhHKZbKFLTL@','Hid@@LdbRQk``b@AmHPfES\\LXZF@','HiD@@Dj}Ujj`AmHPfES\\LXzF@','HeT@@DjU_k``bP@[JDIaTwCH','sNp@DkUZi@[\\QXu`','HiD@@DjYfjj`AmHPfES\\H','sGP@DjZj`FsDVMcAC@','Hmt@@DjU_jxHHj@AmhPfES\\Lj','Hid@@LdbRQk``R@AmHPfES\\H','KAx@@YIDUJjh@vDHSBincDPp@','qCr@XIKTAyD','sOq@@drm\\@@@|`@','Hed@@DjW^jjj@FraBXUMpsFBa`@','HeT@@DjY]zXFB@@[JDIaTwCH','Hkl@@DjU_Vk``bj`@[VDIaTwCJzX','Hid@@DjY}nBHH@FtaBXUMpqcHX@','sGX@@eKuT@|d@','sGP@Dj^Y`FsDVM@','HcL@@DjU_ZnBBJh@FqaBXUMprn`','sJP@DkVdAmQEcFJF@','sOq@@drm\\@@@|b@','sNp@DjyZj@[\\QXuqaa`@','HaD@@DjUZxHH@AyD@','qC`@Qv`H','Hmt@@DjU_Zzjjj`AhpQaLmmBDpj[aeXqdL@','sGP@Dkej`FsDVMcMC@','Hed@@DjUUjjj@FraBXUMpsFHa`@','HeT@@LdbbRkBDQD@CYPaLJfxY@','KAx@@IU{MUPAlHPfES]FLa`@','RG@DTH','sJY@DDeVhA@','KAx@@YIDUJjh@vDHSBinc@Pp@','sJX@@dkU@OI`','sJQ@@dju@OI`','HeT@@LdbbRKBDQD@CYPaLJfxYcFPp@','sFp@DiTvjhAlqEcXpPp@','HaD@@DjUZxHH@AyG@','sNx@@eJ}UPB','sNp@LddUjj@[\\QXuqca`@','HaDH@@RVU[j@@@D','sNp@DkgZi@[\\QXu`','sGY@LDeVj`D','sNp@LdbJfZBZvxbqk@','sJP`@dfvhAyL','sGX@AddQjhAxe`','Hmt@@DjU_ZxHHj@AmhPfES\\LkFIa`@','qCh@CIKTA@','sNp@LdbLjj@[\\QXuq`a`@','sOq@@drm\\@@@|a@','KAx@@IUzmUPAlHPfES]FJa`@','sNx@AddQUUPB','sGP@Di]jP`mfHlZ','sJP`@TeZhA@','KAx@@IRjmUPHKXPaLJfx','HeT@@LdbRTM\\DDT@CYPaLJfxY@','HaF@@@Rfu[j@@@D','Hid@@DjYUaBH`@FtaBXUMpqchX@','KAx@@IUjmTpAlHPfES\\','Hid@@DjU^nBBD@FtaBXUMpqcHX@','sGP@DiUj``mfHl[FFF@','KAx@@IUvmUPAlHPfES]FLa`@','Hed@@LdbQTUUUP@vTHSBinFXqDL@','sJP@DkVhA@','sOx@@drm\\@@@|b@','KAx@@IUkMUPAlHPfES]FDa`@','HeT@@LdbRQU\\DDT@CYPaLJfxY@','HiD@@Dj}Yjj`AmHPfES\\LXrF@','HiD@@Dj{ujj`AmHPfES\\LXFF@','KAx@@IWNmUPAlHPfES]FFa`@','KAx@@IRkMUPHKXPaLJfx','sJP@DjYdAmQEcFZF@','sJY@LDeZhAyL','HaDH@@RVU[f@@@D','sJP`@deVhAyB','HaD@@DjWjZjj`AlHPfES\\','sGP@DkYj`FsDVMcMC@','sNp@DkgZj@[\\QXuqea`@','sJQ@@dlu@H','HeT@@DjU]k``b`@[JDIaTwCLXrF@','sJX@@dkU@OH`','RFDDQFCr`','sJP@DiYXIKZbKFLLL@','KAx@@YIHjjjh@vDHSBincGPp@','Hk\\@@DjU^ukmLHH@@@AmXPfES\\Lki`','sGQ@@djmT@|b@','Hid@@DjUfaBB`@FtaBXUMpqahX@','sNx@@eRmUPB','Hmt@@LdbRVak``ah@FvaBXUMprh','qCr@XIJtA@','KAx@@IWMmUPAlHPfES]FNa`@','HeT@@DjYYZPbJ@@[JDIaTwCH','sNp@DkfZj@[\\QXuqea`@','Hid@@DjU^nBAHAEVtaBXUMp`','Hmt@@DjYU^Vjjj`AhtISRmmBDpj[aeP','sGP@DkejPFsDVM@','sNx@@eJmUPB','qCb@AIf`H','HcL@@DjU_VnBBJh@FqaBXUMprnqcXX@','Hid@@DjUZnBBH@FtaBXUMpqahX@','sNp@LdbQZjBBvxbqkcGC@','sOx@@drm\\@@@|c@','sJP@H~j@^R@','KAx@@YIDcFjhDElHPfES\\','Hid@@DjUZnBAH@FtaBXUMp`','sNp@LddUji@[\\QXu`','sGP@DjfjPFsDVM@','HeT@@DjYUXPbD`@[JDIaTwCH','KAx@@IUoMUPAlHPfES]FDa`@','sFp@DiTt@@AyaD','Hed@@DjuuZjj@FraBXUMpsFIa`@','HeT@@DjUghP`h`@[JDIaTwCLXfF@','sOp@DjWkjj`FwDVM\\YhX@','sGP@Djfj`FsDVMcIC@','KAx@@IRkmUPHKXPaLJfzL]C@','sNx@@djmUPB','QM`AIdD','sOp@DjWkB@@Gbe@','sNp@DjyZj@[\\QXuqca`@','QM@HuAmd`','sNp@LddUjj@[\\QXuqea`@','HaD@@DkeVyjj`AhrXUMuaBDpj[hpDL@','qCb@AIZPH','HiD@@LdbJTjjh@[RDIaTwCF@a`@','Hmt@@DjU_ZxHHi@AmhPfES\\Lj','HaDH@@RYWih@H@D','HiD@@LdbJTjjh@[RDIaTwCFHa`@','sGX@@djuT@|a@','sNp@DkfZj@[\\QXuqaa`@','Hid@@DjU^nBBH@GdL','KAx@@IVkMUPAlHPfES]FJa`@','qCr@XIKTAy@','HmT@@Dj{uVjjh@[ZDIaTwCJqaXX@','Hmt@@DjYWVFjjj`AhpQe\\mmBDpj[aeP','Hif@@@RUe^Fh@@@P','HaDH@@Rfu[j@@@GdH','KAx@@IVsMUPAlHPfES]FDa`@','sKP@Di\\Zj@[TQXq`a`@','sJX@@eMU@OH@','HeT@@DjU^k``b`@[JDIaTwCLXFF@','Hmt@@LdbbRJXPbHh@FvaBXUMprh','sJP@DjvhAmQEcFBF@','Hmt@@LdbbRNXZjjj@FcAFUrvtHSBinFUcBpp@','sJP`@dfvhAyD','sGP@Di^V`dmfHl[FVF@','KAx@@IVsmUPAlHPfES]FBa`@','sOq@@drm\\@@@|PP','sJY@BDeZhA@','HeT@@LdbRbmBDED@CYPaLJfxY@','Hed@@Djy[Zjj@FraBXUMpr','HeT@@DjU]k``b`@[JDIaTwCLXFF@','Hid@@DjUfaBB`@D','qCa@CIJtA@','QMPARVA@','Hid@@DjUfaBB`@FtaBXUMpqcHX@','sJY@BDfZhA@','HeT@@DjUghP`hP@[JDIaTwCH','Hed@@Dj{uZjj@FraBXUMpsFIa`@','Hmt@@LdbbRUXZjjj@FcAFUrvtHSBinFUcFPp@','sNp`@dfuZj@P','sJQ@@dmU@OH@','sJX@@dmU@H','HeT@@DjU]k``b`@[JDIaTwCLXZF@','HiD@@LdfbJZjh@[RDIaTwCFAa`@','sOx@@drm\\@@@|a@','HeT@@LdbbQgCUUU@CQhRfz[JDIaTwCH','Hmt@@DjU]Zzjjj`AhpQaLmmBDpj[aeXplL@','sOp@DjWkjj`FwDVM\\XHX@','HcL@@LdbbRNSBDQEP@McBDpj[ae]cFpp@','HiD@@Dj}Yji`AmHPfES\\H','HaDH@@RYe[hB@@D','Hid@@DjU^njjj@FtaBXUMpq`XX@','HeT@@DkYeFVjjh@ZMaUpsYPaLJfxY@','QMPARZA@','sOq@@drm\\@@@|QX','HaD@@DjYvxH`@A@','HcL@@LdbbRNcBDQEP@McBDpj[ae]@','QMhDRZA@','RG@DXLHmP','QM`BN`XQYd','RG@DTLHmP','QMHAIXFEVd','QMDARVAaH','RFPDXLHmP','RF@Q`vRbdLEC@','RF@QpvR@','QO@HyjAmd`','`II@B','`II@CFspqJp','`II@CF[@hM@prB`','`H@[T[|B`XN@PdM@p|@bHrBcDk@','RG@DXMj}F@','QM`BN`[L~b@','RG@DTMj}D@','QMHAIXFt~j@','QMDARVA}L@','RFPDXMj}D@','sKP@Di\\YZ@[TQXqaa`@','RG@DXMH'])}
	function Jq(){Jq=pH;Gq=MC(FC(LD,1),RR,6,14,[262146,262148,264194,264195,264196,264197,264200,264201,264205,264206,267266,267267,267268,267273,267278,271362,271363,271364,271365,271374,395266,395267,395268,395269,395272,395273,395277,395278,398338,398340,398345,524292,526338,526339,526340,526344,529412,533508,533512,788482,788483,136448066,136448067,136448068,136448072,139593794,139593795,139593796,139593800,139596866,139596867,139596868,139596872,143788098,143788099,143791170,143791171,143791172,270794754,270794760,270794824,270796802,270796803,270796804,270796808,270796812,270796866,270796867,270796868,270796872,273942530,273942531,273942532,273942536,273942594,273942595,273942596,273942600,273945602,273945608,273945666,278134788,278136834,278136835,278136836,278136840,278136898,278136899,278136900,278136904,278139906,278139907,278139908,278139970,278144002,278144008,278144010,278144066,405014530,405014531,405014532,405014536,405014540,405014594,405014595,405014596,405014600,405014604,405017602,405017603,405017604,405017666,405017672,405021698,405021699,405021700,405021704,405021762,405021763,405021764,405021768,405145602,405145603,405145604,405145608,405145666,405145667,405145668,405145672,408160258,408160260,408160322,408163330,408291330,408291331,539232258,539232259,539232322,539232323,539235330,539235331,539235394,539235395,539235396,539239426,539239427,539239490,539239491,539363330,539363331,539363394,539363395,539366402,542377986,542377987,542378050,542378051,542378052,542378056,542381058,542381059,542381122,542381123,542509058,542509059,542509123,542512130,546837506,807667714,807798786,810813442,810816514,810820610,810944514,139722885186,139722885187,142944110658,142944110659,142947256386,142947256392,142947259458,147239077954,147242223682,147246417986,277161838658,277161838659,277164984386,277164984387,277164987458,277164987459,277169178690,277169181762,277296185411,ES,FS,277296187458,277296187459,280383064130,280383064131,280386209858,280386209859,280386212930,280390404162,280390407234,GS,HS,280517412930,280517412931,IS,JS,280520558658,KS,280520561730,284678031426,284681177154,284681180226,284685371458,284685374530,LS,MS,284812380226,284812380227,NS,284815525891,284815525954,OS,PS,QS,414600792130,414600792131,414603937858,414603937859,414603940930,414603940931,414608132162,414608135234,RS,SS,414735140930,414735140931,TS,US,414738286658,414738286659,VS,414738289730,WS,XS,414742480962,414742480963,414742483971,414742484034,YS,ZS,$S,414869358658,414869358659,_S,414869361730,aT,417822017602,417825163330,417825166402,bT,417956366402,cT,417959512130,417963706434,418090584066,418090715138,dT,552174094402,552174094403,eT,552177240130,552177240131,fT,552177243202,gT,552181434434,552181437506,hT,552181441602,iT,552308312130,jT,552308315202,kT,lT,552308319298,mT,552308443202,552311588930,nT,oT,555395319874,555395319875,555395319880,pT,555398465602,qT,rT,555398468674,555398468680,sT,555402659906,tT,555402662978,555402667074,uT,vT,555529537602,555529537603,555529537608,wT,555529540616,555529540674,xT,555529544770,yT,555529668616,555529668674,zT,AT,555532814338,559690287170,BT,559693432898,CT,559693435970,559697627202,DT,559697630274,559824507906,559824507970,559827653634,{l:2359363,m:590400,h:16},{l:2361345,m:590400,h:16},ET,{l:2361410,m:590400,h:16},FT,{l:2361410,m:1376832,h:16},GT,{l:2361410,m:1377600,h:16},HT,{l:1312834,m:1377601,h:16},IT,{l:2230339,m:2425376,h:16},JT,{l:2361347,m:2425408,h:16},{l:2361410,m:2425408,h:16},{l:2361411,m:2425408,h:16},KT,LT,MT,NT,{l:2361410,m:2427200,h:16},OT,PT,QT,RT,ST,{l:2361410,m:590400,h:24},TT,{l:2361410,m:591168,h:24},UT,{l:1312834,m:591169,h:24},VT,WT,XT,{l:2361410,m:623168,h:24},YT,{l:1312834,m:623169,h:24},ZT,{l:2364482,m:623200,h:24},{l:2361346,m:1376832,h:24},{l:2361410,m:1376832,h:24},{l:2361347,m:592192,h:32},$T,_T,aU,{l:1315911,m:1377601,h:32},bU,cU,dU,{l:1315914,m:1378626,h:32},eU,fU,{l:2361416,m:1443136,h:32},gU,hU,{l:1315912,m:1443137,h:32},iU,{l:2361416,m:1443168,h:32},jU,{l:2364488,m:1443168,h:32},{l:2492424,m:1443168,h:32},{l:2492488,m:1443168,h:32},kU,{l:1315847,m:2426177,h:32},{l:1315847,m:2427201,h:32},{l:1315847,m:2458177,h:32},{l:264195,m:0,h:64},{l:264196,m:0,h:64},{l:264200,m:0,h:64},{l:267268,m:0,h:64},{l:271364,m:0,h:64},{l:395268,m:0,h:64},{l:398340,m:0,h:64},{l:529411,m:0,h:64},{l:2230339,m:32,h:64},{l:2361347,m:64,h:64},{l:1312771,m:65,h:64},{l:1574915,m:129,h:64},{l:1577987,m:129,h:64},{l:2364419,m:192,h:64},{l:2230339,m:66080,h:64},{l:1181763,m:66081,h:64},{l:2361347,m:66112,h:64},{l:2361411,m:66112,h:64},{l:2230339,m:66848,h:64},{l:1181763,m:66849,h:64},{l:1181763,m:98849,h:64},{l:2361347,m:131648,h:64},{l:1312771,m:131649,h:64},{l:1312835,m:131649,h:64},{l:2364419,m:131680,h:64},{l:1312771,m:132417,h:64},{l:1315843,m:132417,h:64},{l:2364419,m:132448,h:64},{l:2361347,m:590400,h:80},{l:2361411,m:590400,h:80},{l:2361347,m:1376832,h:80},{l:2361411,m:1376832,h:80},{l:2361347,m:590400,h:88},{l:264195,m:0,h:128},{l:2230339,m:32,h:128},{l:2361347,m:64,h:128},{l:2361411,m:64,h:128},{l:2368579,m:128,h:128},{l:2361347,m:66112,h:128},{l:2361411,m:66112,h:128}]);Hq=MC(FC(JD,1),RR,6,15,[0.6966999769210815,0,0.4885999858379364,-0.47269999980926514,-0.07490000128746033,lU,0.273499995470047,0.5699999928474426,0.7009999752044678,0.9534000158309937,-0.2809000015258789,-0.8259999752044678,-0.1784999966621399,-1.620300054550171,-1.0959999561309814,0.13950000703334808,-0.29750001430511475,-1.2907999753952026,1.0161999464035034,mU,0.5110999941825867,-0.435699999332428,-0.10409999638795853,0.3424000144004822,-0.061500001698732376,0.6035000085830688,0.7226999998092651,0.43459999561309814,-0.3310000002384186,-0.49799999594688416,nU,oU,0.4291999936103821,-0.5824000239372253,-0.1834000051021576,0.1306000053882599,-0.5015000104904175,-0.5257999897003174,0.4244000017642975,-0.16099999845027924,-0.2777999937534332,0.2766000032424927,0.35929998755455017,0.7714999914169312,0.3149999976158142,-0.2651999890804291,-0.09650000184774399,0.420199990272522,0.18709999322891235,-0.3684000074863434,-0.07779999822378159,0.8942999839782715,0.3693999946117401,0.28790000081062317,0.4489000141620636,-0.26010000705718994,0.4771000146865845,0.1923000067472458,0.45969998836517334,0.3384000062942505,0.6632999777793884,0.4544000029563904,0.15970000624656677,0.633899986743927,0.35040000081062317,0.04490000009536743,0.34200000762939453,0.26109999418258667,0.40459999442100525,0.5218999981880188,-0.36320000886917114,-0.4108000099658966,0.30570000410079956,-0.14560000598430634,-0.27129998803138733,-0.5192999839782715,0.45260000228881836,0.5539000034332275,-0.7070000171661377,-0.48809999227523804,-0.4099999964237213,0,0.14790000021457672,0.3447999954223633,0.42980000376701355,0.5579000115394592,-0.1264999955892563,-0.042500000447034836,0.07670000195503235,0.6635000109672546,-0.38119998574256897,-0.8367999792098999,1.0286999940872192,-0.10209999978542328,0.3587000072002411,-0.5945000052452087,0.16920000314712524,-0.121799997985363,0.43810001015663147,0.16949999332427979,0.45249998569488525,0.3352000117301941,0.1582999974489212,0.4036000072956085,-0.04800000041723251,0.5023000240325928,-0.26489999890327454,0.76910001039505,-0.35519999265670776,1.0300999879837036,-0.11410000175237656,-0.5932000279426575,0.17489999532699585,0.13130000233650208,-0.18039999902248383,0.399399995803833,0.22910000383853912,0.31690001487731934,0.35989999771118164,-0.0038999998942017555,-0.2955999970436096,0.49070000648498535,pU,0.219200000166893,0.15649999678134918,0.6934999823570251,0.3617999851703644,0.6735000014305115,0.5777999758720398,-0.5636000037193298,0.5569000244140625,0.30379998683929443,-0.32760000228881836,-0.4659000039100647,qU,0.32829999923706055,0.22390000522136688,0.20430000126361847,0.05900000035762787,-0.48350000381469727,0.6165000200271606,-0.4011000096797943,0.5577999949455261,-0.21639999747276306,-0.017500000074505806,0.29809999465942383,0.10999999940395355,0.27149999141693115,0.4408999979496002,-0.16089999675750732,0.3774999976158142,-0.13459999859333038,-0.6991999745368958,-0.46700000762939453,0.1565999984741211,0.046799998730421066,-0.13210000097751617,1.3686000108718872,0,-0.4115999937057495,1.0185999870300293,-0.3935000002384186,0.5223000049591064,0.2838999927043915,0.5128999948501587,0.1265999972820282,0.010300000198185444,1.5192999839782715,0.2705000042915344,0.4293999969959259,0.012000000104308128,-0.33970001339912415,0.14830000698566437,0.28060001134872437,0.3206000030040741,0.5662000179290771,-0.09870000183582306,-0.10050000250339508,-0.35760000348091125,0.09610000252723694,-0.6401000022888184,0.19210000336170197,-0.15330000221729279,-0.4169999957084656,0.10939999669790268,0.8230999708175659,-0.3783999979496002,0.4032000005245209,-0.6460999846458435,0.8034999966621399,0.2029000073671341,-0.37450000643730164,oU,0.18410000205039978,0.707099974155426,0.12269999831914902,0.7949000000953674,0.03500000014901161,qU,-0.15539999306201935,0.3785000145435333,-0.24050000309944153,0.23589999973773956,0.34630000591278076,-0.4925000071525574,-0.09290000051259995,-0.4352000057697296,-0.2206999957561493,-0.9959999918937683,-0.723800003528595,-0.5468999743461609,-1.2939000129699707,-0.01360000018030405,0.2791000008583069,-0.16529999673366547,-0.12380000203847885,0.4950999915599823,0.289900004863739,0.065700002014637,0.7189000248908997,0.05700000002980232,0.661899983882904,-0.6381000280380249,-0.8072999715805054,0.23549999296665192,0.30480000376701355,-0.019899999722838402,-0.07519999891519547,0.27639999985694885,0.8011000156402588,-0.17440000176429749,0.15809999406337738,-0.384799987077713,0.5993000268936157,0.5267999768257141,-0.04170000180602074,0.37700000405311584,0.6998000144958496,0.593999981880188,0.5911999940872192,-0.5570999979972839,0.023800000548362732,-0.2475000023841858,0.030700000002980232,-0.38749998807907104,-0.7437000274658203,0.5144000053405762,0.00570000009611249,0.765500009059906,0.1720000058412552,-2.5624001026153564,-0.30660000443458557,0.36469998955726624,0.4733000099658966,-0.3400999903678894,-0.14499999582767487,0.7088000178337097,-0.13179999589920044,0.04259999841451645,-0.12030000239610672,-0.36239999532699585,0.5357999801635742,-0.3700999915599823,-0.5648000240325928,-0.1972000002861023,-0.8769000172615051,-0.3675000071525574,-0.2003999948501587,0.13359999656677246,-0.16990000009536743,0.44609999656677246,0.1559000015258789,1.1167999505996704,0.23649999499320984,-0.22059999406337738,0.4480000138282776,-0.40529999136924744,-0.13609999418258667,0.2198999971151352,0.053599998354911804,-0.020999999716877937,0.6984999775886536,0.9642999768257141,0.17270000278949738,-0.03290000185370445,-0.18930000066757202,0.07020000368356705,0.14959999918937683,mU,0.4146000146865845,-0.5027999877929688,0.3831999897956848,0.9545000195503235,-0.41519999504089355,-1.0369000434875488,-0.18299999833106995,0.5882999897003174,-0.29179999232292175,-0.5293999910354614,-0.6541000008583069,-0.19059999287128448,-0.8483999967575073,-0.3456999957561493,0.9541000127792358,-0.7924000024795532,rU,0.07999999821186066,-0.2596000134944916,0.8381999731063843,-0.2667999863624573,-0.11060000211000443,0.03620000183582306,-0.3188999891281128,-0.7278000116348267,-0.08940000087022781,-0.22769999504089355,-0.2393999993801117,-0.2962000072002411,0.7775999903678894,-0.011800000444054604,-0.4357999861240387,0.3749000132083893,-0.6069999933242798,-0.18569999933242798,0.11389999836683273,-0.4415999948978424,-0.37040001153945923,-0.7487000226974487,-0.10790000110864639,-0.29919999837875366,-0.3276999890804291,0.025100000202655792,-0.9187999963760376,0.2944999933242798,-0.22339999675750732,0.3467999994754791,oU,0.2890999913215637,0.2612999975681305,-0.03440000116825104,-0.6004999876022339,-0.6258000135421753,-0.54339998960495,-0.7712000012397766,-0.9057000279426575,-0.16680000722408295,-0.9904999732971191,nU,-0.03720000013709068,-1.1638000011444092,0.12620000541210175,-0.5248000025749207,-0.15379999577999115,-0.36820000410079956,0.3249000012874603,0.06499999761581421,0.051100000739097595,-0.46070000529289246,0.22310000658035278,0.28220000863075256,0.1396999955177307,0.2833000123500824,-0.1225999966263771,-0.459199994802475,-0.3434999883174896,-0.6654000282287598,-0.5055999755859375,-0.863099992275238,0.15360000729560852,-0.4050999879837036,0.08910000324249268,-0.6972000002861023,-0.4699000120162964,-0.6773999929428101,-0.062199998646974564,-0.9300000071525574,0.13369999825954437,-0.49380001425743103,0.39480000734329224,-0.4074999988079071,-0.6410999894142151,-0.009100000374019146,-0.13330000638961792,-0.5192000269889832,-0.16609999537467957,oU,-0.6427000164985657,-0.07069999724626541,0.4805999994277954,0.38280001282691956,0.22290000319480896,0.6159999966621399,-0.08839999884366989,-0.0471000000834465,0.11060000211000443,0.382099986076355,0.09220000356435776,0.08060000091791153,0.33709999918937683,0.188400000333786,0.13809999823570251,-0.23919999599456787,-3.6435000896453857,-2.150899887084961,0.4975000023841858,-0.3619999885559082,-2.5383999347686768,-1.6821000576019287,-0.3650999963283539,lU,-1.618499994277954,-1.065000057220459,0.8374000191688538,0.3684999942779541,0.25769999623298645,0.3790999948978424,-3.233299970626831,-1.794800043106079,-0.6592000126838684,-1.3148000240325928,sU,0.05339999869465828,-1.7552000284194946,-1.8039000034332275,-1.1339999437332153,-0.5652999877929688,-1.2453999519348145,0.9473000168800354,1.4230999946594238,1.011199951171875,-1.9498000144958496,-2.024899959564209,-1.2348999977111816,0.328000009059906,-3.9189000129699707,-2.19950008392334,0.18889999389648438,-1.2314000129699707,-1.802299976348877,-0.2994999885559082,-0.4066999852657318,-0.1316000074148178])}
	function Kl(){Kl=pH;Jl=MC(FC(fE,2),QQ,10,0,[null,MC(FC(fE,1),qS,3,0,[new Il(0,1.007825032),new Il(1,2.014101778),new Il(2,3.016049268),new Il(3,4.027834627),new Il(4,5.039542911),new Il(5,6.044942608)]),MC(FC(fE,1),qS,3,0,[new Il(1,3.01602931),new Il(2,4.00260325),new Il(3,5.012223628),new Il(4,6.018888072),new Il(5,7.028030527),new Il(6,8.033921838),new Il(7,9.043820323),new Il(8,10.052399713)]),MC(FC(fE,1),qS,3,0,[new Il(1,4.027182329),new Il(2,5.012537796),new Il(3,6.015122281),new Il(4,7.016004049),new Il(5,8.02248667),new Il(6,9.026789122),new Il(7,10.035480884),new Il(8,11.043796166),new Il(9,12.05378)]),MC(FC(fE,1),qS,3,0,[new Il(1,5.04079),new Il(2,6.019725804),new Il(3,7.016929246),new Il(4,8.005305094),new Il(5,9.012182135),new Il(6,10.01353372),new Il(7,11.021657653),new Il(8,12.026920631),new Il(9,13.036133834),new Il(10,14.042815522)]),MC(FC(fE,1),qS,3,0,[new Il(2,7.029917389),new Il(3,8.024606713),new Il(4,9.013328806),new Il(5,10.012937027),new Il(6,11.009305466),new Il(7,12.014352109),new Il(8,13.017780267),new Il(9,14.025404064),new Il(10,15.031097291),new Il(11,16.039808836),new Il(12,17.046931399),new Il(13,18.05617),new Il(14,19.06373)]),MC(FC(fE,1),qS,3,0,[new Il(2,8.037675026),new Il(3,9.031040087),new Il(4,10.01685311),new Il(5,11.011433818),new Il(6,12),new Il(7,13.003354838),new Il(8,14.003241988),new Il(9,15.010599258),new Il(10,16.014701243),new Il(11,17.022583712),new Il(12,18.026757058),new Il(13,19.035248094),new Il(14,20.040322395),new Il(15,21.04934),new Il(16,22.05645)]),MC(FC(fE,1),qS,3,0,[new Il(3,10.042618),new Il(4,11.026796226),new Il(5,12.018613202),new Il(6,13.005738584),new Il(7,14.003074005),new Il(8,15.000108898),new Il(9,16.006101417),new Il(10,17.008449673),new Il(11,18.014081827),new Il(12,19.017026896),new Il(13,20.023367295),new Il(14,21.027087574),new Il(15,22.034440259),new Il(16,23.04051),new Il(17,24.0505)]),MC(FC(fE,1),qS,3,0,[new Il(4,12.034404776),new Il(5,13.0248104),new Il(6,14.008595285),new Il(7,15.003065386),new Il(8,15.994914622),new Il(9,16.999131501),new Il(10,17.999160419),new Il(11,19.00357873),new Il(12,20.00407615),new Il(13,21.008654631),new Il(14,22.009967157),new Il(15,23.015691325),new Il(16,24.020369922),new Il(17,25.02914),new Il(18,26.03775)]),MC(FC(fE,1),qS,3,0,[new Il(5,14.03608),new Il(6,15.018010856),new Il(7,16.01146573),new Il(8,17.002095238),new Il(9,18.000937667),new Il(10,18.998403205),new Il(11,19.999981324),new Il(12,20.999948921),new Il(13,22.00299925),new Il(14,23.003574385),new Il(15,24.008099371),new Il(16,25.012094963),new Il(17,26.019633157),new Il(18,27.026892316),new Il(19,28.03567),new Il(20,29.04326)]),MC(FC(fE,1),qS,3,0,[new Il(6,16.025756907),new Il(7,17.017697565),new Il(8,18.005697066),new Il(9,19.001879839),new Il(10,19.992440176),new Il(11,20.993846744),new Il(12,21.99138551),new Il(13,22.994467337),new Il(14,23.993615074),new Il(15,24.997789899),new Il(16,26.000461498),new Il(17,27.0076152),new Il(18,28.012108072),new Il(19,29.019345902),new Il(20,30.023872),new Il(21,31.03311),new Il(22,32.03991)]),MC(FC(fE,1),qS,3,0,[new Il(7,18.02718),new Il(8,19.01387945),new Il(9,20.00734826),new Il(10,20.997655099),new Il(11,21.994436782),new Il(12,22.989769675),new Il(13,23.990963332),new Il(14,24.989954352),new Il(15,25.992589898),new Il(16,26.994008702),new Il(17,27.99889041),new Il(18,29.002811301),new Il(19,30.009226487),new Il(20,31.013595108),new Il(21,32.019649792),new Il(22,33.027386),new Il(23,34.0349),new Il(24,35.04418)]),MC(FC(fE,1),qS,3,0,[new Il(8,20.018862744),new Il(9,21.011714174),new Il(10,21.999574055),new Il(11,22.99412485),new Il(12,23.985041898),new Il(13,24.985837023),new Il(14,25.98259304),new Il(15,26.984340742),new Il(16,27.983876703),new Il(17,28.988554743),new Il(18,29.990464529),new Il(19,30.996548459),new Il(20,31.999145889),new Il(21,33.005586975),new Il(22,34.00907244),new Il(23,35.018669),new Il(24,36.02245),new Il(25,37.03124)]),MC(FC(fE,1),qS,3,0,[new Il(8,21.02804),new Il(9,22.01952),new Il(10,23.0072649),new Il(11,23.999940911),new Il(12,24.990428555),new Il(13,25.986891659),new Il(14,26.981538441),new Il(15,27.981910184),new Il(16,28.980444848),new Il(17,29.982960304),new Il(18,30.983946023),new Il(19,31.988124379),new Il(20,32.990869587),new Il(21,33.996927255),new Il(22,34.99993765),new Il(23,36.006351501),new Il(24,37.01031),new Il(25,38.0169),new Il(26,39.0219)]),MC(FC(fE,1),qS,3,0,[new Il(8,22.03453),new Il(9,23.02552),new Il(10,24.011545711),new Il(11,25.00410664),new Il(12,25.992329935),new Il(13,26.986704764),new Il(14,27.976926533),new Il(15,28.976494719),new Il(16,29.973770218),new Il(17,30.975363275),new Il(18,31.974148129),new Il(19,32.97800052),new Il(20,33.978575745),new Il(21,34.984584158),new Il(22,35.986687363),new Il(23,36.99299599),new Il(24,37.99598),new Il(25,39.0023),new Il(26,40.0058),new Il(27,41.0127),new Il(28,42.0161)]),MC(FC(fE,1),qS,3,0,[new Il(9,24.03435),new Il(10,25.02026),new Il(11,26.01178),new Il(12,26.999191645),new Il(13,27.99231233),new Il(14,28.981801376),new Il(15,29.978313807),new Il(16,30.973761512),new Il(17,31.973907163),new Il(18,32.971725281),new Il(19,33.973636381),new Il(20,34.973314249),new Il(21,35.978259824),new Il(22,36.979608338),new Il(23,37.98447),new Il(24,38.98642),new Il(25,39.99105),new Il(26,40.9948),new Il(27,42.00009),new Il(28,43.00331),new Il(29,44.00988),new Il(30,45.01514),new Il(31,46.02383)]),MC(FC(fE,1),qS,3,0,[new Il(10,26.02788),new Il(11,27.018795),new Il(12,28.004372661),new Il(13,28.996608805),new Il(14,29.984902954),new Il(15,30.979554421),new Il(16,31.97207069),new Il(17,32.971458497),new Il(18,33.967866831),new Il(19,34.96903214),new Il(20,35.96708088),new Il(21,36.971125716),new Il(22,37.971163443),new Il(23,38.975135275),new Il(24,39.97547),new Il(25,40.98003),new Il(26,41.98149),new Il(27,42.9866),new Il(28,43.98832),new Il(29,44.99482),new Il(30,45.99957),new Il(31,47.00762),new Il(32,48.01299),new Il(33,49.02201)]),MC(FC(fE,1),qS,3,0,[new Il(11,28.02851),new Il(12,29.01411),new Il(13,30.00477),new Il(14,30.992416014),new Il(15,31.985688908),new Il(16,32.977451798),new Il(17,33.973761967),new Il(18,34.968852707),new Il(19,35.968306945),new Il(20,36.9659026),new Il(21,37.96801055),new Il(22,38.968007677),new Il(23,39.970415555),new Il(24,40.970650212),new Il(25,41.973174994),new Il(26,42.974203385),new Il(27,43.978538712),new Il(28,44.9797),new Il(29,45.98412),new Il(30,46.98795),new Il(31,47.99485),new Il(32,48.99989),new Il(33,50.00773),new Il(34,51.01353)]),MC(FC(fE,1),qS,3,0,[new Il(12,30.02156),new Il(13,31.012126),new Il(14,31.99766066),new Il(15,32.989928719),new Il(16,33.980270118),new Il(17,34.975256726),new Il(18,35.967546282),new Il(19,36.966775912),new Il(20,37.962732161),new Il(21,38.964313413),new Il(22,39.962383123),new Il(23,40.964500828),new Il(24,41.963046386),new Il(25,42.965670701),new Il(26,43.965365269),new Il(27,44.968094979),new Il(28,45.968093467),new Il(29,46.972186238),new Il(30,47.97507),new Il(31,48.98218),new Il(32,49.98594),new Il(33,50.99324),new Il(34,51.99817),new Il(35,53.006227)]),MC(FC(fE,1),qS,3,0,[new Il(13,32.02192),new Il(14,33.00726),new Il(15,33.99841),new Il(16,34.988011615),new Il(17,35.981293405),new Il(18,36.973376915),new Il(19,37.969080107),new Il(20,38.963706861),new Il(21,39.963998672),new Il(22,40.961825972),new Il(23,41.962403059),new Il(24,42.960715746),new Il(25,43.961556146),new Il(26,44.960699658),new Il(27,45.961976203),new Il(28,46.961677807),new Il(29,47.965512946),new Il(30,48.967450084),new Il(31,49.972782832),new Il(32,50.97638),new Il(33,51.98261),new Il(34,52.98712),new Il(35,53.99399),new Il(36,54.999388)]),MC(FC(fE,1),qS,3,0,[new Il(14,34.01412),new Il(15,35.004765),new Il(16,35.993087234),new Il(17,36.985871505),new Il(18,37.976318637),new Il(19,38.970717729),new Il(20,39.962591155),new Il(21,40.962278349),new Il(22,41.958618337),new Il(23,42.958766833),new Il(24,43.955481094),new Il(25,44.956185938),new Il(26,45.953692759),new Il(27,46.954546459),new Il(28,47.952533512),new Il(29,48.955673302),new Il(30,49.957518286),new Il(31,50.961474238),new Il(32,51.9651),new Il(33,52.97005),new Il(34,53.97468),new Il(35,54.98055),new Il(36,55.98579),new Il(37,56.992356)]),MC(FC(fE,1),qS,3,0,[new Il(15,36.01492),new Il(16,37.00305),new Il(17,37.9947),new Il(18,38.984790009),new Il(19,39.977964014),new Il(20,40.969251316),new Il(21,41.965516761),new Il(22,42.96115098),new Il(23,43.959403048),new Il(24,44.955910243),new Il(25,45.95517025),new Il(26,46.952408027),new Il(27,47.952234991),new Il(28,48.950024065),new Il(29,49.952187008),new Il(30,50.9536027),new Il(31,51.95665),new Il(32,52.95817),new Il(33,53.963),new Il(34,54.9694),new Il(35,55.97266),new Il(36,56.97704),new Il(37,57.98307),new Il(38,58.988041)]),MC(FC(fE,1),qS,3,0,[new Il(16,38.00977),new Il(17,39.001323),new Il(18,39.990498907),new Il(19,40.983131),new Il(20,41.973031622),new Il(21,42.968523342),new Il(22,43.959690235),new Il(23,44.958124349),new Il(24,45.952629491),new Il(25,46.951763792),new Il(26,47.947947053),new Il(27,48.947870789),new Il(28,49.944792069),new Il(29,50.946616017),new Il(30,51.946898175),new Il(31,52.949731709),new Il(32,53.95087),new Il(33,54.95512),new Il(34,55.95799),new Il(35,56.9643),new Il(36,57.96611),new Il(37,58.97196),new Il(38,59.97564),new Il(39,60.982018)]),MC(FC(fE,1),qS,3,0,[new Il(17,40.01109),new Il(18,40.99974),new Il(19,41.99123),new Il(20,42.98065),new Il(21,43.9744),new Il(22,44.965782286),new Il(23,45.960199491),new Il(24,46.954906918),new Il(25,47.95225448),new Il(26,48.948516914),new Il(27,49.947162792),new Il(28,50.943963675),new Il(29,51.944779658),new Il(30,52.944342517),new Il(31,53.946444381),new Il(32,54.947238194),new Il(33,55.95036),new Il(34,56.95236),new Il(35,57.95665),new Il(36,58.9593),new Il(37,59.9645),new Il(38,60.96741),new Il(39,61.97314),new Il(40,62.97675)]),MC(FC(fE,1),qS,3,0,[new Il(18,42.00643),new Il(19,42.997707),new Il(20,43.98547),new Il(21,44.97916),new Il(22,45.968361649),new Il(23,46.962906512),new Il(24,47.954035861),new Il(25,48.951341135),new Il(26,49.946049607),new Il(27,50.944771767),new Il(28,51.940511904),new Il(29,52.940653781),new Il(30,53.938884921),new Il(31,54.940844164),new Il(32,55.940645238),new Il(33,56.9437538),new Il(34,57.94425),new Il(35,58.94863),new Il(36,59.94973),new Il(37,60.95409),new Il(38,61.9558),new Il(39,62.96186),new Il(40,63.9642),new Il(41,64.97037)]),MC(FC(fE,1),qS,3,0,[new Il(19,44.00687),new Il(20,44.99451),new Il(21,45.98672),new Il(22,46.9761),new Il(23,47.96887),new Il(24,48.959623415),new Il(25,49.95424396),new Il(26,50.948215487),new Il(27,51.945570079),new Il(28,52.941294702),new Il(29,53.940363247),new Il(30,54.938049636),new Il(31,55.938909366),new Il(32,56.938287458),new Il(33,57.939986451),new Il(34,58.940447166),new Il(35,59.943193998),new Il(36,60.94446),new Il(37,61.94797),new Il(38,62.94981),new Il(39,63.95373),new Il(40,64.9561),new Il(41,65.96082),new Il(42,66.96382)]),MC(FC(fE,1),qS,3,0,[new Il(19,45.01456),new Il(20,46.00081),new Il(21,46.99289),new Il(22,47.98056),new Il(23,48.97361),new Il(24,49.962993316),new Il(25,50.956824936),new Il(26,51.948116526),new Il(27,52.945312282),new Il(28,53.939614836),new Il(29,54.938298029),new Il(30,55.934942133),new Il(31,56.935398707),new Il(32,57.933280458),new Il(33,58.934880493),new Il(34,59.934076943),new Il(35,60.936749461),new Il(36,61.936770495),new Il(37,62.940118442),new Il(38,63.94087),new Il(39,64.94494),new Il(40,65.94598),new Il(41,66.95),new Il(42,67.95251),new Il(43,68.9577)]),MC(FC(fE,1),qS,3,0,[new Il(21,48.00176),new Il(22,48.98972),new Il(23,49.98154),new Il(24,50.97072),new Il(25,51.96359),new Il(26,52.954224985),new Il(27,53.948464147),new Il(28,54.942003149),new Il(29,55.939843937),new Il(30,56.936296235),new Il(31,57.935757571),new Il(32,58.933200194),new Il(33,59.933822196),new Il(34,60.932479381),new Il(35,61.934054212),new Il(36,62.933615218),new Il(37,63.935813523),new Il(38,64.936484581),new Il(39,65.939825412),new Il(40,66.94061),new Il(41,67.94436),new Il(42,68.9452),new Il(43,69.94981),new Il(44,70.95173),new Il(45,71.95641)]),MC(FC(fE,1),qS,3,0,[new Il(22,49.99593),new Il(23,50.98772),new Il(24,51.97568),new Il(25,52.96846),new Il(26,53.957910508),new Il(27,54.951336329),new Il(28,55.942136339),new Il(29,56.939800489),new Il(30,57.935347922),new Il(31,58.934351553),new Il(32,59.930790633),new Il(33,60.931060442),new Il(34,61.928348763),new Il(35,62.929672948),new Il(36,63.927969574),new Il(37,64.930088013),new Il(38,65.929115232),new Il(39,66.931569638),new Il(40,67.931844932),new Il(41,68.935181837),new Il(42,69.93614),new Il(43,70.94),new Il(44,71.9413),new Il(45,72.94608),new Il(46,73.94791),new Il(47,74.95297),new Il(48,75.95533),new Il(49,76.96083),new Il(50,77.9638)]),MC(FC(fE,1),qS,3,0,[new Il(23,51.99718),new Il(24,52.98555),new Il(25,53.97671),new Il(26,54.96605),new Il(27,55.95856),new Il(28,56.949215695),new Il(29,57.944540734),new Il(30,58.939504114),new Il(31,59.937368123),new Il(32,60.933462181),new Il(33,61.932587299),new Il(34,62.929601079),new Il(35,63.929767865),new Il(36,64.927793707),new Il(37,65.928873041),new Il(38,66.927750294),new Il(39,67.929637875),new Il(40,68.929425281),new Il(41,69.932409287),new Il(42,70.932619818),new Il(43,71.93552),new Il(44,72.93649),new Il(45,73.9402),new Il(46,74.9417),new Il(47,75.94599),new Il(48,76.94795),new Il(49,77.95281),new Il(50,78.95528),new Il(51,79.96189)]),MC(FC(fE,1),qS,3,0,[new Il(24,53.99295),new Il(25,54.98398),new Il(26,55.97238),new Il(27,56.96491),new Il(28,57.954596465),new Il(29,58.949267074),new Il(30,59.941832031),new Il(31,60.939513907),new Il(32,61.934334132),new Il(33,62.933215563),new Il(34,63.929146578),new Il(35,64.929245079),new Il(36,65.926036763),new Il(37,66.927130859),new Il(38,67.924847566),new Il(39,68.926553538),new Il(40,69.92532487),new Il(41,70.927727195),new Il(42,71.926861122),new Il(43,72.929779469),new Il(44,73.929458261),new Il(45,74.932937379),new Il(46,75.933394207),new Il(47,76.937085857),new Il(48,77.938569576),new Il(49,78.942095175),new Il(50,79.944414722),new Il(51,80.95048),new Il(52,81.95484)]),MC(FC(fE,1),qS,3,0,[new Il(25,55.99491),new Il(26,56.98293),new Il(27,57.97425),new Il(28,58.96337),new Il(29,59.95706),new Il(30,60.94917),new Il(31,61.944179608),new Il(32,62.939141527),new Il(33,63.936838307),new Il(34,64.932739322),new Il(35,65.931592355),new Il(36,66.928204915),new Il(37,67.927983497),new Il(38,68.925580912),new Il(39,69.926027741),new Il(40,70.92470501),new Il(41,71.92636935),new Il(42,72.925169832),new Il(43,73.926940999),new Il(44,74.926500645),new Il(45,75.928928262),new Il(46,76.929281189),new Il(47,77.93165595),new Il(48,78.932916371),new Il(49,79.936588154),new Il(50,80.937752955),new Il(51,81.94316),new Il(52,82.94687),new Il(53,83.95234)]),MC(FC(fE,1),qS,3,0,[new Il(26,57.99101),new Il(27,58.98175),new Il(28,59.97019),new Il(29,60.96379),new Il(30,61.95465),new Il(31,62.94964),new Il(32,63.941572638),new Il(33,64.939440762),new Il(34,65.933846798),new Il(35,66.932738415),new Il(36,67.928097266),new Il(37,68.927972002),new Il(38,69.924250365),new Il(39,70.924953991),new Il(40,71.922076184),new Il(41,72.923459361),new Il(42,73.921178213),new Il(43,74.922859494),new Il(44,75.921402716),new Il(45,76.923548462),new Il(46,77.922852886),new Il(47,78.92540156),new Il(48,79.925444764),new Il(49,80.928821065),new Il(50,81.929550326),new Il(51,82.93451),new Il(52,83.93731),new Il(53,84.94269),new Il(54,85.94627)]),MC(FC(fE,1),qS,3,0,[new Il(27,59.99313),new Il(28,60.98062),new Il(29,61.9732),new Il(30,62.96369),new Il(31,63.957572),new Il(32,64.949484),new Il(33,65.944099147),new Il(34,66.939190417),new Il(35,67.936792976),new Il(36,68.932280154),new Il(37,69.930927811),new Il(38,70.927114724),new Il(39,71.926752647),new Il(40,72.923825288),new Il(41,73.923929076),new Il(42,74.921596417),new Il(43,75.922393933),new Il(44,76.920647703),new Il(45,77.921828577),new Il(46,78.920948498),new Il(47,79.922578162),new Il(48,80.922132884),new Il(49,81.924504668),new Il(50,82.924980625),new Il(51,83.92906),new Il(52,84.93181),new Il(53,85.93623),new Il(54,86.93958),new Il(55,87.94456),new Il(56,88.94923)]),MC(FC(fE,1),qS,3,0,[new Il(31,64.96466),new Il(32,65.95521),new Il(33,66.95009),new Il(34,67.94187),new Il(35,68.939562155),new Il(36,69.933504),new Il(37,70.931868378),new Il(38,71.927112313),new Il(39,72.9267668),new Il(40,73.922476561),new Il(41,74.922523571),new Il(42,75.919214107),new Il(43,76.91991461),new Il(44,77.917309522),new Il(45,78.918499802),new Il(46,79.916521828),new Il(47,80.917992931),new Il(48,81.9167),new Il(49,82.919119072),new Il(50,83.918464523),new Il(51,84.922244678),new Il(52,85.924271165),new Il(53,86.928520749),new Il(54,87.931423982),new Il(55,88.93602),new Il(56,89.93942),new Il(57,90.94537),new Il(58,91.94933)]),MC(FC(fE,1),qS,3,0,[new Il(32,66.96479),new Il(33,67.958248),new Il(34,68.950178),new Il(35,69.944208),new Il(36,70.939246),new Il(37,71.936496876),new Il(38,72.931794889),new Il(39,73.929891152),new Il(40,74.92577641),new Il(41,75.924541974),new Il(42,76.921380123),new Il(43,77.92114613),new Il(44,78.918337647),new Il(45,79.918529952),new Il(46,80.91629106),new Il(47,81.916804666),new Il(48,82.915180219),new Il(49,83.916503685),new Il(50,84.915608027),new Il(51,85.918797162),new Il(52,86.920710713),new Il(53,87.924065908),new Il(54,88.92638726),new Il(55,89.930634988),new Il(56,90.9339653),new Il(57,91.939255258),new Il(58,92.9431),new Il(59,93.94868)]),MC(FC(fE,1),qS,3,0,[new Il(33,68.96532),new Il(34,69.95601),new Il(35,70.95051),new Il(36,71.94190754),new Il(37,72.938931115),new Il(38,73.933258225),new Il(39,74.931033794),new Il(40,75.925948304),new Il(41,76.92466788),new Il(42,77.920386271),new Il(43,78.920082992),new Il(44,79.91637804),new Il(45,80.916592419),new Il(46,81.913484601),new Il(47,82.914135952),new Il(48,83.911506627),new Il(49,84.912526954),new Il(50,85.910610313),new Il(51,86.913354251),new Il(52,87.914446951),new Il(53,88.917632505),new Il(54,89.919523803),new Il(55,90.923442418),new Il(56,91.926152752),new Il(57,92.931265246),new Il(58,93.934362),new Il(59,94.93984),new Il(60,95.94307),new Il(61,96.94856)]),MC(FC(fE,1),qS,3,0,[new Il(34,70.96532),new Il(35,71.95908),new Il(36,72.950366),new Il(37,73.944470376),new Il(38,74.938569199),new Il(39,75.935071448),new Il(40,76.930406599),new Il(41,77.928141485),new Il(42,78.923996719),new Il(43,79.922519322),new Il(44,80.918994165),new Il(45,81.918207691),new Il(46,82.915111951),new Il(47,83.914384676),new Il(48,84.911789341),new Il(49,85.91116708),new Il(50,86.909183465),new Il(51,87.911318556),new Il(52,88.912279939),new Il(53,89.914808941),new Il(54,90.91653416),new Il(55,91.919725442),new Il(56,92.922032765),new Il(57,93.926407326),new Il(58,94.92931926),new Il(59,95.934283962),new Il(60,96.937342863),new Il(61,97.941703557),new Il(62,98.945420616),new Il(63,99.94987),new Il(64,100.953195994),new Il(65,101.95921)]),MC(FC(fE,1),qS,3,0,[new Il(35,72.96597),new Il(36,73.95631),new Il(37,74.94992),new Il(38,75.94161),new Il(39,76.937761511),new Il(40,77.932179362),new Il(41,78.929707076),new Il(42,79.924524588),new Il(43,80.923213095),new Il(44,81.918401258),new Il(45,82.917555029),new Il(46,83.913424778),new Il(47,84.912932689),new Il(48,85.909262351),new Il(49,86.908879316),new Il(50,87.905614339),new Il(51,88.907452906),new Il(52,89.907737596),new Il(53,90.910209845),new Il(54,91.911029895),new Il(55,92.91402241),new Il(56,93.915359856),new Il(57,94.919358213),new Il(58,95.921680473),new Il(59,96.926148757),new Il(60,97.928471177),new Il(61,98.933315038),new Il(62,99.935351729),new Il(63,100.940517434),new Il(64,101.943018795),new Il(65,102.94895),new Il(66,103.95233)]),MC(FC(fE,1),qS,3,0,[new Il(38,76.94962),new Il(39,77.9435),new Il(40,78.937350712),new Il(41,79.931982402),new Il(42,80.929128719),new Il(43,81.926792071),new Il(44,82.922352572),new Il(45,83.920387768),new Il(46,84.916427076),new Il(47,85.914887724),new Il(48,86.910877833),new Il(49,87.909503361),new Il(50,88.905847902),new Il(51,89.907151443),new Il(52,90.907303415),new Il(53,91.908946832),new Il(54,92.909581582),new Il(55,93.911594008),new Il(56,94.912823709),new Il(57,95.915897787),new Il(58,96.918131017),new Il(59,97.922219525),new Il(60,98.924634736),new Il(61,99.927756402),new Il(62,100.930313395),new Il(63,101.933555501),new Il(64,102.93694),new Il(65,103.94145),new Il(66,104.94509),new Il(67,105.95022)]),MC(FC(fE,1),qS,3,0,[new Il(39,78.94916),new Il(40,79.94055),new Il(41,80.936815296),new Il(42,81.931086249),new Il(43,82.92865213),new Il(44,83.92325),new Il(45,84.92146522),new Il(46,85.916472851),new Il(47,86.914816578),new Il(48,87.910226179),new Il(49,88.908888916),new Il(50,89.904703679),new Il(51,90.905644968),new Il(52,91.905040106),new Il(53,92.906475627),new Il(54,93.906315765),new Il(55,94.908042739),new Il(56,95.908275675),new Il(57,96.910950716),new Il(58,97.912746366),new Il(59,98.916511084),new Il(60,99.917761704),new Il(61,100.921139958),new Il(62,101.922981089),new Il(63,102.926597062),new Il(64,103.92878),new Il(65,104.93305),new Il(66,105.93591),new Il(67,106.94086),new Il(68,107.94428)]),MC(FC(fE,1),qS,3,0,[new Il(40,80.94905),new Il(41,81.94313),new Il(42,82.936703713),new Il(43,83.93357),new Il(44,84.927906486),new Il(45,85.925037588),new Il(46,86.920361435),new Il(47,87.91833144),new Il(48,88.913495503),new Il(49,89.911264109),new Il(50,90.906990538),new Il(51,91.907193214),new Il(52,92.906377543),new Il(53,93.907283457),new Il(54,94.906835178),new Il(55,95.908100076),new Il(56,96.908097144),new Il(57,97.91033069),new Il(58,98.911617864),new Il(59,99.914181434),new Il(60,100.915251567),new Il(61,101.918037417),new Il(62,102.919141297),new Il(63,103.922459464),new Il(64,104.923934023),new Il(65,105.92819),new Il(66,106.93031),new Il(67,107.93501),new Il(68,108.93763),new Il(69,109.94268)]),MC(FC(fE,1),qS,3,0,[new Il(41,82.94874),new Il(42,83.94009),new Il(43,84.93659),new Il(44,85.930695167),new Il(45,86.92732683),new Il(46,87.921952728),new Il(47,88.919480562),new Il(48,89.913936161),new Il(49,90.911750754),new Il(50,91.90681048),new Il(51,92.906812213),new Il(52,93.905087578),new Il(53,94.905841487),new Il(54,95.904678904),new Il(55,96.906021033),new Il(56,97.905407846),new Il(57,98.907711598),new Il(58,99.907477149),new Il(59,100.910346543),new Il(60,101.910297162),new Il(61,102.913204596),new Il(62,103.913758387),new Il(63,104.916972087),new Il(64,105.918134284),new Il(65,106.921694724),new Il(66,107.923973837),new Il(67,108.92781),new Il(68,109.92973),new Il(69,110.93451),new Il(70,111.93684),new Il(71,112.94203)]),MC(FC(fE,1),qS,3,0,[new Il(42,84.94894),new Il(43,85.94288),new Il(44,86.93653),new Il(45,87.93283),new Il(46,88.92754288),new Il(47,89.92355583),new Il(48,90.9184282),new Il(49,91.915259655),new Il(50,92.910248473),new Il(51,93.909656309),new Il(52,94.907656454),new Il(53,95.907870803),new Il(54,96.906364843),new Il(55,97.907215692),new Il(56,98.906254554),new Il(57,99.907657594),new Il(58,100.90731438),new Il(59,101.909212938),new Il(60,102.909178805),new Il(61,103.911444898),new Il(62,104.911658043),new Il(63,105.914355408),new Il(64,106.915081691),new Il(65,107.918479973),new Il(66,108.919980998),new Il(67,109.92339),new Il(68,110.92505),new Il(69,111.92924),new Il(70,112.93133),new Il(71,113.93588),new Il(72,114.93828)]),MC(FC(fE,1),qS,3,0,[new Il(43,86.94918),new Il(44,87.94042),new Il(45,88.93611),new Il(46,89.92978),new Il(47,90.926377434),new Il(48,91.92012),new Il(49,92.917051523),new Il(50,93.911359569),new Il(51,94.910412729),new Il(52,95.907597681),new Il(53,96.907554546),new Il(54,97.905287111),new Il(55,98.905939307),new Il(56,99.904219664),new Il(57,100.905582219),new Il(58,101.904349503),new Il(59,102.906323677),new Il(60,103.905430145),new Il(61,104.907750341),new Il(62,105.907326913),new Il(63,106.909907207),new Il(64,107.910192211),new Il(65,108.913201565),new Il(66,109.913966185),new Il(67,110.91756),new Il(68,111.918821673),new Il(69,112.92254),new Il(70,113.923891981),new Il(71,114.92831),new Il(72,115.93016),new Il(73,116.93479),new Il(74,117.93703)]),MC(FC(fE,1),qS,3,0,[new Il(44,88.94938),new Il(45,89.94287),new Il(46,90.93655),new Il(47,91.93198),new Il(48,92.92574),new Il(49,93.921698),new Il(50,94.915898541),new Il(51,95.914518212),new Il(52,96.911336643),new Il(53,97.910716431),new Il(54,98.908132101),new Il(55,99.90811663),new Il(56,100.906163526),new Il(57,101.906842845),new Il(58,102.905504182),new Il(59,103.906655315),new Il(60,104.905692444),new Il(61,105.907284615),new Il(62,106.90675054),new Il(63,107.908730768),new Il(64,108.908735621),new Il(65,109.910949525),new Il(66,110.91166),new Il(67,111.913969253),new Il(68,112.91542),new Il(69,113.91734336),new Il(70,114.920124676),new Il(71,115.922746643),new Il(72,116.92535),new Il(73,117.92943),new Il(74,118.93136),new Il(75,119.93578),new Il(76,120.93808)]),MC(FC(fE,1),qS,3,0,[new Il(45,90.94948),new Il(46,91.94042),new Il(47,92.93591),new Il(48,93.92877),new Il(49,94.92469),new Il(50,95.91822194),new Il(51,96.916478921),new Il(52,97.912720751),new Il(53,98.911767757),new Il(54,99.908504596),new Il(55,100.908289144),new Il(56,101.905607716),new Il(57,102.906087204),new Il(58,103.904034912),new Il(59,104.905084046),new Il(60,105.903483087),new Il(61,106.905128453),new Il(62,107.903894451),new Il(63,108.905953535),new Il(64,109.905152385),new Il(65,110.907643952),new Il(66,111.907313277),new Il(67,112.910151346),new Il(68,113.910365322),new Il(69,114.91368341),new Il(70,115.914158288),new Il(71,116.91784),new Il(72,117.918983915),new Il(73,118.92268),new Il(74,119.92403),new Il(75,120.92818),new Il(76,121.9298),new Il(77,122.93426)]),MC(FC(fE,1),qS,3,0,[new Il(47,93.94278),new Il(48,94.93548),new Il(49,95.93068),new Il(50,96.924),new Il(51,97.921759995),new Il(52,98.917597103),new Il(53,99.916069387),new Il(54,100.912802135),new Il(55,101.911999996),new Il(56,102.908972453),new Il(57,103.908628228),new Il(58,104.906528234),new Il(59,105.906666431),new Il(60,106.90509302),new Il(61,107.905953705),new Il(62,108.904755514),new Il(63,109.90611046),new Il(64,110.905294679),new Il(65,111.907004132),new Il(66,112.906565708),new Il(67,113.908807907),new Il(68,114.908762282),new Il(69,115.911359558),new Il(70,116.911684187),new Il(71,117.914582383),new Il(72,118.915666045),new Il(73,119.918788609),new Il(74,120.919851074),new Il(75,121.92332),new Il(76,122.9249),new Il(77,123.92853),new Il(78,124.93054),new Il(79,125.9345),new Il(80,126.93688)]),MC(FC(fE,1),qS,3,0,[new Il(48,95.93977),new Il(49,96.93494),new Il(50,97.927579),new Il(51,98.92501),new Il(52,99.920230232),new Il(53,100.918681442),new Il(54,101.914777255),new Il(55,102.913418952),new Il(56,103.909848091),new Il(57,104.909467818),new Il(58,105.906458007),new Il(59,106.906614232),new Il(60,107.904183403),new Il(61,108.904985569),new Il(62,109.903005578),new Il(63,110.904181628),new Il(64,111.902757226),new Il(65,112.904400947),new Il(66,113.903358121),new Il(67,114.905430553),new Il(68,115.904755434),new Il(69,116.907218242),new Il(70,117.906914144),new Il(71,118.909922582),new Il(72,119.909851352),new Il(73,120.91298039),new Il(74,121.9135),new Il(75,122.917003675),new Il(76,123.917648302),new Il(77,124.92124717),new Il(78,125.922353996),new Il(79,126.926434822),new Il(80,127.927760617),new Il(81,128.93226),new Il(82,129.93398)]),MC(FC(fE,1),qS,3,0,[new Il(49,97.94224),new Il(50,98.93461),new Il(51,99.931149033),new Il(52,100.92656),new Il(53,101.924707541),new Il(54,102.919913896),new Il(55,103.918338416),new Il(56,104.914673434),new Il(57,105.913461134),new Il(58,106.910292195),new Il(59,107.909719683),new Il(60,108.907154078),new Il(61,109.907168783),new Il(62,110.905110677),new Il(63,111.905533338),new Il(64,112.904061223),new Il(65,113.904916758),new Il(66,114.903878328),new Il(67,115.905259995),new Il(68,116.904515731),new Il(69,117.906354623),new Il(70,118.905846334),new Il(71,119.907961505),new Il(72,120.907848847),new Il(73,121.910277103),new Il(74,122.910438951),new Il(75,123.913175916),new Il(76,124.913601387),new Il(77,125.916464532),new Il(78,126.917344048),new Il(79,127.920170658),new Il(80,128.921657958),new Il(81,129.924854941),new Il(82,130.926767408),new Il(83,131.932919005),new Il(84,132.93834),new Il(85,133.94466)]),MC(FC(fE,1),qS,3,0,[new Il(50,99.938954),new Il(51,100.93606),new Il(52,101.93049),new Il(53,102.92813),new Il(54,103.923185469),new Il(55,104.921390409),new Il(56,105.916880472),new Il(57,106.915666702),new Il(58,107.911965339),new Il(59,108.911286879),new Il(60,109.907852688),new Il(61,110.907735404),new Il(62,111.90482081),new Il(63,112.905173373),new Il(64,113.902781816),new Il(65,114.903345973),new Il(66,115.901744149),new Il(67,116.902953765),new Il(68,117.901606328),new Il(69,118.90330888),new Il(70,119.902196571),new Il(71,120.904236867),new Il(72,121.903440138),new Il(73,122.905721901),new Il(74,123.90527463),new Il(75,124.907784924),new Il(76,125.907653953),new Il(77,126.91035098),new Il(78,127.910534953),new Il(79,128.913439976),new Il(80,129.913852185),new Il(81,130.916919144),new Il(82,131.917744455),new Il(83,132.923814085),new Il(84,133.928463576),new Il(85,134.93473),new Il(86,135.93934),new Il(87,136.94579)]),MC(FC(fE,1),qS,3,0,[new Il(52,102.94012),new Il(53,103.936287),new Il(54,104.931528593),new Il(55,105.928183134),new Il(56,106.92415),new Il(57,107.92216),new Il(58,108.918136092),new Il(59,109.917533911),new Il(60,110.912534147),new Il(61,111.91239464),new Il(62,112.909377941),new Il(63,113.909095876),new Il(64,114.906598812),new Il(65,115.906797235),new Il(66,116.90483959),new Il(67,117.905531885),new Il(68,118.90394646),new Il(69,119.905074315),new Il(70,120.903818044),new Il(71,121.905175415),new Il(72,122.904215696),new Il(73,123.905937525),new Il(74,124.905247804),new Il(75,125.907248153),new Il(76,126.906914564),new Il(77,127.90916733),new Il(78,128.909150092),new Il(79,129.911546459),new Il(80,130.911946487),new Il(81,131.914413247),new Il(82,132.915236466),new Il(83,133.920551554),new Il(84,134.925167962),new Il(85,135.93066),new Il(86,136.93531),new Il(87,137.94096),new Il(88,138.94571)]),MC(FC(fE,1),qS,3,0,[new Il(54,105.937702),new Il(55,106.935036),new Il(56,107.929486838),new Il(57,108.927456483),new Il(58,109.922407164),new Il(59,110.921120589),new Il(60,111.917061617),new Il(61,112.915452551),new Il(62,113.912498025),new Il(63,114.911578627),new Il(64,115.908420253),new Il(65,116.90863418),new Il(66,117.905825187),new Il(67,118.90640811),new Il(68,119.904019891),new Il(69,120.904929815),new Il(70,121.903047064),new Il(71,122.904272951),new Il(72,123.902819466),new Il(73,124.904424718),new Il(74,125.903305543),new Il(75,126.90521729),new Il(76,127.904461383),new Il(77,128.906595593),new Il(78,129.906222753),new Il(79,130.90852188),new Il(80,131.908523782),new Il(81,132.910939068),new Il(82,133.911540546),new Il(83,134.916450782),new Il(84,135.920103155),new Il(85,136.925324769),new Il(86,137.92922),new Il(87,138.93473),new Il(88,139.9387),new Il(89,140.94439),new Il(90,141.9485)]),MC(FC(fE,1),qS,3,0,[new Il(55,107.943291),new Il(56,108.938191658),new Il(57,109.934634181),new Il(58,110.930276),new Il(59,111.92797),new Il(60,112.923644245),new Il(61,113.92185),new Il(62,114.918272),new Il(63,115.916735014),new Il(64,116.913647692),new Il(65,117.91337523),new Il(66,118.910180837),new Il(67,119.910047843),new Il(68,120.907366063),new Il(69,121.907592451),new Il(70,122.905597944),new Il(71,123.906211423),new Il(72,124.90462415),new Il(73,125.905619387),new Il(74,126.90446842),new Il(75,127.905805254),new Il(76,128.904987487),new Il(77,129.906674018),new Il(78,130.906124168),new Il(79,131.907994525),new Il(80,132.907806465),new Il(81,133.909876552),new Il(82,134.91005031),new Il(83,135.914655105),new Il(84,136.917872653),new Il(85,137.922383666),new Il(86,138.926093402),new Il(87,139.93121),new Il(88,140.93483),new Il(89,141.94018),new Il(90,142.94407),new Il(91,143.94961)]),MC(FC(fE,1),qS,3,0,[new Il(56,109.944476),new Il(57,110.941632),new Il(58,111.93566535),new Il(59,112.933382836),new Il(60,113.928145),new Il(61,114.926979032),new Il(62,115.921394197),new Il(63,116.920564355),new Il(64,117.91657092),new Il(65,118.915554295),new Il(66,119.91215199),new Il(67,120.911386497),new Il(68,121.908548396),new Il(69,122.908470748),new Il(70,123.905895774),new Il(71,124.906398236),new Il(72,125.904268868),new Il(73,126.905179581),new Il(74,127.903530436),new Il(75,128.904779458),new Il(76,129.903507903),new Il(77,130.90508192),new Il(78,131.904154457),new Il(79,132.90590566),new Il(80,133.905394504),new Il(81,134.907207499),new Il(82,135.907219526),new Il(83,136.911562939),new Il(84,137.913988549),new Il(85,138.918786859),new Il(86,139.921635665),new Il(87,140.926646282),new Il(88,141.929702981),new Il(89,142.93489),new Il(90,143.93823),new Il(91,144.94367),new Il(92,145.9473),new Il(93,146.95301)]),MC(FC(fE,1),qS,3,0,[new Il(57,111.950331),new Il(58,112.944535512),new Il(59,113.940841319),new Il(60,114.935939),new Il(61,115.932914152),new Il(62,116.928639484),new Il(63,117.926554883),new Il(64,118.922370879),new Il(65,119.920678219),new Il(66,120.917183637),new Il(67,121.916121946),new Il(68,122.912990168),new Il(69,123.912245731),new Il(70,124.909724871),new Il(71,125.909447953),new Il(72,126.9074176),new Il(73,127.907747919),new Il(74,128.906063369),new Il(75,129.906706163),new Il(76,130.905460232),new Il(77,131.906429799),new Il(78,132.90544687),new Il(79,133.906713419),new Il(80,134.905971903),new Il(81,135.907305741),new Il(82,136.907083505),new Il(83,137.911010537),new Il(84,138.913357921),new Il(85,139.917277075),new Il(86,140.920043984),new Il(87,141.924292317),new Il(88,142.927330292),new Il(89,143.932027373),new Il(90,144.935388226),new Il(91,145.940162028),new Il(92,146.943864435),new Il(93,147.948899539),new Il(94,148.95272),new Il(95,149.95797),new Il(96,150.962)]),MC(FC(fE,1),qS,3,0,[new Il(58,113.950941),new Il(59,114.94771),new Il(60,115.94168),new Il(61,116.937700229),new Il(62,117.93344),new Il(63,118.931051927),new Il(64,119.926045941),new Il(65,120.924485908),new Il(66,121.92026),new Il(67,122.91885),new Il(68,123.915088437),new Il(69,124.914620234),new Il(70,125.911244146),new Il(71,126.911121328),new Il(72,127.90830887),new Il(73,128.908673749),new Il(74,129.906310478),new Il(75,130.906930798),new Il(76,131.905056152),new Il(77,132.906002368),new Il(78,133.904503347),new Il(79,134.905682749),new Il(80,135.904570109),new Il(81,136.905821414),new Il(82,137.905241273),new Il(83,138.908835384),new Il(84,139.910599485),new Il(85,140.914406439),new Il(86,141.916448175),new Il(87,142.920617184),new Il(88,143.922940468),new Il(89,144.926923807),new Il(90,145.930106645),new Il(91,146.933992519),new Il(92,147.937682377),new Il(93,148.94246),new Il(94,149.94562),new Il(95,150.9507),new Il(96,151.95416),new Il(97,152.95961)]),MC(FC(fE,1),qS,3,0,[new Il(60,116.95001),new Il(61,117.94657),new Il(62,118.94099),new Il(63,119.93807),new Il(64,120.93301),new Il(65,121.93071),new Il(66,122.92624),new Il(67,123.92453),new Il(68,124.92067),new Il(69,125.91937),new Il(70,126.91616),new Il(71,127.91544794),new Il(72,128.912667334),new Il(73,129.91232),new Il(74,130.910108489),new Il(75,131.910110399),new Il(76,132.908396372),new Il(77,133.908489607),new Il(78,134.906971003),new Il(79,135.907651181),new Il(80,136.906465656),new Il(81,137.907106826),new Il(82,138.90634816),new Il(83,139.909472552),new Il(84,140.910957016),new Il(85,141.914074489),new Il(86,142.916058646),new Il(87,143.919591666),new Il(88,144.92163837),new Il(89,145.925700146),new Il(90,146.927819639),new Il(91,147.932191197),new Il(92,148.93437),new Il(93,149.93857),new Il(94,150.94156),new Il(95,151.94611),new Il(96,152.94945),new Il(97,153.9544),new Il(98,154.95813)]),MC(FC(fE,1),qS,3,0,[new Il(61,118.95276),new Il(62,119.94664),new Il(63,120.94367),new Il(64,121.93801),new Il(65,122.93551),new Il(66,123.93052),new Il(67,124.92854),new Il(68,125.9241),new Il(69,126.92275),new Il(70,127.91887),new Il(71,128.918679183),new Il(72,129.914339361),new Il(73,130.914424137),new Il(74,131.91149),new Il(75,132.91155),new Il(76,133.909026379),new Il(77,134.909145555),new Il(78,135.907143574),new Il(79,136.907777634),new Il(80,137.905985574),new Il(81,138.906646605),new Il(82,139.905434035),new Il(83,140.908271103),new Il(84,141.909239733),new Il(85,142.912381158),new Il(86,143.913642686),new Il(87,144.917227871),new Il(88,145.918689722),new Il(89,146.922510962),new Il(90,147.924394738),new Il(91,148.928289207),new Il(92,149.930226399),new Il(93,150.93404),new Il(94,151.93638),new Il(95,152.94058),new Il(96,153.94332),new Il(97,154.94804),new Il(98,155.95126),new Il(99,156.95634)]),MC(FC(fE,1),qS,3,0,[new Il(62,120.955364),new Il(63,121.95165),new Il(64,122.94596),new Il(65,123.94296),new Il(66,124.93783),new Il(67,125.93531),new Il(68,126.93083),new Il(69,127.9288),new Il(70,128.92486),new Il(71,129.92338),new Il(72,130.920060245),new Il(73,131.91912),new Il(74,132.9162),new Il(75,133.915672),new Il(76,134.91313914),new Il(77,135.912646935),new Il(78,136.910678351),new Il(79,137.910748891),new Il(80,138.908932181),new Il(81,139.909071204),new Il(82,140.907647726),new Il(83,141.910039865),new Il(84,142.910812233),new Il(85,143.913300595),new Il(86,144.914506897),new Il(87,145.917588016),new Il(88,146.918979001),new Il(89,147.922183237),new Il(90,148.923791056),new Il(91,149.926995031),new Il(92,150.928227869),new Il(93,151.9316),new Il(94,152.93365),new Il(95,153.93739),new Il(96,154.93999),new Il(97,155.94412),new Il(98,156.94717),new Il(99,157.95178),new Il(100,158.95523)]),MC(FC(fE,1),qS,3,0,[new Il(66,125.94307),new Il(67,126.9405),new Il(68,127.93539),new Il(69,128.932385),new Il(70,129.92878),new Il(71,130.927102697),new Il(72,131.92312),new Il(73,132.92221),new Il(74,133.918645),new Il(75,134.91824),new Il(76,135.915020542),new Il(77,136.91463973),new Il(78,137.91291745),new Il(79,138.91192415),new Il(80,139.909309824),new Il(81,140.9096048),new Il(82,141.907718643),new Il(83,142.909809626),new Il(84,143.910082629),new Il(85,144.912568847),new Il(86,145.913112139),new Il(87,146.916095794),new Il(88,147.916888516),new Il(89,148.92014419),new Il(90,149.920886563),new Il(91,150.923824739),new Il(92,151.924682428),new Il(93,152.927694534),new Il(94,153.929483295),new Il(95,154.932629551),new Il(96,155.9352),new Il(97,156.93927),new Il(98,157.94187),new Il(99,158.94639),new Il(100,159.94939),new Il(101,160.95433)]),MC(FC(fE,1),qS,3,0,[new Il(67,127.94826),new Il(68,128.94316),new Il(69,129.94045),new Il(70,130.9358),new Il(71,131.93375),new Il(72,132.92972),new Il(73,133.92849),new Il(74,134.924617),new Il(75,135.923447865),new Il(76,136.920713),new Il(77,137.920432261),new Il(78,138.916759814),new Il(79,139.915801649),new Il(80,140.913606636),new Il(81,141.912950738),new Il(82,142.910927571),new Il(83,143.912585768),new Il(84,144.912743879),new Il(85,145.914692165),new Il(86,146.915133898),new Il(87,147.917467786),new Il(88,148.918329195),new Il(89,149.920979477),new Il(90,150.921202693),new Il(91,151.923490557),new Il(92,152.924113189),new Il(93,153.926547019),new Il(94,154.928097047),new Il(95,155.931060357),new Il(96,156.9332),new Il(97,157.93669),new Il(98,158.93913),new Il(99,159.94299),new Il(100,160.94586),new Il(101,161.95029),new Il(102,162.95352)]),MC(FC(fE,1),qS,3,0,[new Il(68,129.94863),new Il(69,130.94589),new Il(70,131.94082),new Il(71,132.93873),new Il(72,133.93402),new Il(73,134.93235),new Il(74,135.9283),new Il(75,136.927046709),new Il(76,137.92354),new Il(77,138.922302),new Il(78,139.918991),new Il(79,140.918468512),new Il(80,141.915193274),new Il(81,142.914623555),new Il(82,143.91199473),new Il(83,144.913405611),new Il(84,145.91303676),new Il(85,146.914893275),new Il(86,147.914817914),new Il(87,148.917179521),new Il(88,149.917271454),new Il(89,150.919928351),new Il(90,151.919728244),new Il(91,152.922093907),new Il(92,153.922205303),new Il(93,154.92463594),new Il(94,155.925526236),new Il(95,156.928354506),new Il(96,157.929987938),new Il(97,158.9332),new Il(98,159.93514),new Il(99,160.93883),new Il(100,161.94122),new Il(101,162.94536),new Il(102,163.94828),new Il(103,164.95298)]),MC(FC(fE,1),qS,3,0,[new Il(69,131.95416),new Il(70,132.9489),new Il(71,133.94632),new Il(72,134.94172),new Il(73,135.9395),new Il(74,136.93521),new Il(75,137.93345),new Il(76,138.92882915),new Il(77,139.928083921),new Il(78,140.924885867),new Il(79,141.923400033),new Il(80,142.920286634),new Il(81,143.918774116),new Il(82,144.916261285),new Il(83,145.917199714),new Il(84,146.916741206),new Il(85,147.918153775),new Il(86,148.917925922),new Il(87,149.919698294),new Il(88,150.919846022),new Il(89,151.921740399),new Il(90,152.921226219),new Il(91,153.922975386),new Il(92,154.922889429),new Il(93,155.924750855),new Il(94,156.925419435),new Il(95,157.927841923),new Il(96,158.9290845),new Il(97,159.931460406),new Il(98,160.93368),new Il(99,161.93704),new Il(100,162.93921),new Il(101,163.94299),new Il(102,164.94572),new Il(103,165.94997),new Il(104,166.95305)]),MC(FC(fE,1),qS,3,0,[new Il(72,135.94707),new Il(73,136.94465),new Il(74,137.93997),new Il(75,138.93808),new Il(76,139.933236934),new Il(77,140.93221),new Il(78,141.927908919),new Il(79,142.926738636),new Il(80,143.923390357),new Il(81,144.921687498),new Il(82,145.918305344),new Il(83,146.919089446),new Il(84,147.918109771),new Il(85,148.919336427),new Il(86,149.918655455),new Il(87,150.920344273),new Il(88,151.919787882),new Il(89,152.921746283),new Il(90,153.920862271),new Il(91,154.922618801),new Il(92,155.922119552),new Il(93,156.923956686),new Il(94,157.924100533),new Il(95,158.926385075),new Il(96,159.927050616),new Il(97,160.929665688),new Il(98,161.930981211),new Il(99,162.93399),new Il(100,163.93586),new Il(101,164.93938),new Il(102,165.9416),new Il(103,166.94557),new Il(104,167.94836),new Il(105,168.95287)]),MC(FC(fE,1),qS,3,0,[new Il(73,137.95287),new Il(74,138.94803),new Il(75,139.945367985),new Il(76,140.94116),new Il(77,141.939073781),new Il(78,142.93475),new Il(79,143.93253),new Il(80,144.92888),new Il(81,145.927180629),new Il(82,146.924037176),new Il(83,147.924298636),new Il(84,148.92324163),new Il(85,149.923654158),new Il(86,150.923098169),new Il(87,151.924071324),new Il(88,152.923430858),new Il(89,153.924686236),new Il(90,154.923500411),new Il(91,155.924743749),new Il(92,156.924021155),new Il(93,157.92541026),new Il(94,158.925343135),new Il(95,159.927164021),new Il(96,160.927566289),new Il(97,161.929484803),new Il(98,162.930643942),new Il(99,163.933347253),new Il(100,164.93488),new Il(101,165.93805),new Il(102,166.94005),new Il(103,167.94364),new Il(104,168.94622),new Il(105,169.95025),new Il(106,170.9533)]),MC(FC(fE,1),qS,3,0,[new Il(74,139.95379),new Il(75,140.95119),new Il(76,141.946695946),new Il(77,142.94383),new Il(78,143.93907),new Il(79,144.936717),new Il(80,145.932720118),new Il(81,146.930878496),new Il(82,147.927177882),new Il(83,148.927333981),new Il(84,149.925579728),new Il(85,150.92617963),new Il(86,151.924713874),new Il(87,152.925760865),new Il(88,153.924422046),new Il(89,154.92574895),new Il(90,155.924278273),new Il(91,156.925461256),new Il(92,157.924404637),new Il(93,158.92573566),new Il(94,159.925193718),new Il(95,160.926929595),new Il(96,161.926794731),new Il(97,162.928727532),new Il(98,163.929171165),new Il(99,164.931699828),new Il(100,165.932803241),new Il(101,166.935649025),new Il(102,167.93723),new Il(103,168.940303648),new Il(104,169.94267),new Il(105,170.94648),new Il(106,171.94911),new Il(107,172.95344)]),MC(FC(fE,1),qS,3,0,[new Il(75,141.95986),new Il(76,142.95469),new Il(77,143.95164),new Il(78,144.94688),new Il(79,145.9441),new Il(80,146.93984),new Il(81,147.937269),new Il(82,148.933789944),new Il(83,149.932760914),new Il(84,150.931680791),new Il(85,151.931740598),new Il(86,152.930194506),new Il(87,153.930596268),new Il(88,154.929079084),new Il(89,155.929001869),new Il(90,156.928188059),new Il(91,157.92894573),new Il(92,158.927708537),new Il(93,159.928725679),new Il(94,160.927851662),new Il(95,161.92909242),new Il(96,162.928730286),new Il(97,163.930230577),new Il(98,164.930319169),new Il(99,165.932281267),new Il(100,166.933126195),new Il(101,167.935496424),new Il(102,168.936868306),new Il(103,169.939614951),new Il(104,170.941461227),new Il(105,171.94482),new Il(106,172.94729),new Il(107,173.95115),new Il(108,174.95405)]),MC(FC(fE,1),qS,3,0,[new Il(76,143.96059),new Il(77,144.95746),new Il(78,145.95212),new Il(79,146.94931),new Il(80,147.94444),new Il(81,148.942780527),new Il(82,149.937171034),new Il(83,150.93746),new Il(84,151.935078452),new Il(85,152.935093125),new Il(86,153.932777294),new Il(87,154.933204273),new Il(88,155.931015001),new Il(89,156.931945517),new Il(90,157.929912),new Il(91,158.930680718),new Il(92,159.929078924),new Il(93,160.930001348),new Il(94,161.928774923),new Il(95,162.930029273),new Il(96,163.929196996),new Il(97,164.9307228),new Il(98,165.93028997),new Il(99,166.932045448),new Il(100,167.932367781),new Il(101,168.934588082),new Il(102,169.935460334),new Il(103,170.938025885),new Il(104,171.939352149),new Il(105,172.9424),new Il(106,173.94434),new Il(107,174.94793),new Il(108,175.95029),new Il(109,176.95437)]),MC(FC(fE,1),qS,3,0,[new Il(77,145.966495),new Il(78,146.961081),new Il(79,147.95755),new Il(80,148.95265),new Il(81,149.94967),new Il(82,150.944842),new Il(83,151.9443),new Il(84,152.942027631),new Il(85,153.940832325),new Il(86,154.939191562),new Il(87,155.939006895),new Il(88,156.936756069),new Il(89,157.936996),new Il(90,158.934808966),new Il(91,159.935090772),new Il(92,160.933398042),new Il(93,161.933970147),new Il(94,162.932647648),new Il(95,163.933450972),new Il(96,164.932432463),new Il(97,165.933553133),new Il(98,166.932848844),new Il(99,167.934170375),new Il(100,168.934211117),new Il(101,169.935797877),new Il(102,170.936425817),new Il(103,171.938396118),new Il(104,172.939600336),new Il(105,173.942164618),new Il(106,174.943832897),new Il(107,175.946991412),new Il(108,176.94904),new Il(109,177.95264),new Il(110,178.95534)]),MC(FC(fE,1),qS,3,0,[new Il(78,147.96676),new Il(79,148.96348),new Il(80,149.95799),new Il(81,150.954657965),new Il(82,151.950167),new Il(83,152.94921),new Il(84,153.945651145),new Il(85,154.945792),new Il(86,155.942847109),new Il(87,156.94265865),new Il(88,157.939857897),new Il(89,158.940153735),new Il(90,159.93756),new Il(91,160.937357719),new Il(92,161.93575),new Il(93,162.936265492),new Il(94,163.93452),new Il(95,164.935397592),new Il(96,165.933879623),new Il(97,166.934946862),new Il(98,167.933894465),new Il(99,168.93518712),new Il(100,169.934758652),new Il(101,170.936322297),new Il(102,171.936377696),new Il(103,172.938206756),new Il(104,173.938858101),new Il(105,174.941272494),new Il(106,175.942568409),new Il(107,176.945257126),new Il(108,177.946643396),new Il(109,178.95017),new Il(110,179.95233),new Il(111,180.95615)]),MC(FC(fE,1),qS,3,0,[new Il(79,149.972668),new Il(80,150.967147),new Il(81,151.96361),new Il(82,152.95869),new Il(83,153.9571),new Il(84,154.953641324),new Il(85,155.952907),new Il(86,156.950101536),new Il(87,157.948577981),new Il(88,158.946615113),new Il(89,159.945383),new Il(90,160.943047504),new Il(91,161.943222),new Il(92,162.941203796),new Il(93,163.941215),new Il(94,164.939605886),new Il(95,165.939762646),new Il(96,166.938307056),new Il(97,167.938698576),new Il(98,168.937648757),new Il(99,169.93847219),new Il(100,170.937909903),new Il(101,171.939082239),new Il(102,172.938926901),new Il(103,173.940333522),new Il(104,174.940767904),new Il(105,175.942682399),new Il(106,176.943754987),new Il(107,177.945951366),new Il(108,178.947324216),new Il(109,179.949879968),new Il(110,180.95197),new Il(111,181.95521),new Il(112,182.95757),new Il(113,183.96117)]),MC(FC(fE,1),qS,3,0,[new Il(82,153.96425),new Il(83,154.96276),new Il(84,155.959247),new Il(85,156.958127),new Il(86,157.95405528),new Il(87,158.954003),new Il(88,159.950713588),new Il(89,160.950330852),new Il(90,161.947202977),new Il(91,162.947057),new Il(92,163.944422),new Il(93,164.94454),new Il(94,165.94225),new Il(95,166.9426),new Il(96,167.94063),new Il(97,168.941158567),new Il(98,169.93965),new Il(99,170.94049),new Il(100,171.93945798),new Il(101,172.94065),new Il(102,173.940040159),new Il(103,174.941502991),new Il(104,175.941401828),new Il(105,176.943220013),new Il(106,177.943697732),new Il(107,178.945815073),new Il(108,179.94654876),new Il(109,180.949099124),new Il(110,181.950552893),new Il(111,182.953531012),new Il(112,183.95544788),new Il(113,184.95878),new Il(114,185.96092)]),MC(FC(fE,1),qS,3,0,[new Il(83,155.971689),new Il(84,156.968145),new Il(85,157.966368),new Il(86,158.96232309),new Il(87,159.961358),new Il(88,160.958372992),new Il(89,161.956556553),new Il(90,162.95431665),new Il(91,163.95357),new Il(92,164.950817),new Il(93,165.95047),new Il(94,166.948639),new Il(95,167.947787),new Il(96,168.94592),new Il(97,169.94609),new Il(98,170.94446),new Il(99,171.944739818),new Il(100,172.94459),new Il(101,173.944167937),new Il(102,174.94365),new Il(103,175.944740551),new Il(104,176.944471766),new Il(105,177.945750349),new Il(106,178.945934113),new Il(107,179.947465655),new Il(108,180.947996346),new Il(109,181.950152414),new Il(110,182.951373188),new Il(111,183.954009331),new Il(112,184.955559086),new Il(113,185.9585501),new Il(114,186.96041),new Il(115,187.96371)]),MC(FC(fE,1),qS,3,0,[new Il(84,157.973939),new Il(85,158.97228),new Il(86,159.968369),new Il(87,160.967089),new Il(88,161.962750303),new Il(89,162.962532),new Il(90,163.95898381),new Il(91,164.958335962),new Il(92,165.955019896),new Il(93,166.954672),new Il(94,167.951863),new Il(95,168.951759),new Il(96,169.948473988),new Il(97,170.94946),new Il(98,171.948228837),new Il(99,172.948884),new Il(100,173.94616),new Il(101,174.94677),new Il(102,175.94559),new Il(103,176.94662),new Il(104,177.945848364),new Il(105,178.947071733),new Il(106,179.946705734),new Il(107,180.948198054),new Il(108,181.948205519),new Il(109,182.950224458),new Il(110,183.950932553),new Il(111,184.953420586),new Il(112,185.954362204),new Il(113,186.957158365),new Il(114,187.958486954),new Il(115,188.96191222),new Il(116,189.963179541)]),MC(FC(fE,1),qS,3,0,[new Il(85,159.981485),new Il(86,160.977661),new Il(87,161.975707),new Il(88,162.971375872),new Il(89,163.970319),new Il(90,164.967050268),new Il(91,165.965211372),new Il(92,166.962564),new Il(93,167.961609),new Il(94,168.95883),new Il(95,169.958163),new Il(96,170.955547),new Il(97,171.955285),new Il(98,172.953062),new Il(99,173.952114),new Il(100,174.951393),new Il(101,175.95157),new Il(102,176.95027),new Il(103,177.950851081),new Il(104,178.949981038),new Il(105,179.95078768),new Il(106,180.950064596),new Il(107,181.951211444),new Il(108,182.950821349),new Il(109,183.952524289),new Il(110,184.952955747),new Il(111,185.954986529),new Il(112,186.955750787),new Il(113,187.958112287),new Il(114,188.959228359),new Il(115,189.961816139),new Il(116,190.963123592),new Il(117,191.96596)]),MC(FC(fE,1),qS,3,0,[new Il(86,161.983819),new Il(87,162.982048),new Il(88,163.977927),new Il(89,164.976475),new Il(90,165.971934911),new Il(91,166.971554),new Il(92,167.967832911),new Il(93,168.967076205),new Il(94,169.963569716),new Il(95,170.96304),new Il(96,171.960078),new Il(97,172.959791),new Il(98,173.956307704),new Il(99,174.95708),new Il(100,175.953757941),new Il(101,176.955045),new Il(102,177.953348225),new Il(103,178.953951),new Il(104,179.952308241),new Il(105,180.953274494),new Il(106,181.952186222),new Il(107,182.95311),new Il(108,183.952490808),new Il(109,184.954043023),new Il(110,185.953838355),new Il(111,186.955747928),new Il(112,187.955835993),new Il(113,188.958144866),new Il(114,189.95844521),new Il(115,190.960927951),new Il(116,191.961479047),new Il(117,192.964148083),new Il(118,193.965179314),new Il(119,194.968123889),new Il(120,195.96962255)]),MC(FC(fE,1),qS,3,0,[new Il(88,164.98758),new Il(89,165.985506),new Il(90,166.980951577),new Il(91,167.979966),new Il(92,168.976390868),new Il(93,169.974441697),new Il(94,170.971779),new Il(95,171.970643),new Il(96,172.967707),new Il(97,173.966804),new Il(98,174.964279),new Il(99,175.963511),new Il(100,176.96117),new Il(101,177.960084944),new Il(102,178.95915),new Il(103,179.958555615),new Il(104,180.957642156),new Il(105,181.958127689),new Il(106,182.956814),new Il(107,183.957388318),new Il(108,184.95659),new Il(109,185.957951104),new Il(110,186.95736083),new Il(111,187.958851962),new Il(112,188.958716473),new Il(113,189.960592299),new Il(114,190.960591191),new Il(115,191.962602198),new Il(116,192.9629237),new Il(117,193.96507561),new Il(118,194.9659768),new Il(119,195.968379906),new Il(120,196.969636496),new Il(121,197.97228),new Il(122,198.973787159)]),MC(FC(fE,1),qS,3,0,[new Il(90,167.988035),new Il(91,168.986421),new Il(92,169.981734918),new Il(93,170.981251),new Il(94,171.977376138),new Il(95,172.976499642),new Il(96,173.972811276),new Il(97,174.972276),new Il(98,175.969),new Il(99,176.968453),new Il(100,177.964894223),new Il(101,178.965475),new Il(102,179.962023729),new Il(103,180.963177),new Il(104,181.961267637),new Il(105,182.961729),new Il(106,183.959851685),new Il(107,184.960753782),new Il(108,185.959432346),new Il(109,186.960697),new Il(110,187.959395697),new Il(111,188.9608319),new Il(112,189.959930073),new Il(113,190.961684653),new Il(114,191.961035158),new Il(115,192.962984504),new Il(116,193.962663581),new Il(117,194.964774449),new Il(118,195.964934884),new Il(119,196.967323401),new Il(120,197.967876009),new Il(121,198.970576213),new Il(122,199.971423885),new Il(123,200.974496467),new Il(124,201.97574)]),MC(FC(fE,1),qS,3,0,[new Il(92,170.991183),new Il(93,171.990109),new Il(94,172.986398138),new Il(95,173.984325861),new Il(96,174.981552),new Il(97,175.980269),new Il(98,176.977215),new Il(99,177.975975),new Il(100,178.973412),new Il(101,179.972396),new Il(102,180.969948),new Il(103,181.968621416),new Il(104,182.96762),new Il(105,183.966776046),new Il(106,184.965806956),new Il(107,185.965997671),new Il(108,186.964562),new Il(109,187.965321662),new Il(110,188.9642243),new Il(111,189.964698757),new Il(112,190.963649239),new Il(113,191.964810107),new Il(114,192.964131745),new Il(115,193.96533889),new Il(116,194.965017928),new Il(117,195.966551315),new Il(118,196.966551609),new Il(119,197.968225244),new Il(120,198.968748016),new Il(121,199.970717886),new Il(122,200.971640839),new Il(123,201.973788431),new Il(124,202.975137256),new Il(125,203.977705),new Il(126,204.97961)]),MC(FC(fE,1),qS,3,0,[new Il(95,174.991411),new Il(96,175.987413248),new Il(97,176.986336874),new Il(98,177.982476325),new Il(99,178.981783),new Il(100,179.978322),new Il(101,180.977806),new Il(102,181.97393546),new Il(103,182.974561),new Il(104,183.970705219),new Il(105,184.971983),new Il(106,185.969460021),new Il(107,186.969785),new Il(108,187.967511693),new Il(109,188.968733187),new Il(110,189.966958568),new Il(111,190.96706311),new Il(112,191.965921572),new Il(113,192.966644169),new Il(114,193.965381832),new Il(115,194.966638981),new Il(116,195.965814846),new Il(117,196.967195333),new Il(118,197.96675183),new Il(119,198.968262489),new Il(120,199.968308726),new Il(121,200.970285275),new Il(122,201.970625604),new Il(123,202.972857096),new Il(124,203.97347564),new Il(125,204.976056104),new Il(126,205.977498672),new Il(127,206.982577025),new Il(128,207.98594)]),MC(FC(fE,1),qS,3,0,[new Il(96,176.996881),new Il(97,177.994637),new Il(98,178.991466),new Il(99,179.990194),new Il(100,180.986904),new Il(101,181.98561),new Il(102,182.982697),new Il(103,183.98176),new Il(104,184.9791),new Il(105,185.977549881),new Il(106,186.97617),new Il(107,187.97592),new Il(108,188.974290451),new Il(109,189.974473379),new Il(110,190.972261952),new Il(111,191.972770785),new Il(112,192.970548),new Il(113,193.971053),new Il(114,194.96965),new Il(115,195.970515),new Il(116,196.9695362),new Il(117,197.970466294),new Il(118,198.969813837),new Il(119,199.970945394),new Il(120,200.97080377),new Il(121,201.972090569),new Il(122,202.972329088),new Il(123,203.973848646),new Il(124,204.97441227),new Il(125,205.976095321),new Il(126,206.977407908),new Il(127,207.982004653),new Il(128,208.985349125),new Il(129,209.990065574)]),MC(FC(fE,1),qS,3,0,[new Il(99,180.996714),new Il(100,181.992676101),new Il(101,182.99193),new Il(102,183.988198),new Il(103,184.98758),new Il(104,185.983485388),new Il(105,186.98403),new Il(106,187.979869108),new Il(107,188.98088),new Il(108,189.978180008),new Il(109,190.9782),new Il(110,191.975719811),new Il(111,192.97608),new Il(112,193.974648056),new Il(113,194.975920279),new Il(114,195.97271),new Il(115,196.97338),new Il(116,197.97198),new Il(117,198.972909384),new Il(118,199.97181556),new Il(119,200.972846589),new Il(120,201.972143786),new Il(121,202.973375491),new Il(122,203.973028761),new Il(123,204.974467112),new Il(124,205.974449002),new Il(125,206.975880605),new Il(126,207.97663585),new Il(127,208.981074801),new Il(128,209.984173129),new Il(129,210.988731474),new Il(130,211.991887495),new Il(131,212.9965),new Il(132,213.999798147)]),MC(FC(fE,1),qS,3,0,[new Il(102,184.997708),new Il(103,185.99648),new Il(104,186.993458),new Il(105,187.992173),new Il(106,188.989505),new Il(107,189.987520007),new Il(108,190.986053),new Il(109,191.985368),new Il(110,192.983662229),new Il(111,193.983430186),new Il(112,194.98112697),new Il(113,195.981236107),new Il(114,196.978934287),new Il(115,197.979024396),new Il(116,198.977576953),new Il(117,199.978141983),new Il(118,200.976970721),new Il(119,201.977674504),new Il(120,202.976868118),new Il(121,203.977805161),new Il(122,204.977374688),new Il(123,205.978482854),new Il(124,206.978455217),new Il(125,207.979726699),new Il(126,208.980383241),new Il(127,209.984104944),new Il(128,210.987258139),new Il(129,211.991271542),new Il(130,212.994374836),new Il(131,213.998698664),new Il(132,215.001832349),new Il(133,216.006199)]),MC(FC(fE,1),qS,3,0,[new Il(106,189.994293888),new Il(107,190.994653),new Il(108,191.99033039),new Il(109,192.991102),new Il(110,193.988284107),new Il(111,194.988045),new Il(112,195.985469432),new Il(113,196.985567),new Il(114,197.984024384),new Il(115,198.985044507),new Il(116,199.981735),new Il(117,200.982209),new Il(118,201.980704),new Il(119,202.981412863),new Il(120,203.980307113),new Il(121,204.981165396),new Il(122,205.980465241),new Il(123,206.981578228),new Il(124,207.981231059),new Il(125,208.982415788),new Il(126,209.982857396),new Il(127,210.986636869),new Il(128,211.988851755),new Il(129,212.992842522),new Il(130,213.995185949),new Il(131,214.999414609),new Il(132,216.001905198),new Il(133,217.006253),new Il(134,218.008965773)]),MC(FC(fE,1),qS,3,0,[new Il(108,193.000188),new Il(109,193.997973),new Il(110,194.996554),new Il(111,195.995702),new Il(112,196.993891293),new Il(113,197.99343368),new Il(114,198.991008569),new Il(115,199.990920883),new Il(116,200.988486908),new Il(117,201.988448629),new Il(118,202.986847216),new Il(119,203.987261559),new Il(120,204.986036352),new Il(121,205.986599242),new Il(122,206.985775861),new Il(123,207.986582508),new Il(124,208.986158678),new Il(125,209.987131308),new Il(126,210.987480806),new Il(127,211.990734657),new Il(128,212.99292115),new Il(129,213.996356412),new Il(130,214.998641245),new Il(131,216.002408839),new Il(132,217.004709619),new Il(133,218.008681458),new Il(134,219.011296478),new Il(135,220.015301),new Il(136,221.01814),new Il(137,222.02233),new Il(138,223.02534)]),MC(FC(fE,1),qS,3,0,[new Il(110,196.001117268),new Il(111,197.001661),new Il(112,197.998779978),new Il(113,198.998309),new Il(114,199.995634148),new Il(115,200.995535),new Il(116,201.993899382),new Il(117,202.994765192),new Il(118,203.991365),new Il(119,204.991668),new Il(120,205.99016),new Il(121,206.990726826),new Il(122,207.989631237),new Il(123,208.990376634),new Il(124,209.989679862),new Il(125,210.99058541),new Il(126,211.990688899),new Il(127,212.993868354),new Il(128,213.995346275),new Il(129,214.998729195),new Il(130,216.000258153),new Il(131,217.003914555),new Il(132,218.005586315),new Il(133,219.009474831),new Il(134,220.011384149),new Il(135,221.015455),new Il(136,222.017570472),new Il(137,223.02179),new Il(138,224.02409),new Il(139,225.02844),new Il(140,226.03089),new Il(141,227.035407),new Il(142,228.038084)]),MC(FC(fE,1),qS,3,0,[new Il(113,200.006499),new Il(114,201.00458692),new Il(115,202.00396885),new Il(116,203.001423829),new Il(117,204.001221209),new Il(118,204.998663961),new Il(119,205.998486886),new Il(120,206.996859385),new Il(121,207.997133849),new Il(122,208.995915421),new Il(123,209.996398327),new Il(124,210.995529332),new Il(125,211.996194988),new Il(126,212.996174845),new Il(127,213.99895474),new Il(128,215.000326029),new Il(129,216.003187873),new Il(130,217.004616452),new Il(131,218.007563326),new Il(132,219.009240843),new Il(133,220.012312978),new Il(134,221.014245654),new Il(135,222.017543957),new Il(136,223.019730712),new Il(137,224.023235513),new Il(138,225.025606914),new Il(139,226.029343423),new Il(140,227.031833167),new Il(141,228.034776087),new Il(142,229.038426),new Il(143,230.04251),new Il(144,231.045407),new Il(145,232.049654)]),MC(FC(fE,1),qS,3,0,[new Il(115,203.00921),new Il(116,204.006434513),new Il(117,205.006187),new Il(118,206.004463814),new Il(119,207.005176607),new Il(120,208.001776),new Il(121,209.001944),new Il(122,210.000446),new Il(123,211.000893996),new Il(124,211.999783492),new Il(125,213.000345847),new Il(126,214.000091141),new Il(127,215.002704195),new Il(128,216.003518402),new Il(129,217.00630601),new Il(130,218.007123948),new Il(131,219.010068787),new Il(132,220.011014669),new Il(133,221.013907762),new Il(134,222.01536182),new Il(135,223.01849714),new Il(136,224.020202004),new Il(137,225.023604463),new Il(138,226.025402555),new Il(139,227.029170677),new Il(140,228.031064101),new Il(141,229.034820309),new Il(142,230.037084774),new Il(143,231.04122),new Il(144,232.043693),new Il(145,233.047995),new Il(146,234.050547)]),MC(FC(fE,1),qS,3,0,[new Il(118,207.012469754),new Il(119,208.012112949),new Il(120,209.009568736),new Il(121,210.009256802),new Il(122,211.007648196),new Il(123,212.007811441),new Il(124,213.006573689),new Il(125,214.006893072),new Il(126,215.006450832),new Il(127,216.008721268),new Il(128,217.009332676),new Il(129,218.011625045),new Il(130,219.012404918),new Il(131,220.014752105),new Il(132,221.015575746),new Il(133,222.017828852),new Il(134,223.01912603),new Il(135,224.021708435),new Il(136,225.023220576),new Il(137,226.026089848),new Il(138,227.027746979),new Il(139,228.031014825),new Il(140,229.032930871),new Il(141,230.036025144),new Il(142,231.038551503),new Il(143,232.042022474),new Il(144,233.04455),new Il(145,234.04842),new Il(146,235.051102),new Il(147,236.055178)]),MC(FC(fE,1),qS,3,0,[new Il(120,210.015711883),new Il(121,211.016306912),new Il(122,212.012916),new Il(123,213.012962),new Il(124,214.011451),new Il(125,215.011726597),new Il(126,216.011050963),new Il(127,217.013066169),new Il(128,218.013267744),new Il(129,219.015521253),new Il(130,220.015733126),new Il(131,221.018171499),new Il(132,222.018454131),new Il(133,223.020795153),new Il(134,224.02145925),new Il(135,225.023941441),new Il(136,226.024890681),new Il(137,227.027698859),new Il(138,228.028731348),new Il(139,229.03175534),new Il(140,230.033126574),new Il(141,231.03629706),new Il(142,232.03805036),new Il(143,233.041576923),new Il(144,234.043595497),new Il(145,235.04750442),new Il(146,236.04971),new Il(147,237.053894),new Il(148,238.056243)]),MC(FC(fE,1),qS,3,0,[new Il(122,213.021183209),new Il(123,214.02073923),new Il(124,215.019097612),new Il(125,216.019109649),new Il(126,217.018288571),new Il(127,218.020007906),new Il(128,219.019880348),new Il(129,220.021876493),new Il(130,221.021863742),new Il(131,222.023726),new Il(132,223.023963748),new Il(133,224.025614854),new Il(134,225.026115172),new Il(135,226.02793275),new Il(136,227.028793151),new Il(137,228.031036942),new Il(138,229.032088601),new Il(139,230.034532562),new Il(140,231.035878898),new Il(141,232.03858172),new Il(142,233.040240235),new Il(143,234.043302325),new Il(144,235.045436759),new Il(145,236.048675176),new Il(146,237.05113943),new Il(147,238.054497046),new Il(148,239.05713),new Il(149,240.06098)]),MC(FC(fE,1),qS,3,0,[new Il(126,218.023487),new Il(127,219.024915423),new Il(128,220.024712),new Il(129,221.026351),new Il(130,222.02607),new Il(131,223.027722956),new Il(132,224.027590139),new Il(133,225.029384369),new Il(134,226.02933975),new Il(135,227.031140069),new Il(136,228.031366357),new Il(137,229.033496137),new Il(138,230.033927392),new Il(139,231.036289158),new Il(140,232.03714628),new Il(141,233.039628196),new Il(142,234.040945606),new Il(143,235.043923062),new Il(144,236.045561897),new Il(145,237.048723955),new Il(146,238.050782583),new Il(147,239.054287777),new Il(148,240.056585734),new Il(149,241.06033),new Il(150,242.062925)]),MC(FC(fE,1),qS,3,0,[new Il(132,225.033899689),new Il(133,226.035129),new Il(134,227.034958261),new Il(135,228.03618),new Il(136,229.036246866),new Il(137,230.037812591),new Il(138,231.038233161),new Il(139,232.040099),new Il(140,233.04073235),new Il(141,234.042888556),new Il(142,235.044055876),new Il(143,236.046559724),new Il(144,237.048167253),new Il(145,238.050940464),new Il(146,239.052931399),new Il(147,240.056168828),new Il(148,241.058246266),new Il(149,242.061635),new Il(150,243.064273),new Il(151,244.06785)]),MC(FC(fE,1),qS,3,0,[new Il(134,228.038727686),new Il(135,229.040138934),new Il(136,230.039645603),new Il(137,231.041258),new Il(138,232.041179445),new Il(139,233.04298757),new Il(140,234.043304681),new Il(141,235.0452815),new Il(142,236.046048088),new Il(143,237.048403774),new Il(144,238.0495534),new Il(145,239.052156519),new Il(146,240.05380746),new Il(147,241.056845291),new Il(148,242.058736847),new Il(149,243.061997013),new Il(150,244.06419765),new Il(151,245.067738657),new Il(152,246.070198429),new Il(153,247.07407)]),MC(FC(fE,1),qS,3,0,[new Il(136,231.04556),new Il(137,232.04659),new Il(138,233.046472),new Il(139,234.047794),new Il(140,235.048029),new Il(141,236.049569),new Il(142,237.049970748),new Il(143,238.051977839),new Il(144,239.053018481),new Il(145,240.055287826),new Il(146,241.056822944),new Il(147,242.059543039),new Il(148,243.061372686),new Il(149,244.064279429),new Il(150,245.066445398),new Il(151,246.069768438),new Il(152,247.072086),new Il(153,248.075745),new Il(154,249.07848)]),MC(FC(fE,1),qS,3,0,[new Il(137,233.0508),new Il(138,234.05024),new Il(139,235.051591),new Il(140,236.051405),new Il(141,237.052891),new Il(142,238.053016298),new Il(143,239.054951),new Il(144,240.055519046),new Il(145,241.057646736),new Il(146,242.058829326),new Il(147,243.061382249),new Il(148,244.062746349),new Il(149,245.065485586),new Il(150,246.067217551),new Il(151,247.070346811),new Il(152,248.072342247),new Il(153,249.075947062),new Il(154,250.078350687),new Il(155,251.082277873),new Il(156,252.08487)]),MC(FC(fE,1),qS,3,0,[new Il(138,235.05658),new Il(139,236.05733),new Il(140,237.057127),new Il(141,238.058266),new Il(142,239.058362),new Il(143,240.059749),new Il(144,241.060223),new Il(145,242.06205),new Il(146,243.06300157),new Il(147,244.065167882),new Il(148,245.066355386),new Il(149,246.068666836),new Il(150,247.070298533),new Il(151,248.07308),new Il(152,249.074979937),new Il(153,250.078310529),new Il(154,251.08075344),new Il(155,252.084303),new Il(156,253.08688),new Il(157,254.0906)]),MC(FC(fE,1),qS,3,0,[new Il(139,237.06207),new Il(140,238.06141),new Il(141,239.062579),new Il(142,240.062295),new Il(143,241.063716),new Il(144,242.063688713),new Il(145,243.065421),new Il(146,244.06599039),new Il(147,245.068039),new Il(148,246.068798807),new Il(149,247.070992043),new Il(150,248.07217808),new Il(151,249.074846818),new Il(152,250.076399951),new Il(153,251.079580056),new Il(154,252.081619582),new Il(155,253.085126791),new Il(156,254.087316198),new Il(157,255.091039),new Il(158,256.09344)]),MC(FC(fE,1),qS,3,0,[new Il(141,240.06892),new Il(142,241.068662),new Il(143,242.069699),new Il(144,243.069631),new Il(145,244.070969),new Il(146,245.071317),new Il(147,246.072965),new Il(148,247.07365),new Il(149,248.075458),new Il(150,249.076405),new Il(151,250.078654),new Il(152,251.079983592),new Il(153,252.082972247),new Il(154,253.084817974),new Il(155,254.088016026),new Il(156,255.090266386),new Il(157,256.093592),new Il(158,257.095979)]),MC(FC(fE,1),qS,3,0,[new Il(142,242.07343),new Il(143,243.07451),new Il(144,244.074077),new Il(145,245.075375),new Il(146,246.075281634),new Il(147,247.076819),new Il(148,248.077184411),new Il(149,249.079024),new Il(150,250.079514759),new Il(151,251.081566467),new Il(152,252.082460071),new Il(153,253.085176259),new Il(154,254.086847795),new Il(155,255.089955466),new Il(156,256.091766522),new Il(157,257.095098635),new Il(158,258.097069),new Il(159,259.100588)]),MC(FC(fE,1),qS,3,0,[new Il(144,245.081017),new Il(145,246.081933),new Il(146,247.081804),new Il(147,248.082909),new Il(148,249.083002),new Il(149,250.084488),new Il(150,251.084919),new Il(151,252.08663),new Il(152,253.08728),new Il(153,254.089725),new Il(154,255.091075196),new Il(155,256.094052757),new Il(156,257.095534643),new Il(157,258.098425321),new Il(158,259.100503),new Il(159,260.103645)]),MC(FC(fE,1),qS,3,0,[new Il(147,249.087823),new Il(148,250.087493),new Il(149,251.08896),new Il(150,252.088965909),new Il(151,253.090649),new Il(152,254.090948746),new Il(153,255.093232449),new Il(154,256.094275879),new Il(155,257.096852778),new Il(156,258.0982),new Il(157,259.101024),new Il(158,260.102636),new Il(159,261.105743),new Il(160,262.10752)]),MC(FC(fE,1),qS,3,0,[new Il(148,251.09436),new Il(149,252.09533),new Il(150,253.095258),new Il(151,254.096587),new Il(152,255.096769),new Il(153,256.098763),new Il(154,257.099606),new Il(155,258.101883),new Il(156,259.10299),new Il(157,260.105572),new Il(158,261.106941),new Il(159,262.109692),new Il(160,263.111394)]),MC(FC(fE,1),qS,3,0,[new Il(149,253.100679),new Il(150,254.100166),new Il(151,255.101492),new Il(152,256.101179573),new Il(153,257.103072),new Il(154,258.103568),new Il(155,259.105628),new Il(156,260.106434),new Il(157,261.108752),new Il(158,262.109918),new Il(159,263.11254),new Il(160,264.113978)]),MC(FC(fE,1),qS,3,0,[new Il(150,255.107398),new Il(151,256.10811),new Il(152,257.107858),new Il(153,258.109438),new Il(154,259.109721),new Il(155,260.111427),new Il(156,261.112106),new Il(157,262.114153),new Il(158,263.115078),new Il(159,264.117473),new Il(160,265.118659)]),MC(FC(fE,1),qS,3,0,[new Il(152,258.113151),new Il(153,259.114652),new Il(154,260.114435447),new Il(155,261.116199),new Il(156,262.116477),new Il(157,263.118313),new Il(158,264.118924),new Il(159,265.121066),new Il(160,266.121928)]),MC(FC(fE,1),qS,3,0,[new Il(153,260.121803),new Il(154,261.1218),new Il(155,262.123009),new Il(156,263.123146),new Il(157,264.12473),new Il(158,265.125198),new Il(159,266.127009),new Il(160,267.12774)]),MC(FC(fE,1),qS,3,0,[new Il(155,263.12871),new Il(156,264.128408258),new Il(157,265.130001),new Il(158,266.130042),new Il(159,267.131774),new Il(160,268.132156),new Il(161,269.134114)]),MC(FC(fE,1),qS,3,0,[new Il(156,265.136567),new Il(157,266.13794),new Il(158,267.137526),new Il(159,268.138816),new Il(160,269.139106),new Il(161,270.140723),new Il(162,271.141229)])])}
	var NQ='object',OQ='anonymous',PQ='fnStack',QQ={4:1,11:1,5:1,8:1},RQ='Unknown',SQ='\n',TQ='boolean',UQ='number',VQ='string',WQ=2147483647,XQ='__java$exception',YQ='For input string: "',ZQ='null',$Q=-2147483648,_Q=524288,aR='__noinit__',bR={4:1,13:1,15:1},cR=4096,dR=16384,eR=65536,fR=65535,gR=', length: ',hR='fromIndex: ',iR=', toIndex: ',jR={7:1,4:1,5:1},kR=16777215,lR=0.30000001192092896,mR={14:1,4:1,5:1},nR={12:1,4:1,5:1},oR=536870912,pR=2.617993878,qR=3.665191429,rR=6.283185307179586,sR=3.141592653589793,tR=1.5707963267948966,uR=2048,vR=1920,wR=1024,xR=234881024,yR=100663296,zR=201326592,AR=114688,BR=4063232,CR=2097152,DR=393216,ER=29360128,FR=268435456,GR=-1.5707963267948966,HR=32640,IR='" ',JR='stroke-width:',KR=1572864,LR=229376,MR=1.0471975511965976,NR=0.5235987755982988,OR={4:1,5:1,8:1},PR=786432,QR=262144,RR={4:1,5:1},SR='unsupported atomicNo:',TR=8192,UR={l:0,m:0,h:64},VR='Bit already set!',WR={l:0,m:0,h:128},XR={24:1,4:1,11:1,5:1,8:1},YR={4:1,5:1,17:1,8:1},ZR=-16777216,$R={9:1,4:1,5:1},_R=131072,aS=-65536,bS={4:1,11:1,27:1,5:1,17:1,8:1,28:1},cS='??',dS={87:1,4:1,11:1,5:1,8:1},eS=-268435456,fS=65011712,gS=3072,hS=126976,iS=1.7976931348623157E308,jS=67108864,kS=134217728,lS=16777216,mS=-66584577,nS=-3.141592653589793,oS=0.7853981633974483,pS=3.061592653589793,qS={10:1,4:1,5:1,8:1},rS='ATOMS',sS='M  END',tS='$$$$',uS=4194303,vS=239060990,wS='class="event" ',xS='Assignment of aromatic double bonds failed',yS='Members of ESR groups must only be stereo centers with known configuration.',zS='Ambiguous configuration at stereo center because of 2 parallel bonds',AS=-0.5235987755982988,BS=-1.0471975511965976,CS=-0.7853981633974483,DS=2.0943951023931953,ES=277296187394,FS=277296187395,GS=280517412866,HS=280517412867,IS=280520558594,JS=280520558595,KS=280520561666,LS=284812380162,MS=284812380163,NS=284815525890,OS=284815528962,PS=284819720194,QS=284819727362,RS=414735140866,SS=414735140867,TS=414738286594,US=414738286595,VS=414738289666,WS=414742480898,XS=414742480899,YS=414742488067,ZS=414869358594,$S=414869358595,_S=414869361666,aT=414869489666,bT=417956366338,cT=417959512066,dT=552174094338,eT=552177240066,fT=552177243138,gT=552181434370,hT=552181441538,iT=552308312066,jT=552308315138,kT=552308319234,lT=552308319240,mT=552308443138,nT=555395319810,oT=555395319816,pT=555398465538,qT=555398468610,rT=555398468615,sT=555402659842,tT=555402662914,uT=555529537538,vT=555529537544,wT=555529540610,xT=555529544706,yT=555529668610,zT=555532683266,AT=555532686338,BT=559693432834,CT=559693435906,DT=559697630210,ET={l:2361346,m:590400,h:16},FT={l:2361346,m:1376832,h:16},GT={l:2361346,m:1377600,h:16},HT={l:1312770,m:1377601,h:16},IT={l:1315842,m:1377601,h:16},JT={l:2361346,m:2425408,h:16},KT={l:2361346,m:2426176,h:16},LT={l:1312770,m:2426177,h:16},MT={l:1315842,m:2426177,h:16},NT={l:2361346,m:2427200,h:16},OT={l:1312770,m:2427201,h:16},PT={l:1312770,m:2427202,h:16},QT={l:1315842,m:2427202,h:16},RT={l:1319938,m:2427202,h:16},ST={l:2361346,m:590400,h:24},TT={l:2361346,m:591168,h:24},UT={l:1312770,m:591169,h:24},VT={l:1315842,m:591169,h:24},WT={l:1319938,m:592194,h:24},XT={l:2361346,m:623168,h:24},YT={l:1312770,m:623169,h:24},ZT={l:2364418,m:623200,h:24},$T={l:2361351,m:1377600,h:32},_T={l:1312775,m:1377601,h:32},aU={l:1315847,m:1377601,h:32},bU={l:1312775,m:1378625,h:32},cU={l:1315847,m:1378625,h:32},dU={l:1315847,m:1378626,h:32},eU={l:1315847,m:1409601,h:32},fU={l:2361352,m:1443136,h:32},gU={l:1312776,m:1443137,h:32},hU={l:1315848,m:1443137,h:32},iU={l:2361352,m:1443168,h:32},jU={l:2364424,m:1443168,h:32},kU={l:1312775,m:2426177,h:32},lU=0.6262000203132629,mU=-1.3825000524520874,nU=-1.4915000200271606,oU=0.33169999718666077,pU=0.3540000021457672,qU=0.38179999589920044,rU=-0.6019999980926514,sU=-0.7379999756813049,tU='Atom-types are 64-bit numbers describing atoms and their near surrounding.',uU='Recognized atom types and their contributions are:',vU='Druglikeness predictor not properly initialized.',wU=3.009999990463257,xU=-0.1809999942779541,yU=-0.17000000178813934,zU=-0.2029999941587448,AU='Over- or under-specified stereo feature or more than one racemic type bond',BU='undefined',CU=0.08726646502812703,DU=1048575,EU='Too many percent/per mille characters in pattern "',FU=4194304,GU=17592186044416,HU=-17592186044416,IU='CSS1Compat',JU=1.52587890625E-5,KU={4:1,11:1,5:1,17:1,8:1},LU={31:1,52:1},MU={37:1,35:1,42:1},NU={37:1,35:1,76:1,42:1,96:1},OU={37:1,35:1,42:1,70:1},PU=15525485,QU=5.9604644775390625E-8,RU={4:1,31:1,54:1,43:1},SU='Invalid UTF8 sequence',TU='locale',UU='default',VU='user.agent';var _,lH,gH,OG=-1;mH();nH(1,null,{},pc);_.ab=function qc(a){return this===a};_.bb=function sc(){return this.Jb};_.cb=function uc(){return EQ(this)};_.db=function wc(){return GI(tc(this))+'@'+(vc(this)>>>0).toString(16)};_.equals=function(a){return this.ab(a)};_.hashCode=function(){return this.cb()};_.toString=function(){return this.db()};var TB;nH(189,1,{});nH(140,189,{},$B);_.pb=function _B(a){var b={},j;var c=[];a[PQ]=c;var d=arguments.callee.caller;while(d){var e=(UB(),d.name||(d.name=XB(d.toString())));c.push(e);var f=':'+e;var g=b[f];if(g){var h,i;for(h=0,i=g.length;h<i;h++){if(g[h]===d){return}}}(g||(b[f]=[])).push(d);d=d.caller}};_.qb=function aC(a){var b,c,d,e;d=(UB(),a&&a[PQ]?a[PQ]:[]);c=d.length;e=JC(TF,QQ,44,c,0,1);for(b=0;b<c;b++){e[b]=new ZJ(d[b],null,-1)}return e};nH(190,189,{});_.pb=function cC(a){};_.rb=function dC(a,b,c,d){return new ZJ(b,a+'@'+d,c<0?-1:c)};_.qb=function eC(a){var b,c,d,e,f,g,h;e=(UB(),h=a.backingJsObject,h&&h.stack?h.stack.split(SQ):[]);f=JC(TF,QQ,44,0,0,1);b=0;d=e.length;if(d==0){return f}g=bC(this,e[0]);gK(g.d,OQ)||(f[b++]=g);for(c=1;c<d;c++){f[b++]=bC(this,e[c])}return f};nH(141,190,{},fC);_.rb=function gC(a,b,c,d){return new ZJ(b,a,-1)};var tD,uD,vD;tD={4:1,137:1,31:1};var pI;nH(97,1,{},HI);_.sb=function II(a){var b;b=new HI;b.e=4;a>1?(b.c=OI(this,a-1)):(b.c=this);return b};_.tb=function NI(){FI(this);return this.b};_.ub=function QI(){return GI(this)};_.vb=function SI(){FI(this);return this.i};_.wb=function UI(){return (this.e&4)!=0};_.xb=function VI(){return (this.e&1)!=0};_.db=function YI(){return ((this.e&2)!=0?'interface ':(this.e&1)!=0?'':'class ')+(FI(this),this.k)};_.e=0;_.g=0;var EI=1;nH(77,1,{4:1,77:1});var $I;uD={4:1,31:1,138:1,77:1};nH(15,1,{4:1,15:1});_.lb=function jB(a){return new $wnd.Error(a)};_.mb=function lB(){return this.f};_.nb=function mB(){var a,b,c;c=this.f==null?null:this.f.replace(new $wnd.RegExp(SQ,'g'),' ');b=(a=GI(this.Jb),c==null?a:a+': '+c);hB(this,kB(this.lb(b)));VB(this)};_.db=function oB(){return iB(this,this.mb())};_.backingJsObject=aR;_.j=true;nH(13,15,bR,pB);nH(32,77,{4:1,31:1,32:1,77:1},tJ);_.fb=function vJ(a){return uJ(this.a,a.a)};_.ab=function wJ(a){return yD(a,32)&&a.a==this.a};_.cb=function xJ(){return this.a};_.db=function AJ(){return ''+this.a};_.a=0;nH(29,13,bR,rB);nH(62,29,bR,sB);nH(83,62,bR,UJ,VJ,WJ);_.lb=function XJ(a){return new $wnd.TypeError(a)};vD={4:1,98:1,31:1,2:1};var DQ=0;var FQ,GQ=0,HQ;var RF=KI(1);var bF=KI(0);var iF=KI(189);var fF=KI(140);var hF=KI(190);var gF=KI(141);var CF=KI(137);var DF=KI(97);var QF=KI(77);var EF=KI(138);var YF=KI(15);var GF=KI(13);var KF=KI(32);var SF=KI(29);var LF=KI(62);var OF=KI(83);var XF=KI(2);nH(145,1,{});_.v=0;_.w=0;_.B=0;_.F=0;_.G=false;_.J=0;_.K=0;_.M=0;_.N=0;_.P=0;_.Q=0;_.R=0;_.S=0;_.T=0;var xc,yc,zc,Ac,Bc,Cc,Dc,Ec,Fc,Gc,Hc,Ic;var OD=KI(145);nH(68,1,{68:1},Fd);_.a=0;_.b=0;_.c=0;var MD=KI(68);nH(36,1,{},Gd);_.a=0;_.b=0;_.c=0;_.d=0;var ND=KI(36);nH(72,1,{},Vd);_.a=false;_.b=0;_.c=0;_.f=0;var PD=KI(72);var be,ce;nH(48,1,{},vf,wf);_.p=0;_.r=0;_.A=false;_.C=0;_.F=false;_.G=false;_.I=0;_.K=0;_.N=0;_.Q=false;_._=false;var $D=KI(48);nH(149,1,{},yf);_.eb=function zf(a,b){return xf(a,b)};_.ab=function Af(a){return this===a};var RD=KI(149);nH(90,1,{90:1},Bf);_.b=0;_.c=0;_.d=0;var QD=KI(90);nH(150,1,{},Df);_.eb=function Ef(a,b){return Cf(a,b)};_.ab=function Ff(a){return this===a};var TD=KI(150);nH(91,1,{91:1},Gf);_.a=0;_.b=0;_.c=0;var SD=KI(91);nH(67,1,{67:1,31:1},Lf);_.fb=function Mf(a){return Jf(this,a)};_.a=0;_.b=0;_.c=0;var UD=KI(67);nH(114,1,{114:1},Nf);var VD=KI(114);nH(158,1,{},cg);var YD=KI(158);nH(161,1,{},fg);_.eb=function gg(a,b){return eg(a,b)};_.ab=function hg(a){return this===a};var WD=KI(161);nH(159,1,{},sg);_.a=0;_.b=0;_.f=0;_.g=0;_.i=0;var XD=KI(159);nH(160,1,{},ug);_.eb=function vg(a,b){return tg(a,b)};_.ab=function wg(a){return this===a};var ZD=KI(160);nH(64,1,{64:1,4:1,31:1},Bg);_.fb=function Cg(a){return xg(this,a)};_.ab=function Dg(a){var b;if(a==null||!yD(a,64))return false;b=a;return $wnd.Math.abs(b.a-this.a)+$wnd.Math.abs(b.b-this.b)+$wnd.Math.abs(b.c-this.c)<1.0E-6};_.db=function Eg(){var a;a=new RK('0.00');return '['+PK(a,this.a)+', '+PK(a,this.b)+', '+PK(a,this.c)+']'};_.a=0;_.b=0;_.c=0;var _D=KI(64);nH(89,1,{},Lg,Mg);_.db=function Ng(){return 'DepictorTransformation Offset: '+this.a+','+this.b+' Scaling: '+this.c};_.a=0;_.b=0;_.c=0;var aE=KI(89);nH(50,1,{50:1},Og);_.a=0;_.b=0;_.c=0;_.d=0;var bE=KI(50);nH(60,1,{},Qg);_.a=0;_.b=0;_.c=false;_.d=0;_.f=false;_.g=0;_.i=false;_.j=0;var cE=KI(60);nH(57,1,{57:1,4:1});_.o=0;_.p=0;_.G=0;_.I=false;_.J=false;_.K=0;_.L=0;_.P=false;_.Q=0;_.R=0;_.S=0;var Rg,Sg,Tg,Ug,Vg=24;var hE=KI(57);nH(63,57,{63:1,57:1,4:1});_.gb=function xl(a){ak(this,a)};_.d=0;_.e=0;var dE=KI(63);nH(34,1,{},Hl);_.b=false;_.c=0;_.d=0;_.e=0;var eE=KI(34);nH(3,1,{3:1},Il);_.a=0;_.b=0;var fE=KI(3);var Jl;nH(128,1,{});_.a=0;_.d=0;var Ml,Nl,Ol;var gE=KI(128);nH(85,1,{},Wl);var iE=KI(85);nH(101,1,{},qm);_.c=false;_.e=false;var jE=KI(101);nH(129,1,{});var kE=KI(129);nH(73,1,{},Mm);_.f=0;var lE=KI(73);nH(58,1,{},mn,nn);_.b=0;_.j=0;_.k=0;_.n=false;_.s=0;_.t=0;_.F=false;_.G=0;var oE=KI(58);nH(103,1,{103:1},on);_.a=0;_.b=0;_.c=0;_.d=0;var mE=KI(103);nH(102,1,{},yn);var pn,qn;var nE=KI(102);nH(125,145,{},Qn);_.db=function Rn(){return On(this)};_.f=0;_.i=0;_.j=0;_.k=0;var En=0;var pE=KI(125);nH(131,1,{},Vn);_.a=0;_.d=0;_.i=0;var qE=KI(131);nH(130,1,{},co);var sE=KI(130);nH(109,1,{109:1},ho);_.a=0;_.b=false;_.c=0;_.d=0;_.e=false;_.g=0;var rE=KI(109);nH(59,1,{59:1,4:1},ko);_.hb=function lo(a){return jo(this,a)};var tE=KI(59);nH(25,63,{63:1,57:1,25:1,4:1},Co,Do,Eo);_.gb=function Fo(a){no(this,a)};_.a=false;var uE=KI(25);nH(135,59,{59:1,4:1},Ho);_.hb=function Io(a){var b;b=jo(this,a);if(b==-1)return -1;return eN(this.a,b).a};var vE=KI(135);var Qo=0,Ro=0,So=0,To=0,Uo=0,Vo=0,Wo=0,Xo=0,Yo=0,Zo=0;nH(88,1,{},Np);_.e=0;var zE=KI(88);nH(142,1,{},Pp);_.eb=function Qp(a,b){var c,d;return c=PJ(a.b),d=PJ(b.b),c<d?-1:c==d?0:1};_.ab=function Rp(a){return this===a};var wE=KI(142);nH(143,1,{},Tp);_.eb=function Up(a,b){var c;return Sp((c=a,b,c))};_.ab=function Vp(a){return this===a};var xE=KI(143);nH(144,1,{},Xp);_.eb=function Yp(a,b){var c;return Wp((c=a,b,c))};_.ab=function Zp(a){return this===a};var yE=KI(144);nH(49,1,{49:1},_p,aq);var AE=KI(49);nH(19,1,{19:1},bq,cq);_.a=0;_.b=0;var BE=KI(19);nH(118,1,{},eq);var CE=KI(118);nH(95,1,{95:1},fq);_.a=0;_.b=0;var DE=KI(95);nH(26,1,{26:1},uq,vq);_.c=0;_.i=0;var EE=KI(26);nH(175,1,{});var FE=KI(175);nH(134,175,{},Fq);_.d=0;var wq;var GE=KI(134);nH(100,1,{},Mq);var Gq,Hq,Iq;var HE=KI(100);nH(124,1,{},Tq);
	var Oq='sNy@LDeVjj@XTKU|TH\t5.89\nKA|P@QvRRJjjj@LFaLJnyC@\t5.86\nHiFH@H{IIEUJjj@FGPfES]rA@\t5.82\nJoB@@BUJssoPvxPTA@@@FFpaUpriv\x7FDsP\t5.61\nHeTH@@RV[TYZ`@@AaUMpssHP`\t5.19\nHmtH@@RVYWeVhH@@FCESCJ|rDx\t5.18\nj`qA@@IIULsj\x7FiuoUP@`@@@CAUF\\DkQkN}qFB@\t5.1\nsOx@@eJymUT@pLVOLJp\t4.95\nj`a`@@@YIEEDthdg^jjj`@@@XV`cAJLxKQkN}rD`\t4.89\nHk]@@@yJeWmZ{Sjj`@`@XSBEPrngqLx\t4.83\nHkmL`LfDD@cIIBhhd]MZ`X@@FEXwKoDdp\t4.7\nHefD@Hz\\ddUTuUUP@pFDpj[ayD`\t4.7\nHaF@@@Ri_ijjj@FAPaUsL[`\t4.63\nHeV@@@RUYTYj`@@AatIS\\L|PL@\t4.6\nHif@@@RiUzzjjh@XMBXUMqND\t4.55\nHcuHA@E`dYrRQVYRUUUT@LEaLJfzUt\t4.49\nHcLD@@QIeVuWVj`@@A`q\\LkoDq`\t4.49\nsGY@LDeVj`FABuxhP\t4.38\nHcLL@@RlbbTLRRzuT@@@LFkae]xfD\t4.37\nHcNL`LaA@HrRPjIKKju@`@@pkFzUxeZ\t4.36\nHid@p@kFkAkDfUfn`BH@FF@p|qLx\t4.35\nJoBD@@IS\\rjzv[uP@@@@@X[EMprng[|a@\t4.33\nHg|H@@RYfUWd}nh@@@@@X[ATwCJz]|`@\t4.33\nHeT@p@kNkIkDfY[XXBH`@XXGSsLhP\t4.33\nJoBD@@IKLrjzv[mP@@@@@XKS\\Lkiv\x7FDa@\t4.3\nHmtHpIBlzlVlRYeeXXBHX@FFAr|sJD\t4.28\nHie@@@yJeWkjjj`A`tIaTwDxP\t4.28\nHeU@@@yJeWZzjjj@FCPfES\\PY@\t4.18\nHidH@@RYm^Fjjh@X\\BES\\ODc@\t4.14\nHeV@@@RV[TYz`@@AaUMpsqDH\t4.14\nsNplJyDJHtQddeeUPCBqXwdX\t4.1\nHg|@`@bDfUueZX{`@h@@@FB`fETkiwrN@\t4.05\nJoB`@@]ddRRJTRU][uUU@A@@XKBXUKiv\x7FDXP\t4.04\nJoBD@DIU\\vjzv[uPTEDP@XGFTwCJz]orB@\t4.04\nHg|H@@RYfUWd}nhJBbH@XFFES\\LkiwrH@\t4.04\nHg}@@@yJeWe^nNzjhHB@AaLHUCNg_DqP\t4.04\nHk^@@MRjY]\\]TzhJBH@FDieMpri|Pm@\t4.04\nHcn@@@Re]eRi]jj@B@AaLIa\\LkoDB`\t4.04\nHmt@`@dDfUuZZ@Bj@A`rXUCODyP\t3.99\nHeT@@DjUghP`h`@X]BESCODs`\t3.99\nsNuhLxj@cIHUEi`FDwDF\t3.99\nHmuL@FFnWIIEEJQfjYi`A`cCqLH\t3.98\nj`q`@@@IJsLjoiuoUT@@@@@CBtDXYpTeZMYwnP@\t3.94\nHklHpEbPRPrPrRRqIYHYj`@j@A`UMp|SS@\t3.94\nHo~@@HrRQVKJIJwjjj@@@FApfES\\ng[|`P\t3.94\nHkn@@@rQQEJIKSjj`@@A`lIaTLki|PF@\t3.94\nHeVH@DAImeQej@@@FETwCODS@\t3.94\nsNx@IddbmUPCBqXwdX\t3.89\nHmtD@@QIeyVUZh@@@XTwCJ|SB@\t3.87\nHeW@@@zTjU_kjjjh@X]BXULODzP\t3.83\nHcLD@H[IIDcLdnuT`@@CAlKae^Hf`\t3.83\nHg}@`AlHaIe]YVfNx@Jjh`AaHIaUJz_Dzp\t3.82\nHg~H@CyJieU~SvzhF`b@AaNESCJ{_DPp\t3.82\nHmtL@@Pdf{eYUj`@@A`qMproDS@\t3.79\nsNy@BDivjj@XFZodP\t3.79\nsGY@LDeZj`FAbMy@\t3.79\nsGX@@eLuT@pHVOEJ\t3.79\nHeT@`@dDfUuih@J`@XTfEP|Si@\t3.78\nJoB@@BUJssoPvxPTA@@@FApfEWCJg[|cP\t3.76\nHmuD`LVD@HrRRqIXYV`@`@XUS\\J|c@\t3.75\nHg}L`FM]n@cIIDhTheSCMUUSSP@pzDpjG^PX\t3.74\nsGYhMEPDYIBei@XS\\PH\t3.7\nj`q@A@@RGiAIe]fuzLlz@Bh@H@@XRQ`eNJtZwHR@\t3.69\nj`q@@@DjUggUhJw``hBB@@A`ZBBTxJRcV]{bLZ@\t3.69\nHg~@@@rRIIEQIUqwUUP@P@LEaLJiWSobMp\t3.69\nHk^@@@Ri_YVftzjh@H@FDpaTLki|SF@\t3.69\nHg~@@MRjY]_GUNjB`b`@XRfTwCJgqBl\t3.69\nHkn@@@rRJGJIKSjj`@@A`lIaTLki|a`\t3.69\nHmvH@DAIn[VUZh@@@XLc\\LkqLh\t3.69\nHaFH@NAIYUnZjh@XEaTwLaN@\t3.69\nqCaHK@Hg`dsPFDGME`\t3.69\nKAz@@ArUJmUT@XMBXUMrN@\t3.68\nsJY@LDeZhAahcqC@\t3.68\nHklD`HXxcIIDcLeevjd@H@FGXWCJgrD@\t3.66\nHmtH`NBHRYWVih@Jh@FG@fETkrA@\t3.66\nHiFH@BAJ]ejjh@XMFTwCrD@\t3.66\nKA|P@XBRlmUT@XMBES]r@@\t3.66\nsGT@ATiVj`FAbqxaP\t3.66\nHk]D@DHIRYge\\ftvj`PH@FE\\Jz_Dp`\t3.62\nHid@p@kFkAkDfUfn`BH@FA@cCqLx\t3.62\nsNx@@eRmUPCBqXwdX\t3.62\nsGY@DDfuj`FBMxe`\t3.6\nsGX`JBdruT@pHbwDZ\t3.59\nHknH@JCIDdhhd]Nj`h@@FDqc\\Lki|a@\t3.56\nHmv@pBBlFlVlRYfyZXHJH@FF@J|pnd\t3.56\nHeUL@DpFEIeYzyjfZ@FBIgDzP\t3.56\nJoCB@E|NRRJJIIGKYoU@uAD@AaNESRnf\x7FDFp\t3.55\nHo~D@Hy|ddUTtRVNzjj@B@AalIaTwRnorC@\t3.55\nJoB`P@vDPdrnlktqw@AUUQ@AaHIaUJz_Dyp\t3.55\nHkmL`LZDh@cIHULhdmMZZjj@F@xwCJz_H@\t3.55\nHmvDPLa@BNbLddlTVeUhH@@FAXwCqIT\t3.55\nHknH@JCIDdhhd]Nj`h@@F@qc\\LkoDPp\t3.55\nHcLH@@rJJIPiKkUP@@@p{FxYW^He@\t3.55\nKAzY@XtIPAFRPjYZZ@LDqnHG@\t3.55\nKAxH@@bSKKUT@XXUMqLx\t3.55\nsJQdEbOBAD^u@LINYX`\t3.55\nJgC@PG@DISLroutgmt@P@D@@XBALLki|Sk@\t3.54\nHk^L`FWS`HrRQJEJZfFZjjfZ@FCPfEV|`P\t3.52\nJoc@PG@DISLrj}]Mz}@D@PP@A`HDprnwqC\\\t3.51\nHcNHpBtJpZqZqIf[eZXHJI@Aa`BoLKi@\t3.51\nHcMDPLvD@HzHrRRqQ[RjtDA@@pKFx^IN`\t3.48\nsOt@@tiWMjj`FEbqoDF\t3.48\nHaE@@@YJe~fjjh@XUBXU\\c`\t3.47\nHk]D`FuS`HrRQJEIJfFZjjfZ@FCPfEP|Sm@\t3.47\nHmMH`FeXBLddRJRinFjjih@XUFEW\\QI@\t3.47\nHeV@pBBlzlflRYgea``b@Aa`]OLpa@\t3.44\nHid@`@bDfUvf`@h@FE@fEWDxP\t3.44\nsNy@BDiujj@XFZobQ@\t3.43\nsGY@LDeVj`FAbMxa`\t3.43\nKAxD@@c\\dvlts@FAIa\\\t3.42\njdyA`@@HbdsrnlkbexKT@E@A@@CBVJLxHug^xaTP\t3.4\njdyA@@IIULsZny`ncU@C@D@@@pMQgAJtZsoAcrA@\t3.4\nj`aAb@HLyzHrRQJFYIHf]USAAD@@pE``iJt[wHV@\t3.4\nj`qa@@D@R[fYU_Sk^Zh@@@@@FFdLxJRmFl{wHX@\t3.4\nj`qa@@C\\RjYU_~QmVj`ZBJ`@FBlDhpTeZl{bD^@\t3.4\nj`qA@@@ISKMjoiuoUT@@@@@C@tDLxJRmFl{wHT@\t3.4\nj`q@@@DjUggUhJw``hBB@@AaZBLDipTeFl{wHZ@\t3.4\njhiA@@@ILrsZkf|xKUP@@@@@LCXYpTeZMYw`|``\t3.4\njhi@`@@HRYyWVUEKpVh@J@@@@XRqQgAFl{wDJB\t3.4\nHg]L`LfDD@cIIBhhd]ikTC@P@LFqnW[yD`\t3.4\nJoCD@A|eTrj\x7Fr^wU@tDT@AaNESCJ{_DQp\t3.4\nHg}@@@yJeWe^nNzjhHB@A`lHUCJz]|c@\t3.4\nHcLDpITJsjsZqIfVYXXBHZ@A`P\\n|SA@\t3.4\nHknL`LaA@HrRPjIKY]VhDB@A`vMtj_Hh\t3.4\nHmv@@@RYvUeZj@@@F@pfMproD@`\t3.4\nHeV@@@RiU~njjj`AatIaTp|Si@\t3.4\nHef@@@rRJJIuUU@C@XSBinGdR\t3.4\nj`q@`@HRRjyeU\x7FSk^j`A@@@@FFhTYpRmFl{wHD@\t3.4\nsFt@ATiTvjhA`Xl^HT\t3.4\nHiFD@J@dfWZjj`A`HPfTwCrB@\t3.38\nsNq`@fdvkSHCCKGdh\t3.37\nHcnD`FWXBLddRaRuLLuUUKP@pjDpjxgB\t3.37\nHevH`Ff@cIIDbmS\\MUUM@C@hpjxb\\\t3.37\nHeTD@@QImeQej@@@FETwCODS@\t3.37\nHklL@H[lddRaaRtzjX@@@XMaCJ{qNL\t3.35\nHcNHpBtJpZqZqIfUeZXHJI@A`PDJ|sNd\t3.33\nJoBfPCZio@QddbTJRVuLLuUULsP@X]BXUCoDzp\t3.33\nHk]D`FeS`HrRQHiIZfxZjjfZ@FCQaUt|QM@\t3.33\nHg}D`FeS`HrRQHiIZTwCUUTsT@LFcBkixbV\t3.33\nsOt@@tjWkjj`FEbqoHp\t3.32\nJgC@PG@DISLroutgmt@P@D@@XRALLkiwrN@\t3.31\nJoc@PG@DISLrj}]Mz}@D@PP@AaHDprnv\x7FHL\t3.31\nHeV@@@RYyTYj`@@A`LIeMpsr@@\t3.31\nHeVH@NAIYWVyjjj@FEXULOLaI@\t3.31\nHifH@NAIYW[fjj`A`VES\\rDD\t3.31\nHieH@FxDigwJiej@FFXU\\qND\t3.31\nQO`BNZ`XL|`\t3.31\nsOt@@tjWkjj`FAbMxlp\t3.31\nsJX@@dsU@LMEnHD\t3.3\nHaD@@DjUZzjj`A`pPaUwDq`\t3.28\nHeVD`Ia@BLdabRwBl@D@CBbingd@\t3.26\nHmtD`NTHaIe]Vf`@jP@XTBXU\\PY@\t3.24\nHeTH@@RYe\\YZB@@AaVEWCqFd\t3.24\nHefD@JADeUeZjj@FCXS\\L|b@\t3.24\nKA|H@TBIJjmUPA`VDw\\RJ@\t3.24\nHo|L`H[gbLddRafRvNzjXHB@AavDLz[|aP\t3.24\nHg\\L`H[kbLddRaaRvgUS@A@@p{BFUv~Qp\t3.24\nsGX`JDdjmT@pVOEJ\t3.23\nsJXhMD@bOV`FDwHP\t3.23\njhi``@G\\DeTsJn~iqoUPMPTT@@pu`eFRUhuoAyAp\t3.22\nHkmDPLvD@HzHrRRqQ[JUV``J@AaVMp{qIL\t3.22\nHk^DBIAIeIgeYQe]Zjjjh@XBUMpki|SI@\t3.22\nHcnDBAAAeIVUexYUjjjj@F@xUMtkoD`P\t3.22\nHevHBFAiRYVVfxZjjj@F@pfEWCODA`\t3.22\nHcML@FFnwIIEEDZJuSMS@CCLX^HT`\t3.22\nHcLD@@QIeVuWVjjj`AaqUprn|SF@\t3.22\nHiV@B@BTjYnnXZjjh@X]BXUMwD@P\t3.22\nHmuL@DpFEIeY~nZifh@XXfSqNT\t3.22\nHeTD@@QImeQejjj@FCES\\L|QL@\t3.22\nHmtD@@QIeyVUZjjh@XMS\\LkqLH\t3.22\nHaE@@@yJe~fjjh@XUBES\\SN@\t3.22\nsJX@@eKU@LLH^IX\t3.22\nKA|P@DBSNuUT@X\\DHUMwHp\t3.2\nsNy@LDeVjj@XLKFod`\t3.2\nHeTD@@qI[eQej@@@FCYS\\L|RD@\t3.19\nHid@@DjU^nBBH@FEPaTwLsa@\t3.19\nHidH`NBHRYWZZ@B`@XTBXU\\`P\t3.18\nsGQ`@jdjmR@pfxhP\t3.18\nHid@`@dDfUvf`@h@FAIaUqND\t3.18\nHmuH@DHDf{eYUj`@@A`vMproDP`\t3.17\nHeVD@NADfVuFVh@@@XESCOHH\t3.17\nHaE@@@YJe~fjjh@XEBEWDs`\t3.14\nJoBb@BDByEEEMDdbSV{UTC@P@FGYpr]oqBt\t3.13\nHg}D@DHERYfywIcmjjA@`@XM`siwqBx\t3.13\nHcOLAHePPheNR[e]VyjZfd@XYWCqEt\t3.13\nHie@@@GIHddZzjjh@XMBXU]qFD\t3.13\nsGXhMD@cIHXmPCBGbE@\t3.13\nsOx@@eRimUT@pLQoEf\t3.13\nHevH`Ld@aJY[RZnjjid@XXDIsBxP\t3.13\nsOx@@drm\\@@@prkyab\t3.1\nHiVH`LD@cIEDhRZnjjfPAa`PgLJn@\t3.09\nHg}L`LGSl@cIEDhddXWTuUUTmH@phHPkx`r\t3.08\nHaF@@@RiUkjjj@FEPfEWD[`\t3.08\nHk^L`LWS@HRfVuxnijjjei@FAABGqBD\t3.07\nsNq`@fdskUHCBGbu@\t3.07\nHk]D`LES@HrQQJIKDfkjjjfY@FEABDOLz]@\t3.07\nHg}D`LES@HrQQJIKFDu]UUTsR@LJBDH^Ytv\t3.07\nHmMH`LEPBDieeRZnjjjY@FAABEsNFP\t3.07\nsOx@@drm\\@@@pqky`l\t3.07\nsJX@@eKU@LMEnHD\t3.07\nJoBaPFBivxABTrsjvWTuUUSLr@FCABDM|Rm@\t3.04\nHk]L`LE]L@aJYYwbzfjjjVd@XTDHQ|Ra@\t3.04\nHk]D`LF]@HRfV_xfkjjjYi@FEABDOLkc@\t3.04\nHcmD`LF]@HRfV_rZnjjifPAaPPaCsJyP\t3.04\nHeuH`LFPBDiegIjzjjfPA`PPa\\rnD\t3.04\nHaF@@@RiUkjjj@FCPfEW\\a`\t3.04\nsNt@A\\dbJjj@XFKGbk@\t3.04\nj`qa@@I@RYeU{TRg^jBBJjH@FE`XIQgAJtZso\\a@\t3.03\njdyP@@G^rRQRiQHjIBdFMT@ETuD@CCRLDhqVc^CD\t3.03\nj`q`@@@ITrjwoHsoUAP@@@@C@rLDhJRmFl{wH\\@\t3.03\nj`q@`@H\\RjyY]_Sk^j`ZBbH@FAhDhpTeZMYwnPp\t3.03\nj`qA@@HIU\\rj\x7FiuoUPUAQD@CBtLDhs`eZMYwnPd\t3.03\nj`aP`D@VdXDyIHiTimMAJj`BIj@@XRQ`eFBT{p\t3.03\nHcL@HHbDbLbMbLddjbRtkUP@P@LAaL[ag^PP\t3.03\nHg}L`FM]n@cIIDhTheSCMUUSSP@pZDpjGbZX\t3.03\nHg\\HpEbPRPrPrRRqIYICMT@ET@CBj[aOb[X\t3.03\nJoBb@CCWYIHhiSDdpv}TsP@P@FEKiv\x7FLpa@\t3.03\nHg~L`FWS`HrRQJEJ[TpsUUTsT@LJaLJnHM`\t3.03\nJoCD@B`eLjsj|ioUUAAD@AalXS\\Lz]orD@\t3.03\nHkoDPFF]N`aPcIIEJeeNFjfjU@FEIaUOHT\t3.03\nHk^L`FWS`HrRQJEJZfFZjjfZ@FEPfEWDGP\t3.03\nHk^@@@rQQIFIJftpHH@@@F@ieLLkoDHp\t3.03\nHo~H@EAIYeV^dvhHJJ@A`iTwCNg[|RD@\t3.03\nHknDB@dpgIIEJeMaVj@Hd@FGIaTpkrM@\t3.03\nHg}D@DHERYfywIcmjjA@`@XTLz]|sBx\t3.03\nHc^`@@pjYJYenkae]@bJhh@XDLkoHx\t3.03\nHmvHB@dIrRQRiPUj`B@@X\\fESBoHd\t3.03\nHae@PDp@bOAIfXj[fjj`AaPES]rH@\t3.03\nHcLH`ABPRYW[ZZ@BZ`@XLfETkrM@\t3.03\nHmtH`ABHRYWUih@Jh@FC@fET|Se@\t3.03\nHeV@B@B\\ddTjPsU@@@CCdpj[iy@`\t3.03\nHkl@@LddTjTRFZh@J`@X\\fESKoHL\t3.03\nHcN`@@pjYJYenk`Hbj@A`Prn|c`\t3.03\nHcL@@LddTjTPsU@AP@LNSBiewdR\t3.03\nHeTH@@Rf{TYj`@@A`qTwCODa@\t3.03\nHif@@@RiUzzjjh@X]BXUMwHD\t3.03\nsJPXHlPDQ}T@phbq@\t3.03\nHcnL`Le]@HrQQJEJEuMUURt`C@`aMxaT\t3.02\nHifD@FADfyWaZ@@@FAEWCrD@\t3.02\nHeT@@DjU_k``b`@X]BES]ODpP\t3.01\nsOx@@eR}]UT@plVMyF\t3.01\nsGP`ITjnjPFBqxh`\t3.01\nHie@@@{IHddZzjjh@XMBXUCrF@\t3\nHif@@@RYfVF@b@@XTUMp|`@\t3\nHmv@pIbPRPrPrRRqIPUj`B@@XESBoHd\t2.95\nHg^B@FACmInY]XYZZjid@XXw[sDjp\t2.92\nHknL@FACR[fWTYZZjiPAac]oLRe@\t2.92\nHmvH@JAIUYVUZjjh@X\\fDwCODaP\t2.92\nHmvD@FALbfbbQFVfji@FFMr|qJD\t2.92\nHeVH@JCHeEDcpluUH@prfgfPW@\t2.92\nHcND@JCTefWWaYjje@FFTr|rBd\t2.92\nHet@@DjYUX^dHbH`A`rDwCODr`\t2.92\nHeVH@IAJYW~F``H@FEIaMwDjP\t2.92\nHaF@@@RfYkjYj@FF@S\\sJx\t2.92\nsJPdE`DSpRYZ`FBAxi`\t2.92\nsOt`DPtfWMZi`GfVH\t2.92\nsJXhMD@bOV`FDOI`\t2.92\nHmvH@DAIVYdUZ@b@@XLc\\LkrH@\t2.91\nsNx@AddQeUPCBqXwdX\t2.91\nHaF@@@RfUi`HH@FAIeMqBx\t2.9\nsGX@@eLuT@phbqyJ\t2.89\nsNt@@|dbJjj@XVKF|c@\t2.88\nHaF@`N@HRYWih@H@FEIaUwH@\t2.88\nHid@@DjU^nBBH@FCPaTw\\SA@\t2.88\nqCh@BIWLAaEqS@\t2.84\nsGX@HeTuT@pLVOIP\t2.84\nHie@@@{IHddZzjjh@XUBXU\\Qa@\t2.83\nJoCbPCRzg@QddbQRRtuMpuUULuP@XMFEWSsDmp\t2.82\nHcLL`NWPbDfUuZf`@jX@FE@fEWDGP\t2.82\nHcNH@DAIgfYgVhBH@A`r\\LkoHp\t2.82\nKAxX@QSYIIiZih@pSBxd\\\t2.82\nsNq`IVeUuTpCAX|TX\t2.82\nsGQ@@drmT@pROEj\t2.82\nsOx@@eR}]UT@plQkyL\t2.82\nHidH`ABHRYWZZ@B`@XTBXU\\Sa@\t2.81\nHeTH`ABHRYWVf`@j@AaPIaUqNd\t2.81\nHif@@@Rge^Eh@@@XTUMp|RD@\t2.81\nsGX`BDdwMR@pbxcP\t2.81\nqCx@AYIf`OLE`\t2.81\nHaDH`NBHRYWih@H@FE@fEWHx\t2.81\nj`qAB@H^bDjn[U_UXsjh@@@`@AaheF\\EIVcN}rD@\t2.8\nHk]D`LFD@HrRPjJIEatujB`H@FEYWBoLgS@\t2.8\nHknHpEdJsjsZsHhheEEVF@bFh@FEArz_DpP\t2.8\nJoB@P@QBSJ{MkSV|@EP@@@FF`fETkiv\x7FHx\t2.8\nHcld@dsmBPzIZYyIfVuXUvjjYj@FBToDsP\t2.8\nHcmD`LFD@HrRPjIKLJzmPPD@C@lxYyeKh\t2.8\nHg^H`MDHaIe]UZf`@jj`@XRBXURiwrN@\t2.8\nHkmL@FFnOIIEEDlqvjYjf@FAXSCqIT\t2.8\nHg^H@AAJY[Ue[jhHJ@@XJaTwRng_H`\t2.8\nHeVD`La@BLdaTRPrm@@@CBlinGbAH\t2.8\nHcNH@DAInYWWVjB@@AarTwRn|SA@\t2.8\nHklH@@RYeg_SZjB@@A`NTwBngqDd\t2.8\nHmv@@@Rf~UeZj@@@FDaFDwCJ|a@\t2.8\nHeUH@DpDf^UFVjjh@X\\aTwCOHp\t2.8\nHeT@`@bDfUuih@J`@XLBXUCqNd\t2.8\nHeVH@DAImeQej@@@FCIS\\L|c@\t2.8\nHifD@AADfyWaZjj@FAES]sDpP\t2.8\nHaF@`FBHRYVkh@`@FF@e\\sFx\t2.8\nHaF@@@Rie[jjj@FEPfMwDJ`\t2.8\nsGYiKE`D[lddju@LH^R`\t2.8\nsNx@AdbbMUPCBqXwbC@\t2.8\nsJP`@TfVhAaEqX`\t2.79\nsFx@@eJfuU@LCEcqB`\t2.77\nHeWH`LJQ@HrQQEJYULtt@LLABxcR\t2.76\nHieH`LHPBLdTQRrjYi`Aa`HWD[`\t2.76\nsOy@FDiguie`FFqoDf\t2.76\nQMIDBKpRVAaGFP\t2.76\nHaE@@@yJeVnjjh@XUBXU\\Qn@\t2.75\nsGP`@dfUj`FBuyB\t2.74\nHo~LpBNwBlflvlRYfVVVVBBhfP@XTASm|PU@\t2.73\nHknDpBtpkAkEkDfYnVZXHJI`@XD@j_DJP\t2.73\nHeVH@FAIfUqfhH@@FCAAUp|sFd\t2.73\nHidH@@RUe^Ejjh@XMaTwCqHP\t2.73\nsKT@Adi\\Vj@XYX|d@\t2.73\nsKQ@@eKcRpCAX|TP\t2.72\nsFx@@eJfuU@LKEc^P@\t2.72\nHmth`LKed@cIEDUMLjfYf`Aa`HWDyP\t2.71\nHeWH`LKi@HrQQESYULsL@LLABxgB\t2.71\nHaG@`LK`BLdTQVUSLp@ppDKbMp\t2.71\nHaEH@FxDig|jfV`AafEWDS`\t2.71\nHmtH`ABPRYW[ih@Ih@FEIaUOHT\t2.71\nHif@@@rRIIFnjjj@FCPfEW\\Qa@\t2.71\nHeeH@DhDeUeZjj@FGIaMpsrH@\t2.71\nKAzP@IPIJjmUPAaRXS]qHh\t2.71\nsOtHLPDYHhckSM@LLD^Q`\t2.71\nsFtHLPDISNmLpCCAGdh\t2.71\nsKX@@dmcUPC@qX|`@\t2.71\nsJXhMD@cIHUhAaMq@`\t2.7\nHaFH@JAIYUnX@@@XEaMwH`\t2.69\nJoc@@@YHhhheDbNsYoP@PPD@@XJS\\Lkiv\x7FH@\t2.67\nHg^@pCbPRPrPrRRqIPjCMT@ET@CCjXYW[yA`\t2.67\nHo}D@HggrRQUSQIX{jjh@H@FBpfES\\iorM@\t2.67\nHkl@pHdDdLdLddlRTJFZh@J`@XMSCJgrM@\t2.67\nHmtH@@rQQJEJUjh@@@X\\aMproDb`\t2.67\nHmtH@@RY^UeVj@@@FGHS\\LkrL@\t2.67\nHedL@JZ\\ddTZUTuH@pILKnPH\t2.67\nHiDL@Hilddtjjfh@XYa]qHD\t2.67\nHaF@@@Ri_ijjf@FEPfEWHx\t2.67\nKA|@@Qddbljj`CAhSBinQp\t2.67\nHeTH@@RYe\\YjB@@AapXU\\L|RF@\t2.67\nHeULAHdDJISdfyW[fijT@XYWCrI@\t2.64\nHg|@@DjYU_~V]`@@B`@FDiaTwCN|P{@\t2.64\nsJX@@eMU@LBIcrH\t2.62\nJob@@BULj~jprmnDQE@@@@XJfDwCiv\x7FHh\t2.61\nHcMH@LDDeYWWajjjj@FDaBES]J|cP\t2.61\nHeU@@@yJeWZzjjj@FGPfESSrA@\t2.61\nHeT@@DjU^k``b`@X]BES\\ODrP\t2.61\nsOp@DjWkjj`FEbM_DL\t2.61\nHk\\d@dsmBPzIZY{HhheLdVE]jjfZh@XIR|SC@\t2.6\nHeV@pBBlzlflRYgea``b@A`PYt|Pa@\t2.6\nHeT@p@kNkIkDfY[XXBH`@XDF]ODhP\t2.6\nHmtD@@EJYUgehHJ@@X\\fTwBoDJP\t2.6\nsGX@@eMuT@pHfODj\t2.6\nHkLN@HiiWSrRSQHqRjZfX@XMFDrf\t2.59\nHmwLAHePPheNR[e][fijY@FFUp|aP\t2.58\nHeVH@LAI[eQej@@@FCIS\\L|RL@\t2.57\nsOtHBpDIRocRs@LDIsJl\t2.55\nJoB@H@RCrBSJzroSG\\@E@A@@F@iaUJz_Hx\t2.55\nsNq`@jdvsUPCCKWbK@\t2.55\nHedJ@@RaeImmfji`AaRYSSrB@\t2.54\nsGX@@eRuT@ptVxcP\t2.54\njhi@`@JLRjYeu]TzpZijjjj`@XFQ`gARUhugAyCp\t2.53\njhiA@@HIU\\rjkz}XMT@PA@@@LKPIQgARUhuoAyAp\t2.53\nJoBR@RXI`h]DmJ}dTTTTvQSSiuUTsUP@XEW[_H\\\t2.53\nj`qa@@J@Re]YyTeG^jjj`@`@FAhHpQgIZMYwnPD\t2.53\nj`q@`@@^RYWUe^cKN`@j@B@@FB`HpRbmFm{bNB@\t2.53\nj`qA@@HIU\\rj\x7FiuoUPA@@@@C@tBTYpRmFl{wHR@\t2.53\njhi@`@@HR[YfUWMypVf`@@@@@XJxJRmFl{p^HQ`\t2.53\njdya@@J@RVVyeU{A}Eiz@@@@@A`hTeZMYw`qyB@\t2.53\nj`q@`@@HR[fYU_Sk^Zh@@@@@FFlLxJRmFl{wHH@\t2.53\nj`qA@@@IJsLjoiuoLt@@@@@CASNBdkQkN}qDD@\t2.53\njhqa@@C@RYegV^tyjhHJJ@@XFqQgARUjsoAyA@\t2.53\nHg|d@dpSAPzIZU{Hhhhilbtz]UULuP@prnwdV\t2.53\nHg}DPLFD@HnHrRPjJIGLNfmPTAP@LFrnE[xdz\t2.53\nJoCd@DC_YIHhhdd\\mf}USUUT@FBxULLkiorK@\t2.53\nJoB`@@[ddTRRVJWKNuUUUUP@XZfES\\Lj]|RG@\t2.53\nJoC@A@ANRRIGIQIMuoUUL@D@AalIaTrz]orA@\t2.53\nj`q`@@@IJsLjoiuo\\t@@@@@CASNBdkQkN}rB@\t2.53\nHk]DPLFD@HNHrRPjIKYaWUjB@h@FEYpr_DiP\t2.53\nJoBB@EMddbbbQRrv[uSUUUP@XZfEprng[|a`\t2.53\nJoCFAF``{JSJroJng[UUUUT@FBeS\\Lj]oqLt\t2.53\nHk\\d@dpSAPzIZUyIfYoVgSjjifh@XYW[rC@\t2.53\nHg}@@@wIHhddlUrsmUUUUP@pULJfxYT~IE`\t2.53\nHo~@B@B\\ddTQJbRmzjj`@@A`\\IaTwKiv\x7FHD\t2.53\nHg|`@@pmrQQIPiYTrzAAUUD@LARfxYT~QX\t2.53\nHo|L@@RlbbTVbbQmvjhJ@@AaITLkiv\x7FDs`\t2.53\nHg^L`LaC@HrRPzIKJRju@AT@C@\\InF]OdV\t2.53\nHk\\`@@pmrQQIPiZfWPHJjb@FGIS\\LkrC@\t2.53\nHk]@@@wIHhddl^V]jjjjh@XRfES\\LkqHL\t2.53\nHg~H@DCHhhdeBepg[UU@A@@pdjxYWSodX\t2.53\nHkn@B@B\\dbarbRtzjh@@@XKBXUCJz_DA`\t2.53\nJoBD@@IS\\rjzv[uP@@@@@XKEMprng_DQp\t2.53\nHknL`LaC@HrRPzIKJUVh@J@AavDwCI|cP\t2.53\nHcl`@@pmrQQIPiTrzAAUQ@CCdinFUyF`\t2.53\nHg|H@JRjVWWd}njZjjh@XZfDwCJz]|b@\t2.53\nHg|H@@RYfUWd}nh@@@@@XKATwCJz_DBp\t2.53\nHcm@@@uJfUWyYvjjjj@FDiaTwCJ|RM@\t2.53\nHo~D@IADfUYUgWZjBB`@FDdwBng[|c@\t2.53\nHkmL@FFnOIIEEDRaVjYjV@FEXpsoHH\t2.53\nHeTL`HS@aLddlRPru@@@CC`SJ[ayD`\t2.53\nHcl@@DjYU_egZjjjh@XZBXUMprn|b@\t2.53\nHmvD`La@BLddNbReUj@@@FCXS\\L|aP\t2.53\nHcML@FFnwIIEEDZJuSMS@CCFF^Ia@\t2.53\nHcML@DpFEIeY}kfjYi`AaRYJ{rN@\t2.53\nHcLH@@RVYUYujBB@@X\\ULLkoLaN@\t2.53\nHmvD@EADfVUyUjjj`A`qTwCODqP\t2.53\nHmuL@DpFEIeY~nZifh@XXfKqNd\t2.53\nHeVH@BAJ]eQfjjj@FGQeMpsrD@\t2.53\nHeTH@@RYe\\YjB@@AapPUMp|SI@\t2.53\nHeV@@@RiUvnjjj`AatIaTw\\PY@\t2.53\nHifH@LAIVUxZjj`AatHUMp|`@\t2.53\nHie@@@qJYYhP`h@A`REP|Qn@\t2.53\nHieD@DHNRY[Rijih@XIc\\qBD\t2.53\nHaE@@@qJUwBZZh@XEBEWD[`\t2.53\nHaED@DHNRY[Jfjf@FDYsDI`\t2.53\nKAxX@@gILkmUHA`fEqJX\t2.53\nsOx@@eJm]UT@p\\VM_H@\t2.53\nsJX@@eSU@LDmqP`\t2.53\nsFq@@eLzts@LEkqH`\t2.52\nsJY@DDfvhAaEqX`\t2.52\nqCqPZHAD]XCB[d@\t2.52\nHidH@@RUe^Eh@@@XTUMp|RD@\t2.52\nHeTHPABHfHRYeUn`HJ@AaPXWSqJD\t2.51\nsOx@@eR}]UT@pLQoEf\t2.51\nHknHpBtJpZqZqIfUeffBBbX@FE@Pj_DrP\t2.5\nHifH@DAIVUxVjj`AarXUMp|b@\t2.49\nHifLAHABbTyInU[fijPA`e]rA@\t2.49\nHaFLAHABbTyInUnZfd@XIW\\a`\t2.49\nsFt@AdigUjhAaekrD\t2.46\nqCp@AIZ`LINXK@\t2.46\nHmv@pBBlFlVlRYfyZXHJH@FA@LkqBx\t2.45\nHif@`FBHRYVzz@H`@XDBTwLsa@\t2.45\nsOt@AdigkB@@FFU_Eb\t2.45\nHmtHPABHfHRYeW[hBBh@FEAa]ODiP\t2.45\nJoBbHFSB@DBDYIHUEDdekgZuAHTB@F@xwBng_H\\\t2.44\nHcN@@@rRHiQIKmUP@@@pfDpnFUwdT\t2.44\nsGYDJQDJHR[jf@XXQ\\e@\t2.44\nsGQLKHaQFbLddmU@LCEkrD\t2.44\nsJY@BDfZhAaaEqX`\t2.44\nsJP`@dfvhA`l^Q@\t2.43\nHg^HpBLJrZsZqIfYYye``jI`@XTASm|Se@\t2.41\nqCp@AIZ`LDmqB@\t2.41\nHaF@@@RVU[j@@@FEQaTwDC`\t2.41\nHaD@`@bDfUzZ@B@AaPIaUrN@\t2.41\nHedJ@HiagIIMEYUML@LBcFgdD\t2.39\nHid@@DjU^nBBH@FCPaTp|SN@\t2.39\nJoB`HBvDQLPdsJormuo@PUTi@AaHXWCNf\x7FHh\t2.37\nHo~D@M@\\dTRRbNTyZBBbj@A`ZYS\\Lkiv\x7FHH\t2.37\nHcN@@@rQQHqIKmUP@@@pTHSBxYW^QP\t2.37\nHo~B@D@UMInUeWzV`BJj@AaQUmorD@\t2.37\nHknL@D@UR[eY_iZ@Hj@A`QUi|QI@\t2.37\nHknL@D@]R[e[_iZ@Hj@A`QTi|QN@\t2.37\nHeTH@@RYe\\Yjjj`A`HIaUpsqHX\t2.37\nHmvD@D@TfyV~eh@b@AaaToLSi@\t2.37\nHmvD@DBTfyW^Eh@J@AaaToLQn@\t2.37\nHeU@@@qJYYzDHJH@FEHULODzP\t2.37\nHie@@@qJYWk``b@AaRES]qLD\t2.37\nHaE@@@qJYVnBB@@XDaUwDq`\t2.37\nsNx@@eLmUPCBbKGbk@\t2.37\nsNt`DPtfuZi@XYX|e@\t2.37\nsNt`DQTfuZZ@XQ|Rp\t2.37\nsKT@@Ti\\YZ@XR\\rq@\t2.37\nQMPBcdGcH\t2.37\nHmtD@@QIme\\YZ`@`@XTeMp|SE@\t2.36\nHiFD@FADf]Yjj`A`QUp|c@\t2.36\nKA|H@TBIJkMUPA`VDw\\b@\t2.36\nsGU@DPdvmT@prqyJ\t2.36\nsJY@LDeVdAaEqP`\t2.36\nHeTD@@YIfUqfhH@@FC@U\\L|rLX\t2.36\nHid@@DjU^nBBH@FCPfEP|Qn@\t2.35\nsJT@@TkVhA`enJD\t2.34\nHcML@FFnwIIEEDZJuSMS@C@lXYyA@\t2.33\nHmuL@DpFEIeY~nZifh@XDfRoHx\t2.33\nHaG@@@rdigjXHB@A`fMqDx\t2.33\nsO|@AjeL}XP@@pV_Db\t2.33\nJoCbPCRzg@QddbQRRtuMpuUULuP@X]FEWR\x7FDRp\t2.32\nsNq`@fdskUHCAX|e@\t2.32\nsJX@@eSU@LMEnP`\t2.32\nHmuH@DHDf{eYUj`@@AavDwCJ|a@\t2.3\nsGR@@mTf]jPFFBoEb\t2.3\nsGX@@eLuT@pHbwDZ\t2.3\nqCr@PIKLAy`l\t2.3\nsJX@@eMU@LLL^JH\t2.3\nHg\\B@@z]RVUeWXV@Hjh@FEXRg_H`\t2.29\nHcLL@@yTee[]aX@bh@FAXT{qHX\t2.29\nHeTD@@EIYWVy`@h@FFXT|rJX\t2.29\nsJ\\@@bdjt`LLD^JX\t2.29\nHg^DpBtpkAkEkDfYnVvfBBbZ@A`PBi|Pk@\t2.28\nHklDpEtJpZpzqIfYfVf@bah@FA@NgqNd\t2.28\nsGX@@eLuT@pLVoDB\t2.28\nHo~DpBNpkIkMkDfYeeYe``jIX@FE@Tz\x7FDyP\t2.28\nHeTD@@EJYU^f```@FCIc\\L|Pj@\t2.28\nsKR@AEdi\\Vf@^KD\t2.28\nsJU@DPdvu@LDmrD\t2.28\nHid@@DjUfaBB`@FCPfEP|Qn@\t2.28\nsJY@DDfvhAyeb\t2.28\nsKR@AEdi\\Vf@XS\\a@\t2.27\nqCp@AJZ`LEEqC@\t2.27\nHidL@@pTifvnjjj@FEPaTwLsa@\t2.26\nHaDD@@YJYZnjjh@XEFEWLQn@\t2.26\nsOx@@drm\\@@@pJM_DL\t2.25\nHaDD@@qJYnnjjh@XEBDwLrn@\t2.23\nsGX@AddQjhA`Xl^R`\t2.23\nHidH@@Rfuvz`@`@XXfUsBXP\t2.22\nHkmL`LNDD@cIIBhdmeuZ`PH@FCXwRi|b`\t2.22\nHeVH`IDHaIe]jZ@BX@FE@fEWHd\t2.22\nHmt@@DjU^ZxHHj@A`LIaTpsrE@\t2.22\nHeT@@DjU^k``b`@XCBXULL|c`\t2.22\nHieH@DDDfyWaZ@@@FAES]rD@\t2.22\nsOx@@eRimUT@plVMyF\t2.22\nHiDJ@@PnEInvZjX@XDaTOHp\t2.22\nHcNL`IaM@HrRFIKI\\Jp@T`@phj[ix`J\t2.22\nsNyA@qNRRJuU@LGEcV\t2.22\nsGP@DjVj`FAbMxa`\t2.22\nHcLL@@zTeeY]aX@bh@FAXR{qHD\t2.22\nHeTD@@yIYVvE`BH@FFXT|rFD\t2.22\nHeV@@@Rig\\YjB@@A`rEWCODq`\t2.22\nHeT@P@bIbDfYU[hBB`@XTFEt|Ra@\t2.21\nHeWH@DJPRY[TYZ`@@AaRTwCrB@\t2.21\nHmtD@@QIge\\YZ`@`@XUeMp|aP\t2.21\nsO|@AbeLmXD@@prkyB\t2.21\nsGX`LBdjlt@pexh`\t2.21\nqCr@PISRAaErX\t2.21\nqCqRZHAFzNlAxa`\t2.21\nsJY`hEiNyIej@^P`\t2.21\nHaEH@DxDeeVyjj`A`VES\\RN@\t2.21\nsGQ@HeUuT@ptuxdP\t2.21\nj`qAB@A@bDfUvVuhqwh@Jh@@@AahBLDisQkN}rB`\t2.19\njhiP`@DD@iIf[eW\\cK^Zj`XHh@AaK`iZMYw`|Q``\t2.19\nj`qP`@FBisIIEED[DdpSoUSMP@P@CAfMFl{wLDEH\t2.19\nj`aa`@H\\m{IIEUMDeBYuUU@DP@C@tDXIQgIJM[p\t2.19\nj`qA@@@ISKMjoiuoUT@@@@@CCTDLxJRmFl{bJ^@\t2.19\nj`aA@@OYIHhbeHhyVj``jJ@@XJQ`eFRUhwnP\\\t2.19\nHo\x7FD`Hu~fpcIIEULeDk^jjjZX@XSBXUMpwrC@\t2.19\nHg]LPLfDD@bxcIIBhhd]ikTC@P@LFqnW[yD`\t2.19\nHg_L`L[hR`BLdaTrbRQvmMUUP@pGFFUt{y@@\t2.19\nJoBP@@XVyHhdhTleSKhDEUUD@FDiS\\Lj]|ap\t2.19\nHg~@pNbPRPrPrRRqQISSiwU@@@@@LBZ]obJX\t2.19\nHg~@pJbPRPrPrRRqISICIwU@@@@@LB[SobBh\t2.19\nJoBDP@aDILkmrmM[p@U@@@@XZBXU\\ng[|`P\t2.19\nHk^DB@TpgIIEECTfGijjjih@XSBXUMpsrM@\t2.19\nJoB`PCFDPdrmvnuvg@DUUQ@A`hIe\\Lkm|ap\t2.19\nHg~DB@TpgIIEECThp}MUUUMP@pfDpj[agdV\t2.19\nHo\x7F@@JE|ddTnRbRmzjj`@@AalIaTpkiwrN@\t2.19\nJoBb@BDByEEEMDdbSV{UTC@P@FC\\Lg[|sBt\t2.19\nJoC@@@YIDdThdlUG]US@AP@FFpfESRnf\x7FHx\t2.19\nHknLPLaA@HNHrRPjIKY]VhDB@A`vMtj_Hh\t2.19\nHo|D`JyxcIIEFeDecnjZ`@`@XBfEJz[|a`\t2.19\nHg}H@HP\\ddRJTrUL]uUR@D@CBXpje]N~P`\t2.19\nHg|LA@kTfnRfYgW[iN`jBbP@XTPsi|Q[@\t2.19\nHg}HADH@zIRYeYwIcnjfB@`@X]prng_Hp\t2.19\nHg~@`IBHRYWVUicn@B`@@@XRBXUKiwrN@\t2.19\nHo|H@GrRQQEJQN[j``jH@FBiaTpkiorI@\t2.19\nHcNL`EaLBDrRRqIYCKT@E@@pDDrfxUyF`\t2.19\nJoCD@A|eTrj\x7Fr^wU@tDT@A`nESCJ{[|a@\t2.19\nHk]@`FLHaIe[mZ{S`BJjH@XRBYWCJ{rC@\t2.19\nHg}@`FLHaIe[m^ntx@bjh`AaHIe\\LkoHl\t2.19\nHo}L@EN]_IIEYEEBSnjjfZX@XMBXRgrA@\t2.19\nHk~@@JrRQQIFHUgYNjjjjh@XGBXUMprnf\t2.19\nHo}L@C^moIIEFeEEC^jZjYh@XLfDwCqC\\\t2.19\nHk]@@@YJUueRkSjj`@`@XKBXUCJz_DA`\t2.19\nHmNHB@TIrRQQPuazZjjj`AaLIaTwCOHT\t2.19\nHg]L@ItUoIIEXhiciuUSML@LFaLJ]yE@\t2.19\nHg}@@@UJfUW\x7FegZ`hHj@A`jXUMpsi|bp\t2.19\nHkm@@@kIHbdhdmNjj@@@FBpfDprngrJ@\t2.19\nHmvL`EaLBDrRRqIXYZ`@`@X\\BYS\\OHT\t2.19\nHko@@@q\\dTRbqThP`hj`@XBaTpsi|c`\t2.19\nHk]@@@UJfUW~V]jB`b`@XRfES\\L{rC@\t2.19\nHcND@M@\\dTRRbOKPPTP@LASJ[ae^HV`\t2.19\nHk^@@@Ri_YVftzjh@H@FBpfEPrngrF@\t2.19\nHcm@@@UJfUWyYvhJBH@FDiaTwCN|aP\t2.19\nHigDPLXXP@b`cIHUDnEZfd@XIe\\PN@\t2.19\nHev@B@B\\ddTTKCtuUUT@LAaLJfx^QH\t2.19\nHg\\H@@RYegUvvj```@FDyS\\Jz]|QI@\t2.19\nHknH@FAIfUWaVhHHh@FFaFES\\Lz_HT\t2.19\nHg\\H@NrRQRqZIRmTDAT@CCdpf{SyE`\t2.19\nHcLL@@RlbbTLRRzuUUT@LNinFUwbXP\t2.19\nHkmL@FFnOIIEEDlqvjYjf@FAXpsqBT\t2.19\nHcM@@@gIEDdTiS@PUT@C@TrfxUwdD\t2.19\nHcNH@McIIEXdmJuT@D@CCdpfxYyF`\t2.19\nHcND@E@TfUvzf`@jh@FD`fEWCN|aP\t2.19\nHklH@NrRQRqZJUj``J@AarXS]i|aP\t2.19\nHcO@@@rTie_ZnBBJh@F@hUMpkoHp\t2.19\nHcOH@DKPRYYUYujAB@@XLeMpsrE@\t2.19\nHmtH`ABHRYWUih@Jh@FC@fEW\\RU@\t2.19\nHeW@`FFZBLddTjWCUST`C@dpjyD`\t2.19\nHmtL@@Pdf{eYUjjj`AaqTwCJ|QL@\t2.19\nHmvD@AADfyW^Ejjj`AaQTwSsDqP\t2.19\nHcw@@Hx\\ddRLTeUSU@CBXSBxYWP\t2.19\nHmtD@@EIe]nf`@j`@XBBXU\\J|bP\t2.19\nKAxPPUD`dadataddeRjj`CBFyA@\t2.19\nHeVD@AADfyWxVjjh@XDUMwLSI@\t2.19\nHeVH@BAIUeQfjjj@F@`fTwCOH`\t2.19\nHeT@`@qDfUuih@J`@XLBXUCqNd\t2.19\nHeU@@@yJeWzzjjj@FGPfESCqNd\t2.19\nHmwH@DIPRYYWeVhD@@FEISCOHx\t2.19\nHmvH@DAIe[VUZh@@@X]eMproHP\t2.19\nHie@`FF`cIIEJnFjfd@XDfEWHx\t2.19\nHeVH@FAIfUqfhH@@FGAFEWCqFd\t2.19\nHeTD@@qI[eQejjj@FGXUMpsqHP\t2.19\nHmTL@Fy\\ddUfRjijPAaTIaCrI@\t2.19\nHiT`@@pjRfUj[a@`h`A`gCqDX\t2.19\nHid`@@pjRfUjXBB`@XIp|QF@\t2.19\nHaDH@@RYm[jjj@FC@aTw\\RL@\t2.19\nHaEH@LXDeYVzje`A`REW\\PH@\t2.19\nHieH@BxDivWajjV@FAYSCqHP\t2.19\nHiF@@HrRQVJjj`AatIaTw\\`P\t2.19\nHidH@HRjuVFjjh@XMBYSCqBx\t2.19\nHiDD@F{IIEYjjZ@FAPfErA@\t2.19\nHieD@FFnRjYfFjYh@^EaLH\t2.19\nHaED@DHNRY[Jfjf@GaIaL\t2.19\nKAxH@MvRRJrjf@LBaLKd\\\t2.19\nsGPdE`DSpRYVj@XXF|d@\t2.19\nsNq@JeTuUPCBkFod`\t2.19\nqCbHHAD|DeZ@pPwI@\t2.19\nsFxHB@aJUqiZ@XHSbU@\t2.19\nQMPARVAaWDP\t2.19\nsJX@@eSU@LEEqX`\t2.19\nsOq@@eLm]UT@ptMyef\t2.18\nsOpHADILkW@@@LBEcqU`\t2.18\nqC`P@HRfhCAC\\TP\t2.18\nsFx@@eRfuU@LCD[rX\t2.17\nj`q@`@HRRjyeU\x7FSk^j`B@@@@FFhTYpRmFl{wDDd\t2.17\nqCh@CIKTA`hnHX\t2.16\nsOt@AdiWqZZ`FAbMyF\t2.15\nsGX`LDdsmT@pVOIP\t2.15\nsJX`LDdru@LInP`\t2.15\nHieL@DpFEIeYkfjY`A`bYrN@\t2.15\nsGP`@dfui`FFVOIP\t2.15\nHeVD`La@BLddlRPrm@@@C@j[axfR\t2.15\nsNu@DpdjkUPC@hu|Tp\t2.14\nsGX@@eJuT@pLVODJ\t2.14\nHid@@DjU^nBBH@FGPfEWCrF@\t2.14\nHeT@pHdDdLdLddlRPsU@@@CCJ[nHL`\t2.14\nHkld`LKmePBLdTQTRbrjYffh@XDBD_Ht\t2.13\nHcLB@HZ]rRQJJqCMUUUP@pELJfxUyF`\t2.13\nHcOD`LKiT@cIEDUDeeTsMM@C@`Pmy@`\t2.13\nHmtL@HZ\\ddRblFZjjj@FGIaTwKrA@\t2.13\nHeWH`LKa@HrQQEIYULsT@LBABgdL\t2.13\nHaGDAHK`RISdfyVyjZPAaE\\Pf@\t2.13\nKA|@@@eRkUU@FCPfES\\c`\t2.13\nsGX@AddQjhA`Xm^P`\t2.13\nsJQhHl@bOV`FBq@\t2.13\nHif@@@RfU~F``@@XLfDwCq@h\t2.13\nQMPARZAaWDP\t2.13\nsJX@@eOU@LMEnHD\t2.13\nHieH@DxDee]nZjj@FAXUMqHD\t2.12\nsNxDLHaqBRjuU@LFHcWrX\t2.12\nsNz@@mVdssTpCCAWbs@\t2.12\nqCsAPKR]rSM@^Q@\t2.12\nsGQ@@drmJ@pRwDZ\t2.12\nqCp@AJZ`LHnXS@\t2.12\nHcnLbLe]@HwldTRaRa]SUUTmH@ppHSbEP\t2.11\nHk^LbLWS@HOdiem^KjZjjiZPAa`PgDHP\t2.11\nHcNL@ICNrQQSRjTMUUUP@pfDJfxUwdX\t2.11\nHmvD@ACdiewjZjjj`A`LXUMtkrD@\t2.11\nHif@@@RUe^Fh@@@X]BES\\OH@\t2.11\nqCh@BISLAyhl\t2.11\nHo~LpBtwBlFlVlrJJJZISUi``hfd@FA@JgqBl\t2.1\nHg\\LpEvpkAkCkDfYfYVf@bai@A`PCi|Si@\t2.1\nHg\\h@De]CHeDeMDcimU@PP@LFcFE[yA@\t2.1\nHcL`@@rirQQSRiUpPQU@@pkFx]xdj\t2.1\nHcLh@DxYCHdeEDcJmPDD@CBhqawdH\t2.1\nHeT`@@rirQQSRupPQP@LBqnGdR\t2.1\nsGY@BDeVj`FAbux`P\t2.1\nsNq@@dr{UPCCHwbs@\t2.1\nHaDH@@Rfu[j@@@FFIe\\pfx\t2.1\nQM`AIXFE\\Q@\t2.1\nsJQ@@dju@LEcqQ@\t2.1\nHcLD@@QIeVuWVj`@@AaqMprn|c@\t2.09\nHeTD@@EIe]jZ@Bh@FG@fEWCrI@\t2.09\nHeVH@DAImeQej@@@FCYS\\L|a@\t2.09\nsNx`LDdskUPCAX|UX\t2.09\nHg}LbFM]n@c^rRQJEJITpsUUTtt@LFaLJayA`\t2.09\nHk^LbFWS`HwlddRaRfiafjjif`AaTIaUrA@\t2.09\nQMPBchGfR\t2.09\nsGYALMJRmUPCBbHwdp\t2.08\nRF`EFCqH\t2.08\nHig@@@rdifznBBH@FFXw\\`P\t2.07\nHaG@@@rdifzxHH@AafMwHH\t2.07\nsJT@@TeZhAaaEqX`\t2.07\nHeTH`ABPRYWZf`@f@A`RXU\\bP\t2.07\nqCq@XIIf`LInQ@\t2.07\nHmtD@@QIn[VUZh@@@X\\fTwCOHT\t2.06\nHifH@DAInUxV`@@A`aUpd[a@\t2.06\nsJX`LDdru@LH^S@\t2.06\nHaF@`NBHRYWih@H@FE@fEWHx\t2.06\nHeL`@@JfRiUfnXVfjjjh@XMBYpr\t2.06\nHeU@@@{IHddUWUUUP@pZDpjGbMH\t2.06\nHeTH@@RfV\\YhH`@AaRDpsqJx\t2.05\nsJU@E`djt`LHnJD\t2.05\nsJPH@DISUPCCCGbb@\t2.05\nHifH@DAInUxV`@@Aaa\\OLRf@\t2.04\nHcLL@@PTfye]]ZhH@@F@yS\\LkoHP\t2.04\nHieH@FDDfUfnjjj@FGAATwCqDp\t2.04\nsKXHB@aJWFe`FBDxe`\t2.04\nHmvD@E@TfUvzZ@Bj@AapHU\\L|SE@\t2.03\nHaD@@DjWZXHB@AaTXS]rD@\t2.03\nsJX@@eMU@LMEnHD\t2.03\nHaDH@@RVU[f@@@FBXWBbfx\t2.03\nQMhHchFD|h\t2.02\nHg^``NeSlHaIe][Zf`@ii`@XRBXU]JgrK@\t2.02\nHkl``NeSBHRYWVvf`@ii@AaHIaUtj_Ht\t2.02\nHmw@`NePbDfUujZ@Bf@AapIaUt|aP\t2.02\nHeU@`NdHaIe]ZZ@Bd@FG@fEWSrA@\t2.02\nHidH@@RYm^Fh@@@XMaTwCq@`\t2.02\nsOpHADILkW@@@LJEc^Q`\t2.02\nsOx@@eJqh@P@pLQoHp\t2.01\nHg|@@LdbRbtJUB]aAP@@@CCXSBhYWSod\\\t2.01\nsGY@DDfUj`FDWMcP\t2.01\njdy``@J@BdlsOJkbezKMUPTBH@C@QJLUjsh|q@w`\t1.99\njhiP`@DD@iIf[eW\\cK^Zj`XHh@A`kGARtZsoAy@`\t1.99\njhi``@F@PdwLsvoIW`mMUPPB@@pEQgMFlxOLHex\t1.99\nj`qa@@J@RVYgm\\Tg^YjjB@P@F@bTXkQk^yb@g@\t1.99\nHg]HpBOPkAkEkLbbbfbT[SAAQM@@phAT{xaR\t1.99\nHg}D`LFD@HrRPjJIYLNvmPTDP@LFrnFUyfgX\t1.99\nHg~L`LaC@HrRPqQYI]NvmTBDP@LFXUt{yE@\t1.99\nj`a`P@D@ejrSKZrkbTu@DUT@@pXbcCN}rA@\t1.99\nHg~@@@rQQQUQIUqwSMP@P@LA@fzUv~YeF\t1.99\nHkmH@JXLdRRbbQtzjB`@@XCF\\Lki|a@\t1.99\nHclD@@kIEEKDeeKmUP@P@LNcNFUwbHP\t1.99\nHkmL@FFnOIIEEEBqvjYjf@FAXpsqBT\t1.99\nHknD@EADfVU}eVjjjh@X\\UMpsoDpp\t1.99\nHcLH`ABHRYWYzZ@Bj`@X\\BXURoD{P\t1.99\nHcLH@@rIQQQHkkTE@@@pxj[iW^YBB\t1.99\nHg^L@DB]RY[VWEVh@bh@FEISG_DIP\t1.99\nHg^L@DBSRY[VwEVh@bh@FEIS[_DHP\t1.99\nHcND@EADfVU~UZjjj@FCES\\L|SM@\t1.99\nHmtH`ABHRYWYih@Jh@FC@fET|Se@\t1.99\nHmLD@@qJY{WJeZj@B@A`rMproDb`\t1.99\nHmM@@@qJWYWBeVf@B@AaVMpssHQP\t1.99\nHkmH@DhDfUnYTvj@b@@X\\fCJz_Hh\t1.99\nHcML@DpFEIeY~kfjYj`A`RYJ|Sm@\t1.99\nHeTH`ABHRYWZf`@j@A`pIaUODxP\t1.99\nHmvH@AAJYUgehHJ@@XBfES]J|`P\t1.99\nHmvD@JADeUeYUjjj`AavDwCJ|b@\t1.99\nHmtH@@RYeUEZ```@F@aaTwBoDbP\t1.99\nHcND@DBTfVulUZ`BH@FAIS[sBEP\t1.99\nHcND@DATfVutYZ`@h@FAIS[sBxP\t1.99\nHeULBDpFGNRYV^nZif`AaB\\Si@\t1.99\nHeVH@FAIe]ZZjjj@FG@fEWCqHd\t1.99\nHmtH@@RVYWeVhH@@FCTwCJ|rDH\t1.99\nHeVD@J@TiWUJjjjh@XMBXS]rI@\t1.99\nHmtD@@QIee^UZjjh@XLULLkqLx\t1.99\nHifH@FAIe]ijjj`A`pIaUwD`P\t1.99\nHifD@J@TiWTjjjj@FCPfDw\\`P\t1.99\nHeTD@@QIemQejjj@FETwCODp`\t1.99\nHaFH@FAIe^fjjh@XTBXU\\RN@\t1.99\nHidD@@QInUxVjj`AaQTwCqDp\t1.99\nHaFH@FAIe^fjjh@XMBXU]r@@\t1.99\nHifH@NAJ[W[jjj`A`tXULOHP\t1.99\nHifH@NAIYW[fjj`AaVESCqHP\t1.99\nHiFH@LAIYVjjh@XBBXUMp|b@\t1.99\nHaF@@@Ri][jjj@FCPaTw\\c@\t1.99\nKA|P@TBTkuUT@XUFDw\\a@\t1.99\nKA|@@@eSKUU@FCPfDw\\b`\t1.99\nsNqdEbOBABUVmU@LMJ~P`\t1.99\nsOy@FDfUkjj`FEBqoEF\t1.99\nsNx@AdbbMUPCAbXu|b@\t1.99\nsNy@LDeVjj@XTXu|TP\t1.99\nsNq`IVeUuTpCCXod`\t1.99\nsGY@DDfyj`FBVxcP\t1.99\nHeUH@DDDf[WxVjjh@XDUMwDrP\t1.99\nKA|@`XDQtPdkOUU@FCABDw\\b`\t1.99\nHieH@DDDf[WaZjj@FAES]qLD\t1.99\nsKTHLPDIRxtl@p`xh`\t1.99\nqC`P@HRfhCBCfbp\t1.98\nsJU@DPdvu@OLlP\t1.98\nHieH`B[`BDiWWBiYj@FFA@|QJ@\t1.97\nHeTL@@pTifwkjjjh@X]BESCODs`\t1.97\nHidD@@[IEDiZzjjh@XMFESCqDx\t1.97\nsJP`@dfvdAaEqX`\t1.97\nsGY@DDfuj`FBQxmP\t1.96\nsGX@AddQjhAahcqZ`\t1.96\nsJQ@@dsU@LDCsQX\t1.96\nqCh@CIKTA``nJX\t1.95\nHiDB@@SaR[Ufjf@FAIeCrB@\t1.95\nJoc@HCADRDILkZvm]Jv|@QP@D@AaHIeSiv\x7FHX\t1.94\nsFt@AdigUjXA`d^KT\t1.94\nsFt@@Ti_FVhAaIsKT\t1.94\nHg~@@@RiU~Ukcnjj`@`@X[BXUMJz]|c`\t1.94\nHcND@IADfyW[aZ@Bh@FCES\\n|a@\t1.94\nHeTD@@QIgeQej@@@FEYS\\OHd\t1.94\nHklL@@kldTtTRQEZBHb`@XTcCN|`p\t1.94\nHmtD@@iJ[eWihHH`@XDaCODYP\t1.94\nHidH@@Rfuvz`@`@XXeMsLHP\t1.94\nHeUD@NdBRYgeajjj`A`HPeMpsqLH\t1.93\nsGX@@eSUT@pLVOIP\t1.93\nHg}LbLGSl@b~rQQJIIFEuMUUUKR@LBBDKbCH\t1.92\nJoBaQFBivxAE|eLlzmeuMUUTsL`AaPPaCqJt\t1.92\nHk]LbLE]L@`~RfV]xnijjjei@FAABEqJD\t1.92\nj`aA@@GYIHhbeHfiVj``jJ@@XJQ`eFBdkQnP|\t1.92\nsNqLKIARFdLddjjj@XP|c@\t1.92\nsJP@DiVhAaaCqK@\t1.92\nqCb@AIj`LHNZK@\t1.92\nsGQhHl@cIIBmPCBGdh\t1.91\nsJP`@dfvdA`enP`\t1.91\nsJU@DPdvt`OLlP\t1.9\nHmuD`LVD@HrRRqIXYV`@`@XES\\ODqP\t1.9\nHmtD@@yIYe^UZ``@@XBaTwCJ|b@\t1.9\nHieH@LDDeYWajjj@FGABES]rA@\t1.9\nHeUH@LDDeYWxZjjh@X\\DHUMwHd\t1.9\nqCp@AJZ`LINXK@\t1.9\nHk]H`AdpbDfUmUiev@Bfd`AaPIe[qND\t1.88\nHaED@dpFChdi[dfUjzjjPA`bUqLx\t1.88\nsGY@LDeUj`FFQoEL\t1.88\nsJ\\@@bdks@OEb\t1.88\nHk^@@@rQQIFIJftpHH@@@FDieLLki|``\t1.88\nHieDPLZD@HhHrREQKaVii@FAYWCr@@\t1.88\nHcLD@@QIn[WeVj@B@AarYS\\L|cP\t1.88\nHaDH@@RVU[fjj@FEXUMwDa@\t1.88\nsNx@AddTMUPCBqXwdX\t1.88\nsGX`LDdwMT@pQoH`\t1.88\nHaDH@@Rfu[j@@@FFIS\\sBx\t1.88\nsJX@@eSU@LINYX`\t1.88\nsGY`hEiNyIgZhAaCrT\t1.87\nHid@@DjU^nBBH@FGPaTwCrL@\t1.87\nQMB@HRZAyd`\t1.87\nHcND@MADfVU~UZ``H@FCESCN|c`\t1.86\nHidD@@EIe]ih@J@A`pIaTOHx\t1.86\nKA|PD@pSddbljj`CAhSBknPp\t1.86\nsNxA@IrRQVjhAaXlWrT\t1.86\nsNqhHl@cIICej`FBMyF\t1.86\nHeTD@@iJ[e^f```@FAHPsqFx\t1.86\nsGX@@eLuT@pHfoDb\t1.85\nHmtD@@gIELeDVz`@j@A`RYr|Pa@\t1.85\nsJQ@IGuPCAQ\\VH\t1.85\nsOt@AdieuZf`FBQxjp\t1.84\nHidH@@Rfufz`@`@XXf]sBXP\t1.84\nsJX@IGuPCCKGd`\t1.84\nqCr@XISTAaEqS@\t1.83\nsJP`@TfVhA`d^S@\t1.83\nHidH@@RYm^Fh@@@XLDES]qLD\t1.83\nHcLL@@kdinYTUhHbH@FEHpsoHT\t1.83\nqCb@AIZ`LDmqB@\t1.82\nsJY@LDeZhAa`mqP`\t1.82\nsJXHLHaIVj@XXQ\\VH\t1.81\nHid@`@qDfUvf`@h@FE@fEWDxP\t1.8\nHeTD@@EIe]jZ@Bh@FC@aUp|SI@\t1.8\nJoBD@@IKLrjzv[mP@@@@@XZeMprng[|b@\t1.8\nHidD@@QInUxV`@@AaB\\hj[a@\t1.8\nsNq`IVeUuTpCAQ|VH\t1.8\nHidL@@pTifvnjjj@FCPaTp|SN@\t1.8\nsJQ@@dsU@LMEnHD\t1.8\nqCp@BOTAyhl\t1.8\nHmu@pBXJpZqZqIf[oi`bH`@XX@ksBZP\t1.79\nHcND@DBdeVyU]Zj@@@FGHU\\LksHsP\t1.79\nHmvH@LAIUYVUZX@@@XLc\\LkqHH\t1.79\nHaF@B@B\\ddRK]UUP@pZDrf{dD\t1.79\nsOxA@IRi^njj@XNKFod@\t1.79\nsFx@@eJfuU@LCL[qA@\t1.79\nsGU@E`djmL@pROEJ\t1.79\nHo~DPJHPbDbDf{VyVwjZj@@@FBaBUpkiwqF\\\t1.79\nHkmL`LVDL@cIIKDedaeZ@Bd@FETwBoDsP\t1.79\nHmuL@ATBYIf[oijjjh@XRDIe\\LkqBX\t1.79\nHmvD@EADfVuqej@B@AaUMpkrB@\t1.79\nsGQ`@ZdrmT@prMyL\t1.79\nHaD@`@bDfYVz@`@AaPXS]rJ@\t1.78\nsJX@@eKU@LEEsCD\t1.78\nsFx@@eJf`@@LCEkrD\t1.77\nqCp@AJZ`LDEqS@\t1.77\nsJT@@TeZhAahmq@`\t1.77\njhiQ`@FBisvRRJJJKEYBLxMTsAPI@@LIDXJRmV\\D\t1.76\njhiQ@@DT@drsJsNku`mUAQED@@ptcCIJtZsoAyB`\t1.76\nj`q``@ERuddbRRbnRXk`jjjYjj@AaJBLDxHug\\ax\t1.76\nj`qP@@@BRfUWyWdg^hHH`@@@FA`HpRcNBtZsnHex\t1.76\njhya@@J@RfV]YwIQUoAjTH@@H@@XJYrRmFl{p^PP\t1.76\nj`a`@@@YIEChhhdW^jjhJ@@@XV`cAJBdkQkN}rC@\t1.76\nj`ia@@D@RYYYU\\cMNmyjh@@@@@FDd\\EIVcV]qFO@\t1.76\nj`q`@@@YIEDdcDef\\]zjjhHB@@XN`cAJLyIVcV]x\t1.76\njhiQ`@DD@hJSLwJnyFV|uU@pPp@C@VNBehuo\\PQp\t1.76\njhi@`@H^RjyV}}EjsjjjB@j@@XF`cANBdkQkAyA`\t1.76\nj`qP@@@\\RiUwYVgG^jjf`@`@FFhHpRcMFl{wDBd\t1.76\nj`qa@@D@RYfv]TgK^ZjhHH`@FBbTxJRmFm{bLN@\t1.76\nj`q@`@@TRfYW{TRg^hJB@@@@FFdXIpRmFl{wHL@\t1.76\njdy``@G\\DeTsJn~j\\[uTCTEEP@C@vBTYIVcV|FH\t1.76\nj`qP@@@LRe]UYTeG^@Bj`@@@FAhHpQgAZMYwnPd\t1.76\nj`qP@@@\\RiUwYVgG^jjj`@`@FFhHpRcMFl{wDBd\t1.76\nj`aq@@DV\\CHheEDcddkSTE@UP@C@rBTYpTeFl{p\t1.76\nj`q@`@HNRju^uu`cVjjh@J`@FFhHqQ`iJt[wHD@\t1.76\njhi@`@@HR[fuvUdkpVj@B@@@@XZQagARMYw`|aP\t1.76\njhi@`@@HRYyWVUEKpVh@Ijh`@XJqQgAFl{p^PT\t1.76\nj`qQ`@DXArRSLm\x7FJlD{sUSL@D@@pihug^ycEA@\t1.76\nj`aA`@HLyddbTLrRbMzjfBB`@AaKAARUhug\\ax\t1.76\nJoBfPCRio@QddbQRRtuMpuUULuP@X]FEWS_DQp\t1.76\nj`qA`@@HddwJzroAN|t@E@@@@LAHISQkN}qCN@\t1.76\nj`q@`@@HR[YWYTTg^Z`@`@@@FBdTYpVcV]{dL@\t1.76\nj`aQ@@DZ@dwLjsrkMTDEE@@LMHhs`iJMYwnPp\t1.76\nJoB`@@CddRRJTRU][uUU@A@@X[BXU\\ng[|Qa@\t1.76\nHg^BpLaCl@chcPcIIKEEeiJkPPDh@LJqnE^Qh\t1.76\njhq``@I@BeLljrrIUADQUT@@pT`eF\\tZso\\`D\t1.76\nj`aa@@C@RYegU{Ufj``b`@FFlTYpTeZl{wHH@\t1.76\nJoC@A@ANRQQIUQIDuoUUL@D@AalIeMrz]oq@D\t1.76\nHo}L`L^DL@cIIChdliiUZ`@j`@XSaMpsiwrG@\t1.76\nJoB`@DgddbbRRQpgmuPUAE@@XJfES\\J{_Dep\t1.76\nJob@@FRRJJEIKXRv[uP@@A@@FFyS\\Lkiv\x7FHH\t1.76\nHg\x7F@PBWPbAbLbbbRfaSR]pPLUQ@CBPqae]Np\t1.76\nJoBB@D[ddfbRbJwC[uUTBA@@X[BXWCJg[|a`\t1.76\nHg]L`EnDpHSIIKDeddLmP@UP@LEALinE]OdV\t1.76\njhqQ@@DT@drlsLjXKUAQEP@@ptc@iJtZsoA@\t1.76\nJoBp@@XUMNRJJIESIUunADT@@@AaqMJz]|ap\t1.76\nj`aa@@I@RfVUYXRjBHbj`@FBdDhsfcV]{dE@\t1.76\nJgCFAD`esJSOJrhrn{[UUUUT@F@eS\\Jz_DrP\t1.76\nHg}@@IOIIEDddbI{]TEPQ@@pULJfxUv~II`\t1.76\nJoBDPD@DIWLrjzv[mP@@@@@XZeMprng[|`@\t1.76\nJoCB@BsnRRIIJJyLoCUUSMU@A`LIa\\IwrG@\t1.76\nJoB`P@vDPdrnlktqw@AUUQ@A`hIaUJz[|c`\t1.76\nJoCd@bDpAtRdsLm{euoUTpPD@Aaprng[|a`\t1.76\nHcNDpLa@BJbFbLddLTJRzmT@@@LFinFUyF`\t1.76\nHmnDBJAZgIDeDdXPjzZjjjh@XCBXS\\L|Re@\t1.76\nHk~LBAACFTeYVUxYUSZjjjj@F@xUMtkoD`P\t1.76\nHo~B`LaK\\@cIICEBeeEuZh@I`@XUprk|Rf@\t1.76\nHctNPDpfFUCpkprRQRVSSUST@LFpfzUyF`\t1.76\nJoB`@@NeRk|kuqwUUP@T@AalIaTtkiorN@\t1.76\nJoB@P@QBSLjsnNv}HP@@@@FD`U\\Lj]|sM\\\t1.76\nJoB@P@QBRsLjnmf|t@@@@@FDaS\\Lki|rK\\\t1.76\nHo~L@C`YrRSIFYIRfjjfjj@FDpfTr{[|``\t1.76\nHknL`EaLBDrRRqIYHYZ`@j@AaHIeMpkoHL\t1.76\nHklDPNGX`xcIIDcEeHRjifj@FGPfDvgrE@\t1.76\nHg^L@MAirJIJHsIUt@QUT@CAPSFxYW[yA`\t1.76\nJoBd@BNBRsLjnmf{TEAQD@FBeS\\LkiwqH\\\t1.76\nJoB`@@ReRkkZuuoUUT@D@A`\\IaTwKiv\x7FHd\t1.76\nJoBd@BNBSKLjnmf{TEAQD@FFhUMprng_H\\\t1.76\nHg^B`LaCl@cIIBidliJkT@Dp@LJ[af~Ie@\t1.76\nHg^D`La@BLddLTVRVvmTDD@@pznFUt~Hu`\t1.76\nHg~@@@rRJIJqIMqwUUP@P@LMaLIne]N~QP\t1.76\nJoC`@@QrTvnljwV|uUP@P@FDxULng[|QA@\t1.76\nHg]L`LnDD@cIIBhhd]ikTC@P@LFqnW[yD`\t1.76\nHcoL`DphWP|LddtTSeMpmUUMP@phj[ayF`\t1.76\nJoBD@DIU\\k^x{[uUTDA@@X[BXWCJz]|Qg@\t1.76\nHg~H@KAIfYU^Svz`hJH`A`XXUMprng_H`\t1.76\nJoBf@BXCBdrl\x7FJuunuSL@D@AarXng[|c`\t1.76\nHg~D@Eg\\ddRRTUsKpuUTsU@CChSBxSyE`\t1.76\nHo~H`CDHaIe]gVih@Jjj@A`hIaUJ{[|c`\t1.76\nHk\\H@HrRSIFIJftzjh@H@FBpfTprngrB@\t1.76\nHg~H@DCHhhieBdWG[UU@A@@pDjFUt{xf\\\t1.76\nJoCD@B@dsMl{eunuUPPD@AaIUpriv\x7FDsP\t1.76\nJoBf@BXCBdrl\x7FJuunuSL@D@AaRz]osDs`\t1.76\nHcLDPNEXcXcIIDcDYBUULu@CChSBY]y@`\t1.76\nHg}@@@yJe}YVfNzjj@B@A`lHUMJz]|SN@\t1.76\nJoBD@@ISLk^x{[tE@@@@@XJfEpriv\x7FD[P\t1.76\nHk^@@@rQQIFIJftzjh@H@FFaBYSCJz_HH\t1.76\nHg|@@DjYV}~T{jjjjj@FEaBXS\\LkiwrJ@\t1.76\nHknD`La@BLddJbRRTujBB@@X]S\\LkoDpp\t1.76\nHk^@@@rRIHjIHjtzjh@H@FBpaTprngrL@\t1.76\nHg\x7F@@@adjuueZX{jjh@H@FDiaUJz]|RN@\t1.76\nHclLA@iTfnrQQQQEMt{PUAB@CBbFUwdL\t1.76\nHmTNPDpfFUCpkprRQRVRZjZ@FEXSRoHx\t1.76\nHg}@@@yJeWe^nNzjhHB@AaLIaTLz_DVp\t1.76\nHcL@p@bBBAbDfYVyi``hh@FGAaMpsqEt\t1.76\nHg|H@HRjymUV}NjB`hH@X[FTwCJz]|``\t1.76\nHg~H@DAIenUTfvvj``b@A`IMprnwsDpp\t1.76\nHg~@@@Ri_VUicnjj`@`@X[BES]Jz]|c@\t1.76\nHknB`LaML@cIIKDeeAeZ@BX@FETwB_Hp\t1.76\nHg]H@DlLbbTTRNRzuAPE@@peBinFUOdV\t1.76\nHknL@MAirJIJHsJn`BJj@AaHIc\\LkoHL\t1.76\nHg]L@FFnoIIEEDl\\NuSMTl@LFqaeSyA@\t1.76\nHg]H@FlDfYU^QVhHHj@AahQaTwCNgrK@\t1.76\nHg}@@@UJfUW\x7FegZ`hHj@AaJXS\\Lz_Djp\t1.76\nHmOD`DphTOCIIMEDz[aZjjZ@FEES\\OHd\t1.76\nHg|H@HRju^uXSnjj`@`@XKBYSCJz_DJp\t1.76\nJoB@@BULjo{rsl@@@U@@FBiaTwCNwqC\\\t1.76\nHk\\LA@kTfnRfYgUndzBhJD@FEDLz_HT\t1.76\nHk]@@@yJeWmZ{Sjj`@`@XSBXUCJ{qNL\t1.76\nHk^D@Eg\\ddRRTUY^FjjfZ`A`tIa\\OHL\t1.76\nHmt@p@bBBAbDfYVvfBBb@A`pXSCODyP\t1.76\nHg|H@@RYWVUicn@BZjH@XRfETkiwq@x\t1.76\nHk\\H@@RYfUVSWZ`hJB@FFaaTwCJz_H`\t1.76\nHmL@P@BNBDigy\\jUiffi@F@`fUproHH\t1.76\nHk^H@DAIenUr[SZjB@`@X\\S\\Jz_LSI@\t1.76\nHo}@@@UIYeV^d~hHJJ@A`iTwCNg[|a@\t1.76\nHmtHPAfHVHrRQHiRDjjVh@X]BXURoHX\t1.76\nHcNL@MAirJIJHsUt@QU@@pDDqnFUyF`\t1.76\nHk^@@@Re]YTjtzjh@H@FFpfESCJz_H@\t1.76\nHo}H@DhDfUefWWZhHb`@FDi`rng[|b`\t1.76\nHk]@@@UJfUW~V]jB`b`@XBfDwCN|Rc@\t1.76\nHeNHBJBiReYVDJnfjjjh@X]BXS\\ODjP\t1.76\nHg|L@@RdfV^Urh{Zj``H@FGEpsiwqLT\t1.76\nHkn@`ECDRYWUZf`@jj@AaHIaTLz_Hx\t1.76\nHkn@`EBHRYWUZf`@jj@AaHIaTLz_Hx\t1.76\nHk\\@@DjU^ukmLHDjh`AaLHUCJz_Ds`\t1.76\nHo~B@NAK]IenWVeVijjfPA`Q\\I|Qg@\t1.76\nHcMD`LvD@HrRRqIYCJt@E@@p{J[aWP\t1.76\nHknD@IBdifW^EZB`b`@XRfDwBngrJ@\t1.76\nHcm@@@UJfUWyYvhJBH@F@iaMpsoDiP\t1.76\nHg^H@EAIYeUz]Z``b`@XRUMpsiwqHP\t1.76\nHclL@@RlbbTLRQTnmU@A@@pkae]xfD\t1.76\nHk\\L@@RdfV^uJmMjj@B@A`qCJz_Ds`\t1.76\nHk\\H@@RfYU\\]Tz@@@@@FGXWCJ{sJXp\t1.76\nHknH@DCHheEDceujB`H@F@hUMproHL\t1.76\nHknD@E@TfUvyih@Jj`@XJBXU\\LkoHL\t1.76\nHeWDbLihP@cNrREQICJt@@@LLxYy@@\t1.76\nHmt@P@bABDfUuZZ@Bj@AapIaUp|RU@\t1.76\nHmuD`LVD@HrRRqIXYV`@`@XUeMp|aP\t1.76\nHknH@FAIfYWyuhJBH@FDxU\\Lki|a`\t1.76\nHcnD@EgTjeUeexZjjYh@XMBXWCrE@\t1.76\nHo~H@FAIfYV}dv`hJJ@AanEWCJz]n\t1.76\nHcnH@DAIenuIeujh@H@FCEprn|qLX\t1.76\nHmtL@@Z\\bbRbLkh@bh@FG@fMpsrE@\t1.76\nHcNH@DCHheEDbnmPT@@C@TJfxYWdZ\t1.76\nHeWD`LihP@cIHUDdLkP@@@psNGbAH\t1.76\nHkmL@DpFEIeY}ZyjfZj@FEIbz_DzP\t1.76\nHcMH@DDDfyWWaZjjj@FGHUMtkqLt\t1.76\nHmt@`@bDfUujZ@Bj@A`HIaUtkrA@\t1.76\nHcvL@Hz]rRQQMSUUTt@LFSBimyB`\t1.76\nHknD@FADfy^Utvix@@@XTLki|QJ@\t1.76\nHcND@NALbbTtRLjuMUR@LBKawbMH\t1.76\nHg^L@NAKRY[eueVijje@FAEpgqFt\t1.76\nHcN@@@Re]eUvjh@@@XRDXWCJ{qDh\t1.76\nHid@PNbAbLddUTaJjZ`A`tXU\\OHP\t1.76\nHcNH@AAJYU^zZBBJ@A`NES]J{rD@\t1.76\nHcN@@HrRQJqIKmUP@@@pVDpjxYWP\t1.76\nHiWH`DphCpRjyj[aZjj`A`UMp|``\t1.76\nHmv@@@rRHjIJUjh@@@X]BXwCODIP\t1.76\nHcNH@IaJkU~XZjjj`AaLIeMpkoHH\t1.76\nHknH@EAJ[WUfz`@jh@F@iaTtz_HD\t1.76\nHmt@@LddTQVeZhH@@F@iaTwCOHT\t1.76\nHmuH@DDDfyW^Ejjj`A`rES]ODqP\t1.76\nHaeH`Dr@|DjybinZjj@FAES]r@@\t1.76\nHieH@DhDeVWaZjj@FCIaMp|RJ@\t1.76\nHmtH@@RYWUih@Jh@FG@fETkqND\t1.76\nHeUH@DDDfyWxVjjh@XTaTw\\SI@\t1.76\nHif@`ABHRYWZZ@B`@XLBXU]rA@\t1.76\nHid@`@bDeYWaf@@@FE@UMwLaA@\t1.76\nHeTD@@QImYQejjj@FGXUMpsrD@\t1.76\nHcNH@JAIY^UWVg`@@AaWCJ{qHH\t1.76\nHmtD@@QIevVUZjjh@X]eMproHH\t1.76\nHeVD@AADfyWxVjjh@XTUMt|QL@\t1.76\nHmt@@DjUgjDHJJ@A`LHULLkqLx\t1.76\nHmvD@D@dfueYUj`@@A`vMproHP\t1.76\nHmv@@HrRSFIJUjh@@@XSBXS\\Lj\t1.76\nHmtD@@QIn[VUZh@@@XLfMpsqJT\t1.76\nHie@@@EJe}ijjj`AaTHU]sLXP\t1.76\nHaE@@@{IHhbSUUT@LJaBinIg@\t1.76\nHif@@@rQQIFf@`h@FEIeMwDHP\t1.76\nHieH@DDDfyWaZjj@FEHUMwDpP\t1.76\nHefD@Hz\\ddTSUUUH@piLJfy@`\t1.76\nHaF@B@B\\ddRK]UUP@pZDpj[d\\\t1.76\nHeVH@DAIemQej@@@FAIPssB[`\t1.76\nHieH@JDDiWTjjjj@FCPfDw\\`P\t1.76\nHaf@@@RYfJfzjjh@X]BXUMwH@\t1.76\nHaDH`F@HRf^rjYj@FE@fTwDK`\t1.76\nHaE@@@yJUtjjjh@XUBXS\\pJx\t1.76\nsNqlHlOBqCbLddlZj@XEZodH\t1.76\nHeV@@@RUYTYy`@@AaUMpsqDp\t1.76\nHeTD@@iJ[e^f```@FEHS]OHD\t1.76\nsGPBAbJPLaYAInjhA`aNS@\t1.76\nKA|P@QrUSMUT@XTfES\\c`\t1.76\nKA|P@XBRlkUT@XTaTw\\b@\t1.76\nsNxA@IrRJFjhAaXl[qA`\t1.76\nsFuHEhOAJnMZj@XHwbF@\t1.76\nsNy@BDeVjj@XVKU|`@\t1.76\nsFq@@drfuU@LBl[qB@\t1.76\nsFq@@drfuU@LKEc^P@\t1.76\nsGPhH`DYIHUj@XKWdH\t1.76\nsFt@@TiTt@@A`i^IX\t1.76\nsFt@ADiTt@@A`c^IX\t1.76\nsJY@LDejhAahcqC@\t1.76\nsGY@DDeYj`FAVMyH\t1.76\nsGR@@cTe[f`GbM@\t1.76\nHeTD@@qI[eQej@@@FGIeMpsrH@\t1.76\nHifH@AAJ[W[j@B@A`VES\\QA@\t1.76\nQMhHRYAxb\t1.76\nsJY@BDizhA`inID\t1.76\nHeTD@@EJ[Uvz`@h@FAIgSqBh\t1.75\nHidH@@RYm^Fh@@@XMATwCq@p\t1.75\nsNp`@dfVZj@XJobq@\t1.75\nHkmHpBXpkIkMkDfYemyXHbbP@XDASoLXU@\t1.74\nHidL@@sdifzajjj@FCPaTw\\SA@\t1.74\nHaDD@@yJY^fjjh@XUFEW\\QF@\t1.74\nHaDD@@YJYZnjjh@XUFES\\QN@\t1.74\nsJQ@@dkU@LLL^JH\t1.74\nqCp@AJZ`LDmqB@\t1.74\nHeTH@@ReyTYj`@@AaTTwCsDrP\t1.74\nHaF@@@RYe[hB@@FAXS]q@h\t1.73\nHaDH@@Rfu[j@@@FFIg\\pjX\t1.73\nHg\x7FD@L[`QIeyUTYNvjZ`@@A`vEr{_HL\t1.72\nHcm@`FtHaIe[UkiV@@@`@FC@fTJ|cP\t1.72\nHcoH@DJ`RUeUVy]ZZ`@@AaRTL{qHT\t1.72\nHk^H@IAJ[VuVzUh@JZH@XTfDq|P]@\t1.72\nHk^H@IAJ[VvvzUh@JZH@XTfDq|R]@\t1.72\nHg~H@IAJ[VvUneZ@Bfh`AaRXSWqML\t1.72\nHew@@@pldTTJVTLmP@P@LBqngbDH\t1.72\nHcnH@IAJ[Vw[iV`@ib@FEIaMoDFP\t1.72\nHmN@@@rRJJYDfeZ`XB@A`U\\L|sFT\t1.72\nHev@@@rQQQHyPsPLA@@pHfx^XER\t1.72\nHmN@@@RfYWraV`XH`@XDS\\OLBU@\t1.72\nHcn@@@RifurZ]jA`b@A`U\\L|sEt\t1.72\nHaDH`NBDRYWih@H@FAIa]q@h\t1.72\nsOt@@tigujj`FEbqoDF\t1.72\nHid@P@bAbDfY]n`HH@FEAa\\OHh\t1.72\nHeVH@LAI[eQej@@@FGIeMpsrH@\t1.72\nHaDH@@RVU[jjj@FG@fES]rH@\t1.72\nHeTH@@ReyTYj`@@A`tTwCODS@\t1.72\nQM`BN`^YH\t1.72\nHmNH@NAJ[VUnFZjjj`A`LXULLkrD@\t1.71\nHevH@FAIeYZ[ajjjh@XCBXU\\L|`@\t1.71\nHeTB@@pYRf[^njjj`AatHUMt|SA@\t1.71\nHidL@@X\\dTRekjjj`A`tXU\\ODQ`\t1.71\nHeVD@IADfyWxV`@`@XDUMwDRP\t1.71\nHieD@DDNRYWbijih@XDfEWHD\t1.71\nsGPYHlPDGlddJu@LIP\t1.71\nsGXA@IRjZj@XFKWdH\t1.71\nsJY@LDeZhA`Pl^R@\t1.71\nsGU@DPdsmR@pbxmP\t1.7\nJoC@@@ITskNx{[uA@@@@@XZaUprng[|c@\t1.7\nHg~@@@RfUYwySn``@@@@XZfDwCJz]|`@\t1.7\nHcLHpEbPRPrPrRRqIYCMT@E@@pJfx^Qh\t1.7\nHmtHpEbPRPrPrRRqIXYj`@`@XES\\OHT\t1.7\nHeVD`La@BLddlRPrm@@@CBlinGdR\t1.7\nsNplJyDJHtQddeeUPCAqXu`\t1.7\nqCr@XIJrAyhl\t1.7\nqCa@CIJtA`enR@\t1.7\nHaE@@@aJyUnh@@@XUaTw\\PH@\t1.7\nJoBBPDH@QddabbRRrv[kP@@@@@XCS\\Lki|Rw@\t1.7\nsNx`BDdw[UPCCKObM@\t1.69\nJob@@FRQQIIEI\\Lk[dDaP@@@FBiaMpz]orJ@\t1.68\nHcMB@NTLgTify^ajjjj@FBpaTwCJ{rL@\t1.68\nHmv@pBBlFlVlRYeYZXHJH@FAApksLJP\t1.68\nHmuL@AdFUJYY^njjjh@XSFES\\LkrD@\t1.68\nHifD@ACLdTTqkjjj`A`tHS\\ODr`\t1.68\nHeV@@@rRHqICMT@@@LNaJ[agdX\t1.68\nHmvD@DATf^Uqej@B@A`rYS\\OHT\t1.68\nHeTH@@RfUWihHH@AarXS\\L|b`\t1.68\nHie@@@EJeWkjjj`A`tIaTwDxP\t1.68\nHaFH@NCIEDcSUUT@LJ`j[nHf@\t1.68\nHeVH@DAIemQej@@@FFIS\\HnFP\t1.68\nHaG@@@qdig|ijj`A`RXU\\Qn@\t1.68\nsNx@@eLmUPCBbXwbS@\t1.68\nsNx@@eRmUPCBqFodp\t1.68\nsGQHLHaI[ihA`aNHt\t1.68\nsJX@@dkS@LMD^HX\t1.68\nsJX@@eSU@LDcqS@\t1.68\nqCp@AJv`LHnJX\t1.68\nqCp@AJZ`LDMqQ@\t1.68\nsGX@@eJuT@pHfODj\t1.67\nHaF@@@RVU[f@@@FEXUMwDB@\t1.67\nqCb@AIj`LHnXS@\t1.67\nsGY@DDf]j`FDWMcP\t1.67\nHmuL@DpFEIeY~nZifh@XHf\\siT\t1.66\nQMPBchFD\\Y@\t1.66\nHaD@`@dDfUzZ@B@A`RXU\\c`\t1.66\nqCp@BOTAaIqK@\t1.66\nHidH`ABPRYWZZ@BP@XDfEWHx\t1.65\nqCpB@ReMPFFbwH@\t1.65\nsJP@DiZhAaaMqH`\t1.65\nRFDEYFCBNT\t1.65\nsJY@DDfvhA`l^Q@\t1.64\nQMbDBDf`XUqD\t1.64\nsGU@EPdjmT@prqxiP\t1.64\nHeVH@IAIe]ZZ@Bh@FC@fEW\\PY@\t1.64\nHif@@@rRJEKaj@@@FEES\\ODS@\t1.64\nsOpH@DILkW@@@LBcWqC@\t1.64\nqCp@AIj`LEEqC@\t1.64\nHifL@ABnReYrZjjh@XMaTwCqHP\t1.63\nHmtD@@yIYe^UZ`P@@XLeLLkqHH\t1.63\nJoCFP`s[aH]L|drml\x7FTr{@AUTp`A`RUk|SA@\t1.62\nHcnHaAdICigdfUmffWX@JjD@XXe[sLEP\t1.62\nHeUH@DhDeVYzVjjh@XLfDwSqHD\t1.62\nHeVD@DAdfygFV``@@XYSSsDxP\t1.62\nHifH@BAIfUXXHH@AaPXUMqND\t1.62\nHieH@JXDefWaXB@@FFEp|RF@\t1.62\nHaF@@@Rig[jjj@FCPfDw\\b`\t1.62\nHaE@@@qJYZfZjh@XDeMwHH\t1.62\nsF|HLZ@aJYuif@XP\\RH\t1.62\nsOt@AdiVMZj`FAQkyH\t1.62\nsGY@LDenj`FEDQoI`\t1.62\nsGX@@eJuT@phfMyD\t1.62\nqCx@AYIV`LDEqS@\t1.62\nHeVD@IADfyWxV`@`@XTUMt|a@\t1.62\nsFt@@TiTt@@AaikrH\t1.62\nqCr@HIJtA`enR@\t1.62\nsGQ`@jdvmT@pruyB\t1.62\nsOx@@eSI]UT@pLQ_Ej\t1.62\nsGY@BDfZj`FADQxmP\t1.62\nsJY@BDfZhAaaCqK@\t1.62\nsGQ@@dkMT@pVOMEP\t1.62\nsJQ@@drt`LHnKD\t1.62\nj`qP@@@\\RiUuyVgG^jjf`@`@FAhHpRcAZMYwnPd\t1.61\nJoB`@@\\eRk{JuuoUUL@D@A`\\IaTpkiv\x7FHx\t1.61\nHmvDPLa@BEbLddlRVFUh@H@FETwBoHp\t1.61\nHcLB`HQ]@HrRFIKJ\\Jp@S@@phj[my@@\t1.61\nHmuDbLVD@HslddlRVFUh@H@FETwBoHp\t1.61\nHg\\D@@QIme]XYZ`@j`@XReMpkiwrL@\t1.61\nHcL@@LdbRVbM\\DDUP@LIaLJfF]yB`\t1.61\nHeVB@FCAeJYyzzjjj@FGPUMpsqDp\t1.61\nHcLH@ErRQRiYCMT@E@@pYLinGbEh\t1.61\nHie@B@xIrRQHynjjj@FCPfES\\`P\t1.61\nHeTL`HS@BLddlRPrm@@@CAlinFP\t1.61\nHaE@B@xIrRQHmuUU@CAhSBinQp\t1.61\nHmtH@@Rfuv[j@Bh@FCXUMJ|QA@\t1.61\nHid@`@bDfUvf`@h@FC@fEP|c`\t1.61\nsNyDJQDJHR[nihA`QE^Q`\t1.61\nsNx@@dlwUPCCZobQ@\t1.61\nsNp@Di]jj@XLSFodP\t1.61\nsGXA@IRjZj@XYZ|TH\t1.61\nsGP@Divj`FABMxi`\t1.61\nsJT@@TfZhAahmq@`\t1.61\nHmtL@@JTfYwfzB@j@AapXU\\L|aP\t1.61\nHedF@@PfFTf{nZjf@FCIaTt`\t1.61\nsJX@@eSU@LECqK@\t1.61\nj`q``@D@]dTTtTRVJXKUfjA`bh@AaSdeZ}qFC@\t1.6\njhia`@D@]yIYfU}VgEFZ`XHih@A`q`iJtGbHV@\t1.6\nJoCB@@a^QIQQQHkLNfuHTAT@A`r]Jf\x7FD`P\t1.6\nJoCB@BA^QJJJIKEUrfu@pQT@AaSCJoqHt\t1.6\nJoCB@BA^QQSQQHyLNfuPLAT@AaWRnoqLD\t1.6\nHg~D@D@|bTTTRNU\\nmPLAT@CBfFUobQp\t1.6\nJoCB@B@zRsLk\x7FWJ[TCADp@FELLkoL`{@\t1.6\nHk^H@DCHhihhdVGSZhF@`@XEtkoLpS@\t1.6\nHk^H@ACHdhhhdVGSZdJ@`@XTgRi|rAt\t1.6\nHcnH@DCHeEEDcWKkTC@P@LBXYWfQv`\t1.6\nHmtHPABHVHRYeY[hBBh@FCAaUr|PY@\t1.6\nHcLHPABHVHRYeYvz@`j`@XLFEWKqIt\t1.6\nHk^H@DAIYfUzySZ`XH`@XDproLcS@\t1.6\nHg~H@DAIfye]avvjA`b@A`WRn|sCl\t1.6\nHeWDAHHPRISdfygXVijd@XIW\\Qi@\t1.6\nHigDAHK`RISdfyUnZfi@FBTOHH\t1.6\nHigDAHHPRISdfyeaZfi@FDUqFx\t1.6\nsNy@LDeUjj@XTKF|TX\t1.6\nsOt@@Ti]qej`FBeyef\t1.6\nsF|@AbeLzmU@LLm^P`\t1.6\nsGY@DDeUj`FFQoEL\t1.6\nHif@@@RUe^Gh@@@XTUMp|a@\t1.6\nHcND@DCTeUe^UZh@H@FGHS\\L{qHp\t1.6\nsOy@DDeekZj`FFu_EB\t1.6\nsJP`@dfzhA`inXH`\t1.6\nHmuH@LDDeYW^Fjjj`A`HPaTwSrE@\t1.59\nsJU@DPdru@LHnKD\t1.59\nsJY@HDizXAyeb\t1.59\nqCpPXQBRu@XXQ\\f@\t1.59\nsJQ@@dsU@LLL^JH\t1.59\nsJX@@eSU@LLl^R@\t1.59\nqCb@AIV`LDmrP\t1.59\nqCaPQ@Hck@XS\\`@\t1.59\nsGP`@dfyj`FBMxe`\t1.59\nQM`AIhFE\\Q@\t1.59\nsOx@@eLm]UT@pXbu_HP\t1.58\nHcND@LCTeme^UZh@H@FGHS\\L{qHp\t1.58\nHaDH@@Rfu[j@@@FFYS\\qBx\t1.58\nHg\x7FD`LFyt@aJYY\x7FlfkjjjYjPA`pPaC_Lkc@\t1.57\nHmN@`FBHRYVukiV@@@@@XLBYPkrI@\t1.57\nHeVL@ICARf[^njjj`A`LHUMpsrL@\t1.57\nHifD@AAldTRekjjj`AatXUMp|a@\t1.57\nHid@P@qFqDfUfn`BH@FA@fMqND\t1.57\nHiTH@@RfU|kahDB@A`QMp|QJ@\t1.57\nHieD@DDFR[fVEijX@XQwDR`\t1.57\nHaFD@NBdefZyfi`AaC\\RB@\t1.57\nsFy@HDi[FehAaKqX`\t1.57\nsJT@AdizhAa`mqP`\t1.57\nsGQ@@djmT@pvMxh`\t1.57\nsF|@AjeKxmM@LEMqJ`\t1.57\nsGT@A\\dbMU@LCEcrT\t1.57\nsJP@DizhAa`cqS@\t1.57\nHifD@D@TefUnZjf@FAXS]qHh\t1.57\nsNpP@btf{Zj@XEXodh\t1.57\nsKT@Adi\\Vf@XS\\tQ@\t1.57\nsFx@@eRfuU@LMC^IX\t1.57\nqCp@AIZ`LEEqC@\t1.57\nsGQ@@dkUT@plVMy@\t1.56\nHiDJ@@PnEInvZjX@XDfDOHh\t1.56\nHifH@DAIVUxV`@@AaQTwCqHP\t1.56\nsJQ@@eMU@LEMqH`\t1.56\nHidL@@p\\dTTqkjjj`A`tHS\\ODr`\t1.55\nHidD@@EIe]ih@J@AaPHUCqLx\t1.55\nsBP@H|UT@ppbyL\t1.55\nsGXHLHaIVjhAaaEqF`\t1.54\nHiDJ@@PfEIn{Zjh@XLfESCrN@\t1.54\nKAxH@TvRRJNjZ@LLSByG@\t1.54\nHeTL@@JTfYw[hHB`@XLFEWSrA@\t1.53\nHeVH@DAIgeQej@@@FCIeMp|bP\t1.53\nqCj@KAIV`LHnJX\t1.53\nsOy@JDiWMjj`FAbqyF\t1.53\nj`qPB@AVAHILkkJ{QakP@UUUD@CBRLDiIVcNxcg`\t1.52\nJoB`P@vD`drnlktqw@AUUQ@A`JXURngqN\\\t1.52\nHg}@`AlIAIe]YVfNx@Jjh`A`JXURngqNl\t1.52\nsNxA@IRfZjhA`xlZ~P@\t1.52\nsGY@DDf]j`FBMxe`\t1.52\nHidH@@Rfuvz`@`@XYeMsDHP\t1.52\nHifH@AAIYW[f@B@AaVESCrH@\t1.52\nHidH@@RfU~F``@@XLfDwCrJ@\t1.52\nQMJHBHvAaOH@\t1.52\nQMB@HRZAaOD`\t1.52\nsGY@DDeej`FBexlP\t1.51\nsJY@DDeVhA`h^IX\t1.51\nHidH@@Rfuvz`@`@XXfMsBhP\t1.51\nHaF@@@Rfu[j@@@FEXUMwDA@\t1.51\nHaFH@LAIYfnZjh@XDaUwDa`\t1.5\nsOy@LDeekZj`FAQkxi`\t1.5\nHaDH@@Rfu[j@@@FFIc\\pjx\t1.5\nHeTD`HP@cIHXdmpk@A@@pHj[nHD`\t1.5\nQM`BN`XUqD\t1.5\nHiV@@@Rifzyajjj`AatIaTw\\`P\t1.49\nsJXA@IRij`FFVODH\t1.49\nsGX@@eLuT@pLVODJ\t1.49\nj`iP@@@PRfUUg_EIF]zZb@@@@@FBbLEIVcV]{dD@\t1.48\nj`qaB@MBADILklmkQcoP@UP@@@CAPDXISakN}rB`\t1.48\nJocDP`rDatsvQQISJJVTr{[p@UUTL@FCIVg[|SE@\t1.48\nj`i@B@@ABTsLjotyJvgT@P@aP@@pd@cARUhunH]x\t1.48\njdy``@J@BdlsOJkbezKMUPTBH@C@QJLUYwh|qCQ`\t1.48\nj`qA@@@YHheEdXdaR]z`bB@@@@XZPQgARtZso\\aP\t1.48\nj`aaB@HB]DYIHkECDeK^jjf@H@@XZ`cAJ\\Ujso@\t1.48\njhqa`@M@IIIf]{eYgHHBjjh@A`xFBTxJRmFl{pP\t1.48\nHo~HHNnIAICIAXcIIKEEhcIvjBBJ`@XLwKiwrG@\t1.48\nj`qP@@@XRfV]{V`g^BBb`@@@FFdDhs`mFl{wHJ@\t1.48\nj`qQ@@JV@eMrsooEFmPPTUTP@LEHHs`iJtYwH^@\t1.48\nHg]DqNm]bPRPrPz]{IIKEDheIuPPLP@LLXSyE`\t1.48\nj`qa@@J@RVYgm\\Tg^YjjB@P@F@bTXhug^yb@m@\t1.48\nHcMDpnd]bPRPrPZQyYwlddlRbLkUMUT@LDj^Qp\t1.48\nHg^HHNnIAICIAXcIIKEEhcNuPPQP@LJ[ev~PX\t1.48\nJobD@@ILsJr|wif}PTEPe@AaXXUMprng[|b@\t1.48\nJoc@@@YHhhheEcrsYoPAA@B@@XJS\\Lkiv\x7FH@\t1.48\nHg\\HpMbPRPrPrRRqIPsCMT@ET@CCjXYt{yB`\t1.48\nJgB@P@AFRJJJIIFad}n`@`@`@C@PIne]ObCX\t1.48\nJoBD@@YHihdcDepv}@PP@@@FBeS\\Jz]orD@\t1.48\nJoCDPBbDPdrnwJtuo@AT@@@A`hIaUvg[|`P\t1.48\nj`a`P@A@P{rSKKOkJtuMUUL`@phS`iVxag`\t1.48\nJob@P@ABTsLjoWS^oPA@BD@@XBALLkm|Pw@\t1.48\nHg\x7FH@HyVrRQJIWIUtkUSUUT@LApjxYt~IE`\t1.48\nHko@PITpbNbLbbbTURXXBHZP@XBFTwBi|cP\t1.48\nHg\\LpINxdDdLdLddlRTJ`kU@DS@@pJfF~QH\t1.48\nJoB`@@YdbbTVLRUC[aAQ@@@@XJaTpkiv\x7FHx\t1.48\nHk~@@HrRQQIFHUgYNjjjjh@XJfEWCJz_HX\t1.48\nHg]DpBX{BlFlVlRYf{~zXHbJX@FA@JwqBX\t1.48\nHcl@P@BABLdTRafQTnuKLuH@pDDJae]yG@\t1.48\nJoBdP@sXQBSJvlkSJ\\@EMSD@FC@fUi|Sg@\t1.48\nHknHpINIAICICIIKDeMaVj@Hd@FATLkqFt\t1.48\nHknHpCjIAICICIIJeEDmNjhB@@FADJ{rI@\t1.48\nHg^HpCjIAICICIIJeEDiiuU@PP@LBHUwdV\t1.48\nHcN@HNbPRPrPVHrRRqQZSmTDD@@pInW^QH\t1.48\nHklDpMNIAICICIIKDeeAfj@BX@FATwGrA@\t1.48\nHg\\DpINIAICICIIKDeMhJuPADp@LBiaodJ\t1.48\nHk\\d@dpSAPzIZUyIfYoVgSjjifh@XEWZX\t1.48\nHg|H@@rJJIHqIMqw@PP@@@LEpj[iWSod@\t1.48\nHg~D@DClbbTTTjSB]mUL@D@C@TXYWSodX\t1.48\nHg^H@ACIEDdhlYrtDEEP@LMSBinFUt~QX\t1.48\nHk_H@HyVrRQJIWJneZjZjj@FGXU\\L{qHL\t1.48\nHo~L@M@iRYg^ufzB@jj`@XZFEWCNg[|aP\t1.48\nJoBd@EVBTwKN\x7Frg]AAQUD@FDhS\\Lki|ap\t1.48\nHg~@@@rQQQUQIUqwSMP@P@LA@fz]N~YeJ\t1.48\nJoCD@B@drsJkkYnu@@@@@AaJUprng_DYp\t1.48\nHo}L@FFnoIIEEEB\\avjYjih@X]cCJf\x7FHH\t1.48\nHedBJHSBCpzHFHfHKlddqTcUUP@pkJxY@\t1.48\nHc^@@HRjU^^dUGZjjjj@FBiaTwCJ{rH@\t1.48\nHcmH`FeXBLddRJRUMpuUUKP@pjLJnxbZ\t1.48\nHknH@ACIEDdhl^V``hh@FBiaTwCJgrM@\t1.48\nHg|@@LddTjTrPr]uP@@@@C@TpjXUOb[X\t1.48\nHg|@@LddTjRRPr]uP@@@@C@Tpjy]ObMX\t1.48\nHg}H`AfpbDfUmYZYS`@ijR@FE@fT_D{P\t1.48\nHcoH@HyVrRQJIWUtkUSUU@CAlJnF^IF`\t1.48\nHg}H@JlDinV]~T{hHJJb@FDhS\\Lki|bp\t1.48\nHg}@@@qJYWyVnNp`b@@@A`jES]Jz]|c@\t1.48\nHedDpJZHaHcHcIIKEiUUT@LNaLInGdR\t1.48\nHkmD@AvnrRQQsQKSjfje`AarXSRi|c`\t1.48\nHmvDPLa@BNbLddlTVeUhH@@FEXwBoHd\t1.48\nHg|H@@RYfUWd}mh@@@@@XRUMpriwrM@\t1.48\nHmOH@HyVrRQJIVneZjZj`A`vEWCODaP\t1.48\nHmv@pIbPRPrPrRRqIPUj`B@@XYPkqFd\t1.48\nHmu@PITHchcHhheEVF@bF@A`pYS\\OHT\t1.48\nHmtHpIbPRPrPrRRqIPUj`B@@XYSCqIT\t1.48\nHkmL@FFnOIIEEDlqvjYjf@FEXproHH\t1.48\nHiDDpJZHaHcHcIIKEjjj@FCPfDp|c`\t1.48\nHknD@AALbbTRbqWVijjd@XTWCI|Qe@\t1.48\nHo~L@AAGRYYY}UujZjjT@XTWCM|Qc@\t1.48\nHmMHADp@zIRYeuIiVjh@@@XUgCJ|b`\t1.48\nHg]L@DpFEIeY~^nZifjh@X\\fRng_Hx\t1.48\nHeuHADp@zIRYUTjFZj@@@FEHwCOHp\t1.48\nHklH@@RYWY^f`@jj@A`hIaUpki|bP\t1.48\nHcm@@@qJUvUpeuih@H@F@pa\\LkoHh\t1.48\nHcND@JCTeUe^UZjjj@F@iaMpsoDaP\t1.48\nHcLD@NwIIDcDbpuUUS@C@XSBiagdJ\t1.48\nHcMH@NVlddTZbR{UMTl@LFSBF]yC@\t1.48\nHcmH@DhDfUe]aWVjA@`@XTf]J|P]@\t1.48\nHcNH@IAIfUWEZ``b@A`lXUMprn|`@\t1.48\nHcNH`IDHaIe]mih@Ij@AapIaUJ|cP\t1.48\nHcMD@FFnrRQQQ]LMTsUP@pKIW^XSB\t1.48\nHcmH@DhDfUe]aWVjA@`@XDgRoLp]@\t1.48\nHmwH@Dp`RYyUeVjjj@FGIS\\LkrL@\t1.48\nHmvD@E@TfUvzZ@Bj@A`HIaUpsrE@\t1.48\nHmvH`IDHaIe]nf`@f`@XLBXUSrE@\t1.48\nHetH@@RYnWaFZjjZ@F@`aTwCODc@\t1.48\nHcLD@@QInYWWVjB@@A`JYS\\LkrM@\t1.48\nHmt@`@bDfUuZZ@Bj@AapIaUp|RU@\t1.48\nHiDLpB[`bDbJ|Dfunff`A`PI`|b`\t1.48\nHcND@LADf]YU]Zj@@@FGXWCJ{rJ@\t1.48\nHeV@PIBHzHRYeea`Ha@A`pYS\\OHd\t1.48\nHcND@EADfVU~UZjjj@FGES\\L{rL@\t1.48\nHmuH@DDDeYW^Ejjj`AarXUMt|RE@\t1.48\nHeVD`La@BLddlRPrm@@@C@linx`r\t1.48\nHct`@JF]rRQRzKUUSV@LFaLJfyD`\t1.48\nHcML@DpFEIeY}kfjYj`A`RXn|Si@\t1.48\nHmLD@@yIYe^neVdHB@A`SCJ|RB@\t1.48\nHmUDB@UiB\\ddUbtjji`AatIaUr`\t1.48\nHmv@@@RYvUeZj@@@FDpfDwCJ|`@\t1.48\nHeTH@NrRQHqLMUUT@LAaLJfF^Qp\t1.48\nHmv@@@RgVUeZj@@@FDaBXwCJ|``\t1.48\nHmvH@NAIYWUnZjjh@X\\fESCODaP\t1.48\nHmwH@DJPR[YWFVjjj@FCYS\\J|a@\t1.48\nHeVDB@ZPgIIEXdLuUUP@pzDpjxP\t1.48\nHmuD@DHNRY[]Jfjfj@FEXproDP`\t1.48\nHmuD@DHNRY[]Jfjfj@FALLksDp`\t1.48\nHeV@@@rRJIJmuUUT@LAaLInF^QP\t1.48\nHiEL`LZDh@cIHULeij@FFXp|PN@\t1.48\nHmvD@DCdfVyyUjB@@A`RMr|pad\t1.48\nHeUH@DpDeYUFVjjh@X\\aTwCOH`\t1.48\nHeUH@DHDfVuFVh@@@XLeMpsrB@\t1.48\nHmtH@@RYWYih@Jh@F@`fEWBoHd\t1.48\nHeT@`@bDfUuih@J`@X\\BXU\\OHd\t1.48\nHmVDB@FPgIIETijjih@X]BXULh\t1.48\nHef`@@SFyIeYfjZ`AapIeLL|c`\t1.48\nHieH@DDDeYWaZjj@FCIaTw\\RA@\t1.48\nHeUH@DDDeYWxVjjh@XLfES]qHd\t1.48\nHeU@@@EJYU^f```@FG@fES]qAd\t1.48\nHaD@P@bBbDfYvzB@@A`PDw\\SJ@\t1.48\nHieH@DDDeYWaZjj@FEXUMwLaA@\t1.48\nHeUH@DDDeYWxVjjh@XUaTw\\rDd\t1.48\nHeVH@FAIfUqfhH@@F@aFEWCOHX\t1.48\nHeVHB@XIrRQVICMUSR@LNaLKad\t1.48\nHeUH@DdDf^UFVjjh@XTUMp|qLd\t1.48\nHeUH@LDDeYWxVjjh@XLaTwSrH@\t1.48\nHeg@@JF\\ddTneUTp@pZDpj[bCH\t1.48\nHmW@@JE\\ddTnRjjfpA`tIaTwHx\t1.48\nHif@@@rRIHhjjjj@FGPaTwCrL@\t1.48\nHie@@@QIYUxVjj`AatXUMp|`@\t1.48\nHaEHADH@zIRYUJjij@FBMwDS@\t1.48\nHiFHB@DIrRQUJjjPA`tIaTwHx\t1.48\nHiD`@@SFRYUfjZ@FG@fTwCrB@\t1.48\nHif@`ABPRYWZZ@B`@XTfEW\\`P\t1.48\nHaF@`F@HRf_rjYj@FE@fEWD[`\t1.48\nHiE@@JGIIEKjji@FCPfES\\Sa@\t1.48\nHiE@@JGIIEKjjj@FCPfES\\Sa@\t1.48\nHeUD@FFnRjYeajfZ`AaF\\HfFP\t1.48\nHeV@@@RYyTYj`@@AaHPfTwCH\t1.48\nHifD@D@Tf[WaZjj@FAES]rL@\t1.48\nHaE@@@aJmUnjjh@XLfES]rH@\t1.48\nHieL@DpFEIeYkfjY`AaB\\SN@\t1.48\nHiFH@HGIIEXjji@FCPfEW\\a`\t1.48\nHeT@@DjU]k``b`@XMBESCqLd\t1.48\nHaF@@@ReU[jjj@FGPfES]r@@\t1.48\nHif@@@Ri]^Fjjh@X]BES\\OHp\t1.48\nHaEH@HSlddRmMUTp@prLKbIP\t1.48\nsNqBGIARFdKDYIIYUT@pQoHp\t1.48\nHieH@DHDeYWaZ@@@FEIS\\OH`\t1.48\nHieD@DHNRY[Rijih@XPwBSBD\t1.48\nHiEH@FzlddTZjfh@XTfDw\\`P\t1.48\nHaDH@@RVU[jjj@FCIaTw\\PH@\t1.48\nKA|Y@]BX@QddarVj`CCBinQp\t1.48\nHaE@@@yJe~fjjh@XMBXUMrN@\t1.48\nHid@@LdbRQk``R@AaTHUCqLX\t1.48\nHeT@@DjU]k``R`@XMBESSqLD\t1.48\nHaF@@@rRIHeUUS@CAhSBinQp\t1.48\nsNqBGIARFdKHYIIYUT@payF\t1.48\nHiFH@JAIUfZjh@XUaMp|RD@\t1.48\nHaFD@DAdfUjyjf`AabYWHx\t1.48\nKA|@@Uddbejj`CAhSBinQp\t1.48\nKAzP@MuYIHhzih@pILInQp\t1.48\nKAxH@UvRRJNjZ@LLSBxc\\\t1.48\nsNyiKE`D[lddjVj@XP|UX\t1.48\nsGPdE`DSpRYvj@XXF|Tp\t1.48\nsGQLLIAREdDfvj`FDgHP\t1.48\nsOpH@DISOkSK@LBEkqE`\t1.48\nsKXDD@b^BRvKU@LLL^R@\t1.48\nsOxA@IRjVnjj@XVKU|a@\t1.48\nsOq@@drm]UT@phQkxi`\t1.48\nsFxA@IRiSZj`FEbqoH@\t1.48\nsF|@@ldrfmU@LBl[r@\t1.48\nsGYHMQDIJmT`LLHnKD\t1.48\nsN|@@ldssUPCBaFodp\t1.48\nsGQhHlOAJmZhAaCqB`\t1.48\nsNy@LDeVjj@XTKF|TX\t1.48\nsGT@@deYj`FEBqoI@\t1.48\nsNx@JeTuUPCBqXodh\t1.48\nsNy@GTjfjf@XYX|c@\t1.48\nsJR@@lTfVhAa`mrD\t1.48\nsGY@DDf]j`FFQoI`\t1.48\nqCbHXRBdDfj@pdyL\t1.48\nsJ\\@ABeOL`LECqK@\t1.48\nsGX@@eMuT@phbqyJ\t1.48\nqCsCPKCevyIj`H\t1.48\nHaDD@@{IEDcSUUT@LJ`j[nHf@\t1.48\nQMhDRZAaGFP\t1.48\nHidH`ABHRYWZZ@BP@XTBXU\\c`\t1.48\nsFpH@DISNmLpC@aZ|a@\t1.48\nsGQ`@bdwMT@pROEj\t1.48\nqC`P@HRZhCBSfBp\t1.48\nqCr@XIKTA`hnHX\t1.48\nqCp@AIj`LDmqB@\t1.48\nqCp@AJZ`LEMqA@\t1.48\nJoCb@BvxTeMrkk]IwPPP@P@AaRDporC@\t1.47\nHcNB@JciwIIMEeKruUUU@CBXSBiae^Qh\t1.47\nHk_H@NtpRfumUaWZ@@@`@FAIcGqBd\t1.47\nHk_H@IWPRfunUatz@@H@@FAIcKqBL\t1.47\nHmVB@A@feIf[vjjj@FBaBXULLkrN@\t1.47\nHmwDAHHPRISdfyeVEjZjPAae]OHT\t1.47\nHmvL@JciRjyvyZjjj@F@pfESCOHT\t1.47\nHeWDAHHPRISdfyeXVijd@XIT|c`\t1.47\nHmO@@@rdigmZZUB@@@@FFYp|qIT\t1.47\nHeTB@HhYRjwUnjjj`A`tHS\\ODrP\t1.47\nHidL@HhTjmunjjj@FEPaLODs`\t1.47\nHiFL@F@nRYgZjj@F@aBXS\\OHh\t1.47\nHaE@@@sIEDceMST@LLPfxe\\\t1.47\nsNx`BJdrmUPCAbHu|f@\t1.47\nsOx@@eR}]UT@plqkyD\t1.47\nsGY@JDinj`FFbwDZ\t1.47\nsJY@DDeVhAaecrP\t1.47\nHg^L@M@iRYg^u[hHBjh@FBaaUprnwrC@\t1.47\nHidH`H@HRme^Eh@@@XTUMp|PD@\t1.47\nHid@`@bDfUvf`@h@FC@fEW\\`P\t1.47\nsFt@AdiWEihAahcrT\t1.46\nHaD@@DjUZxHH@AaTXU]qDX\t1.46\nsJ\\@@ldru@LDEqX`\t1.45\nHeTH@@rQQQHcMAP@@LFpj[axbR\t1.45\nHo}BAHLDUxeNR[e]m^Eh@JjP@X\\UMtj_Dvp\t1.44\nHkmLAHLDVISdfyW[xV`@j`@XLUMtkqML\t1.44\nJoBF@@HrS\\srzLv{PPD@@@FGISZ]orE@\t1.44\nHcLDrITJsjsZq^RYefVF@bF`@XXG[qLD\t1.44\nHkLNB@PfESSdf{n{Zjjj@FBxUMprnf\t1.44\nHclH@@rJJIPiMr{@P@@@CA`XYW^Ie@\t1.44\nHcMD@DHMR[nUyUj`@`@X]aMpsoHP\t1.44\nHeUD@BdARYgUnjjj`A`HPaTwSqLD\t1.44\nHif@PBBHzHRYgfFBB@@XTFMp|``\t1.44\nHeTL@@Z\\bbRbM]@DT@CA`SFz^PH\t1.44\nHmtL@@ZTieeqV`hH@A`rEproDi`\t1.44\nHmv@@@Ri^ueZj@@@F@pfMproHh\t1.44\nHeU@@@yJeWZzjjZ@FCPfES\\PY@\t1.44\nHeTD@NGIIDcCBUUMP@pJDpnHt`\t1.44\nHeVH@NAIYWVyjjj@FCIaTp|RI@\t1.44\nHieH@BDDfY}njjj@FGABEWCqLX\t1.44\nHmtH@@RfUWzZBBH@F@iaTwBoHd\t1.44\nHie@@@yJeWkjji`A`tIaTwDxP\t1.44\nHidD@NGIIDcHRjih@XEBXWDXP\t1.44\nHidH@@RUY^Ejjh@X\\fES\\OH`\t1.44\nHidD@F{IIEYhRjfh@XYFEqDD\t1.44\nHidD@@iJ[gxZB@@AaRDwCrJ@\t1.44\nHidH@@RfU~F``@@XMaTwCrD@\t1.44\nHaDH@NrRQHpeUS@C@hSBxeL\t1.44\nHaDD@F{IIEYBUTt@LLcBxb\\\t1.44\nsNyhMEPDYIBhmL@pfx`p\t1.44\nsOq@GddblUUL@ptqxeP\t1.44\nsFu@E`drfmU@LD[qK@\t1.44\nsKXA@IReqjhA`Xl^P@\t1.44\nsJY@DDeVhA`l^JH\t1.44\nsGX`DJdjmT@prMxi`\t1.44\nsFx@@eLzuU@LCEkq@`\t1.44\nHidH@@RYm^Fh@@@XLATwCqHp\t1.44\nHg]HpBXpkIkMkDfYemnVBHhf@AaPENwqFT\t1.43\nHknL@M@iRYg^un``Jj@AaHXU\\LkoHL\t1.43\nsGX`LDdrmT@pexlP\t1.43\nHeT@@DjU^k``b`@XCBXU\\L|a`\t1.43\nHeTD@@iJ[e^f```@FAHSCqNd\t1.43\nsFy@JDiTvjhA`Xl^R`\t1.43\nqCp@AIZ`LMEnP@\t1.42\nHaFH@JAJUtjjjh@XUBXS\\c`\t1.42\nHaDH@@RYWih@H@FFHU\\pLx\t1.42\nHcNLAHAEbTyInUvxV`@j@A`qTwRoHt\t1.41\nHiFDPJHPbDbDf{Vij`AaPPeCqFx\t1.41\nHeTH@@RYe\\YjB@@AatXU\\L|PF@\t1.41\nHidH`BBHRYeVFBB@@XDFTOD[`\t1.41\nHaDH`BBHRYg[hH@@FAAe]qBX\t1.41\nHeTH@@RYm_aZ@B@AaQTwSrL@\t1.41\nsOp@DjUMjj`FCDVMyF\t1.41\nsNx`DFdkKUPC@kE|Th\t1.41\nHif@@@RfU~F``@@XLFES]qDD\t1.4\nsGP`@TeYj`FFVOEJ\t1.4\nsNp`Jtjfjf@XYX|c@\t1.4\nsOq@@drm\\@@@prMyaf\t1.4\nHcNL@M@iRYg^vzB@j`@XBFEWCJ|cP\t1.39\nHiU@@@iJYWrnFP`H@FAESCqDx\t1.39\nKA|X@HC\\dkJuU@FEIaMwDb`\t1.39\nsJU@DPdju@LDmqP`\t1.39\nqCr@PIWTAaEqS@\t1.39\nqC`@ISTAxQE`\t1.39\nHcLHpMbPRPrPrRRqIPcMT@E@@pjfF]yB`\t1.38\nHk^D@IADf^UeFUujjjj`A`ITwBngrL@\t1.38\nHcnD@AADeYVWaeVjjjh@XCaTwRn|b@\t1.38\nHmtL@@Pdf{eYUj`@@AavDwCJ|a@\t1.38\nHmVDB@ZPgIIEXmJjjX@X]BXU\\h\t1.38\nHeTH@@RYWVf`@j@AapIaTL|c`\t1.38\nsGQ@@dsuT@pHVOEJ\t1.38\nsKX@@eKcUPCCSGbB@\t1.38\nqCb@AIj`LEEqC@\t1.38\nsFx@@eJfuU@LJIc^Q@\t1.37\nsGX@@eRuT@pLQoI`\t1.37\nHeVB@ICFEJYyzzjjj@FGPUMpsqDp\t1.36\nHeV@@@Re[TYj`@@AapES\\L|RD@\t1.36\nHifH@JAJUuJjjj`A`tIaMwHD\t1.36\nKAxD@@c\\dvluS@FBXWDS`\t1.36\nsGPa@erS\\uPCB[bM@\t1.36\nqCqPZHAD]XCqC@\t1.36\nsGP`@TfZj`FADMxe`\t1.35\nsJX@@eOU@LML^HH\t1.35\nsNx@IddbmUPCBqXodh\t1.34\nsGY@DDfyj`FBMxe`\t1.34\nQMB@HchFD\\Y@\t1.34\nsNq`@bdw[UPCCKGbk@\t1.33\nqCh@AIJtA``nJX\t1.33\nHif@@@RUe^Fh@@@XLaTwCq@`\t1.33\nHkoBAHePPcbTyInUuVyjZfe@FAUpkrM@\t1.32\nHmvD@NADfVyyUjB@@A`SCJ|Pn@\t1.32\nHeUD@DpFRUVTYZZZPA`REt|RA@\t1.32\nsOx@@eRimUT@plqkyD\t1.32\nsG]@EbDf]jPFBVyJ\t1.32\nqCh@AIJtA`inHH\t1.32\nqCh@BIWTA``nJX\t1.32\nHeTD@@QImeQej@@@FEIS\\ODrP\t1.32\nsJQhHl@bOV`FDOI`\t1.32\nHidD@@IIf][hHB@AaPXU]rA@\t1.32\nsOq@@drm\\@@@prKyaj\t1.32\nHmvD`Ia@BLdabRrxU`@h@FEES]ODAP\t1.32\nHidH@@RfU~F``@@XTfDw\\Ra@\t1.32\nqCr@XIJtAyhl\t1.32\nHknDrBtpkAkEkCyIf[effBBbX@FF@J|Pi@\t1.31\nsJ]@EbDfVhA`enP`\t1.31\nHif@@@RfU~F``@@XLBXS]qJD\t1.31\nHaD@P@bFbDfUjz@H@AaPIeMrN@\t1.31\nsJY@DDefhAaIqX`\t1.31\nHaD@@DjUZxHH@AaTHU]qLX\t1.31\nHg|L@@QdfygUQd{ZB@@@@FGISKiwrN@\t1.3\nsGX@@eSUT@ptQxmP\t1.3\nHeTD@@iIYe^e```@FAMpsqHH\t1.3\nqC`P@HRVhCBKfDp\t1.3\nsJU@DPdvu@LInID\t1.3\nqCqPZH^D]hCsAX\t1.28\nsNp`@df]Zj@XKWbK@\t1.28\nqCp@AJZ`LLHnS@\t1.28\n`Lg@^P\t1.28\nQMhDRVAaOJ@\t1.28\nHaFD@DCdfUriji`A`RXU\\a`\t1.27\nsGX`JBdruT@pHaoDl\t1.27\nsJX`LDdvu@LH^IX\t1.27\nHidH@@RfU~F``@@XEc\\OLPj@\t1.27\nsOt@AdigkB@@FAQkyL\t1.27\nsGXhMD@cIHTmPCB[fAh\t1.27\nRGDPDQ`|R@\t1.27\nqCb@AIj`LDEqS@\t1.27\nqC`@ISTA``nJX\t1.27\nHidD@@GHhdhZZ@B`@XTBTp|SN@\t1.26\nHg}H@DTDeUfUqT{ZjP`H@F@hWRng_Dc@\t1.26\nHcm@@@uJYU_rnf`Pbh@FG@aMpsqEt\t1.26\nHmtD@@iJ[eWihHH`@XTaLL|aP\t1.26\nqCr@XIKTA`enHP\t1.26\nHeTD@@iJ[g^F``H@FAHSCqJd\t1.26\nHmtD@@iJ[eWihHH`@XDaLODeP\t1.26\nqCr@HIJtAaIqK@\t1.26\nsOp@DjWkjj`FCDQkyL\t1.26\nsJX@@eMU@LLInID\t1.26\nsJXA@IczhA`hnKD\t1.26\nqC`@IVtA`anJH\t1.26\nQM`AIhFD|R@\t1.26\nsJY@DDfVhAaEqX`\t1.26\nsKPH@DIRxtl@pHfOH`\t1.25\nHaDD@@IIf]n``@@XTFES\\c`\t1.25\nHeT@pHdDdLdLddlRPsU@@@C@j[iy@`\t1.25\nsGQ@@druT@pHaoDl\t1.25\nQM`BN`XI\\d\t1.25\nQM`AIhFCOH@\t1.25\nQM`AIhGfR\t1.24\nsJY@LDefhAaEsSD\t1.23\nsJY@DDefhAyib\t1.23\nsOpHADILkW@@@LJDZ~S@\t1.22\nHaD@@DjUZxHH@A`TIa\\rfx\t1.22\nsOpHADILkW@@@LLE^[E`\t1.22\nHmvH@DAImYVUZh@@@XLS\\LkqDp\t1.22\nsOq@@drm\\@@@pQoBEf\t1.22\nqCr@HILtAaErX\t1.22\nsJXhMD@bOV`Gbq@\t1.22\nqCp@BOTA`hnS@\t1.22\nHaD@@DjUZxHH@A`THU\\sFx\t1.22\nqCr@HILtAxe`\t1.22\nHidH@@Rfufz`@`@XXfMsBxP\t1.21\nHaF@@@Ri_ijjj@FEPaTwDs`\t1.21\nsOx@@eJymUT@plVMx`p\t1.21\nqC`P@HRZhCAK\\P`\t1.21\nsJY@DDeVhAaMsQD\t1.21\nsOy@LDeekZj`FAVKxiP\t1.2\nsJXA@IRij`FAbqy@\t1.2\nqCa@AIMTA`inHH\t1.2\nHidH@@RfU~F``@@XUaMp|QJ@\t1.2\nsOr@AcTiek@`@GfQX\t1.2\nHidD@@iIYgxVB@@AaQTwCrH@\t1.2\nHaFH@NAIYUnX@@@XEaTwH`\t1.2\nsJQDBHaQBS]R@ppbyL\t1.2\nsGX@AddQjhAah[qK@\t1.2\nHmvDAHAHeNR[e]xV`@h@FAES]qIT\t1.19\nHmLD@@eIfUTfEV``R@A`U\\J|c@\t1.19\nHeTH@@Rfuunh@J@AaRYSCqBd\t1.19\nsGXA@IRijj@XFKGbE@\t1.19\nsJX@IGuPCCQ[dH\t1.19\nsOp@DjWkB@@FAfKxeP\t1.19\nRG@DXOD`\t1.19\nsJY@BDfZhAahmq@`\t1.18\nsGQ`@ldsmT@pQoI`\t1.18\nsGQ@@dsuT@pHaoDl\t1.18\nsJX@@eOU@LBIcrH\t1.18\nHmvLAHAEbTyInUwaZ@B`@XTUMr|bP\t1.18\nKAxUBPfEp^F\\WYIIbfjd@pbnPp\t1.18\nHif@@@Rge^Fh@@@X]BES\\OH@\t1.18\nHaF@B@BTjUZxHH@A`tIaUwHX\t1.18\nqCh@CISTA``nJX\t1.18\nsGU@E`dsmT@pROEj\t1.18\nsKQ@@eKcUPCCSGdP\t1.18\nqCr@PISRAxe`\t1.18\nHknL`IaM@HrRFIKISaV@Bf@A`qTwR_H@\t1.18\nHk^@@@RiU{Vntzjh@H@FBpfEPrngrN@\t1.18\nHifL@NBaReYrZjjh@XMaTwCqHP\t1.18\nHcLD@@kIEMDdcttDDT@CAdIae^Qh\t1.18\nsJY@LDejhAaaEqX`\t1.18\nsNp`@df]Zj@XKGbk@\t1.18\nqC`@ISTAaAsQX\t1.18\nJoba@FCBJzUSsZoSCiwUUTuMP@XTaR]|Rn@\t1.17\nHeTLB@QdyInYqehH@@FETwCH\t1.17\nHaF@`FBHRYVkh@`@FE@fUwHX\t1.17\nHifH@NAJ[VXZ@H@A`RXw\\Pa@\t1.17\nHaE@@@qJYVnBB@@XTfEW\\a`\t1.17\nsFtHLPDISNmLpCCAWdH\t1.17\nj`qaB@GBAHILkmroQegP@SUUD@CBRLDiIVcVyCp\t1.17\nJoCDPCbD`drnwJtuo@AMUQ@AaJXURng_H\\\t1.17\nHkoD`LDxP@cIIBhdmeuZ`PH@FGXwCJgrJ@\t1.17\nHg]L`LnDD@cIIBhhd]ikTC@P@LF[iW[yF@\t1.17\nHmvDRLa@BJbL{IIBidiUZ`@@AaUMpsrE@\t1.17\nHg^L@DAaRUf^uNvjj@@@FBiaTprngqHl\t1.17\nJoBD@@ILvnroC[m@A@@@@XRUMrz]orL@\t1.17\nHo\x7FH@DVpRYYU]YujBBJ`@XJaTwCIv\x7FHT\t1.17\nHo}D@ElDRYYU]YujBBJ`@XRUMpr]orE@\t1.17\nHcOD`LWXP@cIIKDedLkP@R@C@j[axfZ\t1.17\nHcND@FATfYev]jB``@FDaFEWCJ|Qm@\t1.17\nHcLD@NGIIDcDYBUULu@CChSBY]y@`\t1.17\nHeTHPBBlzlRYgea``b@AaPXWCrI@\t1.17\nHmtH@ArRQHiRDjjVh@X]BXURoHX\t1.17\nHeVH@IAIfu~Fh@H@FCAATw\\SI@\t1.17\nHidH`ABHRYWZZ@B`@XLBXUCrN@\t1.17\nHeV@@@RYyTYj`@@A`HIeMpsrH@\t1.17\nHeTD@@qIUeQej@@@FCIS\\L|b@\t1.17\nHid@@LddUTaJjZ`A`tXU\\OHP\t1.17\nHaFH@BAIf]n``@@XDFTwDK`\t1.17\nsNx@HeTuUPC@kU|a@\t1.17\nsKP@DjTZj@XDQGdp\t1.17\nsGX@@eSUT@pJqoI@\t1.17\nQO@HyjA`erP\t1.17\nHeTD@@QIemQej@@@FATwCqBd\t1.17\nQM`AIdGfR\t1.17\nRG@DXLJy@\t1.17\nj`qA@@@YHihhhdd]Nmzj@B@@@@XZ`s`iJtZso\\``\t1.16\nj`qa@@F@RYV{m^gKN`BJ@B@@FB`HqSbmFm{dI@\t1.16\nJgB@P@AFRJJJIIFad}n`@`@`@CBPIne]N~PH\t1.16\nHg]DrBX{BlFlVlodfYn\x7FnfBHbf@Aa`BoDI`\t1.16\nJoBD@@YEEEEDdbmf}P@P@@@FFqS\\Lkiv\x7FH@\t1.16\nJoBP@@XUYHhhceDdwVxEAP@@@FCEWBn|p{\\\t1.16\nHg^HpBLJrZsZqIfVYYe``jI`@XT@sm|SE@\t1.16\nHg|@@LdbbRLrSB]aDP@@@CATJfFUt{yF@\t1.16\nJoCD@C@drm|kuqw@DP@P@A`hIe]Jz[|a`\t1.16\nHg\x7F@@@qdigvU|kSZj`@h@FDiaTLkm|a`\t1.16\nHkmD@ELDrJIQIIF]Z``b@AaqTwCI|aP\t1.16\nHeWD`LjXP@cIHUDdLkP@@@pSFy`\\H\t1.16\nHmtD`NTHaIe]Vf`@jP@XLBXUCrI@\t1.16\nHeVD`La@BLddlRPrm@@@CCLj^XwB\t1.16\nHcLD@@QIeeUgVhHH@AaqTwCN|aP\t1.16\nHeTH`BBHRYeUa``b@A`PYP|Si@\t1.16\nHmvH@DAIge\\YZ`@`@XLfTwCrE@\t1.16\nHeVD@DBTeYWxV`@`@XLaTwSrH@\t1.16\nHeUD@LdDRY[TYZjj`A`UMp|Pi@\t1.16\nHidH`BBHRYgVzB@`@XDFUwDHP\t1.16\nHeTH@@RV[TYZ`@@A`qTwCODa@\t1.16\nHid@@LddRL[jjj`AatIaUp|a`\t1.16\nHeVD@FADfygFV``@@XEWCODQ`\t1.16\nHeVH@IAJ[WVz`@h@FCIaTp|bP\t1.16\nHiT@@DjUfa[``hH@X]BXULOHx\t1.16\nHieD@LDDR[e^Ejjh@XDUMwDPP\t1.16\nHidH@@RYm^Fh@@@XLDESCqLx\t1.16\nHieH@DXDfyWaZ@@@FAEWCrD@\t1.16\nHaDH@HRjw[jjj@FCPfTw\\``\t1.16\nHaF@@@RiUkjjj@FEPaTwDs`\t1.16\nHaD@@DjWzZjj`A`pPaUwDq`\t1.16\nKAxH@@bRjsUT@XUaTw\\b@\t1.16\nsOq@@drm]UT@pXVM_I@\t1.16\nqChPK@HRUhCAA\\Tp\t1.16\nsJYiCE`D[h}Z@^P`\t1.16\nsJX`LDdvu@LEcrH\t1.16\nsGX@@dk]T@pvMyD\t1.16\nsJPa@erS[T@|VH\t1.16\nHaDD@@IIf]n``@@XDFEwDi`\t1.15\nHidD@@IIf][hHB@AafUwL@a@\t1.15\nHiDHPHApiprRQVRjj`A`rXS\\H\t1.15\nsJ\\@@ldru@LLEnP`\t1.14\nsJQ@@dsU@LLEnJD\t1.14\nQMPARVAaGFP\t1.14\nqCb@AIZpLDMrP\t1.13\nHaD@P@bNbDfUZZ@B@AaPHS]rL@\t1.13\nHaD@@DjUZxHH@AadIgBJfx\t1.13\nqCp@AIj`LMEnP@\t1.13\nKA|P@HBS[KUT@XDUMwDS@\t1.12\nsKP@Di\\Zj@XDQ[dH\t1.12\nHidH@@Rfy^F`H@@XDU\\ODQ`\t1.11\nsNu@EPdrsUPCCKWbK@\t1.11\nHaDH@@RYe[hB@@FAXS]q@h\t1.11\nHaDH@@RVU[f@@@FFTw\\rLH\t1.11\nsGP@Divj`FFBoMLP\t1.1\nsKT@Adi\\Vf@XFKD\t1.1\nKAxD@Ae\\dmvuU@FEIaUwDa`\t1.1\nqCx@AYIf`LHNIX\t1.1\nHeTH@@rQSIPmu@AP@LBSNGfDt`\t1.09\nHidD@@EIYW[j@B@A`PXU\\rFD\t1.09\nsGX`LJdmuT@pHboEb\t1.09\nsJX@@eMU@LBHmrD\t1.09\nsJP@DkVhAaacqQ@\t1.09\nHeTD@@IIf]vzB@h@FCAaUp|bP\t1.09\nsKT@Adi\\Vf@XZH|f@\t1.09\nHid@P@kAkDfUff`@h@FA@cCqLx\t1.09\nqCx@AYIf`LDErX\t1.09\nHifH@DAIVUxV`@@AaRES]qHD\t1.09\nsJX@@eKU@LCEcr@\t1.09\nHaF@@@RYe[hB@@FEXUMwH@\t1.08\nsGX@@eNuT@phfMyD\t1.08\nHaD@P@qFqDfUjz@H@A`PIc\\Rn@\t1.07\nsKX@@eKcUPC@qX|`@\t1.07\nHif@@@Rge^Fh@@@XMATwCq@P\t1.07\nqCa@CIJtAaEqS@\t1.07\nqCb@AIV`OME`\t1.07\nHmtB@@zURVUgXV@Hh@FEXWRoH`\t1.06\nqCp@AJZ`LLEnR@\t1.06\nHidH@@Rfuvz`@`@XDfTwDHP\t1.06\nHg|@@DjYV}~T{`d@@@@FBic\\LkiwrJ@\t1.06\nHidH@@RfU~F``@@XEaMwLRa@\t1.06\nHidH@@RYWZZ@B`@XTBXU\\Sa@\t1.06\nsJP`@TeVhA`d^JX\t1.06\nHcNJ@MCNeTify^ajjjj@FBpaTwCJ{rL@\t1.05\nHmvB@EAaeJYY^njjjh@XSFES\\LkrD@\t1.05\nHk\\D@@iIYgU^GSXH@@@@XLURngqHX\t1.05\nHmLH@@RYVuiiV@@@@@XLE\\LkqDp\t1.05\nsFq@@eLzuU@LCEkrD\t1.05\nHaDH@@Rfu[j@@@FFIW\\sBX\t1.04\nsGU@E`dsmT@pQoDl\t1.04\nHaFH@NAIe^f`@`@XDfEWDC`\t1.04\nsGU@EPdrmT@pRoEb\t1.04\n`IJpCr@\t1.04\nqCp@AIZ`LHnXS@\t1.04\nQM@HzAyd`\t1.04\nsNx@@eJ}UPCBqZobA@\t1.03\nsNq`@fdvkUHCAX|Rh\t1.03\nsJX@@dkU@LMEnHD\t1.03\nqCp@AIZ`LEMqA@\t1.02\nsGPXHlPDYIHUj@XP|e@\t1.01\nsOx@@drm\\@@@pQoBEf\t1.01\nsGT`EPTfyi`GbU@\t1.01\nqCpB@RduPFFbwH@\t1.01\nHefDB@XPgIIETiUUL@LJaLJnQH\t1.01\nHidD@@iJ[gxZB@@A`RDp|Rn@\t1.01\nsNyA@qNRRJuU@LCEcqU`\t1.01\nsGU@EPdvmT@pRwDZ\t1\nsJX@@eOU@LBHmrD\t1\nHeVH@DAIYmQej@@@FETwCOD``\t1\nHeTD@@iJ[e^f```@FEHS\\OHd\t1\nsOpHADILkW@@@LBDWqZ`\t1\nHaDH@@RYWih@H@FA@aUqLx\t1\nHidH@@RYm^Eh@@@XDUMwDpP\t1\nsOpHAHILkW@@@LBl[rL\t1\nsFy@DDfTujhAaekrD\t0.99\nsKX@@eKcUPCCCGbb@\t0.99\nqCb@AIZ`LDMqQ@\t0.99\nHg|@`@bLbbbRLRS\\]pDD@@@CAPpfzUt{yE@\t0.98\nHklJ@@R]MIemYqUj@Hh@FETtz_HH\t0.98\nHeTH`ABHRYWZf`@f@AaPIaUrI@\t0.98\nHcLD@@eJ[V][j@Bj@AaRYp{qBT\t0.98\nHie@@@QInUxV`@@A`pHUMwHD\t0.98\nKA|P@HBSMkUT@XDUMwHp\t0.98\nsNx@@eLuUPCBbKWbK@\t0.98\nsNx@@eJmUPCAqXu|`@\t0.98\nqC`@IVtA`enHP\t0.98\nsNyABCJSOUU@LJHj~KD\t0.98\nsGQ`@bdwMT@prqyJ\t0.98\nJoBD@DIU\\vjzv[uP@@@@@X[EMprng[|``\t0.98\nHg|H@@RYfUWd}nh@@@@@XZATwCJz]|b@\t0.98\nHmTFB@PfETyIn{mjjj@FGXUMpkrI@\t0.97\nqCbPPABUm@XI[d@\t0.97\nKAxDD@S]wILsuUPAaPPaMqLh\t0.97\nsNx`JDdrkUPCAE|Vh\t0.97\nHaD@@DjUZxHD@AaTXU]qDX\t0.97\nHidH@@RUe^Fh@@@X\\DES\\OHP\t0.97\nHaDH@@Rfu[j@@@FAIeMqBx\t0.97\nsGX`DJdjmR@pbyib\t0.97\nHaD@P@kNkDfUZZ@B@A`PHw\\SB@\t0.96\nHiFDB@XPgIIETjji@FEPfEWHx\t0.96\nJoCF@F``iLkJ|jz]mUUUUP@XJUMpriv\x7FHp\t0.95\nHg^D@E@TfUvujZ@Bjj@AahHU\\LkiwrL@\t0.95\nHmtD@@eIfUTUjBB@@XBDES\\L|SE@\t0.95\nHmvD@LATenUqej@B@AarYS\\J|b@\t0.95\nHeVH`NdHaIe]ZZ@Bd@FC@fEW\\`P\t0.95\nHif@@@rRJEKajjj@FGPaTwCrL@\t0.95\nHmtD@@QImYVUZX@@@XTwCJ|qLH\t0.95\nHeTH@@RfUWihHH@AaVES]sDFP\t0.95\nHifH@AAIe]ih@J@A`pIaTOHx\t0.95\nHidD@@iIYgxVB@@A`QTw\\RA@\t0.95\nHaFD@DCdeeVyjj`A`VES\\b@\t0.95\nsOp@DiUkjj`FCDVMyF\t0.95\nsJPhH`DYIBm@LEcr@\t0.95\nHeTH@@rQSIPmu@AP@LJSFx^HT`\t0.95\nHeT@pHdDdLdLddlRPsU@@@CCJF^Hw@\t0.95\nKA|PD@pSddbljj`CAhSBinQp\t0.95\nHaDH@@RYe[hB@@FAAaMqJx\t0.95\nsJY@LDeZhAaaMqH`\t0.95\nHcNH@DAIevUWVj`@@AarUprn|SB@\t0.95\nsGP@DiUiPFADVxcP\t0.95\nsJT@@TizhAaaMqH`\t0.95\nqCr@HIJtAyhl\t0.95\nsOx@@drm\\@@@pJq_DJ\t0.94\nsGQ@@dsUT@ppQyij\t0.94\nsGU@DPdwMT@pVODj\t0.94\nqCp@AIZ`LInXQ@\t0.94\nJoB@@BUJssoPvxPTA@@@FFpaTLkiv\x7FDs`\t0.93\nHidHPBBlzlRYgfFBB@@XDF\\ODI`\t0.93\nHmvH@AAIYWYnX@J`@XMaTtkrH@\t0.93\nHidL@@IdfYoa`b@@FE@UMwHD\t0.93\nsFt@ATiTvjhA`qEcP\t0.93\nsNy@DDeeZj@XGFod`\t0.93\nsOx@@drm\\@@@prMyaf\t0.93\nsGP`@dfuj`FBVxcP\t0.93\nHaDH@@Rfu[j@@@FAXUMqDx\t0.93\nsGY@LDeVj`FABqxiP\t0.92\nHcND`La@BLddJfRtjmP@P@LFqnF]yE@\t0.92\nsGU@EPdrmT@pRwDZ\t0.92\nsGQ@@djmT@pruxhP\t0.92\nqCp@AJZ`LInXQ@\t0.92\nqC`@IRtAaAsQX\t0.92\nqCbPXABRt`^XQ@\t0.91\nqC`HBHTPduPFFDWI`\t0.91\nHid@@DjU^nBBH@FCPaUp|SF@\t0.91\nQMPARZAaGFP\t0.91\n`IH`CB@\t0.91\nQM`BN`XQqd\t0.91\nKAzH@IP\\dvjuT`FFIe\\Pf@\t0.9\nsNqaIV~RjzjXAaIqX`\t0.9\nsGY@DDeUj`FBQyij\t0.9\nsJY@DDeVhAaEsSD\t0.9\nsJY@LDejhAa`cqS@\t0.89\nHidH@@Rfuvz`@`@XEaTwDPP\t0.89\nsJQ@@eMU@LEEqX`\t0.89\nsJQ@@dsU@LLHnKD\t0.89\nsJQ@@dju@LH^ZK@\t0.89\nHiDJB@PfENR[nvjj@FEXULOHx\t0.88\nHidH@@RfU~F``@@XDfDwLka@\t0.88\nHaD@`@dDfYVz@`@A`VDw\\b`\t0.88\nKA|H@TBILlmUPAafEwDi`\t0.88\nsNp`@dfUZf@XHobu@\t0.88\nqCp@AIj`LLEnR@\t0.88\nHeV@@@rRHqICMT@@@LFbfxYxbX\t0.88\nHmvH@LAI[YVUZh@@@X\\aMproDc@\t0.88\nsKXHB@aJWFe`FFDwH`\t0.87\nHidD@@iIYgxVB@@A`QMp|RJ@\t0.87\nsOpHADILkW@@@LBEWqX`\t0.87\nHmtD@@UIUe\\YZ`@`@XMeMpkqHP\t0.87\nsJX@@eKU@LLL^JH\t0.87\nsJQ@@dsU@LLH^IX\t0.87\nHkLNCHiiWS[ex~rRSQHqRjZfX@XYFD\t0.86\nHmn@@HRjuYX^gejjjj`A`lIaTwCJ`\t0.86\nHedJA@RaeNgdfvvZjf@FFYS\\``\t0.86\nHefDB@XPgIIETiUUL@LJaLJ^QP\t0.86\nHif@@@Rge^Fh@@@XLDES]qDD\t0.86\nsGPBIHJPtaXcIIKUPCBWdH\t0.86\nsNq@GddbmUHC@qX|e@\t0.86\nsGY@LDefj`FABqxiP\t0.86\nsNx@HeTuUPCCKGbk@\t0.86\nsNp`@dfvZj@XGFodP\t0.86\nsGX@HeTuT@prqxiP\t0.86\nsJPH@DILuPCAQ\\pq@\t0.86\nsJY@BDfZhAaaMqH`\t0.86\nsNp`@dfUZj@XHwbs@\t0.86\nsJQ@@dmU@LLEnJD\t0.86\nsJX@@dkU@LCEcr@\t0.85\nsJXhMD@cIHUhAyab\t0.85\nsJT@@TizhA`h^XK@\t0.84\nqCh@BIWLAaMqQ@\t0.84\nqCj@KAIf`LHnS@\t0.84\nHmN@@@RfUWrnf`Pb`@X\\BDwCOHT\t0.84\nsOq@@drm\\@@@pHQoEf\t0.84\nsGQ`@jdjmT@pVOEJ\t0.83\nsGQLKIARFdLddmU@LH^R`\t0.83\nsJXhMD@cIHUhAaCqC@\t0.83\nHaF@@@Rfu[j@@@FEAaTwDS`\t0.83\nsJQ@@dmU@LLl^HP\t0.82\nsJU@DPdvu@LH^IX\t0.82\nsJY@DDfvhAaCqK@\t0.82\nsJP`@TeVdAyhl\t0.82\nHcLJ@@PUuInUgzV`BJ@AaQTJ{rD@\t0.81\nsOxA@IRi^lH@@XVHu|f@\t0.81\nsOpHADILkW@@@LBCWqK@\t0.81\nsNp`@deVZj@X[U|TH\t0.81\nsNp`@deYZj@X[F|TX\t0.81\nsJX@@eKU@LML^HH\t0.81\nHaDH@@RYVih@H@FE@fTwHx\t0.81\nsFx@@eLzuU@LBIkqH`\t0.81\nsJQ@@dlu@LDmqP`\t0.81\nqCr@XIKTA``nJX\t0.81\nsJQ@@djs@LDmqP`\t0.81\nqCr@HIJtAaEqS@\t0.81\nHmTJ@@IaUIf[njjj@FBaBXUMpkrI@\t0.8\nHedJ@@IaeIf[zjj`AaHPfESCOHx\t0.8\nsGXhMD@cIHXmPCs@t\t0.8\nHeV@@@Re[TYj`@@AatIS\\L|PB@\t0.8\nqCb@AIf`ODl\t0.8\nHedJAHiaenglddtUeTtp@pRLyA@\t0.79\nsJY@DDeVhA`inID\t0.79\nsJX@@dku@LInID\t0.79\nsFp@DjTvjhAaQD[rX\t0.79\nsGP`@deYj`FBqxiP\t0.79\nHiF@@@RifZjj@FGPfES]rA@\t0.79\nqCa@CIJtAyhl\t0.79\nsFp`@dfTujXA`l^R`\t0.78\nsNp`@dfyZj@XEXodh\t0.78\nsGP`@dfyj`FFVOIP\t0.78\n`IHPCr@\t0.78\nsG\\@@ldsmT@pHVOIP\t0.78\nHaDH@@RVU[j@@@FAAaUsH[`\t0.78\nQMhDRVAxr\t0.78\nHeTHPBBlzlRYgea``b@A`PYp|Pi@\t0.77\nHmtD@@QIee^UZ``@@XLULLkrN@\t0.77\nsGQa@bnR[fj@XP|Vh\t0.77\nQO@HyjAaGFP\t0.77\nsGX@@eNuT@pLqoDD\t0.77\nsNq`@fdvkUPCCKObM@\t0.77\nsOx@@drm\\@@@phVMyF\t0.77\nsJX`DBdjt`LHnJX\t0.77\nKAxD@@c\\dvluS@FFIg\\``\t0.76\nHaDD@@IIf]n``@@XYeMs@K`\t0.76\nsOp@DjWkB@@FBaxUjp\t0.76\nHaDH@@RVU[j@@@FCAaTw\\b@\t0.76\nsJX`DBdvt`ODl\t0.75\nHidH@@RVUvy`@`@XUaTp|b@\t0.75\nqCp@AJZ`LLInQ@\t0.75\nsOp`Hdjekjj`FBqxjp\t0.75\nqCb@AIVPLHnJX\t0.75\nHeTB@@sirQQSRtMUUT@LNaB[agbYP\t0.74\nsGQ`@jdvmT@pQoDl\t0.74\nsNx`DJdjsUPC@hu|Tp\t0.74\nsOq@@drm\\@@@pHU_Eb\t0.74\nHidD@@QInUxV`@@A`QTw\\QA@\t0.74\nHaDH@@Rfu[j@@@FEXUMwHP\t0.74\nsOq@@drm\\@@@pRoBLV\t0.74\nHaD@@DjUZxHH@A`tIaUwHX\t0.74\nHeVH@AAIYWVy`@h@FEXULODbP\t0.73\nsNx@AddQUUPC@pu|Rp\t0.73\nsJP`@TeVhA`l^JH\t0.73\nHmt@pHdDdLdLddlRTFZh@H@FATpsrE@\t0.73\nsJT@@deVhAa`mqP`\t0.73\nsOq@@drm\\@@@pROBMV\t0.73\nqCr@XIKTA`aNIX\t0.73\nHidHPBBlzlRYgfFBB@@XTFEp|a`\t0.72\nHiDJA@PnENGdf{Yji`A`aUrL@\t0.72\nHeUH@DdDfyWxV`@`@XDUMwDRP\t0.72\nsJY@LDeZhA`QEnP`\t0.72\nsNqa@jnR[YjhA`m^Hl\t0.72\nsJY@LDeZhAaaEqX`\t0.72\nsOp@DjWkB@@FFbOMjp\t0.72\nqC`@ISTAaEsBX\t0.72\nsKP`Adi\\Zj@^ZH`\t0.71\nHidH@@RYWZZ@B`@XLBXU]rA@\t0.71\nsJQ`@bdvu@LDcrX\t0.71\nQM`BN`XL|`\t0.71\nqCb@AIZ`LDEqS@\t0.71\nKA|X@TB\\dvjuT`FFIe\\Pf@\t0.7\nsGY@DDeej`FBfxcP\t0.7\nsGXA@IRiZj@XVKF|`@\t0.7\nsJQhHl@cIHUhAaCr@\t0.7\nsJP`@TfZhAaacqQ@\t0.69\nHk\\H@@RfYU\\]Tz@@@@@F@xUMproDtp\t0.69\nHidD@@QInUxZ`@@AaQTwCs@a@\t0.69\nsOx@@eJ~MKT@ppeydV\t0.69\nsJY@DDfvhA`enP`\t0.69\nsGQ`@jdvmT@pRoEb\t0.69\nsGY@LDeZj`FFDWDZ\t0.69\nHaF@@@RVU[j@@@FEXUMwDB@\t0.69\nsGP`@df]j`FDwDZ\t0.69\nsOq@@drm\\@@@phVKyJ\t0.67\nHev@@@RfUWJzZABH@FC@aMt|`P\t0.67\nsJQ@@dju@LInZH`\t0.67\n`L@OH\t0.67\nqCp@AIZPLMEnP@\t0.66\nsJQ@@dsU@LDmsBD\t0.66\nsJP`@TizhA`h^IX\t0.66\nHaDH@@RYWih@H@FE@fEWHx\t0.66\nHaD@@DjUZxHH@AaTIaUqFx\t0.66\nqC`HBHTPduHFBByL\t0.65\nsJPXHlPDQzt@pfyB\t0.65\nsJU@DPdvu@LHnKD\t0.65\nqCbPXABRt`XR\\PP\t0.65\nHidH@@RfU~F``@@XTfMp|Pj@\t0.65\nsJP@DiVhA``nZX`\t0.65\nqCb@AIVPOME`\t0.65\nsJQ@@dkU@LEMsAD\t0.64\nsGP`@dfUj`FDoEb\t0.64\nsGY@DDfUj`FBVxcP\t0.64\nsGY@DDfuj`FDoLlP\t0.64\nsGX`BJdruT@pHboEb\t0.63\nHidDB@QNR[e^Eh@@@XDS\\OHh\t0.63\nsNu@DpdvkUPCCKGbk@\t0.63\nsJT@AdiZhA``^ZK@\t0.63\nsGQa@jnR[Vj@XKWdH\t0.63\nsGP`@dfuj`FBMxe`\t0.63\nsGP`@df]j`FBqyJ\t0.62\nHeTH@@RfU\x7FahHB@AaRXS]qJd\t0.62\nHaDH@@Rfu[j@@@FAYS]qDH\t0.62\nRG@DTLHyP\t0.62\nsGQ@@druT@pHbwDZ\t0.62\nsJPXHlPDQzt@pVH\t0.62\nHid@P@bNbDfYYa`H`@FEAc\\OHh\t0.61\nsOq@@drm\\@@@pqky`l\t0.61\nqCaPQ@HRmhCB[d@\t0.61\nQM@HvAyd`\t0.61\nHifH@AAIYW[f@B@A`VES\\RA@\t0.6\nsFx@@eJxtm@LDIsHt\t0.6\nsOq@@drm\\@@@pJM_DL\t0.6\nHmtB`HSBCprRSFIJUZh@@@XMaMpsrE@\t0.59\nHeTDPAdHc`aIe]jZ@BT@FE@fEWHx\t0.59\nHeV@@@rRJEK\\MP@P@LJJfz^Hf@\t0.59\nHif@@@Rfuvz`@`@XUaTp|PD@\t0.59\nqCcPQXPd]hCAK\\`@\t0.59\nsGU@DPdwMT@pVoDb\t0.59\nsGY@DDfuj`FFVOIP\t0.59\nsJP@DizhAa`mqP`\t0.58\nsGP`ATeUfPFBVxhP\t0.58\nqCp@AJZ`LDIqK@\t0.58\nHaDH@@RYVih@H@FFIS\\pLx\t0.57\nQMPARVA`cr`\t0.57\nHidH@@Rge^Fh@@@XTUMp|RD@\t0.57\nsOq@@drm\\@@@ppSylZ\t0.56\nHmvH@DAIUYVUZh@@@X\\aMproDc@\t0.56\nQMPARZAyd`\t0.56\nHmvH@FCHhhhdYVhJ@@AaHQaUproHX\t0.55\nHiF@@@ReUZjj@F@pfES\\OH@\t0.55\nHid@@LdbRQk``b@AaTHUCqLX\t0.55\nsNxA@IrRQVjhA`Xl^Jl\t0.55\nHiV@@@RfU|kahDB@A`pHS\\OHh\t0.54\nsFx@@eJf`@@LCL[rH\t0.54\nsFx@@eJf`@@LMM^ID\t0.54\nHaDH@@Rfu[j@@@FAIaUqFx\t0.54\nHaDH@@RYWih@H@FAIaUq@x\t0.54\nHifH@JAIYgxVB@@A`QMp|RJ@\t0.53\nsGYALMJRmUPC@aF|Tp\t0.53\nqCp@AIj`LDEqS@\t0.53\nsN|@@ldskUPCBaXwdX\t0.53\nHid@@DjU^nBBH@FGPfES]rA@\t0.53\nHaF@@@RVU[j@@@FCQaTw\\`@\t0.53\nsGQ@@druT@pHboEb\t0.52\nHidH@@Rge^Fh@@@XDUMwLaA@\t0.52\nsJP@DjYdA`inID\t0.51\nHifH@DAInUxV`@@A`QTw\\QA@\t0.51\nsGU@E`drmT@pbylZ\t0.51\nsOq@@drm\\@@@pJqoDF\t0.51\nKAxD@Ae\\dmvuT`FAIaUqHX\t0.5\nsGP`@dfuj`FBUxlP\t0.5\nqC`P@HRfhCAB\\Rp\t0.5\nsOpH@DILkW@@@LBl[qA`\t0.5\nqC`@ISTA`anJH\t0.5\nsGY@DDfUj`FBqxeP\t0.49\nHiDB@@IaRYfzjj@F@aBXULOHx\t0.49\nKAxD@@S\\dsOUU@FGABXS]rJ@\t0.49\nsJP@DiYXAaaEqX`\t0.49\nsJQ@@dru@LHnKD\t0.49\nqCa@CIJtAaMqQ@\t0.49\nHidD`HP@cIHXdnEX@@@XDUMwD@P\t0.49\nHaDH@@RYe[hB@@FEAaMwHh\t0.48\nsJU@E`dru@LHnKD\t0.48\nsGP`@df]j`FDOEj\t0.48\nKAxD@@c\\dvluS@FBIwDp`\t0.47\nsGX@@dkUT@pJqoDH\t0.47\nqCa@CIKTA``nJX\t0.47\nsNu@DPdwKUPCCXwbS@\t0.46\nHif@@@RUe^Fh@@@X\\BES\\OH`\t0.46\nsGP`ATeejPFDWMLP\t0.46\nRFD@QFCBnP\t0.46\nsOq@@drm\\@@@phVMyF\t0.46\nQM@HzAaWDP\t0.45\nQMBBHRYAaGFP\t0.44\nsOq@@drm\\@@@prqyaV\t0.44\nsGQ@@djmT@pVoMDP\t0.44\nqCaBAKdfZ@|f@\t0.44\nRFD@QFCqH\t0.44\nsJY@DDfVhAaCqK@\t0.43\nQMPARVAyd`\t0.43\nqC`@Qz`LDIqK@\t0.43\nHmv@B@B\\ddUbReZj@@@F@pfMproHH\t0.42\nsNy@LDeYjj@XDQGbk@\t0.42\nHaD@@DjUZxHD@AaTHU]qLX\t0.42\nHaDH@@RVU[j@@@FEXUMwDB@\t0.42\nqCr@XIKTAaAsQX\t0.42\nqCb@AIZ`LHnXS@\t0.42\nqCb@AIZ`LHNZK@\t0.42\nsOx@@eLmXD@@pJu_HP\t0.41\nsGY@DDfUj`FBUxlP\t0.41\nsGY@LDeVj`FADQxmP\t0.41\nsGT`EaTf]jPFDWEb\t0.41\nHaDH@@RVU[j@@@FEAaTwDc`\t0.41\nsOp@DjWkB@@FBbx\\Zp\t0.41\nsJP`@dfVhAaMrD\t0.41\nqC`@ISJA`aNIX\t0.41\nRG@DTOD`\t0.41\nsOp@DjWkB@@FAbMxlp\t0.41\nHidH@@RUe^Eh@@@XLaTwCrH@\t0.4\nsOq@@drm\\@@@pJq_DJ\t0.4\nQMhDRVAaWI@\t0.4\nsJPa@erS[T@pfyB\t0.4\nHeTH@@RUYTYZ`@@A`vTwCODa@\t0.4\nHidH@@Rfufz`@`@XDfMwDHP\t0.39\nHiD@@LddUdjjh@XMBXS]rA@\t0.39\nsJQ@@dkU@LLEnJD\t0.39\nsJP`@dfvhAyeb\t0.39\nsGY@DDeej`FDOMMP\t0.38\nqCa@AIMTAaIsAX\t0.38\nHaDD@@IIf]n``@@XEeMwD@`\t0.37\nsOp@DjWkB@@FEbM_I`\t0.37\nRF@QP|R@\t0.37\nsJY@DDefhA`l^R@\t0.36\nqCb@AIj`LINXK@\t0.36\nQMHAIhFD\\Y@\t0.36\n`Ib`hFD\t0.35\nHg|@@DjU_eZx{BAH@@@FBpaUtkiwqLX\t0.35\nsNp`@df^Zj@XKGbk@\t0.35\nHaDH@@RVU[j@@@FAXUMs@c`\t0.35\nQMHAIXGcH\t0.35\nqCaBC[dej@p`xh`\t0.34\nsJY@DDfVhA`enP`\t0.34\nKAxP`PCaSaddbljj`CBdpf{dT\t0.34\nHid@@DjU^nBBH@FCPfEW\\Qa@\t0.34\nHaDH@@RVU[f@@@FAXUMqHx\t0.34\nqCpB@SGj@pTWDL\t0.34\nHk\\@@DjU^ukmLHH@@@A`lHU\\Lki|c@\t0.34\nqCb@AJZ`OME`\t0.34\n`IlQpFD\t0.33\nHg|@@LdbRbtJUB]aAP@@@CAXPjFUt{xf\\\t0.33\nsFp@DiTt@@AaaCsKT\t0.33\nRFDDQFCBNT\t0.33\nsJP@DizhA`Pl^R@\t0.31\nsJP`@dfvhAaCqK@\t0.31\nqCb@AIj`LDIqK@\t0.31\nHidD@@iJ[gxZB@@A`QMp|QJ@\t0.3\nKA|P@HBRjsUT@XTaTw\\RL@\t0.3\nHeVD`Ia@BLdabRwBl@D@C@binx`R\t0.3\nsGP`@dfUj`FDOEj\t0.3\nsFp@DiTt@@A`QC^IX\t0.3\nsJPYHlPDGh}Z@^S@\t0.29\nqCp@AI^`ODl\t0.29\nsFp@DiTt@@A`anFHt\t0.29\nQM`AIXGfR\t0.29\nQOHBNZ`^L`\t0.28\nHidD@@QInUxV`@@AaQTwCrD@\t0.28\nsKX@@eKcRpCAB\\rq@\t0.28\nKAxD@@S\\dsOUU@FCABDw\\SJ@\t0.28\nsJP@DiZhAaaCqK@\t0.28\nQMPARVAaOD`\t0.27\nQM@H~AaWI@\t0.27\nsJQ@@dlu@LEcqQ@\t0.26\nsJP`AdizhAyhb\t0.26\nHid@@DjU^nBBH@FCPfES\\Sa@\t0.25\nHeTD@@QIemQej@@@FETwCOHH\t0.25\nqCr@HILtAaMrH\t0.25\nHid@@LdbRQk``b@AaTHUMqLD\t0.24\nsNq`AjdmsUPC@kF|TX\t0.24\nsGQ`AjdmmT@pruxhP\t0.24\nsGU@E`drmT@pRwDZ\t0.24\nsFp@DiTt@@A`a^FKD\t0.24\nQMHAIhGfR\t0.24\nsJY@DDeVhA`enJD\t0.23\nQMHBN`XUrP\t0.23\nqCa@CISTAyhl\t0.22\nQM@HvAaGFP\t0.22\nsJX@IGuPCAK\\TH\t0.21\nqC`HBHtPdmPFBFxh`\t0.21\nsGX`DJdjmR@pRwEB\t0.2\nqCj@KAIf`ODl\t0.2\nHaDH@@Rfu[j@@@FFXU\\qFx\t0.19\nHaF@@@RYWih@H@FE@fEWHx\t0.19\nsJQ@@eOU@LECqK@\t0.19\nqCr@HIJtAaMqQ@\t0.19\nRF@Q`|R@\t0.19\nsOq@@drm\\@@@pjqky@\t0.18\nQMDa^RVAyP\t0.18\nqC`@IRtA`aNIX\t0.18\nRFPDTNJlNT\t0.18\nRFPDTOJ@\t0.18\nQM`AIhFBOJ@\t0.17\nHidH@@RYm^Fh@@@X\\DES\\OHp\t0.17\nsJY@DDefhAaMqP`\t0.17\nsOx@@drm\\@@@pjqky@\t0.17\nqCcPQXAD]XCB[d@\t0.15\nQMFI@bM`XSr@\t0.14\nsFp@DiTt@@AaaEsXt\t0.13\nRFPDXLJy@\t0.11\nRFQAtXOJ@\t0.09\nRFPDXLHyP\t0.09\nqCb@AIV`LInJH\t0.08\n`H@^P\t0.08\nQMDARZAyd`\t0.05\n`I@`Cr@\t0.05\nsJXA@IczhAahmrD\t0.03\nsJP`@deVhAaMqP`\t0.03\nsJP`@TizhAaCsQX\t0.01\nsFp@DiTt@@A`QEnHt\t-0.02\nQMHBN`^L`\t-0.02\nqCa@CIKTAaAsQX\t-0.03\nQM`AIhFD\\Y@\t-0.04\nsGQ`@ZdruT@pHaoDl\t-0.05\nRG@DXLHyP\t-0.05\nsFp@DiTvjhAaacsQT\t-0.06\nRGAALXLJy@\t-0.06\nsJU@E`dru@OLlP\t-0.08\nHo|H@NrRQRqZZR]j``bh@FDiaMvg[|bP\t-0.09\nRFPDXOD`\t-0.09\nsOp@DjWkB@@FBexUbp\t-0.1\nqCb@AJZ`LHnJX\t-0.1\n`J@OH\t-0.1\nsJQ@@eKU@LECqK@\t-0.11\nsJX`BDdvu@LHnKD\t-0.11\nHk\\@@DjU^ukmLHH@@@AaLHU\\LkoDpp\t-0.11\nsFp@DiTvjhAaQEcrT\t-0.11\nsJP@DjZhAaaEqX`\t-0.11\nsJP`@dfVhAxlP\t-0.11\nqCb@AIZ`LINXK@\t-0.13\nsJPXHlQxQ{T@prq@\t-0.14\nsJP`@TeZhAaaCqK@\t-0.14\nsNq`@VdsMUPCBbHobu@\t-0.14\nQMDARZAaWDP\t-0.15\nHidB@@saRf]ZZjjh@XUEMp|qLH\t-0.15\nQMHAIXFD|h\t-0.15\nsGT@@Tivj`FADqxeP\t-0.16\nsJP@DjVhAahmrD\t-0.16\nqCa@CIKTA`anJH\t-0.16\nsFp@DiTt@@AaQEcrT\t-0.16\nsJP`@TfZhA`QD^S@\t-0.18\nsJPLIDJHtQGuPCCQ[dH\t-0.18\nsFp@DiTt@@A`QE^KD\t-0.18\nsJX@@eMU@LML^HH\t-0.19\nKA|@D@DyIHjjjh@pZDpj[d\\\t-0.19\nqCr@XIJtAaEqS@\t-0.19\nHaDH@@Rfu[j@@@FEIaTwHx\t-0.2\nqCp@AIZ`LDEqS@\t-0.2\nsOx@@drm\\@@@pJqoDF\t-0.2\nRF@Q`pce@\t-0.2\nHcl@@DjYU_egX@@@@@XRfES\\LkrM@\t-0.21\nsGP`@dfyj`FBVxcP\t-0.21\nqCa@AIJtAxi`\t-0.21\nsJX@@dmU@LLl^HP\t-0.22\nQMBBHRZAaGFP\t-0.22\nsGP@LdbKU@LCEcrT\t-0.23\nHaDH@@RVU[f@@@FEXUMwH`\t-0.23\nsNxA@IrRQVjhAaXl[rL\t-0.24\nQM@HvAaOD`\t-0.24\nsOp@DjWkB@@FAakxe`\t-0.24\nsGP@DiVj`FADUxlP\t-0.25\nqCb@AJZ`LInJH\t-0.25\nHaF@@@Rfu[jjj@FGAFES]rD@\t-0.27\nsNyA@qNRRJuU@LKEc^Q`\t-0.27\nKAx@@YIDTjjh@pxHSBknPp\t-0.28\nsFx@@eJf`@@LCEcrT\t-0.28\nqC`@ISTAa`mrP\t-0.28\nHaDH@@RYWih@H@FF@U\\qLx\t-0.28\nqCa@CIKTAaaMrH\t-0.28\nqCb@AIV`LHnJX\t-0.28\nHaF@@@RYWih@H@FAIaUq@x\t-0.29\nsJQ`@ldru@OEb\t-0.3\nsOx@@eJyh@P@pLVOHp\t-0.32\nHaD@@DjWzXHB@AaTIaUrN@\t-0.32\nKA|@@@eSMUU@FCPaTw\\c@\t-0.32\nsJP`@TeZhA`inXH`\t-0.32\nHmt@pHdDdLdLddlRVFZh@H@FATwCrE@\t-0.33\nHg\\@@LddTQRdTwUAAT@@pULJfFUt~QX\t-0.33\nHiF@B@B\\ddURjjh@X]BXUMwHD\t-0.33\nsJP@DiVhAa`mqP`\t-0.33\nQMABHXaIhFBOJ@\t-0.33\nsJP`@TfZhAaaCqK@\t-0.33\nsGP@Dj}j`FFVOEJ\t-0.34\nsJX`BDdvu@OLlP\t-0.34\nHeT@pHdDdLdLddlRPsU@@@C@j[ayD`\t-0.34\nHedHXFbPRPrPzPFPfPrRRqRUUU@CBByC@\t-0.34\nqCpB@ReMPFBfx``\t-0.34\nsFp@DiTt@@A`aNEXt\t-0.34\nHaDH@@RVU[f@@@FFXw\\rBh\t-0.35\nHmtJ@@siWIEDeDZFjjj`AatEWCJ|QF@\t-0.35\nqCa@AIMTAaMsBH\t-0.35\nsJX@@eKU@LLHnKD\t-0.35\nsGP`ATf^j`FADMxe`\t-0.36\nqCp@AIj`LDIqK@\t-0.36\nsGP`ATfVj`FADUxlP\t-0.37\nqCpPXABRu@XJKbF@\t-0.37\nRFB@QADXOD`\t-0.37\nHk\\@@DjU^ukmLHH@@@A`LHUCJ{sLxp\t-0.37\nsJQ@@dju@LDmqP`\t-0.37\nRFTPDQP|`\t-0.37\nQM@HzAaGFP\t-0.37\nQMHAIdFE\\Q@\t-0.38\nsJX`DBdvu@LH^IX\t-0.38\nqCb@AIZ`LEMqA@\t-0.38\nsNp`@dfUZj@XHobu@\t-0.38\nQM``eIhFCOH@\t-0.38\nQMFI@bMP^P\t-0.38\nHaD@@DjUZxHD@AaTIaUqFx\t-0.39\nsNp@LdbJjj@XVKF|PX\t-0.39\nsJP@DjvhA`enJD\t-0.39\nHaD@@DjUZxHH@A`tHUMwHp\t-0.39\nQMHAIhFBWI@\t-0.39\nsJPhHaxIRuPCAX|`@\t-0.4\nsJPXHlQxQ{T@|rq@\t-0.4\nqCa@AILtAxe`\t-0.4\nRGPQFCBNT\t-0.41\nsJPH@DIRuPCCBKbq@\t-0.42\nsJQ`@bdvu@LH^IX\t-0.42\nsGX`BDdwMT@pfydZ\t-0.42\nsGP`@TfZj`FADQxmP\t-0.42\nQMJHBHvAxb\t-0.42\nsFp@DiTt@@AxqEcP\t-0.42\nsGP@DjUj`FFbwDZ\t-0.43\nHmvD`La@BLddlRVFUh@H@FETwBoHp\t-0.43\nsGQ@@dkMT@pvMxh`\t-0.43\nQM``fN`XL|`\t-0.43\nQMHAIhFD|R@\t-0.43\nQMDARVAaOJ@\t-0.43\nHif@@@RUe^Fh@@@XLBES]qHD\t-0.44\nsGP@Djfj`FAVMyH\t-0.44\nqC`@Qv`LDmrP\t-0.44\nqCaPQ@Hck@^HX\t-0.44\nqCa@AILtAaErX\t-0.44\nQMDARVAqUaqd\t-0.44\nQMDARVAxr\t-0.44\nHid@@DjUfaBB`@FCPaTw\\SA@\t-0.45\nqCb@AJZ`LINIX\t-0.45\nHif@@@Rge^Fh@@@X\\DES\\OHP\t-0.46\nHiD@@LdbJTjjh@XBDIaTw\\`P\t-0.46\nsJP`@dfvhA`enP`\t-0.46\nqCaPQCpcm@XQ\\Pp\t-0.47\n`IjqpFD\t-0.47\nsJQ@@dmU@LLL^JH\t-0.47\nHaD@@DjWzXHB@A`THU\\SN@\t-0.47\nKA|H@XGIJsuUPA`pPaMwHh\t-0.48\nsKP`@Ti\\Zj@XR\\Rp\t-0.48\nHeTJ@@qaeJYyzzjjj@FGPUMpsqDp\t-0.49\nsNq`AVeMmUPC@sU|RH\t-0.49\nsGX`DJdrmT@pRoEb\t-0.5\nsGQ@@drmT@pRwDZ\t-0.5\nsGQ`AjdmuT@pHboEb\t-0.5\nHaDH@@RVU[f@@@FAYS]qHH\t-0.5\nqC`@Qv`LHnJX\t-0.5\nqCb@AIZ`LDIqK@\t-0.5\nsGP@LdbMU@LCEcqB`\t-0.51\nsGP@LdbMU@LCEkq@`\t-0.51\nHmvD`La@BLddJfReUj@@@FAMpssLiP\t-0.52\nsJPH@DISuPC@bK\\a@\t-0.53\nHiD@@Dj}Yjf`A`rXU\\OH`\t-0.53\nsGY@DDeYj`FFVOEJ\t-0.53\nsJP@DjVhA`hnKD\t-0.53\nqCr@XIKTA`anJH\t-0.53\nHaD@@DjWjXHB@A`TIS\\SN@\t-0.54\nsJPhHaxISuPCAX|PP\t-0.54\nsOq@@drm\\@@@pHVOEV\t-0.54\nsGP@LdbMU@LJHl^R`\t-0.54\nsJXHL@aIVj@XZK\\PH\t-0.55\nsNx`LFdjmUPCAbHu|f@\t-0.55\nqChPK@HRYhCBCbV@\t-0.55\nsKP@Di\\Vj@XXP|Rp\t-0.55\nqC`@IVtA`aNIX\t-0.55\nsGQhHl@cIHTmPCBGbE@\t-0.55\nsNp@LdbJjj@XLQXwdX\t-0.55\nqCb@AIj`LMEnP@\t-0.55\nHeT@@LddTjPsU@@@CCdpj[ayD`\t-0.55\nsJQhHl@cIHUhAx`P\t-0.55\nsJP@DjZhAahmq@`\t-0.55\nsJXHD@aIYj@XP\\tq@\t-0.56\nsGQ@@djuT@pHVOEJ\t-0.56\nHaD@@DjUZxHH@A`TES\\qLx\t-0.57\nsGY@DDeUj`FFVOEJ\t-0.57\nqCp@AIZ`LLHnS@\t-0.57\nqCb@AIZ`LEEqC@\t-0.57\nQMHAIhFE\\Q@\t-0.57\nsJP`@TizhAaicrH\t-0.58\nHidB@@kaReYrZjjh@XMaTwCqHP\t-0.58\nqC`@IRtA`anJH\t-0.58\nqC`@IVtA``nJX\t-0.58\nRGAALXOD`\t-0.58\nqC`P@HRfhCCBKdp\t-0.59\nsNp@LddUjj@XVKE|e@\t-0.59\nsOq@@drm\\@@@prkyab\t-0.59\nsJQ@@eOU@LEMqH`\t-0.59\nHaDL@@kldRTIMUUP@pKJ[nYBD\t-0.59\nqC`@ISTA`enHP\t-0.59\nsJP`@dfvhAaEqX`\t-0.59\nqC`@Qz`LLHnS@\t-0.59\nsNp@DiWjj@XLQFodp\t-0.6\nqCa@CIKTAaaErX\t-0.6\nsNp`@dfUZj@XKGbk@\t-0.6\nqC`@IVtA`hnHX\t-0.61\nsJP@DjZhAa`cqS@\t-0.61\nsJY@LDejhAa`mqP`\t-0.61\nqCcPQX^D]hCAK\\`@\t-0.61\nsOp@DjWkB@@FEbq_IP\t-0.62\nsGP`@dfyj`FBQxmP\t-0.62\nsOq`AVeJnMUT@pvMyhf\t-0.62\nHef@B@B\\ddURUUUP@pFDpj[ayD`\t-0.62\nHcLF`HSFgP|LdfrbTHjuUUT@LNpjzUwb@H\t-0.63\nHaf@@@RiUkfzjjh@XUBDw\\SJ@\t-0.63\nHeTD@@QIgeQej@@@FATwCqLd\t-0.63\nsNp`@dfWZj@X[U|a@\t-0.63\nQM`AIhFBWI@\t-0.63\nqCb@AIV`LINIX\t-0.64\nHaF@B@BTeeVz`@@A`tXUMwH@\t-0.64\nsF|@AbeJf`@@OMEP\t-0.64\nHmtJ@@pYUJYmVnjjjh@XCBTwCJ|SB@\t-0.64\nQMHAIdGfR\t-0.64\nHiFL@BANR[gfjf@FFIa\\Ra@\t-0.65\nqC`XBHTQhaIj`LLEnR@\t-0.65\nHeTD@@QIemQej@@@FAUpsqBX\t-0.66\nHeTB@@XYRfV~njjj`AatYS\\L|QB@\t-0.66\nHmL@@DjYeVdU@@`@@FGXULLkrN@\t-0.67\nHifDAHAHeNR[e^Eh@@@XHP|rfx\t-0.67\nsGP`@dfuj`FFqoH`\t-0.67\nsJQhHlOAJmj@XP|Pp\t-0.67\nsJQ@@dju@LLl^R@\t-0.67\nHmtJ@@siWIEEMDZFjjj`A`LHU\\LkqLX\t-0.67\nsGQ`@ZdruT@pHbOEj\t-0.68\nsJX@@dkU@LBHmrD\t-0.68\nHidH@@RYm^Eh@@@XTUMp|c@\t-0.68\nsGX`BDdwMT@pRwDZ\t-0.68\nHaDL@@sdigZZjj`A`TYW\\qBX\t-0.69\nqCb@AJZPLINIX\t-0.69\nqC`HBHtPdlpFBFxh`\t-0.69\nsJY@DDejhA`l^HP\t-0.69\nsGQhHlOAJoZhA`c^HX\t-0.69\nHmtJ@@siUJYn~ajjjh@XSBXS\\LkrJ@\t-0.7\nsGPYHlQxGdjmj`FDwIP\t-0.7\nqCbPHABSS@^HX\t-0.7\nHifDAHAHeNR[e^Eh@@@XHU\\qnD\t-0.71\nHid@`@BDiyWaj@@@FC@UMp|RD@\t-0.71\nHid@@DjUfaBB`@FGPfESCrN@\t-0.71\nqCh@CIKTA`anJH\t-0.71\nHidD@@QInUxV`@@AaRDwCrJ@\t-0.71\nqC`P@HRVhCAB\\Rp\t-0.72\nsGY@DDfUjPFBVxcP\t-0.72\nHidB@@qarQQZFnjjj@FCQaMp|QJ@\t-0.72\nHif@@@RYm^Fh@@@X]FES\\OH@\t-0.72\nHidH@@RUe^Eh@@@XTaTw\\RA@\t-0.72\nHidD@@QInUxV`@@A`QMp|QJ@\t-0.72\nsGP`@dfuj`FFVOIP\t-0.72\n`ImAHFD\t-0.72\nHeTL`HS@BLddlRPrm@@@CBlinGdR\t-0.74\nqCb@AJZ`LEErX\t-0.74\nsJQ@@dju@LDcqS@\t-0.74\n`Ld`^P\t-0.74\nRFTQXQ`|R@\t-0.75\nQMhHRZAaGFP\t-0.75\nHaDH@@RYe[hB@@FF@S\\sJx\t-0.75\nsJQ@@eOU@LDmqP`\t-0.75\nsGP`ATeUjPFBVxhP\t-0.75\nHet@@DjYUX^d@@@@AarXS\\L|b`\t-0.76\nHeV@B@B\\dbLRPsU@@@C@XSJ[agd@\t-0.76\nsJP`@TizhA`l^JH\t-0.76\nqC`@Qz`LEEqC@\t-0.76\nsNqDHGBnFRRJuU@LBlWrT\t-0.77\nsJQ@@dlu@LLl^R@\t-0.78\nKA|X@DBLdvluS@FBHWDs`\t-0.78\nqCbPP^BRu@XI[d@\t-0.78\nHid@@DjU^nBAH@FGPfES]rA@\t-0.78\nsOpHAbILkW@@@LJEc^Q`\t-0.78\nqCa@CIKTA`aNIX\t-0.78\nQMDARZA`cr`\t-0.79\nHeVH@IAIe]ZZ@Bh@FG@fEWSrA@\t-0.79\nHidH@@Rge^Fh@@@XLaTwCrH@\t-0.79\nKAxP@Uddbcjf`C@dpfyG@\t-0.79\nRFD@QECBNT\t-0.79\nHeTB@@XYrQQJHuuUUT@LNcB[agbIP\t-0.79\nqCcPQXAD]XCqC@\t-0.79\nsGP`@dfUj`FDwDZ\t-0.79\nHeV@@@rRJEK\\MP@P@LFSBinyD`\t-0.8\nHaDL@@sdigzZjj`A`TXw\\qBh\t-0.81\nsGX@@djuT@phbqyJ\t-0.81\nsGP@Djfj`FAbqyJ\t-0.81\nHaD@@DjYvxH`@A`RDw\\SJ@\t-0.81\nHeTB@@pYRf[vnjjj`AatIc\\L|Pj@\t-0.82\nHidB@@saRf]ZZjjh@XMFTwCqDH\t-0.82\nqCr@PIKLAaAqK@\t-0.82\nKAx@@YIDTfjh@pZDpj{dL\t-0.82\nqCb@AIf`LHnS@\t-0.82\nHeTJ@@qaeJYyzzjjj@F@qaTwCOHP\t-0.83\nHetD@@QIemRhYZ`@`@XDwCOHH\t-0.83\nsJP@DkVhAahmq@`\t-0.83\nsNp`@dfvZj@XXu|Rp\t-0.83\nqCc@AYIf`ODl\t-0.83\nQMBBHRZA`erP\t-0.83\nHklF@@pUt|dTTRbQjZjjjh@XKBESCJz_Hx\t-0.84\nsJPXHlQxQ{T@pRwHP\t-0.84\nHaDH@@RVU[j@@@FEQaTwDC`\t-0.85\nsFp@DjfJjhAaicqJ`\t-0.85\nQMhHchGcH\t-0.85\nKA|X@QS\\eUkUU@FGPfES\\\t-0.85\nsGPXHlQxIU[U@LEcrT\t-0.85\n`IhapFD\t-0.85\nQMFI@bM`^H`\t-0.85\nHmtJ@@pYUJYmVnjjjh@XSBYS\\LkrB@\t-0.86\nHidD@@QInUxV`@@A`RDp|Rn@\t-0.86\nHiDH@@RUUVjj@FGIaTwCrH@\t-0.86\nHaF@@@RYe[hB@@FAXUMq@x\t-0.86\nHeTH@@RUYTYY`@@AarYS\\L|b@\t-0.86\nsOp`@tieujj`FAfkxdP\t-0.86\nsGQ@HeUuT@pLVOIP\t-0.86\nsJQ@@dmU@LBIcrH\t-0.86\nsJY@BDeVhA`d^JX\t-0.86\nHaDH@@RVU[f@@@FFYS\\rBx\t-0.86\nsNp`@dfuZj@XEXwdX\t-0.87\nQM@HzA`sr@\t-0.87\nHaDH@@RVU[j@@@FAAc]sHJ`\t-0.88\nsGX`LJdmuT@phfMyD\t-0.88\nsGX@@eJuT@pHbwDZ\t-0.88\nj`i@`@@HRYYUg\\eIF]yjB@@B@@F@fBdkQkNx`g`\t-0.89\nHet@@DjfehZfjjj`AarES\\L|c@\t-0.89\nHeTD@@EIYWVy`@h@FEXUMOH`\t-0.89\nsGPhHaxISuU@LMc^HH\t-0.89\nsJXHD@aIYj@XXX|d@\t-0.89\nsJP`@deVhAqIXPVOI@\t-0.89\nsJP`@deVhA`l^R@\t-0.89\nqCb@AJZ`LEMrH\t-0.89\nsFp`ATiWFjhAal[qQ@\t-0.9\nsGQ@@dsmT@prqyJ\t-0.9\nQMA@HPaIXFD\\Y@\t-0.9\nsNphHaxIRkUT@pNM_H@\t-0.9\nsOx@@drm]UT@p\\VM_H@\t-0.9\nHiFD@BADf{Ujj`A`rXUMwHD\t-0.91\nqCb@AIY`LEEqC@\t-0.91\nsJQHH@aJuj@XI[bA@\t-0.91\nHmtH@HrRQVIJUjh@@@X\\fDwCOHT\t-0.92\nsJQhHlOBOZ`FBVyB\t-0.92\nsJQ@IGuPCCQ[dH\t-0.92\nqC`P@HRVhCAQ\\Pp\t-0.92\nHidB@@qarQQZFnjjj@FEPS\\OLSJ@\t-0.92\nsJP@DjZhAa`mqP`\t-0.92\nHcND@BADf{YU]Zj@@@F@iaUproHt\t-0.93\nHaDD@@yIe^f`@`@XHe\\HLK`\t-0.93\nsGP@LdbMU@LBHcqZ`\t-0.93\nQM@HzA`erP\t-0.93\nsOx@@drm\\@@@ppUylV\t-0.95\nsJX@@dkU@LLEnJD\t-0.95\nHaDH@@Rfu[j@@@FEIaUwHX\t-0.96\nsJY@BDizhAaicrH\t-0.96\nQMpRRWhuAyP\t-0.96\nQMACD\\QIhFBOJ@\t-0.96\nsJX`LDdvu@OLlP\t-0.96\nsFp`ATiWFjhA`m^ZH`\t-0.96\nsGP`@dfui`FBqxeP\t-0.97\nKAxYDPf@DYvRRUIZj@LLJfyG@\t-0.98\nsOpHAVILkW@@@LJEc^Q`\t-0.98\nsFx@@eJfuU@LJHl^R`\t-0.98\nqCa@CIKLA`anJH\t-0.98\nsJP`@TizhAahmrD\t-0.98\nsKQ@@eKcUPCAX|TP\t-0.98\nJoBD@@IS\\rjzv[uP@@@@@XKS\\Lkiv\x7FDa@\t-0.98\nsNy@DDf]Zj@XYZ|QX\t-0.99\nRFTPxQP|`\t-0.99\nqCp@AI^PODl\t-0.99\nHcLF@@siWTify^ajjjj@FBpaTwCJ{rL@\t-0.99\nqCpB@SGj@ptVy@\t-0.99\nHaD@@DjUZxHH@AaTHS]qLh\t-1\nKAx@@IVjmUPAapPfES\\c`\t-1\nqC`@IWtAaEqS@\t-1\nHaD@`@BDimVz`@@A`pXUMwHP\t-1\nsJPhHaxIVmPCAX|`@\t-1\nsOx@@drm\\@@@prqyaV\t-1.01\nqCa@AIJtAaMrP\t-1.01\nsJPLIHJPtaGuPCrD\t-1.01\nsNy`BDtfuZi@XYX|e@\t-1.02\nRF`dS]ECr@\t-1.02\nHaD@@DjUZxHD@A`tIaUwHX\t-1.02\nqCb@AIj`LLEnR@\t-1.02\nsOp@DjWkB@@FAfMxdp\t-1.03\nqCr@XIKTAahmr@\t-1.03\nKAxY@PfAxIUjmUPA`QTw\\`@\t-1.03\nsJP@DkVhAa`mqP`\t-1.03\nRFTQxQ`pkd@\t-1.03\nsNp`@deUZj@X[F|TX\t-1.04\nqC`@IStAxe`\t-1.04\nsOq`AVeJnMUT@pNM_ED\t-1.04\nsJQhHl@bOV`FDwHP\t-1.04\nHmvLAHAEbT{Hihdh^Eh@I@AaaTODzP\t-1.05\nHmL@@DjYUVGi@@@`@FGIaUpsrE@\t-1.05\nHev@@@RfUWJzZABH@FE@aMwDFP\t-1.05\nHiF@@@rRHiJjj`AatIaTw\\`P\t-1.05\nHaD@@DjUZzjj`AapPaTw\\c@\t-1.05\nHaFH@DAIYUnZjh@XEaTwDc`\t-1.05\nHaFH@NAIe^f`@`@XTfEW\\`@\t-1.05\nHiFD@BADf{Yjj`A`rYS\\OHH\t-1.05\nsJPXhlQx[ct^u@LH`\t-1.05\nsFp`@TivJjhAahmrT\t-1.05\nsGQHL@aJYihA``nHt\t-1.05\nsJU@DPdru@LDcrX\t-1.05\nsJQ@@dju@LEMqH`\t-1.05\nQMABlZqIhFBOJ@\t-1.05\nRFHEFCqH\t-1.05\nHaDH@@RVU[j@@@FAAeMsHK`\t-1.05\nKA|X@DBLdvluS@FFIa\\c`\t-1.05\nqCbPXQBRt`XP\\TP\t-1.05\nqC`@ISTA`aNIX\t-1.05\nJoBD@@ILrkNx{[mA@@@@@XJU\\Lkiv\x7FHp\t-1.06\nHeTD@@QImeQej@@@FCIeMp|bP\t-1.06\nHeTD@@QIemQej@@@FEES\\OHd\t-1.06\nHidH@@RYm^Eh@@@XUaTw\\`P\t-1.06\nsJT@@TizhA`QL^Q@\t-1.06\nQMBCpRZAaOD`\t-1.06\nRGPQECr`\t-1.06\nqCbHXRBdDfj@|Tp\t-1.06\nHaDL@@[die|jjj`AaTYS]qDH\t-1.06\nqCr@XIJtAaMqQ@\t-1.06\nQMFIOBM`XSr@\t-1.06\njhi@`@@^Rfuue]Yrsj@B`@h@@XJQ`eFJtZp^PD\t-1.07\nJoBD@@ISZzrk][t@E@@@@XRfESKiwqA\\\t-1.07\nHiDNPhSB[aCpkpsb{nGlddqdZih@P\t-1.07\nHiDD`HPOAJUfjjh@XMaTwCr@@\t-1.07\nsOp@DjWkB@@FAbqxjp\t-1.07\nQM@HvAaWDP\t-1.07\nsJXA@IRej`FAbqy@\t-1.07\nsGP`@dfuj`FBQxmP\t-1.07\nHmuD`IVD@HrRFIKKaV@BP@XDUMwDAP\t-1.08\nsKP@H~Jj`FBqxh`\t-1.08\nsGX`DJdjmT@pRoMLP\t-1.08\nsKQ@@eKcUPCB[fbH\t-1.09\nsJY@LDefhA`enJD\t-1.09\nsGP`@dfuj`FBqxeP\t-1.09\nsJXHB@aIVj@XZH|Pp\t-1.1\nHeTD@@QInYQehB@@FEISCOHx\t-1.1\nHaE@@@yIe^f`@`@XXfEs@k`\t-1.1\nHid@@LdbbQxXF@@A`RTw\\sBD\t-1.1\nQMhXNiRZAxr\t-1.1\nsJP`@dfvhAaMqH`\t-1.1\nKAx@@IRzmUPAapPaTw\\c@\t-1.11\nsNx`BDdw[UPCCXobU@\t-1.11\nsFp`@dfTujhA`m^P`\t-1.11\nsJQ`@bdvu@LHnKD\t-1.11\nsJQ@@dkU@LMEnHD\t-1.11\nsJQ@@eKU@LEMqH`\t-1.11\nsGXA@IRiZj@XFHwbF@\t-1.11\n`Ic@hFD\t-1.13\nHmtJ@@XYUJYY^njjjh@XSFES\\LkrD@\t-1.13\nsGP`@dfUjPFDwDZ\t-1.13\nsJQHL@aJVf@XHKba@\t-1.14\nQMB@HRZAaGFP\t-1.14\n`Ig`hFD\t-1.14\nHif@@@RYWZZ@BP@XTfEW\\PA@\t-1.14\nsNp`@teUZi@XYX|Th\t-1.14\nsGQ`@jdvmR@pbxlP\t-1.14\nsGPP@cTfyi`FBU@\t-1.14\nHidB@@kaReYrZjjh@XUaTp|rDx\t-1.14\nqC`@IRtAaaErX\t-1.15\nsNx@@eLuUPCAqXu|`@\t-1.15\nsGP`@df]j`FBMyL\t-1.15\nHcMB@hdDWXeNf]yInU^xV`@f@A`aCqJX\t-1.16\nHeTH@@ReyTYj`@@A`tYS\\ODRP\t-1.16\nHaE@@@aJyUnh@@@XLFES]rH@\t-1.16\nHidD@@yJ[VXZ@H@A`RXp|Pn@\t-1.16\nHaDD@@YIeZn`B@@XXf]s@i`\t-1.16\nKA|@@AddQRjj`CAhSBinQp\t-1.16\nsNp@DkUZj@XLKFod`\t-1.16\nsGQ@@eJuR@ptuxdP\t-1.16\nsGY@JDiVj`FAbuyB\t-1.16\nsJQ@@dmU@LBEcrP\t-1.16\nsFy@LDigVfXAydZ\t-1.16\nQMJAhHzAxr\t-1.16\nsGQ@@eNuT@pLqoH`\t-1.16\nsGPXhlQx[crUVuPCrT\t-1.16\nHaDH@@Rfu[j@@@FFXw\\qBh\t-1.16\nJoBbPCCk`DISJj{nTLuUUSSP@XZDIaTwBi|bp\t-1.17\nHk]H`FGPBDieU]rafjjjZ`A`hPfES\\J|`p\t-1.17\nHmMH`FEPBLdTRRQrafjjih@XBDIaTp|c`\t-1.17\nHcmH`FGPBDieU_JFZjjih@XRDIaTwCrE@\t-1.17\nHeuH`FzPBDiewrnFjjf`AapPfTw\\``\t-1.17\nHiUH`JXPBDiU_B[jjih@XLDXUMrD@\t-1.17\nsFp@DiTujhA`Pm^JD\t-1.17\nsGP@DiUj`FEDVOIP\t-1.17\nsGQ`@jdsmT@pfxcP\t-1.17\nsGQ`@bdwML@|Rh\t-1.17\nsGX`LDdwMT@|rM@\t-1.17\nqC`@IVtAaaMrH\t-1.18\nHidD@@QInUxV`@@AaRES]rA@\t-1.18\nHeTD@@eIYe^E`HD@FAEWCqHX\t-1.18\nqCb@AIj`LLHnS@\t-1.18\nHidH@@RVY^E`H@@XDU\\ODa`\t-1.18\nQM@HvA`erP\t-1.18\nsNqDHG@nFRQFUU@LBmWq@`\t-1.18\nqCqAPJRnRYhCrX\t-1.18\nsNp@DkUZj@XLQXwdX\t-1.19\nqCp@AIZPLDEqS@\t-1.19\nsGQLKHaQFbLddmU@LCEcrT\t-1.19\nKAxH@@bSZkUT@XTfES\\c`\t-1.19\nsJP`@dfvdAaMqH`\t-1.19\nRGPp]SFCr`\t-1.2\nHmLH@@RYUUiiV@@@@@X\\BEproHp\t-1.21\nHiV@@@RfU|kahDB@AaPHS]qJD\t-1.21\nqCbPXQBRu@XHSbV@\t-1.21\nHcN@@@rRJIIGRmPTA@@pELJfxYyF`\t-1.21\nHeTD@@eIYWVy`@d@FAXUMqHD\t-1.21\nQMB`HIchFCOH@\t-1.21\nHaDH@@RVU[f@@@FAXU]qHX\t-1.21\nQM@H~Axr\t-1.21\nQMHAIhFCOH@\t-1.21\nQM@HvA`cr`\t-1.22\nqCr@XIKTAaaMrH\t-1.22\nHg|H@@RYfUWd}nh@@@@@XJUMprng_DB@\t-1.22\nHg^J@DCiV|bbtTVaTzuUUUP@pULJnE]N~Pp\t-1.23\nHcNB@DCiUIgf^gVjjj`AarXU\\J|Qm@\t-1.23\nHidD@@QInUxV`@@AabEwLia@\t-1.23\nHaDH@@RYVih@H@FFAW\\qLX\t-1.23\nsOpHAHILkW@@@LBlWrT\t-1.23\nsGT@ATivj`FEDqoH`\t-1.23\nqCaPQCpRmhCB[d@\t-1.23\nsOp@DjWkB@@FFbwLZp\t-1.24\nHiDD@@QImUZjh@XLfES]rA@\t-1.24\nQMJH|HvAxb\t-1.24\nsJP`@dfVhAaCrX\t-1.24\nHklNaHSBySCpsb{IILUDhYujjjj@FCTpki|bP\t-1.25\nHcMB@hDDWXeNF]yInUnzV`BF@AaaUOHx\t-1.25\nHg^L@BAAR[eVuNvji@@@FDiaUJz]|a`\t-1.25\nHmtD@@eJ[WUnh@J`@XTfES\\PU@\t-1.25\nHmtD@@QIn[VUZh@@@X\\fMproHh\t-1.25\nHidD@@QInUxV`@@A`RDw\\Ra@\t-1.25\nsNp`@tfUZi@XI[bM@\t-1.25\nQOHBNZ`XUrP\t-1.25\nsNp`@dfWZj@X[F|c@\t-1.25\nsNpXhlQx[cvRRXmU@LI^Q`\t-1.25\nsOx@@drm\\@@@pHVOEV\t-1.25\nHeVDAHAHeNR[e_aZ@B@A`QTw\\bP\t-1.25\nsJX@@dmU@LCEcr@\t-1.26\nqCbPPABUm@XQ\\Pp\t-1.26\nsJP@DiVhAaaEqX`\t-1.26\nsGX`DJdjmT@prqxiP\t-1.27\nsJP@H~j@XZK\\a@\t-1.27\nHeV@B@BTiVuFZh@@@XCBES\\L|`@\t-1.28\nHidH@@Rge^Fh@@@XTaTw\\RA@\t-1.28\nsNx`LDdvkUPCCXwbS@\t-1.28\nRGDQxQ`|R@\t-1.28\nHaF@@@Rfu[j@@@FCAaTw\\a@\t-1.28\nsJP@H~j@XJKbq@\t-1.28\nHmN@@@rRJIKEaxZjjj`AaLIaMproHh\t-1.29\nKA|I@Dw@DIJwUTpAaTIa]r@@\t-1.29\nsFx@@eLzuU@LJHm^P`\t-1.29\nqCr@PIKTA`anJH\t-1.29\nsJQ@@dru@LDmrD\t-1.29\nsNq`@jdvsTpCB[bS@\t-1.3\nRGAALXLHyP\t-1.3\nHaD@@DjWZXHB@A`TXw\\QB@\t-1.3\nsNp`@dfUZj@XXu|f@\t-1.31\nHeTD@@QImeQej@@@FCIS\\L|c@\t-1.31\nsJQ@@eOT`LML^Q@\t-1.32\nHidD@@QInUxV`@@A`REp|Rf@\t-1.32\nsJPYHlQxGh}j@XQ\\f@\t-1.32\nqCb@AIZPLMEnP@\t-1.32\nsOp@DjWkB@@FEbqoHp\t-1.32\nj`aAb@FBdAprRQUJYQIN}UUM@@@@peAFBTtZsnP|\t-1.33\nHg^DIItxdDdLdKbId~rRRqISQBmT@Pt@CCJZ~PH\t-1.33\njhip@@@P\\eKLjo}HvkM@@@EP@@pTRcARUjw`|ap\t-1.33\nHo}DHL^D@HVPvPNPrRRqQJQN[V``jH@FAXporI@\t-1.33\nHo}DHLzD@HNPnP^PrRRqQ[JRUV``Jh@FAXwCrI@\t-1.33\nj`qa@@H@RVYUg^Qg^f``@@@@FF`TXJRmFl{wHD@\t-1.33\nj`aP`@N^`sIIEYdhdmYuUMP@P@CBRLDxIVcVyCp\t-1.33\nHaD@D@|HBDBLBBBJ|FBNBLddqfTuSP@pJDqnHW@\t-1.33\njdi@H@@HMYw`qR[fYf[iZZ@hafX@A`QEoQxbV`\t-1.33\nj`aa`@APYsIIEYdeDd{uUML@@@C@RLDtZso\\aH\t-1.33\nJgRF@EM^RRJJHjkNHRd]gZijjfj`@pyLKae^PX\t-1.33\nJoB@QGTG]ddRtJbReL]a@T@D@@XKBYSRiv\x7FHx\t-1.33\nJoBBQBzG`DiSJkvoS[tDDUTP@XZfES\\Lg[|`@\t-1.33\nj`a``@APYddbltrbR]zjfj@@@AaiFB\\EKQkN|\t-1.33\nJoBe@BX@j[yEEDeEeJw[[USSUT@F@xU]Iv\x7FHt\t-1.33\nHknDqItxdDdLdId~rRRqISPUj`BF@AaeLoHD\t-1.33\nHg]HpMLhdDdLdLddjbRrTkUP@T`@pinF]yE`\t-1.33\nJcBB@E[ddbTQJqbxazQfjZjZj@CAdpfx^IB`\t-1.33\nJcBB@EMddbbbJsbDiGYvjZjjj@CCdpnFUyF`\t-1.33\nHo}BbFvDqpBL{IIJeDedeuZjjjh@XRU\\Lj]n\t-1.33\nJoC@QDAxAJTsMjnmf}T@@@@@FFeS\\Lkiv\x7FH@\t-1.33\nHg|@b@|@eJYUg_eNzB@@@@A`jXS\\Lki|PK@\t-1.33\nHkmHpMLhdDdLdLddjbRreZj@B`@XTwCN|`p\t-1.33\nHg|DbEtO@IRfUWmzSn``bjH@XJfES\\Lg_H@\t-1.33\nKA|PPPrPFPAPGPFRRJrjf@NBQ@q@I@y@yD@\t-1.33\nJoBb@EFNyIHiTlhepv}USUMT@FGPfDtwrG@\t-1.33\nHklHHCbPRPrPvHrRRqISPUj`BI@A`ULn|`P\t-1.33\nHg\\L`HS@\\LddRtRRIwUTE@@@pffxYWSodX\t-1.33\nJoC`@@PJUrnljwV{@AP@@@FBxULJz]orH@\t-1.33\nHklDpMNIAICICIIKDeMAVj@HX@FATrgrA@\t-1.33\nHcL@HHdDdLdMqLddlRTHsU@AP@LJiiW^PH\t-1.33\nJoBd@AonRRJUKJICMoU@ASP`AarXUMp|bp\t-1.33\nHcL@HHdDdLdMbLddlRTHsU@AP@LJiiW^PH\t-1.33\nHklDpJZIAICICIIKLhdmNjZ@@@FACJ{rC@\t-1.33\nHg\\D`HlGCIIEUEDeiuU@PP@LISBhYWSyE`\t-1.33\nHo\x7FD@Nux[IIEYdeDk^jfjeh@XBfEtg[|`P\t-1.33\nHg\\HpJbPRPrPrRRsQIYKmTp@T@CBnFUOdV\t-1.33\nHeT@H@\\HbDbLbLddlRPsU@@@CChSJ[ayD`\t-1.33\nHo~DANW^g^rRQRqJJJSj``Xh@FEIaV\x7FDXp\t-1.33\nHmt@HHdDdLdEbLddlRVFZh@H@FFTr|Sa@\t-1.33\nJoB`@@Ndrnlktqvtlp@T@A`hIaUJz[|c`\t-1.33\nHmt@HHdDdLdIqLddlRTEZh@`@FATtkrA@\t-1.33\nHo~DB@XPgIIETihdk^jjX@@@XKBXUKivx\t-1.33\nHklD`HPGCIHdbhdmNjj@@@FDxULLki|`@\t-1.33\nHo|F@@RUm|bfbbTRlGV``Xf@AabJ\x7FLkm@\t-1.33\nHo~D@NalddUfRbRmzjZ`@@AaJXWBng_H\\\t-1.33\nHcL@PH\\JqLddT\\RR{UT@@@LISBkae]yD@\t-1.33\nHe\\H@JrRQJHxq\\P}HsUMUUP@pYLInGbQH\t-1.33\nHmtFaHSBEP|LxnrRSFJJUZjjh@XYSCqNd\t-1.33\nHklHhCBPJPZPFPVPRYf{\x7Fi`bHj@AaA|cP\t-1.33\nHg^HB@xIrRQRpqIG]UU@@@C@xSBine]Np\t-1.33\nHmTLpHZP\\J\\A\\LddUbtjjj`AarXU\\J|bP\t-1.33\nHiDLpJXT`L`B`LddTZjfd@\\XbAb@RArN@\t-1.33\nJoBF@@IrSJzljUV{UUP@P@FDxULng[|`P\t-1.33\nHedLHJ[h|DbLbBbLddTcuTuP@piLHYyG@\t-1.33\nHmtLbHS@|@gIIEXdiVj`@@AapDwCJ|QL@\t-1.33\nHmtBaHSBCpsb{IILXdiUj`@@A`S\\L|aP\t-1.33\nHmTBHJXUbPRPrPxJrRRsIJjZi@FD]rI@\t-1.33\nHcLL`HS@\\LddQbRr{UPP@@LNinFUwbI`\t-1.33\nHcLHpMbPRPrPrRRqIPcMT@D`@pJfe^PH\t-1.33\nHmTBHJXUbPRPrPytrRRsIJjZi@FD]rI@\t-1.33\nHg\\L@HSLddRtRRIwUTE@@@pffxYWSodX\t-1.33\nHeT@p@BJBFBLdTTRHsPT@@CC`SBxYxeL\t-1.33\nHklH`HAprRQUQQKSjj@`@A`JXUCNgrE@\t-1.33\nHg^L@NakrRQVZJIZ]UMUS@CCdpagSyB`\t-1.33\nsOpNAxPHPQ``aE|FDYIIcjuS@LCEgqF`\t-1.33\nHcLHbMCpBTieV_ehHJH@FBiaTwCJ{r@@\t-1.33\nJoBB@@Ndrnlktqvtlp@T@AaJXURnf\x7FHx\t-1.33\nHmtHPHApIprRHjIJUjh@@@XBBXwCJ|``\t-1.33\nHcvJ`FaLWPBLddjRbRuUU@C@\\JfFUwd\\\t-1.33\nHk^@B@BTjU^ukmLHH@@@A`lHU\\Lki|c@\t-1.33\nHk^D@D@\\bbbbRQImMj`XB@AaU\\ngrI@\t-1.33\nHg\\L@NN|ddTlVVdkUA@S@@pyLInV~PH\t-1.33\nHmTDHJVIAICi@YCIICELZijd@XPwDJP\t-1.33\nHmv@pIbPRPrPrRRqIPUj`B@@XESRoHD\t-1.33\nHiD@XHdDdLdJdNdAdLddltjjh@XPWHX\t-1.33\nHmv@pEbPRPrPrRRqIXYj`@`@XES\\OHT\t-1.33\nHmt@P@\\HbLddqbReZj@@@FGPc\\LkqLH\t-1.33\nHk^D@D@\\bbbbRQImMj`XB@A`WKi|Ri@\t-1.33\nHmv@pIbPRPrPrRRqIPUj`B@@XESCOHT\t-1.33\nHmv@pIbPRPrPrRRqIPUj`B@@XEProHX\t-1.33\nHk^H@IOIIEJeLaWSj`BFH@XLfESCrM@\t-1.33\nHcLH`HAprRQUQIKmUP@@@pELJne]y@`\t-1.33\nHg]L@NvFOIIEYhddnuTuTt@LJSBF~QH\t-1.33\nHcN@bACpBTieU{ihHHh@FDiaTwRn|`@\t-1.33\nHmt@P@\\HqLddqbReZj@@@F@qaMproHP\t-1.33\nHo|H@KrRQRiQHpYj`@jX@FCIaKk|Rf@\t-1.33\nHedHHNbPRPrPYprRRiQUUU@C@bhYyC@\t-1.33\nHg~D@DAdfygUQd{ZB@@@@FCUrz]|QF@\t-1.33\nHmtBbHSB@HKlddNbReUj@@@FAMpsrE@\t-1.33\nHmVBcNaLHOCNKngIILTiFjjh@XUSCJ`\t-1.33\nHmtB`HSBCprRSFIJUZh@@@XTwCJ|SB@\t-1.33\nHet@b@|@gIEEDcSCMAPD@C@Tpj[agd@\t-1.33\nHiDDHJZHaHcH`oCIIKLjij@FEPf\\OHH\t-1.33\nHctBPHZUApGprRQVYSUTtt@LJSB{^PH\t-1.33\nHid@p@bH\\DbDfyWaj@@@FG@aTwCrH@\t-1.33\nHmLB@HSerRQHiJfFZjjj`A`vESBoHd\t-1.33\nHklD@NOIIEKEeiVjB@d@FGIaMr{rA@\t-1.33\nHcLL@HSLddQbRr{UPP@@LNinFUwbI`\t-1.33\nHo|F@@Q]mtfyfYZSZBHXX@FFIk|siL\t-1.33\nHo|F@@SSmtfyVV{iZ@HfX@FFH[|pjd\t-1.33\nHk\\@@DjU^ukmNeZ@B@AaLHUCJz_Ds`\t-1.33\nHklH@ErRQRqJJ]j`Hb@AarXSKi|PY@\t-1.33\nHklH@IrRQRiPhUj`BJ@AarXUMI|P]@\t-1.33\nHmTBHJXUbPRPrPzlrRRsIJjZi@Gb]H\t-1.33\nHgnD@NalddUfbreUMUT@LASBe]N~PH\t-1.33\nHaL@@DjYtkBqjynjjjj@FCABDw\\SJ@\t-1.33\nHklD@NwIIEKEeiVjB@h@FGIaMrgrA@\t-1.33\nHknBAHAEvISdfyW[xV`@f`@XDUMwHL\t-1.33\nHkL@bLhLyJgnYzjjj`AaXPfES\\Lki`\t-1.33\nHeTL`HS@|LdbLRPsU@@@CA`inF^Hf@\t-1.33\nHeTDbHPO@IrRHqICMT@@@LFrfxYx`H\t-1.33\nHid@p@qH|DqDfyWaj@@@FG@aTwCrH@\t-1.33\nHcM@@@wIHhdd]JuAPD@C@Tpj[agdZ\t-1.33\nHko@@@`Tke]e[f@Bj`@XCaTtki|b@\t-1.33\nHeTDPHP@bYCIHXdmpk@A@@pHj[nP@\t-1.33\nHiDLHJXXdDdLdNBlddlrjfh@XQwHD\t-1.33\nHctDPJEYCYCIIEFiiUMMP@pILInQH\t-1.33\nHmTLRHS@BN\\L{IIJdiEjjh@XLULLj\t-1.33\nHkND@NalddUfRbjijj@F@ia]Jz_HD\t-1.33\nHiDLHJXXdDdLdN]Lddlrjfh@XQwHD\t-1.33\nHeT@P@bH\\Df^UFZh@@@X\\BTwCODc@\t-1.33\nHklD@@qJYVu}NjhH@@FDiS\\Lki|b@\t-1.33\nHkLB@NFUrRQRqSFjifh@XMBXVgrE@\t-1.33\nHmtB@HRUrRQHiJfjjjh@XMaTtkqND\t-1.33\nHiDLpJXXbDbLbLddlrjfd@XYBYrN@\t-1.33\nHmt@`NqLddTlVeZhH@@FCIaMr|PY@\t-1.33\nHmt@`EqLddTjVFZh@H@FCIaTr|Sa@\t-1.33\nHmVLB@ZUB\\ddUfTjji`AatIaUr|a`\t-1.33\nHmVB`FaLT@cIIJiDUjjd@XUaMp|bP\t-1.33\nHiFDHNihBDdLdBdLddTgjeh@XQwHD\t-1.33\nHiDDpJzHaHcHcIIJeJjf@FAPfErA@\t-1.33\nHmv@`JVYrRQRiHYj`@`@XLfDtkrN@\t-1.33\nHefDpFFXdDdLdLddjfeUTp@prfgdD\t-1.33\nHmT@bLhLyJgnVjjj@FBaBXU\\LkrF@\t-1.33\nHedLpJFXdDdLdLddlReUTp@pSiyA@\t-1.33\nHk\\D@@iIYgU^GSXH@@@@XLSRngqHh\t-1.33\nHctB`HZUGprRQVYSUTtt@LJSB{^PH\t-1.33\nHmTH`HAprRIIPjjje@FDiaTwCJ|`@\t-1.33\nHcLD@NwIIEKEeJuPPD@CCdpfx]yB`\t-1.33\nKAxXPTwQxIDYDEDIUMUSPAabXWD[`\t-1.33\nHedLPH[`\\J|LddUbuUUP@pYLJagd\\\t-1.33\nHmTLPHeP\\JBDjeUjjjT@XLfDwCrJ@\t-1.33\nHcM@@@wIHhdd]JuAPD@CBTpj[agP\t-1.33\nHcLH@NrRQRqYRmTDA@@pyLInW^PH\t-1.33\nHkLFb@RfgRhByIgeYfjjY`A`VDi`\t-1.33\nHctB`HY]AprRQVYJUTwL@LLSByF`\t-1.33\nHid@P@BJBDie_ahH@@FCAaMp|QJ@\t-1.33\nHeT@`@|LdbLRPsU@@@CC`bfxYxbX\t-1.33\nHmtD`AdOAJYUgedHF@@XLfDwKq@d\t-1.33\nHeTD`HDGCIIEXituTuP@piLKiy@`\t-1.33\nHiDLHJXXdDdLdNkLddlrjfh@^Ip`\t-1.33\nHcvL@NamrRQVYQUTuR@LFSBxUyD`\t-1.33\nHcvB@JFUwIIEJhiUULp@pZDpjgdZ\t-1.33\nHeTH`HAprRSPiCMT@@@LNpj[agdP\t-1.33\nHmtH`HApRi[WeZhH@@F@xUMproH@\t-1.33\nHetL@HR\\ddRJULLuUUT@LBpj[b\\H\t-1.33\nHefDpFjXdDdLdLddltUTuH@p`^Qp\t-1.33\nHedDjAeICI@iBiAiB^rRQR^UUS@B\t-1.33\nHcND@JADfUyU]Zj@@@FGEWCJ{rL@\t-1.33\nHmTH`HAprRQIIVjji@F@iaMproHh\t-1.33\nHmVH`DTGCIIEHizjjd@XMaTwSrA@\t-1.33\nHiDLPHS@BB\\LdaTRVjh@XES\\OD@`\t-1.33\nHedLPHZP\\A|LddUfUUMH@pILKnPH\t-1.33\nHmw@@@`Tke]Vy`@j@A`vESRoD`P\t-1.33\nHiFHb@E``IrRQUJjjPA`tIaTwHx\t-1.33\nHedJb@RfDj@nRYyyjjX@XYaSrF@\t-1.33\nHcuB@NFFW\\ddUfReULs@CCDpnQh\t-1.33\nHmv@@JrRQRiHYj`@`@XLfDtkrN@\t-1.33\nHmtD@@qJY{VUjh@@@X\\eMproDc@\t-1.33\nHctL@NF\\ddTlVuUSM@CAhSBW^Pp\t-1.33\nHmtD@@yJUe^Uj``@@XCATwCJ|a@\t-1.33\nHiDDpJzIAICICIIJeJjf@FDErA@\t-1.33\nHcLB@@RUR[fVQuhHF@@XHb|JnGP\t-1.33\nHcLB@@Q]R[e[neh@a`@XHf|HjzP\t-1.33\nHcLB@@Q]R[e]nEh@I`@XHf|Hj[`\t-1.33\nKAxA`@xPD\\DYIHjjjh@pZDpj[d\\\t-1.33\nHidD`HRgCIIEYLJjjh@XUaMp|a@\t-1.33\nHiFDpFhXdDdLdLddlrjfd@XPwHx\t-1.33\nHmVL@JFUrRQRjJjjY@FCPfET|c`\t-1.33\nHmvD@LADfueYUj`@@A`vMproDP`\t-1.33\nHmTH`DAprRQRKrjjf@FCXUMr|bP\t-1.33\nHmNH@BAIfUmaeX@@@@A`pXproHx\t-1.33\nHmVD@Aa\\ddUbajjjPAarXUMp|bP\t-1.33\nKAxX`Ia@tQDYIIcJjh@phHinxfD\t-1.33\nsGQBK@aPF`C@IUMT`NLdCHAPNR@\t-1.33\nsGQLJhCPA`Djfj`GFRAd@hDI^R@\t-1.33\nHcL@@LddTjTPsU@AP@LJSBW^YSR\t-1.33\nHmvD@DClbbbRJIfjVj@FEYSCOHT\t-1.33\nKAxX`Pf@xTxYIHkJjh@pHj[nHf@\t-1.33\nHmLH@@RYVuiiV@@@@@XLe\\Lkq@p\t-1.33\nHmtH@ErRQRiXYj`@`@X\\fTwBoHH\t-1.33\nHiDDPNDGA`cIIEUJje@FEPfEWHX\t-1.33\nHiDLPJxP\\FBLddUTjjT@XEBXWHX\t-1.33\nHiDL`HS@\\LddQTjih@XTUMp|QL@\t-1.33\nKAxY`DwQDIDYDYIIUJjX@prDsd\\\t-1.33\nHiDDPHXGBoCIIETjjj@FEIa\\OHh\t-1.33\nHmtB@HPYrRQHzZfjjfh@XEaToHX\t-1.33\nHiDDPFxGBoCIIEYjjZ@FEPfDOHh\t-1.33\nHid@b@|@eJYWxZB@@AarXUMp|`@\t-1.33\nHeTH`LCDRVyTYi`@@A`pQS\\OHd\t-1.33\nHeU@@@eJYW~F``H@FCIaTw\\PI@\t-1.33\nHmtD@@eIfUTUZBA@@XMaUpkrF@\t-1.33\nHaD@P@bFbDfUjz@H@AaPIc]rJ@\t-1.33\nsGXCJJAPF`C@CdjfjpGFRAd@h@\t-1.33\nHmUL@NFFWIIEYdjjYd@XXfErI@\t-1.33\nKAxQ`TdQdPTPeTuUU@FEIaMwHh\t-1.33\nHeV@@IrRQRiCMT@@@LJSBinIp`\t-1.33\nHmTL`HYP\\LddUfRjinPAabXWHd\t-1.33\nHctB@HY]rRQVYJUTwL@LLSByF`\t-1.33\nHmTB@NFUrRQRqRjif@FAPfEqAT\t-1.33\nHid@`@|DiyWaj@@@FCPUMp|PD@\t-1.33\nHiDD`HPGCIHdcJjj@FCXUMp|`@\t-1.33\nHmtD@@QIee^UZ``@@XLU\\LkrF@\t-1.33\nHidD`@RJAInUxZ`@@A`pHULOHx\t-1.33\nHeTD@@IJUmQfj@@@FCQS\\L|QB@\t-1.33\nHmvH@AAIYWYnh@J`@X\\FESRoH`\t-1.33\nHidH`H@HRme^Eh@@@XLaTwCr@@\t-1.33\nHiFL`FaL@HrRRjQZj`A`VEp|a`\t-1.33\nHidH`HAprRQVKajij@FEIa\\OHX\t-1.33\nHedD`HDGCIIEXiUTr@LJSBz^PH\t-1.33\nKAxX`Pw@xUxYIHkJjX@pILJnQp\t-1.33\nHmVL@NaerRQVYJjfi@FEIa\\OHd\t-1.33\nHmVD@NalddUfTjij`A`rXWRoHD\t-1.33\nsNqBbJBRBdMHCcNRRUUU@LEWrD\t-1.33\nHedH`DAprRQRKuUU@CAlJfz^PH\t-1.33\nHmVB@NaiWIIEYeJjZX@XDfEwHT\t-1.33\nHiD@bLhLyJgmjjh@X\\DIa\\ODi`\t-1.33\nHiD@bLhLyJgyjjh@XBDHUMp|c@\t-1.33\nHmtL@@SDfUmYUj`@@A`S\\L|Re@\t-1.33\nHiDDPNDGA`cIIEUJke@FFIa\\a`\t-1.33\nHiDH`HAprRIIFjjPA`rYS\\OD@`\t-1.33\nHedD`HdGCIIEXmUSR@LJSB[nPH\t-1.33\nHiDL`HXP\\LddUfjjX@XDfEwDXP\t-1.33\nHiDL`HxP\\LddUTjih@XDfEWDxP\t-1.33\nHcvD@AalddUffeUMU@C@TpnFUt\t-1.33\nHeTH@@RUYTYj`@@A`HQeMpsrD@\t-1.33\nHmTJ@H[iWIIEYeJjZX@XXfErE@\t-1.33\nHid@`@\\Die_ahD@@FGIaTwCr@@\t-1.33\nHidH`DBHR[e^FX@@@XDATOD[`\t-1.33\nHiDLpJXXdDdLdLddlrjfd@^Qp\t-1.33\nHiDBb@RnJ`Kdf]Yji`A`fCrB@\t-1.33\nHig@@@idiUWajjj@FDaBXUMp`\t-1.33\nKAxHPTtRBRFRGNfRRVZjZ@OHx\t-1.33\nHeTL@@SDf^UFVh@@@XES\\ODrP\t-1.33\nHiDH`HAprRQURjf`AaRXWCrJ@\t-1.33\nHedL@NF\\ddTlUUSH@pJDpnHp`\t-1.33\nKAx@`@xQDYIIcJjh@pjDinxfD\t-1.33\nKAxH`MpNEAFRRJrje@LBaLKdT\t-1.33\nKAxH`TpND^FRRJNjZ@LBSB{dP\t-1.33\nHaDH`@b`RVU[j@@@FEXUMwDB@\t-1.33\nKAxI`UtRBRFRFRRUJji@LHKdL\t-1.33\nHaDH`HAprRQVMuUU@CBdpf{dT\t-1.33\nHiUH@HPDiUWBxZVeh@XIp|Rf@\t-1.33\nHiFH`DDGAJiijjh@XLfES]rA@\t-1.33\nHiDH`HAprRQVJjiPAaRXWCrF@\t-1.33\nKAxHPTtRBRFRGUfRRVZjZ@OHx\t-1.33\nKAx@`PD\\DYIHjjjh@pZDpj[d\\\t-1.33\nHefD@Nb\\ddUTuUUH@pYLJf{dB\t-1.33\nKA|I@YBAxYICDjjh@phBinxdH\t-1.33\nHefL@NairRQVYUTt`C@dpny@`\t-1.33\nHiD@`F\\LddUTjjh@X]BXU\\OHX\t-1.33\nHiE@`HZoCIIEUJij@FAIgCqBh\t-1.33\nKAx@`AxPDYIIcFjh@pjDinxfD\t-1.33\nsNpbJyDJHtP_CIIKJi`FFbwDV\t-1.33\nHiFH@HGIIEKjjj@FCIaUp|a`\t-1.33\nHiDD`NDGCIIEUJkf@FFIa\\`P\t-1.33\nHidD@@EIYW[f@B@AaTXUMrA@\t-1.33\nHidH@@RYm^Fh@@@X\\FES\\OH`\t-1.33\nHefL@L@YRUeVjjh@XRDHUMpr\t-1.33\nHid@@DjUfaBB`@FCPfMp|Pj@\t-1.33\nHidD@@EIYW[j@B@A`pQaTwHD\t-1.33\nHmTL@HY\\ddUfRjinPAabXWHd\t-1.33\nHedD@F{IIEYeUST@LJSBF^Q@\t-1.33\nHedB@HXYrRQVZUTs@CCDpnQH\t-1.33\nsNpB@DQppPPaJYjj`FEDU_Eb\t-1.33\nKA|A@TCaddbjjj`CAhSB[nQP\t-1.33\nKAzA@QsAFRRJrjf@LJaLInQp\t-1.33\nKAxY@Pf@DYIIUEjh@pKB[nQP\t-1.33\nHiFH`APGAJiijjh@XUaTw\\`P\t-1.33\nKAxI@QpNFRRJjjj@LJSBinQp\t-1.33\nHiFD@Jx\\ddT\\jjX@XUBXP|b`\t-1.33\nHiFH@AcIIEXjjj@FCIaUp|a`\t-1.33\nsNxBB@bRBdMHYIIUUT@ppkyB\t-1.33\nHaF@B@BTjWzXHB@AaTIaUrN@\t-1.33\nsJXLHhCPA`H~j@\\YHFPB`\\d@\t-1.33\nHiDH`HApRjUZjj@FCIaMp|b`\t-1.33\nKAxI@QpNFRRJjjf@LBSB[bUp\t-1.33\nKAxI@QpNFRRJjjf@LBSBkbMp\t-1.33\nKAxI@P`NBUNuTt@XUaTw\\PD@\t-1.33\nKAzQ@Qs@xYIHkJjX@pJDpnQp\t-1.33\nHedB@H[irRQVYUTt`CCDpnPH\t-1.33\nKA|P@QvRRJjjj@LFSBinyD@\t-1.33\nKAxX@AaYHhdZjh@pjDinyA@\t-1.33\nHaF@@@Rfu[j@@@FC@fES\\c`\t-1.33\nHidH@@RYm^Eh@@@XUaTp|c`\t-1.33\nHaDH@@RVU[j@@@FCAFTw\\``\t-1.33\nHiDD@J{IIETjjj@FAPfEqFD\t-1.33\nHiDL@JX\\ddTZjfd@XXfErN@\t-1.33\nHaf@@@RiUkfzjjh@X]BXUMp\t-1.33\nHiED@NFFrRQVZjfPAabXWHD\t-1.33\nHiDD@NGIIEJjje@FAPfEqJX\t-1.33\nKAxQ@\\CaddbjjjPCBhSBkdL\t-1.33\nHiDL@HX\\ddUfjid@XXfErN@\t-1.33\nKAz@@QvRRJjjj@LFaLJfyG@\t-1.33\nKA|I@]C@xYIHkJjX@pqLKd\\\t-1.33\nHaF@@@RnU[fjj@FCIaTw\\b@\t-1.33\nHigL@Ds`XTfUfn`BH@FF@p`\t-1.33\nHigL@Ds`XTfUfnZif@GfIg@\t-1.33\nKAxQ@PCaddblji`C@dpnyC@\t-1.33\nHaDD@@yIe^f`@`@XDBUwDp`\t-1.33\nHaDH@@RYWifjj@FEIaTwHx\t-1.33\nHaDH@@RVU[f@@@FEQeMwHH\t-1.33\nKAz@@ArTjmUT@X\\DIaUwHX\t-1.33\nKAxH@UvRRJjjj@LBaLKbMp\t-1.33\nHiDL@HSDjeVjj`A`QTw\\`P\t-1.33\nHiDD@H[IIEYjj[@FFIa\\`P\t-1.33\nKA|A@PC`eTsUU@FEIaTwHx\t-1.33\nKAxA@@xYIHjjkh@pILInQp\t-1.33\nsNtDHpxTHrRQVjTA`Uc^Q`\t-1.33\nKAxH@QvRRJjjj@LJSBknPp\t-1.33\nKA|P@]FRRJjjj@LJSBknPp\t-1.33\nHaD@@DjUZxHD@A`tHUMwHp\t-1.33\nsJPJaPRPTai@r@zSGuPCrP\t-1.33\nKA|X@XB\\drzuU@FFXw\\Pj@\t-1.33\nsNxLGIARFdLddjjj@XQ|Qh\t-1.33\nKAxP@@djkUU@FG@fES]rH@\t-1.33\nKAxH@ArRjmUT@XLBXU]qHX\t-1.33\nHaF@@@RYe[hB@@FA@UMqLx\t-1.33\nHiDH@@RYuVjj@FCIaTw\\`P\t-1.33\nsOpIAVBTfUk`@@FEVM_H@\t-1.33\nHiDB@@QnRY^vjZ@FBDOHp\t-1.33\nsNpY@jsPGdf^Zj@XKGbk@\t-1.33\nsNpDADQpRYzjhAaPcWqS@\t-1.33\nsNpD@xTJrRQVjhAaXl[rL\t-1.33\nsJQBBGBQBbMDQ}T@ptVyB\t-1.33\nsGPL@DQppPeKUT@pHQoEL\t-1.33\nsFqlAcJATEhDiTvjhAyhj\t-1.33\nsNpD@xPHrRQVjhAaXl[rL\t-1.33\nKAxA@@xYIHjjkl@pqLKd\\\t-1.33\nsNyLGYHJPtaddeeUHCqU`\t-1.33\nsNpdE`tRHRkzjhA`XZ~HX\t-1.33\nsNpyhlZqVGkszOvj`FBV@\t-1.33\nsNqhHlGCIHcJj`FFM_LE`\t-1.33\nsNqhHlOCIHcJj`FAAkxe`\t-1.33\nKA|@@@djkuU@FEIaTwHx\t-1.33\nsNxHHGCIIEZj`FEVM_I@\t-1.33\nsNqhHlKCIHcJj`FFM_Dl\t-1.33\nsOpHAbILkW@@@LBEgqF`\t-1.33\nsNpH@xYIDYUT@phakxe`\t-1.33\nsJPLADQpTPdwU@LBEcrP\t-1.33\nsGXDHGByBUSUPC@kF|d@\t-1.33\nsGPDADQpRUjj@XTKF|d@\t-1.33\nsNqhHjGCIHcJi`FBsx``\t-1.33\nsJPlLQxRHTQGtpCAQ\\a@\t-1.33\nsGQhHlGCIIKUPCAF|tV@\t-1.33\nsNxHHpcIIEZjPFEbq_IP\t-1.33\nsNyHHpxYIHkUR@pJqoI@\t-1.33\nsGQdEbOBQFRRFZ`FDgDZ\t-1.33\nsGXhMDOCIHUUPCC@wfbp\t-1.33\nsOxA@IRi^lH@@XVKF|c@\t-1.33\nsNpIEPKdkejj@XFJofFH\t-1.33\nsNpIMP[dj_jj@XTQE|Vh\t-1.33\nsGXDHGBxBUSUPC@kF|d@\t-1.33\nsGXDHGBzBUSUPC@kF|d@\t-1.33\nKAzD@XPHwIMkMLpAxb\\\t-1.33\nsNqHHGCIIEZjPFAVMyF\t-1.33\nsOpHAHILkW@@@LLc^KL\t-1.33\nsNpHADIJkUT@pXbqoHp\t-1.33\nsNy@iYMyJijjPFFVOHp\t-1.33\nsGXLKIARFdLddmU@LDZ\t-1.33\nsNqhAVjAJYjj`FFfOEV\t-1.33\nsGQi@jZ@|dsmT@pfxcP\t-1.33\nsNpIEPKdkejj@X\\QXu`\t-1.33\nsNpH@xIRkUT@p\\VM_H@\t-1.33\nsGPH@xYIDZi@XVKF|`@\t-1.33\nsGPD@xTJRjZj@XFKGdh\t-1.33\nsNxHGGCIIEZjpFFVOI@\t-1.33\nsNphIPxYIDYUL@prsy@\t-1.33\nsGPhH`xYIHZj@XKGfbh\t-1.33\npnH@BTlzemUR@X\\QXu`\t-1.33\nsGXDHGBaBUSUHCCKGdh\t-1.33\nsNyHEAxIWKUT@pNM_DH\t-1.33\nsNyHEAxIR}UT@pNM_DD\t-1.33\nsFxHHOAIeMjj@XEXwd@\t-1.33\nsGPM@xRPT`Nc}U@LMcP\t-1.33\nsNtHHpxYIHkUJ@prqyF\t-1.33\nsGQ`HmddejhA`c^ZK@\t-1.33\nsNq@KddbmUPC@qX|c@\t-1.33\nsGY@iYMyJijhAaecrP\t-1.33\nsGPhAUPISMU@LML^IT\t-1.33\nsGPhHaXISuU@LMc^HH\t-1.33\nqCcRAZTDyIj`LINXK@\t-1.33\nsGPhCQbILuS@LLI^S@\t-1.33\nsJQDDH`qBS\\t@pPOI`\t-1.33\nsJPIAxBTiZhA`Xl^P@\t-1.33\nsNq`AbeLuUPC@qU|VH\t-1.33\nsJPBHxJPt`YBOj`Gd`\t-1.33\nsNphH`xIUKUT@pvkyB\t-1.33\nsGQHHGAJejhAaecqB`\t-1.33\nsJPdE`DPHRie`FDgDB\t-1.33\nsNy`LDtfuZj@X[U|RH\t-1.33\nsGQHBLQIejXAaaMqJ`\t-1.33\nsJQdEbOBQD_M@LINKD\t-1.33\nsOp`Jtjeqje`FBqxh`\t-1.33\nsGPhCQbILuS@LDIqZ`\t-1.33\nsNt@H|ddUje@XYX|c@\t-1.33\nsJYHEAxIVuPCAX|pb@\t-1.33\nsGXHHOAIejhA`Uc^P@\t-1.33\nsJPIEPKdkZhA`h^XK@\t-1.33\nsNqhHlOAJeZj`FAAk@\t-1.33\nsNx@GddbmUPCBqXodh\t-1.33\nsNpH@xIUMUT@pjqkyH\t-1.33\nsGPhH`xISuU@LMc^HH\t-1.33\nsNq`@jdrkTpCAE|f@\t-1.33\nsKRAADQJTnKT`OLE`\t-1.33\nsNx`JDdrkUPCCFodp\t-1.33\nsNy@DDeeZj@XZX|UX\t-1.33\nsGP`@TfVj`FEDVOIP\t-1.33\nsJPhH`DIVmPCAX|`@\t-1.33\nsNp`@dfUZf@X[F|c@\t-1.33\nsJPH@xISuPCCSGbB@\t-1.33\nsNp`@df^Zj@X[U|a@\t-1.33\nsGPH@xIUMT`LBl[rP\t-1.33\nsGPhHPxISuS@LDkr@\t-1.33\nqC`HAps`dmPFBbxa`\t-1.33\nqC`HBHTPduPFFBwI@\t-1.33\nsNx@GddbmUXCCKGd`\t-1.33\nqCcRQXV@zOTAaAsQX\t-1.33\nsFy@LDigVfhAaEqF`\t-1.33\nsJPLAHJPL`dwS@OI`\t-1.33\nsJPDAxPHcvhAaIsKD\t-1.33\nsGPH@xIUMT`LCEcrT\t-1.33\nsNu`LPfdvkSHCqJ`\t-1.33\nsJPXHlPjQzt@pfyB\t-1.33\nsNqP@mVdssTpCqY`\t-1.33\nsGQ@JeTuT@pLVOIP\t-1.33\nsGY@LDizj`FFQoI@\t-1.33\nsGP`Adinj`FFQoI@\t-1.33\nqCpPP^BRu@XI[bD@\t-1.33\nqCqPZH^D^hCBCfbp\t-1.33\nsGY@DDeYj`FFqoED\t-1.33\nsJQIH@`SGmPC@aX`\t-1.33\nqCpRPA@eIj`LDmr@\t-1.33\nqCpRP^@eIj`LDmr@\t-1.33\nqCcPQXJd]XCB[d@\t-1.33\nsJQ@@eKU@LML^Q@\t-1.33\nsJP@DkVhA`Pl^R@\t-1.33\nqCbPXUbRt`XHSdP\t-1.33\nsGPP@mTf]jPGbq@\t-1.33\nqC`PBHRZhCCA[d`\t-1.33\nqCpHXRBdDfj@|Tp\t-1.33\nsBP@DiVj`FBFxh`\t-1.33\nsJPXHlQiQzl@|a@\t-1.33\nsJTILPyAdiZ|Ay@\t-1.33\nsJPHIxQ}T@prqyH\t-1.33\nqC`R@HDqz`LBHl\t-1.33\nsJP@DjVhAaecrP\t-1.33\nsJT`LPdfvdAxdP\t-1.33\nsGP`ATeUnPGba@\t-1.33\nsJPYHlQiGh}V@P\t-1.33\nsJPYHlPZGh}V@P\t-1.33\nqCr@XISRA`enR@\t-1.33\nQMA@HoAIXFD\\Y@\t-1.33\nQMACp_AIhFE\\Q@\t-1.33\nqC`@ISJAaaErX\t-1.33\nQMJd|BTf`XL|`\t-1.33\nQMFIDjN`XQqd\t-1.33\nQMFajByIhGfR\t-1.33\nqCh@CIRrAxe`\t-1.33\nQMFiK@zN`^YH\t-1.33\nRFQALXOD`\t-1.33\n`IGPCr@\t-1.33\nHiT`@@rnRfUjEnBB`PA`bMqLD\t-1.33\nsGY@DDf]j`FBVxcP\t-1.34\nQMdXZWde`^T\t-1.34\nRFDDaFCr`\t-1.34\nHev@@@rRIIRus]UUUP@pFDJfxYyF@\t-1.35\nHaE@@@aJyUnX@@@XEeMwD``\t-1.35\nsOpHAbILkW@@@LJEb~R`\t-1.35\nsKX@@eKcUPC@bX|b@\t-1.35\nsGP`ATf]jPFDwDb\t-1.35\nHcND@LCTeme^UZh@H@F@iaMpsoH`\t-1.35\nHiT@@LddTQQnFjjj@FGPfESCrN@\t-1.35\nHeT@@DjU]k``b`@XMBXUMqAd\t-1.35\nsKP`@Tixjj@XZK\\a@\t-1.35\nsJX@@dmU@LBEcrP\t-1.35\nQMA@HPaIhFE\\Q@\t-1.35\nQMBBHRZA`cr`\t-1.35\nsJX`BDdvu@LInID\t-1.35\nHeTLbHS@BL{IIKDdLkP@@@pragbMp\t-1.35\nsOq@@drm\\@@@pHM_Dl\t-1.35\nHidH@@RYfVF@b@@XXAMsJxP\t-1.35\nsGP@DiVj`FADMxe`\t-1.35\nsJPhH`DYIBm@LInHD\t-1.35\nsJQhHlOAJmj@XS\\PH\t-1.36\nqCaPQCpRfhCsAX\t-1.36\nQMJH|Df`^H`\t-1.37\nHeTB@@xYRfUVfjjj`AatES\\L|QL@\t-1.38\nsGP@DkUj`FEDVOIP\t-1.39\nsFt@AdiTt@@AaIsHt\t-1.39\nqCaPQCpRfhCBKbF@\t-1.39\nHg}B@DpAV|bbbRbrK]imUMMU@CAlJnN~IN`\t-1.4\nHcnH@LAIYe_x^fjjjj@FDhUMprn|PH@\t-1.4\nHeTD@@QIVUnEjjj@FCXS\\L|RJ@\t-1.4\nHidH@@rJJIEn`HH@FA@UMqLD\t-1.4\nKAxP@@dsjuU@FEIaTwHx\t-1.4\nKAxH@@bSJkTt@XEaTwHx\t-1.4\nsOx@@drm]UT@pXbM_I`\t-1.4\nsOq`Afdlm[UT@pbyhZ\t-1.4\nsOp`@dfUMZj`FFqoHp\t-1.4\nsJPHAVIJuPC@bK\\a@\t-1.4\nsGPhLQDIK]M@LDKrP\t-1.4\nsFy@LDi_FfhA`d^JT\t-1.4\nsJQHBGAJ^i@XJKbF@\t-1.4\nsKY@LDi\\ZZ@XQ\\TH\t-1.4\nqC`PCDRVhCCB[dP\t-1.4\nsGQ`@bdwML@pbyJ\t-1.4\nqC`PCDRZhCCBKdp\t-1.4\nQMaDbKpRZAaGFP\t-1.4\nqC`@IRtAa`mrP\t-1.4\nQMbh|BTf`XSqH\t-1.4\nqCr@XIKVAxa@\t-1.4\nRFTEPQP|h\t-1.4\nRFTPbQP|`\t-1.4\nsOq@@drm\\@@@ppUylV\t-1.4\nHidH@@RUe^Fh@@@XLATwCqHP\t-1.4\nHifDAHAHeNR[e^Eh@@@XHW\\rfD\t-1.41\nHidB@@kaReYrZjjh@X]FES\\OHP\t-1.41\nHeT@@DjU_k``b`@XCBXUMp|bP\t-1.41\nsGQhHlOAJmZhA`c^P@\t-1.41\nsOq@@drm\\@@@prsy`Z\t-1.41\nQMFIKBN`^YH\t-1.41\nsNy@DDeUZj@XEXwbc@\t-1.41\nHmtJ@@siUJYn~ajjjh@XCBDwCJ|SJ@\t-1.41\nqCaPQCpRmhCqC@\t-1.41\nsGX`LDdvmT@pVODj\t-1.42\nqC`XBPTaiAIj`OI@\t-1.42\nsNqiHl@c]ddeRuPCAF|c@\t-1.43\nQMRIOBN`^YH\t-1.43\nsGQ@@djmT@prqxiP\t-1.43\nHeT@H@bBbFbAbDfYnzXHb@@XDALODzP\t-1.44\nHif@`D@HRUe^EX@@@XTATw\\`P\t-1.44\nKAxH@@bSZsUT@XTaTw\\c@\t-1.44\nsNy@aAL{IILZj`FAVMyF\t-1.44\nsGY@aALyJkjhAaecrT\t-1.44\nsNp`@dfUZf@XHwbs@\t-1.44\nsJY@aALzOj`FBVyB\t-1.44\nqC`@IVtAa`mrP\t-1.44\nQMPBchFBWI@\t-1.44\nsJP`@TeZhA`QL^Q@\t-1.45\nsJQiHlOC\\eVu@ODB\t-1.45\nsJT@@TeZhA`QEnP`\t-1.46\nqC`@IWtA`hnS@\t-1.46\n`IoQHFD\t-1.46\nHidD@@QInUxV`@@A`RES\\Sa@\t-1.46\nHet@@DjYUX^d@@@@AarXUMp|bP\t-1.46\nqCb@AIZ`LLInQ@\t-1.46\nsOpH@DILkW@@@LJlZ~P@\t-1.46\nj`iA`@@V|eLsJnmARMiu@A@DT@@LFDYqQg\\pJw`\t-1.47\nJoBAQDIg@DYvRRVJKIIRmnmA@@@@AaS]ioqAl\t-1.47\nJoBAQDIc`DYvRRVIJYKCIvm@@@P@AaULJoqML\t-1.47\nHknJcEaLtp|LyYOdj~UvFVh@I`@XES\\OH@\t-1.47\nJobB@@VeLsJntLgkt@D@Q@@FCDwJ[|p]l\t-1.47\nHmL`B@aBB\\dRabRpiUj`@P@XTwCJ|PL@\t-1.47\nHk^@@@rRJFIQDYtz`@@@@F@ie\\Lz_HT\t-1.47\nHmtBbHSBCpKlddqbReVj@@@FAMpsqLT\t-1.47\nHcNBAHAEvISdfyW[aZ@BX@FAES]rM@\t-1.47\nHknJ@D@ae\\bbbRtJifjiZh@XYc[rC@\t-1.47\nHcLBbHSBCpKdjm{U]Zj@@@FA\\LkqFt\t-1.47\nHid@p@bFbAbDfUfn`BH@FE@fLOHx\t-1.47\nHeVD`Aa@BLdabRgRl@P@C@bkix`B\t-1.47\nHid@P@bH\\Df[Waj@@@FGAaTwCrH@\t-1.47\nHcNJ@LANF\\bbTRbILuTmT@LH[bKh\t-1.47\nHmMH@LhDigm\\jUid@H@FAMpsqDT\t-1.47\nHeT@`@\\DieUzZBA@@XBfES\\L|`@\t-1.47\nHmtH@@RYeY[hBBh@FGAaTLkrN@\t-1.47\nHifDAHAHeNR[e^Eh@@@XXwCqBh\t-1.47\nHmvJ@LANFTfVVRYjiZ`AaC\\RU@\t-1.47\nHeTH@@RYe\\YjB@@AapES\\L|RL@\t-1.47\nHcLH@@RYeYVz@`j`@X\\FEProHt\t-1.47\nHaD@b@|@eJ[Unh@@@XLfES]r@@\t-1.47\nHidH`ACDRYWZZ@BP@XTBXU\\c`\t-1.47\nHiTH@@RgeXSaj@B@A`tES\\OHP\t-1.47\nHaDH`HApRnU[j@@@FCQaTw\\`@\t-1.47\nHeTD@@YIfUqehH@@FEEWCODq`\t-1.47\nHid@`@qDee]nh@H@FCAFES\\`P\t-1.47\nHid@@LddRL[jjj`A`tIa\\ODi`\t-1.47\nKA|Y@]BX@QddeRVj`C@lJfyG@\t-1.47\nHeTD@@QIemQej@@@FAESSqND\t-1.47\nHifH@AAJ[W[j@B@AaRXUMrA@\t-1.47\nHif@@@RfU~F``@@X\\BXS\\OHh\t-1.47\nHif@@@RUe^Fh@@@X\\DHUMwHD\t-1.47\nHidH@@RUe^Fh@@@X\\DHUMwHD\t-1.47\nHaD@P@dNdDfUZZ@B@AabDwHp\t-1.47\nHif@@@RYWZZ@B`@XLBXUCrN@\t-1.47\nHeVB@LANEIeeRYjiZ@FDMqJd\t-1.47\nsJQL@hCPA`DijhAqd`Y@JArP\t-1.47\nHaDH@@RVU[f@@@FEQaUwHX\t-1.47\nHaF@@@Re]J`@h@FEPfDwHx\t-1.47\nHaD@@DjWzXHB@A`TYW\\QB@\t-1.47\nHaFL@LAFRYUJfjZ@FDUqLx\t-1.47\nKAxD@@c\\dwLuS@FFIg\\b`\t-1.47\nKAxH@@rTzmST@XDfEwDb`\t-1.47\nKA|P@HBSJsTt@XTfTw\\``\t-1.47\nqC`XBHTQhAIj`NIdBBByH\t-1.47\nsOpHAxILkWUU@LGEcWr@\t-1.47\nsGQHHGCIHcUPC@kF|`@\t-1.47\nsOx@@drm]UT@pXbqoHp\t-1.47\nsGQHHGCIHcUPCCHwbF@\t-1.47\nsNqHHGCIHcJi`FFV_DJ\t-1.47\nsGPH@DIJmU@LJHl^R`\t-1.47\nsNp`Jtjejj@XVXu|b@\t-1.47\nsJPDAbGDRUj`FADqyD\t-1.47\nsGXA@IrRHuR@plVMy@\t-1.47\nsGPhCQDILmR`LDIqK@\t-1.47\nsJQDDGBQD_U@LML^Q@\t-1.47\nsNy`LDtfuZi@XKGbU@\t-1.47\nsNx@@djoUPC@kF|c@\t-1.47\nsNp`@dfvZj@XEZodH\t-1.47\nqC`HBHtPdmPFFDwH`\t-1.47\nsGQHDHaInfhAa`[rX\t-1.47\nsNq@@dssUPC@hu|f@\t-1.47\nsJPHAXIRuPC@qX|`@\t-1.47\nsGPP`cUuyInZXA@\t-1.47\nsJQ@@eMU@LLl^R@\t-1.47\nsGQ@@dsMT@prMyL\t-1.47\nsJQ@@dmU@LBHmrD\t-1.47\nQMCCDoAqDf`XH|h\t-1.47\nsGT@ATeWfpGbV@\t-1.47\nQMABHWAIhFBWI@\t-1.47\nQMBcpIchFCOH@\t-1.47\nqC`@IS^Axe`\t-1.47\nRG@aMt\\OH@\t-1.47\nQM`PfzO`^R\t-1.47\nQMFIOBMP^P\t-1.47\nQMPARUAxb\t-1.47\nHaFH@BAIf]n``@@XYe]s@I`\t-1.48\nHg|H@@RfUYwySn``@@@@XJfDwCNg_HT\t-1.48\nHet@@DjYUX^d@@@@A`rDwCODr`\t-1.48\nsGX`BDdvmT@prqyJ\t-1.48\nHifDAHAHeNR[e^Eh@@@XXUMqND\t-1.48\nRF@Qp|R@\t-1.48\nsJPXhlQx[ct^u@OH`\t-1.48\nsJPhHaxIRuPCsCD\t-1.48\nQMFIOBN`^YH\t-1.48\n`IK@Cr@\t-1.49\nHaD@@DjWjXHB@A`f]phRf@\t-1.49\nsGQ@@eNuT@ptqxeP\t-1.49\nqC`XCDVIlQIj`LLEnR@\t-1.5\nHif@@@rRJEKaj@@@FCIaTw\\`P\t-1.5\nHaDH`H@HRnU[f@@@FEXUMwH@\t-1.5\nsGP`AdeUj`FBMxh`\t-1.51\nsGQ`@jdrmR@|VH\t-1.51\nsNx`DFdkKUHCCKWba@\t-1.51\nqCh@CIKTAaaErX\t-1.51\nQMBCDRYAaGFP\t-1.51\nHiT`@@rnRfUjEnBA``AabMwHD\t-1.51\nsJY@DDfvdAaMqH`\t-1.51\nsJQ@@dkU@LCEcr@\t-1.51\nRF@QPpce@\t-1.51\nJoBA@@YviSJwZ}C[uUTDA@@XSA\\LkiwsDip\t-1.52\nJgBD@@YHhhhddZFSvz@B@B@@LFInT{y`sh\t-1.52\nHcND@BADf{YU]Zj@@@F@ie\\LkoHH\t-1.52\nHid@`@BDiyWaj@@@FGAATwCrD@\t-1.52\nHeTD@@eJ[WVz`@h@FEIaTwDFP\t-1.52\nHidH@@RYWZZ@B`@XLBXUCrN@\t-1.52\nsOx@@drm\\@@@pHM_Dl\t-1.52\nsNp`ATfUjj@XTQF|VX\t-1.52\nsKP`@Ti\\Zj@XJ[dP\t-1.52\nsJQ@@dmU@LML^HH\t-1.52\nqCcRQX^FzNtAaEr@\t-1.52\nsNx`BDdw[UPCCKWbK@\t-1.52\nHmtL@@QTfyeQehBA@A`ULL|QN@\t-1.53\nHk^H@DAInUm^GSZ@@@@@XLWRngqDh\t-1.54\nHmNh@DkaTDfVYVzUZiYj@FFHL|aP\t-1.54\nHmLD@@QIe[VfeVi@B@A`U\\J|SI@\t-1.54\nHaF@@@RYe[hB@@FEAaTwHx\t-1.54\nKAxD@@c\\dr|uS@FDYqBx\t-1.54\nsNu@EPdrkUPCCKWbK@\t-1.54\nqC`HBHc`dmPFFBwI@\t-1.54\nsGQ`@bdwMT@pvMyD\t-1.54\nsGP`@dfUjPFBuyB\t-1.54\nsJP@Dk^hAahmrD\t-1.54\nqCa@BIWTAaMqQ@\t-1.54\nQMABHcAIhFBWI@\t-1.54\nqCaPSAXRVdCqA@\t-1.54\nsJP`@dfvlAxdP\t-1.54\nqCb@AIV`LEMrH\t-1.54\nqCp@AI^`LInQ@\t-1.54\nRFBFIFDXLHyP\t-1.54\nQMBBpRZA`sr@\t-1.54\n`IC`Cr@\t-1.54\nqCq@XIIf`ODl\t-1.54\nsJP@DiVhA`QD^S@\t-1.56\nsGP`@TfUi`FDwDj\t-1.56\nqCj@KAIV`LDmrP\t-1.56\nHev`@@rfeJY{ZxYBBFH@XXfCrI@\t-1.58\nHmN`@@rfeJY{^nFP`ah`AabXOHT\t-1.58\nsGP`ATiVj`FAbuyB\t-1.58\nJoBD@@ISZzrk][t@E@@@@XJfESKiv\x7FHD\t-1.59\nHg|@@DjU^Uzx{BB@`@@FDpaTLki|SK@\t-1.59\nHeV@@@RfU\x7FahHB@A`rXUMwDBP\t-1.59\nHie@@@aJVuxV`@@AaQTwCrL@\t-1.59\nHaE@@@aJyUnX@@@XUaTw\\b@\t-1.59\nqCb@AIVPLInJH\t-1.59\nHg|H@@RYfUWd}mh@@@@@XBUMprn|P{@\t-1.59\nj`qAB@G@bDfYeU\x7Fd[Uj`@@B`@AahAJLxJRmV}rD@\t-1.6\njdyP@@@^Rfuue]f\\lyjVX@Jh@AaiFBTXkQkAcr@`\t-1.6\njhyQ@@LT@eL}klkbde^CSH@P@P@@pds`iFl{p^PP\t-1.6\njhia@@G@RYfUW~d[Uj`@@Bh@@XFA@eF\\EIVoAyBp\t-1.6\nj`q`@@@YIEBedhdnB]zh@J@@@@XZQ`eF\\tZso\\aH\t-1.6\nj`q`B@K@|DifUW~EiQj@@@J`@AakAJLxJRcN}r@@\t-1.6\nHgl@DLdBdJdFdAdIdCdKdLddTbdYeUUTt@LD{^Ph\t-1.6\nj`q`@@@YIEBedhdnB]zh@J@@@@XZQ`eF\\ehug\\ax\t-1.6\nj`q@`@@LRYfWg^Qg^jB`@@@@FE`PIQ`iJtZso\\a`\t-1.6\nj`qH@@@P]yJVYU_yFuYh@@@d@@XRIQgARUjwH^@\t-1.6\njhiP@@@NRYfUW~d[Uf`@@Bh@@XZ@RcNBdkW`|aX\t-1.6\njhi`@@@ISLwZkf|xMUP@@@@@LO@``cNBdkQkN|D\t-1.6\nj`qa@@D@RYYUg^Qg^Z``@@@@FDdTXkQkN}sAAR@\t-1.6\nHglLxJ[hBLdBdAdIdCdKdLddTbdYeTmUT@LHwdJ\t-1.6\njdyP@@@QrJJJJjIJILEYtADP@U@@CAPBTYqVoAb\t-1.6\nj`q@@@DjYVWWyjwhI@HA@@A`YFJLxJRmFm{dG@\t-1.6\njhia@@G@RYfUW~d[Uf`@@Bh@@XJIQgARUkp^Pl\t-1.6\nHg^BpLaIT@b`aiCIICEELb]kU@h@@LJx]N~QP\t-1.6\njdip@`OAbBPIHJdKRBSLwKKnpTuSMU_h@OHR@\t-1.6\nJoB@Q@^@SddbbaRRrv[uP@@@@@XVFES\\Lkivx\t-1.6\nJoB@P@NFRRJJEIKKYoU@@@@@AanTwCJz]orB@\t-1.6\nj`q@`@@^RVUvUugCVX@H@I@@F@lDhrRmFxbC`\t-1.6\nHkLLHDYP\\HbJ\\I\\LddqdQdjjjj@FGQa\\NgrE@\t-1.6\nJoB@H@^@~BULrj~mf}PA@@@@FAaaTwRng[|`P\t-1.6\nHctHXMRPrPjPZPFPfPrRQRFDuUUT@LLy]yA@\t-1.6\nJoBDH@QPIPIS\\rjzv[uP@@@@@XKS\\Lkiv\x7FHP\t-1.6\nJoB@@FRQQIQKH}moAHA@@@AajYS\\Lz]orE@\t-1.6\nj`aP@`G^AHDdERAiAIf[eWvBfjYjoP@^HyH\t-1.6\nHkn@PHApiprRQJFIGSjhJ@@A`lXS\\Lki|b`\t-1.6\nJoC@PD@xIU\\vjzv[uP@@@@@XZUMprng[|b@\t-1.6\nHg\\BPHSS@HxHrRPqQISKZtD`h@CAjXYV~Qp\t-1.6\nJoBAPDIa`DYIIUHiEEMrzuUUMT@F@xPrnvx\t-1.6\nJoBDPD@xITlvjzv[uP@@@@@XZUMprng[|`@\t-1.6\nHgmL`JULHOCIIEIRdiMUUU@CA\\JfxYT{yF`\t-1.6\nHg\\@x@dBdFdAdEdCdKdDfYn\x7FnfBHbj@AyF`\t-1.6\nHknBPLaFx@``cIHXhhTmMZe@@@FECJz_D@`\t-1.6\nHg\\JPHSAd@b`cIIBhhd]ikTB`P@LJ[ev~QP\t-1.6\nHo~L`LaC@HrRPjJIKG[VhJAH@FGYS\\noqAd\t-1.6\nHklBPHQ]@HxHrRPqIJJSV``T@A`qTpr_Hx\t-1.6\nHklDPDp@b@cIIDXdmevV``H@FGQS]JgrA@\t-1.6\nHklHPHApiprRQJFIGSjhJ@@AaNDwCJz_Hh\t-1.6\nHctLpHS`\\J\\F\\LddRLbeUUU@CClIae]yG@\t-1.6\nHg^L`LaM@HrRPjIIHjZuA@d@CAl[iV~IP`\t-1.6\nHedFIDpnFPBHBJBFBBz^rRQURRuK@CAHh\t-1.6\nHg}@@@aJVYU^Svz`@@@@A`HMprnwphJc@\t-1.6\nHkLLPDtp\\ABLddTbLLjjje@FGXUMtkrA@\t-1.6\nHmTHHDApbHipVHRjvYjjj`A`LXS\\LkrJ@\t-1.6\nHcMB@hDDWXeNF]yInUnzV`BF@AaaUwHd\t-1.6\nHg|H@@RYfUWd}nh@@@@@XJDES\\LkoDNp\t-1.6\nHg\\D@HkIIDhTeDmuTDE@@LIpfzUt{y@`\t-1.6\nHcLDPDp@b@cIIDYdmJrt@D@CAh[ag^QP\t-1.6\nHmTDpHPGBgAgCIIDcEJjjh@X]aUproHX\t-1.6\nHcL@P@|I|DifUl]hJB`@FDiaTwBn|PI@\t-1.6\nHg}@@@mIe]e^ftx@H@H@A`HHUCJwqLt\t-1.6\nHg~@@@RYfUWd}mh@@@@@XJUMprng_H@\t-1.6\nHedLhDp`BJdFdAdIdLddTgdmUP@|Pn@\t-1.6\nHg|H@@RVUvU[cm`@`@@@XCaTtki|RK@\t-1.6\nHmtDPDp@b@cIIKDeafV@B@AaUMpkrH@\t-1.6\nHmvD`La@BLddNbReUjjj@FCTwCJ|SB@\t-1.6\nHk\\H@@RfYU\\]Tz@@@@@FDxUMprn|`p\t-1.6\nHmV@PHApEprRQQMRjjj@F@iaTwRoHD\t-1.6\nHeVD`La@BLdaTRPrmUU@CAbinF^HF@\t-1.6\nHiD@H@\\HbNdAdLddqTjjh@XUBXU\\a`\t-1.6\nHmtJ@@IaUIf[oijjjh@XJDIaTwBoHd\t-1.6\nHmUH`Dr@|LdbTLTjjj`A`HES\\LkrL@\t-1.6\nHmtD`HP@cIICLeaeZ@B@AaUMpkrB@\t-1.6\nHmtD`HP@cIICDeiUZA@@A`qTproHx\t-1.6\nHmUD`LJD@HrRPqIIZjj@FCTwCJ|``\t-1.6\nHk^D@DBTfYYwimMjdDB@A`vMpkoHL\t-1.6\nHiDDpDXGBHbgCIILYJjj@FEQa\\OHX\t-1.6\nHmtD`HP@cIICDeiUZB@@A`qTproHx\t-1.6\nHmU@`HPGCIIEDTjjjh@XCaTwCJ|a@\t-1.6\nHedAQHSBkad@a``nglddNTbuRp@`\t-1.6\nHcNJ@D@ae\\bbbRtMLuUKT@LDqnQh\t-1.6\nHcL@@DjU_VnBAId@FBpfES\\LkrM@\t-1.6\nHeTL`HRPBLdabRwBl@D@CBbingd@\t-1.6\nHmLD@@qJY{WJeZj@B@A`tMproDR`\t-1.6\nHmvH@H[IIEDYNFjjj`AarXSCJ|c`\t-1.6\nsFpF@DSpPQ``~EBDf_EjXA`Pm^JD\t-1.6\nHk\\H@@RfYU\\]Tz@@@@@FBxUMprnf\t-1.6\nHmt@`@|DifUqV`hH@A`JXS\\Lkq@h\t-1.6\nHiDHPDApbHrRPqRjj`AatXUMp|a@\t-1.6\nHg_@@@jteem]YWizV[`A`S\\L|cP\t-1.6\nHiDHPHApIpRiYjjj@FG@fTwCrB@\t-1.6\nHcLH@@RYWeUuiX@@@XBfEprn|b`\t-1.6\nHiED`LJD@HrRPiIZj`A`UMp|SB@\t-1.6\nHaD@R@bNhNyIe^f`@`@XTBXU\\c`\t-1.6\nHeV@B@B\\dbaRwBuRs@CAdpj[nQH\t-1.6\nHmV@@@rRJJIjjjj@FDpfES]J|`P\t-1.6\nKAxUBPfEp^F\\WYIIbfjh@pRnyC@\t-1.6\nHeth@DkiAIeeVxYZiVh@XH`|Pi@\t-1.6\nHiE@`HPGCIIDbjjj@FCXUMp|RD@\t-1.6\nHeU@@@eJYW~F``H@FGIaTwSr@@\t-1.6\nHmtD@@QImYVUZh@@@X\\fMproHH\t-1.6\nHcM@@@uIVUux^ZV[`A`QTw\\QI@\t-1.6\nHiDNPHSB[a@XhXrRPzQZe`A`aB\t-1.6\nHeT`@@`YRnUunX@I@A`VES\\RI@\t-1.6\nKAxD`Pc\\@QPQddJTVYPCALKbAP\t-1.6\nHif@`HApRkm^Fh@@@XMaTwCq@`\t-1.6\nHeTL@HP\\ddRUQ]UUU@CBlJfgd\\\t-1.6\nKAxH`P`NENFRRJrjj@LJpj[nP`\t-1.6\nHif@B@B\\dbaRxVjV`A`rXUMwHD\t-1.6\nHmu@@@UJf]|YjB@`@X\\aTwBoHp\t-1.6\nHaD@P@bH|DeeVz`@@A`pXUMwH`\t-1.6\nHeeH@DhLbbTJcUUP@pyLinF^PP\t-1.6\nKAxY`Pf@DMH]HYIHUEjh@pbnPP\t-1.6\nHiDB`HSACprRSIEjjPAaaTwHx\t-1.6\nHeU@@@gIHhTmpu@A@@pyLJfzP\t-1.6\nHef@@@rRJJIuUU@C@XPj[agdX\t-1.6\nHmvJ@LANF\\bbTReIfjej@GbLh\t-1.6\nHeg@B@J`gIHhXhuUT@LFSFxY@\t-1.6\nKAxAPAHIHEHMH]HIMwTuPAyE@\t-1.6\nHidL@HP\\ddRNijji`AafEWD[`\t-1.6\nHeTD@@eIYWVy`@d@FFXU\\rFD\t-1.6\nKAxQ@PC`eWMUU@FG@fES]rH@\t-1.6\nHeTH@@RYyTYZ`@@A`rTwCOHp\t-1.6\nHifH@AAJ[W[j@B@AaVESCrD@\t-1.6\nHidH@@RUe^Fh@@@X]BES\\OH@\t-1.6\nHaDL@@[die\\jjj`AaTXUMqDx\t-1.6\nHiFD@LADfWYjj`A`VMp|Pj@\t-1.6\nHifH@DAIVUxU`@@A`QTw\\`P\t-1.6\nHiEH@DHDf{Yjj`A`vES\\OHP\t-1.6\nHiD@@LdbJTZjh@X]BXUMwHD\t-1.6\nHaDD@@YJ[tjjjh@XDfEwDb`\t-1.6\nHeVJ@LANFTfVVIfjeh@^Ht`\t-1.6\nKA|H@XBIMkMUPA`VTw\\QB@\t-1.6\nHaFH@FAIe^fZjh@XDfEWHx\t-1.6\nsGPL@xRHTQddajhA`Xl^R`\t-1.6\nKAzP@I`ILsUUPAaTES]r@@\t-1.6\nKA|X@DB\\dwZuT`FAIaUrF@\t-1.6\nHid@@Di[Waz@@@FEES\\OHp\t-1.6\nKAz@@@VRQPrjZ@LBSF{dT\t-1.6\nHifB@LANEIeeIfje`AxeL\t-1.6\nsNxhMDOCIHUJj`FAAkyhl\t-1.6\nHiF@@@RifZjj@F@pfES\\H\t-1.6\nsNpD@DSpRYyjhAaPcWqS@\t-1.6\nsGQDHGCNBTmUPCCHwbF@\t-1.6\nsOpH@DILkW@@@LJEc^Q`\t-1.6\nsNpD@xRHRjzjhAaYcWrH\t-1.6\nsNqhHfOAJmvjPFBqxaP\t-1.6\nsNpH@xIRkUJ@p\\VM_H@\t-1.6\nsNt@@|dTQjj@XTKF|TX\t-1.6\nsGTHHaxISuU@LMc^XQ@\t-1.6\nsNqHHGAJeZj`FAVkx`P\t-1.6\nsOq@@drm[Rt@pJqoHp\t-1.6\nsJPhH`xYICU@LEcsBH\t-1.6\nsGP`ATefj`FEDqoH`\t-1.6\nsJQHHGAJfj@XYX|`@\t-1.6\nsFx@@eJf`@@LEcsQT\t-1.6\nsJQHHGAJfj@XIGbF@\t-1.6\nsOy`LDtfUMZi`Gbu@\t-1.6\nsNxA@NRfZjhA`xlZp\t-1.6\nsJQHHGAJni@XYX|P`\t-1.6\nsJQHHGAJVj@XIGbF@\t-1.6\nqC`H@Hg`dsPFDGME`\t-1.6\nsJYHEAxIWMPCAX|`@\t-1.6\nsGQ@@dsuT@phbqyJ\t-1.6\nqCbPXXbRu@XHSbV@\t-1.6\nsJP`@dfzhA`l^XQ@\t-1.6\nsJQHDHaInZ@XHGdp\t-1.6\nsOq`@fdrikUL@|Vh\t-1.6\nsOq`@fdrikTl@|Vh\t-1.6\nsKQ@@eKcUHCAX|TP\t-1.6\nsGPP@cTfyi`GbU@\t-1.6\nqCcPQXCD]XCB[d@\t-1.6\nqC`PCDRZhCCA[d`\t-1.6\nsJP`@dfvdA`l^Q@\t-1.6\nqC`PApRVdCCQ[d@\t-1.6\nqCcRQXUfzNlAa@\t-1.6\nqCb@AIZPLLEnR@\t-1.6\nQMIDbIpRZAaGFP\t-1.6\nsJY`BEdfVhAxlP\t-1.6\nsGQ`@ZdrmJ@|Rp\t-1.6\nqCb@AIVPLEErX\t-1.6\nQMABlYAIhFD\\h\t-1.6\nsJQ@@djw@OEB\t-1.6\nRFBBYQDXLJy@\t-1.6\nRFTPeQ`|R@\t-1.6\n`II`Cr@\t-1.6\n`II@CB@\t-1.6\nHiFL@BAAR[mVji@FEIaTwHx\t-1.6\nqCaBAKdfZ@xTlMXPf@\t-1.6\nqCaBAKdfZ@pf@\t-1.6\nJoBA@@XNiSJkN}][uUTDA@@XSE\\LkiwsDIp\t-1.6\nHmLL`HS@BLddJfRiiUZ`@`@XEproHh\t-1.6\nHcLB@@RUR[fVQuhHF@@XEWCoDQP\t-1.6\nsGY@JDeUj`FFVoEB\t-1.6\nKA|H@DBIMvmUPAaRXUMrN@\t-1.6\nsGX@JeTuT@prqxiP\t-1.61\nRFTQxQP|`\t-1.61\nsJQ@@eKU@LEEqX`\t-1.61\nqC`@Qz`LMEnP@\t-1.61\nHiDD@@QIeuZjh@XUaTw\\`P\t-1.62\nHidB@@[aRfU\\jjjh@XMFESCqDx\t-1.63\nsGP`@dfuj`FFVoHP\t-1.64\nsGQ@@dkMT@prqxiP\t-1.64\nKAxH@@bSKkUT@XEaTwHx\t-1.64\nHeTD@@QInYQehB@@FATpsqDx\t-1.64\nKA|H@HGIL|mUHAabXWDi`\t-1.65\nsGQ`@ldsmT@paxmP\t-1.65\nHaD@`@bDeeVz`@@A`pXUMwH`\t-1.65\nsJP@DjZhA`Pl^R@\t-1.65\nHmtJ@@XYUJYY^njjjh@XCFEWCJ|QF@\t-1.65\nsJU@E`dru@LH^IX\t-1.65\nsJP`@TiZhA`inID\t-1.65\nHidH@@Rfufzjjh@XMFTwCqDH\t-1.66\nHaGH@Dq`RYVkffi@FFTw\\c@\t-1.66\nHaED@DpFRYVkfjY@FFIW\\c@\t-1.66\nHaDH@@RVU[f@@@FAQaUqFx\t-1.66\nKA|H@LEIRjuUPAaTIaMrN@\t-1.66\nsNx`FJeJmUPCBqXodh\t-1.66\nsNx`FDdvkUPCCHobu@\t-1.66\nsNq`@fdr{UHCAX|e@\t-1.66\nsJY@DDeUhAaMrD\t-1.66\nQMA@HmBN`XI\\d\t-1.66\n`IM`Cr@\t-1.66\nHev`@@rfeJY{ZxYBBJD@XDfLH\t-1.66\nHidH@@RVUvy`@`@XEaTwD`P\t-1.66\nsGY@LDemj`FFVOEJ\t-1.66\nsGQ@@eJuT@ptVxcP\t-1.67\nHeTH@@RYe\\YZB@@A`vEWCOHX\t-1.68\nKA|H@DBIMwMUPAaRXS]rJ@\t-1.68\nqCrAPCiJSU@XI[d`\t-1.68\nRFTQxQ`|R@\t-1.68\nsJP@DkVhA`QEnP`\t-1.69\nqCp@AIZ`LDMqQ@\t-1.69\nRF`EFCBNT\t-1.69\nHmv@B@B\\ddUbReZj@@@FDpfDwCJ`\t-1.69\nsNq@@djkUPC@kF|TX\t-1.69\nHifDAHAHeNR[e^Eh@@@XXS]qJD\t-1.7\nsOpHAbILkW@@@LJDZ~S@\t-1.7\nJoBD@@ILrkNx{[uA@@@@@XFDEWCJz]orL@\t-1.7\nHmtD@@QImYVUZh@@@X\\aMproHp\t-1.7\nsJQ`@bdvt`LHnS@\t-1.7\nHaD@@DjfZzjj`AaVES]qHP\t-1.7\nqCcPQX^D]hCBKbF@\t-1.7\nQMABPYAIhGe@\t-1.7\nsGP`@dfUjPFDoEb\t-1.71\nHmt@HHdDdLdEbLddlRVFZh@H@FATwKrA@\t-1.72\nHo}L@J[SoIIEKEELQfjjjYh@XMBXPkrG@\t-1.72\nHg]L@J[SoIIEKEELLuUUSL@LFaLHUyA`\t-1.72\nHcl@@DjYU_egX@@@@@XRfDwCJ{rJ@\t-1.72\nHedLpJFXdDdLdLddlreTtp@panQH\t-1.72\nHcLL@@STfue^UZh@H@FCDwCN|QL@\t-1.72\nHmTB`HZUAprRQVYRjff@FAIa]rE@\t-1.72\nKA|Q`MTQBQFQFRRVJjf@LBaL[d\\\t-1.72\nHefDB@FPgIIETiUUL@LFaLIiyE@\t-1.72\nHeTH`ACpRfUWidHD@A`rXS]ODB`\t-1.72\nHmtH@ErRQRiHYj`@`@XLfETkqFx\t-1.72\nHmtH@IrRQRiPUj`B@@XLfESSqAT\t-1.72\nHmtH@NrRQRqZUj``@@X\\fDwRoHD\t-1.72\nHeVD@DClbbbRILuRu@C@liayD`\t-1.72\nHedL`HZP\\LddUfUUMH@pILKnPH\t-1.72\nHeV@@@Re[TYj`@@A`HPUMpsrD@\t-1.72\nsNplJu@Z@L@eTuTpCcI@r@TCdX\t-1.72\nHiDD`HX\\SIIEYjjZ@FAIaCrN@\t-1.72\nKAxI`MtRBRFRFRRURjf@LH{dD\t-1.72\nKAxP`PCaSaddbjjjPCBdpf{dT\t-1.72\nHeTD@@yJ[VvF`BH@FEIaCOHX\t-1.72\nHaE@@@aJyUnh@@@XLDXUMrN@\t-1.72\nHefD@NalddUfeUMP@pILH^QH\t-1.72\nsNyLGYDJHtQddeeUHC@qY|e@\t-1.72\nHiDD`HXGCIIEYjj[@FFIa\\`P\t-1.72\nHiFD@Jx\\ddUTjjX@XDfEWD`P\t-1.72\nHidH@@RUe^Fh@@@X\\BES\\OH`\t-1.72\nKAxI@MpNFRRJrjf@LBaLKd\\\t-1.72\nKAxI@P`NBUKmUT@XUaTw\\`@\t-1.72\nHiFD@NalddUfjih@XDfDOHx\t-1.72\nsGPJHBJPt`YBubUSUPCBWd`\t-1.72\nHiFL@AanrRQVZjf`AabXWHD\t-1.72\nsNpBHxJPt`YCIIEZj`FBkyH\t-1.72\nKA|Q@QpNFRRJVji@LBSB[dT\t-1.72\nsNqLKHaQFbLddljf@XZK\\c@\t-1.72\nKAxI@PpNFRRJrji@LLSBxc\\\t-1.72\nsNplByDJHtQddeUUHCCQ[dh\t-1.72\nKAxQ@\\CaddbjjnPCCDpnPp\t-1.72\nHaD@@DjWjXHB@AaTIc]rJ@\t-1.72\nsGXLKHaQFbLddmT`LCEkrD\t-1.72\nHif@@@RVUv{`@`@XEaTwHD\t-1.72\nHaDH@@RYe[hB@@FA@UMqLx\t-1.72\nKAxD@@c\\dvlts@FBXWDS`\t-1.72\nKAxH@MvRRJrjf@LLSBxd\\\t-1.72\nKA|@D@DiUJuUPAatIaTw@\t-1.72\nsNpD@xTHrRQVjhAaXl[rL\t-1.72\nsGPdE`DRHrRRrt@pTOIP\t-1.72\nsJQLCHaQFbH~j@XZK\\a@\t-1.72\nsO|HEfHaIeZx@@AaAqF`\t-1.72\nKAxX@PfIUJuUPAaeMwHH\t-1.72\nsNqHFGCIIEZj`FEbqoHp\t-1.72\nsNqhHl@cIIJej`FFqoHp\t-1.72\nsOpH@bILkW@@@LJlZ~P@\t-1.72\nsNyHHpxYIHkUL@prqxjp\t-1.72\nsNyHG@xYIHkUR@prqxjp\t-1.72\nsJXBB@bRBdMHQ}T@p`yB\t-1.72\nsOpHAxILkW@@@LBl[qA`\t-1.72\nsFxIHO@RdrfuU@LBl[r@\t-1.72\nsGPhH`xYIDZj@X[F|PP\t-1.72\nsGQDHGBtBUSUPCCKGdh\t-1.72\nsGPD@xPHRjZj@XFKGdh\t-1.72\nsGQhHlOCIIJuPCCKWdH\t-1.72\nsOy@FDfUkZj`FAVMyF\t-1.72\nqC`XBlTaiAIj`LHNR@\t-1.72\nsJPIEPKdkZhA`QL^Q@\t-1.72\nsGXHJGAJijhA`Xl^R`\t-1.72\nsGQHJGAJijhA`Xl^R`\t-1.72\nsGQ`AbeLuT@ptUxlP\t-1.72\nsJPH@DIJuPC@bK\\a@\t-1.72\nsJPhLQDIKTpCA@|d@\t-1.72\nqC`D@Hd`iCRD^hCr@\t-1.72\nsJPH@xIKUPC@qX|`@\t-1.72\nsGT@A\\dbMU@LMC^IX\t-1.72\nsNqA@IRiVjhA`xlZp\t-1.72\nsGQHI[AJijhAaecrT\t-1.72\nsJPH@xITuHC@qX|`@\t-1.72\nsGP`ATeejPFBQxi`\t-1.72\nsGP`ITjfj`FFVOIP\t-1.72\nqC`DBPe@iCRBSU@P\t-1.72\nsJQIHGB]GuPCCKD\t-1.72\nsGX@HeTuR@prqyJ\t-1.72\nQMCAxhabHzAad`\t-1.72\nsGT@ATegipGdH\t-1.72\nRFTE@Q`xi@y@\t-1.72\nQMBCpchFCOH@\t-1.72\nQMHAIdFD|R@\t-1.72\nQMbDBDfp^P\t-1.72\n`IDhCr@\t-1.72\nsNq`@VdsMUPCBbKGbk@\t-1.72\nsGQ`@ZdruT@pHboEb\t-1.72\nsGQ@@dsMT@pQoDl\t-1.72\nsNq`AVdlmUPCAbXu|b@\t-1.72\nQMFIOBN`XUqD\t-1.72\nqC`HBPT`duPGbf@\t-1.72\nHeTD`HP@cIHXdmpk@A@@phj[iy@@\t-1.73\nsOx@@drm\\@@@phVKyJ\t-1.74\nsNx`DFdskUHCAK\\Qh\t-1.74\nHaDD@@yIe^f`@`@XHa\\HLk`\t-1.74\nHet@@DjYUX^d@@@@A`rXS\\ODjP\t-1.74\nsGPYHlQxGdjmj`Gbu@\t-1.74\nHifDAHAHeNR[e^Eh@@@XXUCqFx\t-1.75\nHaF@@@Rfu[i@@@FAXUMqDx\t-1.75\nsGQ`@bdwMT@pVODj\t-1.75\nHeTJ@@qaeJYyzzjjj@FCPUMt|qLD\t-1.76\nsJX`BDdvu@LDmrD\t-1.76\nHmVBaNaLHO@nz\\ddqRdZjj`AaULLkrL@\t-1.76\nHidD@@QInUxV`@@AaRESCrN@\t-1.77\nHaDH@@RYVijjj@FCPaTw\\PL@\t-1.77\nsJPhLQbIKTpCBCba@\t-1.77\nsJPhI`xIKTpCBGd@\t-1.77\nsGY@DDfUjPFFVoHP\t-1.77\nsGQ`@jdvmT@prqyJ\t-1.77\nsGP`ATf]jPFBVyB\t-1.77\nsGX@@dj}T@prqyJ\t-1.77\nqC`PBlRVhCCBKdp\t-1.77\nqCaPS@pRVdCqA@\t-1.77\nQMhDRYAaOD`\t-1.77\nsOx@@drm\\@@@pHU_Eb\t-1.77\nsOp@DjWkB@@FAfkxdP\t-1.77\nHidH`H@HRnUvy`@`@XUaTp|`@\t-1.77\nHiDD@@QIeWZjh@XUaTw\\`P\t-1.78\nRFDBIFCqH\t-1.78\nHidD`HP@cIHXdnEX@@@XTUMp|`@\t-1.78\nHaD@`@BDfUzZ@B@AaRXU]r@@\t-1.78\nHeTH@@rJJJJlLADP@LL@fye]H\t-1.79\nHidH@@rJJIEn`HH@FF@S\\sJD\t-1.79\nRFDFIFCbkBD\\h\t-1.79\nRFDFIFCBNT\t-1.79\nHmtL`HS@BLddlRVFUh@H@FCYS\\J`\t-1.8\nHeVH@DAInU~Eh@H@FAES]qDd\t-1.8\nsGP`Adifj`FFboEb\t-1.81\nqCb@AIZ`LLHnS@\t-1.81\nKA|@@@djkUU@FGABXUMrN@\t-1.82\nKA|H@XGIKZmUHA`RXU\\RF@\t-1.82\nsGQhHjOCIHTuHCB[fBH\t-1.82\nsGP@Di]j`FADQxmP\t-1.82\nHg]L`FvDp@cIIJeDednkUUUT@LApjxYT~QX\t-1.83\nHkmL`FvDp@cIIJeDeeuZjjj@FGXU\\LkrC@\t-1.83\nHcML`FvDp@cIIJeDdnkUUU@CClJnFUyF`\t-1.83\nHg}@@@mJYeU|]Tz@@@H@A`hXUMpri|bp\t-1.83\nHmL@`EhLddTQaQnFjjjh@XSBXUMpsrE@\t-1.83\nHknHBFAiRYfUnSjB`h@AahQaUprngrF@\t-1.83\nHg^B@D@agHhhdmBeSMURuT@LJqet~QX\t-1.83\nHmL`B@aBBTiWe\\JUZh@D@FEMproDA@\t-1.83\nHknBAHAIvISdfyWVxV`@i`@XDUMwHL\t-1.83\nHmwDAHePRISdfyW^Eh@I@A`QTw\\aP\t-1.83\nHid@P@bDbDfyWaj@@@FG@aTwCrH@\t-1.83\nHeT@b@|@eJYU^f```@FGIaMpsq@h\t-1.83\nHiDLbHS@BL{IIJdejj@FAES]rA@\t-1.83\nKAx@PQHIHUHMHYIHXjjh@p`nIg@\t-1.83\nHmvJ@D@aeTfYWjYjjV`A`fMrE@\t-1.83\nHmtH@@RYvUeVf@@@FGHS\\LkrL@\t-1.83\nHidH`HApRem^Fh@@@XMaTwCr@@\t-1.83\nHid@`@|Die_ahH@@FCXUMp|PD@\t-1.83\nHidD@@QInUxZ`@@AaTES]s@PP\t-1.83\nHeTH@@RYWZf`@j@A`pIaTODzP\t-1.83\nHid@@DjUfaBB`@FEQc\\OLPj@\t-1.83\nHaD@`@bDeeVz`@@A`pQaTwHx\t-1.83\nHie@@@EJ[W[j@B@AaVESCq@P\t-1.83\nHmt@@DjYnvDHbJ@AaVUtkrA@\t-1.83\nKA|A@PCaddTJjj`CAdpj[nP@\t-1.83\nsNqdHjG@nFRQFUU@LBLWqJ`\t-1.83\nKAxX@@gILjmUHAafDwHh\t-1.83\nsNpXHlpDYIBdmT@pQoDF\t-1.83\nqCbPXXbRt`\\JVBlHHSdP\t-1.83\nsNyHHpxYIECUR@prux`P\t-1.83\nsGXHHGCIHcUPC@kF|P`\t-1.83\nsOq@@drm[UT@pJqoHp\t-1.83\nsGPHADIJmU@LJHl^R`\t-1.83\nsJQDBIARBS]T@pVOI@\t-1.83\nsNxHHGAJijj`FAVkyB\t-1.83\nsOu@E`drm[SR@pU_Eb\t-1.83\nsJPdEaDSpR[f`FDGEB\t-1.83\nsGP@LdbMU@LJHm^P`\t-1.83\nsNq`@fdr{UHCBGbu@\t-1.83\nsJPhHaIIRuPCAX|`@\t-1.83\nsJPHAXIKUPC@qX|`@\t-1.83\nsJPYHlPLGh}Z@^S@\t-1.83\nsJT@@TizhAaicqA@\t-1.83\nsJQA@IRej`FAbqy@\t-1.83\nsJTHH`xQ}T@pVOED\t-1.83\nqCbPXXbRt`XHSdP\t-1.83\nsJPXhlPL[ct^m@H\t-1.83\nsJQ@@dsU@LBHcrX\t-1.83\nsKQ@@eKcUPC@qX`\t-1.83\nqCp@AIZ`LLInQ@\t-1.83\nRFB@QZDXLJy@\t-1.83\nRFBDQFDXLHyP\t-1.83\nRFaDSGCr@\t-1.83\n`InqHFD\t-1.83\n`IoApGd\t-1.83\nsGQiHl@c]ddeVhAaCrT\t-1.83\n`IO@Cr@\t-1.84\nsNx`BDdw[UPC@kF|c@\t-1.85\nHefLa@XY{pBY{IIETiUUL@LJaLJnQp\t-1.86\nsGQiHlOC\\eWmT@paxaP\t-1.86\nsNp`@dfuZj@X[F|RX\t-1.86\nsJX`LDdru@OEb\t-1.86\nsNp@LdbLjj@XTQU|VH\t-1.87\nQMFIOBM`^H`\t-1.87\nHiDH`DBHR[UYjj@FCAaTw\\`P\t-1.88\nqCb@AIVpOEL\t-1.88\nRFDGaFCBnP\t-1.88\n`IE`CB@\t-1.88\nHet@@DjYUX^d@@@@A`rXwCODJ`\t-1.88\nsJP`@dfvdAaCqK@\t-1.88\nsJP@DiZhAaaEqX`\t-1.88\nHmv@@@rRJIIFUjB`@@XBfES\\L|aP\t-1.89\nsNx`LDdr{UPCAZ|QX\t-1.89\nsJQ@@djs@LDcqS@\t-1.89\nsJX`BDdvu@LDcrX\t-1.89\nsNx`JDdrsUPCAZ|QX\t-1.9\nqCb@AIZPLDmqB@\t-1.9\n`IDPCr@\t-1.9\nHmvLAHAIbTyInUwaZ@B`@XDUMwHT\t-1.9\nsNq@JeTuTpCCKGdX\t-1.9\nsGX`BDdwMT@prqyJ\t-1.9\nqCcPQX^D]hCsAX\t-1.9\nHcLFbHSFgP|L{IIlheBJmUUU@CAbkiW^H@`\t-1.91\nqCb@AIi`LInHH\t-1.91\nQMB@HRZA`erP\t-1.91\nJgB@@FRQQIIEIixSl@@@@@@CBTpnE]N~QP\t-1.92\nJgBD@@YHhhhddZFSvzdI`R`@LFInT{y`sh\t-1.92\nHk\\L@@PtfUe]ieujP`J@AaV\\L{rC@\t-1.92\nHefHA@`IclddqRUUUP@pyLJfx^QH\t-1.92\nHmt@@DjU_ZxHDf@AaLIaTwCOHT\t-1.92\nHeT@@DjU_k``RP@XCBXUMp|bP\t-1.92\nHidD@@QInUxV`@@A`RMp|Pj@\t-1.92\nHaD@`@qDeeVz`@@A`pQaTwHx\t-1.92\nHidD@@QInUxV`@@Aaa\\OLRf@\t-1.92\nHifD@DCdfYTfZiZ@FFYS\\`P\t-1.92\nHidH@@RVUvy`@`@XUFES\\`P\t-1.92\nHiFD@LADfuYjj`AaVTwCqDH\t-1.92\nHaD@@DkeV{`@@AaVES]rH@\t-1.92\nKAx@@YIDTjjh@pxHSBinQp\t-1.92\nsJQBDHbNF\\CDIJuPCA@|Tp\t-1.92\nsNpD@xRHrRSFjhAaXl[rL\t-1.92\nsOpH@fILkW@@@LJlZ~P@\t-1.92\nsOpHMPIToVD@@LKDZ~S@\t-1.92\nsGPhH`xITmU@LMc^P@\t-1.92\nsNpP@jtfvZf@XIOdp\t-1.92\nsNpP@jtfvZf@XS\\RX\t-1.92\nsJPHAbIJuPCCA[ba@\t-1.92\nsGT`EaTeUfPGba@\t-1.92\nsJY@DDfvdA`l^Q@\t-1.92\nsJP`ADkjhA`l^JH\t-1.92\nqCaHK@H`QGe@|P`\t-1.92\nqC`PApRfdCCQ[d@\t-1.92\nQMFICBN`XQqd\t-1.92\nRFTPXQ`|R@\t-1.92\nqCa@CIJrAxh`\t-1.92\nHcL@h@dBdFdAdEdDfYn\x7Fi`bHh@GdZ\t-1.94\nHaD@`@BDeeVz`@@A`tXUMwH@\t-1.94\nKAxH@@bSJkUT@XEaTwHx\t-1.94\nsNpXHlQxIUZuT@paxjp\t-1.94\nsNx`BDdw[UPC@kE|e@\t-1.94\nsGP`Adinj`FFboHP\t-1.94\nQMBBlRZA`erP\t-1.94\nsGP@DjZj`FADQxmP\t-1.94\nsGP`@dfUj`FBqyJ\t-1.95\nQM`AIxGd`\t-1.95\nqCcRQX^FzNtAx``\t-1.95\nsGP@LdbMU@LBEcqR`\t-1.96\nsNx`BDdvsUPCAK\\UX\t-1.96\nHifDAHAHeNR[e^Eh@@@XDUMwHD\t-1.96\nqC`@ISTAaaErX\t-1.96\nHefB@LANEImfVjf`A`VDL|QF@\t-1.97\nsNx`JDdrsUPCCXwdX\t-1.97\nsJPH@xISuHCCSGbB@\t-1.97\nqCj@KAIVPOEL\t-1.97\nRFTPlQ`|R@\t-1.97\nHifDAHAHeNR[e^Eh@@@XDS\\OHh\t-1.97\nsNq`@fdr{UHCB[bM@\t-1.97\nHaFHAH@NbTeeVz`@@A`VES\\RN@\t-1.97\nQMFiOAzM`^P\t-1.97\nHeTD@@eIYe^E`HD@FFEW\\rFD\t-1.98\nqC`H@HpPdmPFBbxa`\t-1.98\nqC`PBHRVhCCBKdp\t-2\nsGQhHl@cIIJmPCAX|e@\t-2\nHaFH@FAIeZn`B@@XXe]s@q`\t-2.01\nsGX`BDdvmT@pRwDZ\t-2.01\nsJQiHl@c]GkPCrD\t-2.01\njhyQ@@LT@eLw\\jobaoNCSL@@@P@@pEpTeZMYwD^B\t-2.02\nj`a``@NPYddblrRbR]zjfjjj@AaiFB\\dkQkN}r@`\t-2.02\nHmt@hL`J`N`I`E`DjYnvDHbJ@AqVHEHGHDhBhGHD\t-2.02\nj`qQ@@G^@dsLjolcZmT@@@T@@LM@IQgARUiwnP`\t-2.02\nj`q@`@@^RYWYm^cKN`@j@B@@FF`HpRdeZM[wH\\@\t-2.02\nHo|LHJXXdDdLdNkLddlrfbRmzij`@@A`wKiv\x7FHD\t-2.02\nHgnHxCuICI@iAiCi@YBYCIIEIYGMUUUM@CBKyA`\t-2.02\nKAxQPTdAd@T@tAtAddbejj`CbdPLPBPFPNPNQ@\t-2.02\nHg]DHNff`HRPrPJPrRQR]QIG]Tm@@@C@et{yG@\t-2.02\nJoB@I@Xb^BRdlsJkkYoU@@@@@A`XQS\\Lkiv\x7FHP\t-2.02\nJoB@I@QB^BRdlsJkkYoU@@@@@A`XQS\\Lkiv\x7FHP\t-2.02\nJoB@H@AEABTrj}ktv}AA@@@@FAaaTwRng[|a@\t-2.02\nHg|@R@kH|HeIfYU^Svz`@@@@AahES\\LkiwrH@\t-2.02\nHg\\DHJZIAICICjsIIKLeDd]uST@@@LJe]N~Qp\t-2.02\nj`aaP@NPXkSlddUfbbaVcUTuMSP@LJHpRWnPl\t-2.02\nJoC@QDAxAJUKMjnmf}T@@@@@FFeS\\Lkiv\x7FDB@\t-2.02\nHgnHhFjIAICi@YBWCIICEMCIUMUU@C@et{yA@\t-2.02\nJoB@Q@^@ReSLjokYoT@H@@@A`^ES\\Lkiv\x7FH@\t-2.02\nHo\\DHJvIAICi@YCIICELXiJijij@FAL]orB@\t-2.02\nHg\\DpIVIAICICIIKEEDb]uU@p@@LFxUt{yA@\t-2.02\nHklLPHS@\\J\\LddQbbQtzjB`@@XCS\\Lki|QL@\t-2.02\nJoC@HGAbObILkkJ}L]p@T@D@@XJBXURnf\x7FHx\t-2.02\nJoB@X@^ErCrBTsJkzNj]@@@E@@F@xUMproH@\t-2.02\nJoB@P@^BTkLjnmf}T@@@@@FApeMprng[|`@\t-2.02\nHg|@P@BH\\DfYeUyO[j@@@@@FF`UMprng_H`\t-2.02\nHcm@RDpLROBIRYfUQe]jjjj`AaHES\\LkoH`\t-2.02\nHcm@RDpHbOBIRYfUQe]jjjj`AaHES\\LkoH`\t-2.02\nJoBDPD@xIU\\vjzv[uP@@@@@XZUMprng[|b@\t-2.02\nHkLJHJ[mN@aICI@iCIIEIuEJiZi`A``krC@\t-2.02\nHg|@P@SHbDjyeUyO[j@@@@@FFpUMprng_H@\t-2.02\nHg|@b@|@eJYUg_eNzB@@@@AajXS\\Lkiwr@@\t-2.02\nHg|@P@QH|DfYeUyO[Z@@@@@FF`UMprng_H`\t-2.02\nHg|@P@BH|DfYeUyO[Z@@@@@FF`UMprng_H`\t-2.02\nHg}@A@LINTjWvUz[SB@`@`@F@paTLkoDrp\t-2.02\nHg|H`HALRkfUWd}nh@@@@@XJUMprng_DB@\t-2.02\nJoCD@D@e\\sJkkYoU@@@@@AalTwCJz]orD@\t-2.02\nHklHPHipZHrRQVZIKSjj`@@AaJXSCJz_Hh\t-2.02\nHklHpJbPRPrPrRRqJYKSjj`@@A`wCJz_HH\t-2.02\nHcLDPHhG@gCIHcMDdnuU@@@C@PSNFUwbEP\t-2.02\nHg~@`HApRkfUWd}nh@@@@@X[ATwCJz]|`@\t-2.02\nHcmHbDr@|@eJnYUFUvjjjj@F@eS\\LkoDB@\t-2.02\nJoB@P@^BTsJkzNj]@@@E@@FBxUMprmor@@\t-2.02\nHg|@`@bDfYeUyO[j@@@@@FB`UMprngqHl\t-2.02\nJoBD@@IS\\rjzv[uP@@@@@XZeMprng[|b@\t-2.02\nHg|@`@BDfYeUyO[j@@@@@FF`UMprng_H`\t-2.02\nHg|@`@qDfYeUyO[j@@@@@FF`UMprng_H`\t-2.02\nHklD`HPGCIHdhdd]Nj`h@@FDeS\\Lki|`@\t-2.02\nHcNHpMJIAICICIIJhdmJuT@D@C@fxYyF`\t-2.02\nHg|H`@b`RYfUWd}nh@@@@@XJUMprng_H@\t-2.02\nHed@H@BH\\LBBBLdTTUeUUP@pdHSJ[agdD\t-2.02\nHklHpJbPRPrPrRRsQIY]jf@B@A`WCJ|`p\t-2.02\nHmTLpHS@\\J\\F\\LddRLTjjj`AaqTwCJ|c@\t-2.02\nHco@`HS@|DjyeTYWVjjjh@XBUMprn|PH@\t-2.02\nHctBHJ[m`HRPrPJPrRQR]QURuR@LDE^QH\t-2.02\nHcL@PH\\JbLddT\\RR{UT@@@LISBkae]yD@\t-2.02\nHg|H`HBDRkfUWd}mh@@@@@XJUMprng_H@\t-2.02\nHcLHpMbPRPrPrRRqIPcMT@D`@pJfF^Ph\t-2.02\nHg~@@@RYfUWd}nh@@@@@XZATwCJz]|b@\t-2.02\nHk\\@b@k@eJYeUquSh@@@@@XZFES\\Lki`\t-2.02\nHk\\@`@sDifUWGUN`@@@@A`nES\\Lki|`@\t-2.02\nHeT@pHbDbLbLddlRPsU@@@CChSJ[ayD`\t-2.02\nHk\\@`@rdifUWGUN`@@@@A`nES\\Lki|`@\t-2.02\nHctLhAgTdLdBdJdFdLddTgfUUTt`CrE@\t-2.02\nHg}@@@aJnYU^Svz`@@@@A`iTwCJz]|b@\t-2.02\nHkn@`NaprRQRjYKSjjp@@A`JXPrngrH@\t-2.02\nHcvHPDDGBWCIIEHniUUUP@pELJfy]yD`\t-2.02\nHcvHPAPGBWCIIEHniUUUP@pGBinE]yD`\t-2.02\nHcmH`Dr@|DjyeTYWVjjjh@XBUMprn|`@\t-2.02\nHg|H@@RYfUWd}mh@@@@@XRUMprngrK@\t-2.02\nHmv@PHApIpRi[WeZhH@@F@qeMproD@`\t-2.02\nHed@hH\\DdLdAdIdLddTaeUUP@prf{dD\t-2.02\nHiFDhNihBDdLdBdApLddTgjeh@XPOHx\t-2.02\nHg}@@@mIe]e^ftx@H@H@A`JXUCJ{q@l\t-2.02\nHglF@HXUN|ddUfffeUMUL@LNSBxYWdV\t-2.02\nHmtD`HPGCIHdhTiVj`@@AaqTwCJ|`@\t-2.02\nHiD@p@BH\\LBLdRbLjjh@XBBXUMp|b@\t-2.02\nHg}@@@mIe]e^ftx@H@H@A`hIaTLkm`\t-2.02\nHkmD@J[SrRQRqQXYjjje`A`tIaBoHx\t-2.02\nHknB@D@agHhhdmBjYjjVj@FAXr{rC@\t-2.02\nHknD@NalddUfbRtzjZjh@X\\fDLkoHL\t-2.02\nHmTLPDp`ZHbDjmyjjjh@XBDTwCJ|``\t-2.02\nHcvD`Naj|LddUfbUUUU@C@TpjFUwdL\t-2.02\nHmtHPHApIpRi[WeZhH@@FGYS\\Lkq@H\t-2.02\nHk^@@@RYWYVftx@H@@@F@iaTLkoD@p\t-2.02\nHedLHJ[hBDdLdBdLddTgUTmP@pb^PH\t-2.02\nHkLJ@HXUOIIEYiijjZjPAarXWCJ|cP\t-2.02\nHmTLPDeP\\ABLddTb|jjiPAaVES]rA@\t-2.02\nHcL@@LdbRbceBDEEP@LIaL[ae]yE@\t-2.02\nHmtD`HPGAJge^Uj``@@X\\UMproDA@\t-2.02\nHcND@NalddUfbR{USUT@LFSBE]yD`\t-2.02\nHedDhAeICI@iBiAiCIIEIyUUL@OHd\t-2.02\nHmT@P@\\HbDjmyjjjh@XSBYS\\LkrB@\t-2.02\nHcNH@JGIIEJeipuUMU@CChSBY]yD`\t-2.02\nHkLDbMLG@~rRQRVPrjjjX@X\\fDwRh\t-2.02\nHmT@P@|HBDjmyfjjh@XSBYS\\LkrB@\t-2.02\nHctL`HS@\\DjevZjij`A`ITwCJ{rL@\t-2.02\nHmvLAHAEbTyInUwaZ@BP@XDUMwHd\t-2.02\nHcvD@AklddUTReUUU@CChSBY]yD`\t-2.02\nsJPKAPR@TAh@p@zOj`GAb@dCHAP@\t-2.02\nHcvD@NalddUfReUMU@CCdpne]y@`\t-2.02\nHeT@`@\\LddTjPsU@@@CCdpj[ayD`\t-2.02\nHeTL@HSLddlRPsU@@@CBj[agfPf@\t-2.02\nHed@P@bH\\DfUfjjj@FD`fES\\L|b@\t-2.02\nHmvDAHAHeNR[e]xV`@h@FEES]OHT\t-2.02\nHmuH@JY\\ddTlRzZjjf@FCPfDL|a`\t-2.02\nHedDPDpFbHaJmYjjj`AatES\\L|`@\t-2.02\nHefD`Naj|LddUfUUUP@pYLJagbMp\t-2.02\nHmVH`FboCIIEUDjjjh@X\\fEproHh\t-2.02\nHeTB@@HYRYgUnjjj`A`HPaMpsqLh\t-2.02\nHclH@@RVUmVy]X@@@@A`vLLkoD``\t-2.02\nHeTL`HS@|Dj~UFVh@@@XUS\\L|PL@\t-2.02\nHmVD@AklddUTtjjj`AatIaMJ|c`\t-2.02\nHeTH`HApRee\\YjB@@AavES\\L|`@\t-2.02\nHedL`@idhLdTTNeUUP@pZLKagdL\t-2.02\nHiDBPHSB@HiprRPzQZj`Aac\\OHH\t-2.02\nHmtH@NrRQRqZUj``@@X\\fDwBoHd\t-2.02\nHmtD@@yJUe^Uj``@@XCBTwCJ|``\t-2.02\nHcl@@DjYU_egX@@@@@XJfES\\Lkh\t-2.02\nKAxQ`HCaDQSaddfLjj`CBhpf{dT\t-2.02\nKAx@PQHIHYHLxYIITjjh@ppj{dL\t-2.02\nHmTD`HPGAJeVZjfj@F@xUMproH@\t-2.02\nHedL`HS@\\DjWfjjj@FCES\\L|PL@\t-2.02\nHmTB@HXUrRQVZZjfj@FCIa\\J|bP\t-2.02\nHedL`HS@|DjWfjjj@FG@UMpsrL@\t-2.02\nHeTD@@gHeDeBwL@D`@psB{fPp`\t-2.02\nHiDD`@iJCIEDUJjj@FCQaMp|a@\t-2.02\nHedL`HS@lDjWfjjj@FCES\\L|c@\t-2.02\nHed@`@\\DjWfjjj@FDaBES\\L|c@\t-2.02\nHmTB@HZUrRQVYRjff@FAIa]rE@\t-2.02\nKAx@`@xTxYIDUJjh@pZDpf{bAP\t-2.02\nKAxH`PpNENFRRJrjj@LJSBknPp\t-2.02\nHeT@@LddTjPsUUU@C@XSBinGdR\t-2.02\nHedL@@pldTTUeUUP@pzDinF^PP\t-2.02\nKAz@dI`Xd^DRdsMUU@FE@UMwH`\t-2.02\nHmVD@NalddUfbjij`A`RXT|PU@\t-2.02\nHiFH`FboCIIETjjj@FEIa\\ODi`\t-2.02\nHeVH@JGIIEJepuUMP@pjDpfyD`\t-2.02\nHefH`D`OAJVyjjj`AavES\\L|`@\t-2.02\nHef@`HkprRQJrUSU@CAdpnF^QP\t-2.02\nHed@`@\\LddTeeUUP@pyLInF^QP\t-2.02\nHefH@NkIIETiUUT@LFaLHYyC@\t-2.02\nKAxHPTtRBRFRGAVRRVZjZ@OHx\t-2.02\nHedF@@PfFTf{nZjf@FAXUMqDd\t-2.02\nHiDD`HPKAJUfjjh@XMaTwCr@@\t-2.02\nHeTH@@RYWZf`@j@AapIaTL|c`\t-2.02\nsNpJIHJPtaZqrFRRVUU@LI^P`\t-2.02\nHefD@NalddUfeUUP@pYLJagdL\t-2.02\nKA|I@]CUxYIHkJjh@pILJnHw@\t-2.02\nsJPBHDJ@t@XBOj`GFRAd@hGI@\t-2.02\nKA|Q`MTRBRFRFRRVZjZ@LH{dL\t-2.02\nHiDD`HPGAJUfjjh@XMaTwCr@@\t-2.02\nKAzQDIdAxAJU\\uUT@XDUMwDB@\t-2.02\nKA|A@PCaddbljj`CAdpj[nQ@\t-2.02\nHiD@`H\\DjfZjj`AarXUMp|b@\t-2.02\nHiD@b@|@eJiUjjh@XRDIaTwB\t-2.02\nKAzA`TtRBRFRFRRUJjY@ODK`\t-2.02\nHaD@`@|DimVzP@@AaVES]q@P\t-2.02\nHiD@`@\\DjVZkj`AarXUMp|`@\t-2.02\nHiDD@JGIIEFjii@FAIaMrN@\t-2.02\nsJPK@ERlUYjpu`ZOj`FEDVH\t-2.02\nKAxA@@xYIHkJjX@pjDpfyG@\t-2.02\nsJPKAVRHTQh`q@zOj`FEDVH\t-2.02\nHiFH@DAIYfZjh@XMaTwCrH@\t-2.02\nsJPKA\\SDVIlPx`ZOj`FEDVH\t-2.02\nsJPK@\\SDVIlPx`ZOj`FEDVH\t-2.02\nsJPKA\\RHTQh`q@ZOj`FEDVH\t-2.02\nsNpLAbWD^HdlmUPCAbXu|b@\t-2.02\nKA|P@UvRRJjji@LBSBkbPp\t-2.02\nHiD`bJ[aArAdjeVj\x7FpAa@@\t-2.02\nKA|P@UvRRJNji@LJaLJnPp\t-2.02\nsNtDHpxTHrRQVjhA`Uc^JL\t-2.02\nKAxX`EWAHIHIMvuMHAxdL\t-2.02\nsNtLJyHJPtaddeUTpCqE`\t-2.02\nsJQBbJBRBdMHCcL_U@OHP\t-2.02\nKAz@@AVRQERjj@LFaLIn@\t-2.02\nsNyhGE`DYIITmT@pvMyF\t-2.02\nsNpIAxBTjUjj@XNKFod@\t-2.02\nsGYhKEaxYIIVj@XYX|e@\t-2.02\nsNyHHpxYIHkUR@pLVOIP\t-2.02\nsNyHGKxYIHkUT@prqxjp\t-2.02\nsNphH{xYIHkUT@prqxjp\t-2.02\nsGXDHGBaBUSUPCCKGbe@\t-2.02\nsNphHpxYIHkUT@prqxjp\t-2.02\nsNqHFGCIIEZjPFAbqyJ\t-2.02\nsOpAMJUKua@@CBqFodp\t-2.02\nsNpH@xYIHkUT@plVMyF\t-2.02\nsNpHAxISMUT@p\\VM_H@\t-2.02\nsGPD@xTHRjZj@XFKGdh\t-2.02\nsNpHHDYIHkUT@plVMyF\t-2.02\nsNyA@qNRRJuT`LCEcrT\t-2.02\nsNtA@QNRQFMU@LBmWrP\t-2.02\nsNpHAXYIDYUT@pLM_Dl\t-2.02\nsGPH@xISuU@LCL[qA@\t-2.02\nsGPHAXISuU@LCL[qA@\t-2.02\nsJPhLQbIKTpCA@|d@\t-2.02\nsNq`@fdvkSHCAX|Rh\t-2.02\nsNp`Adimjj@XYF|TX\t-2.02\nqCaHKBHg`dtpFDGEL\t-2.02\nsGQHI_AJijhAaecrT\t-2.02\nsN|ICVGHLeRmWxCr@\t-2.02\nsJPIAxBX~j@XTQX`\t-2.02\nsGP@DjZj`FEBqoI@\t-2.02\nqCcPQXND^hCBCfbp\t-2.02\nsJQ@@dkU@LBHcrX\t-2.02\nsJPXHlPDQzt@|VH\t-2.02\nqC`PBpcu@^ZK@\t-2.02\nsBQ@@eLUT@pTWI`\t-2.02\nsGY@LDemj`FFVoEB\t-2.02\nHiDL`HS@|Djmujj`A`UMp|``\t-2.05\nHeTD@@QInU~Eh@H@FEHUMwHd\t-2.05\nsNqhHlOCIILVj`FBkxlP\t-2.05\nsGPhHaxIU{U@LD[qC@\t-2.05\nsGQLKIARFdLddmU@ODZ\t-2.05\nHifDAHAHeNR[e^Eh@@@XXSCqJx\t-2.06\nHiDJ@@PfEIn{Zjd@XEaTwDS`\t-2.06\nKAxH@@bSKKTt@XXUMrN@\t-2.06\nsJY@LDejhA`QEnP`\t-2.06\nqCbPPNBUu@XI[bD@\t-2.06\nHcN@B@B\\dbRTJR{UT@@@LEaLinFUwd@\t-2.06\nKA|@D@DiUJuUPA`tIeMwHH\t-2.06\nqCcRQXAFzNlAy@\t-2.06\nQMFi@azM`^P\t-2.06\nHefB@BAAeImgfji`A`RYT|a`\t-2.07\nHiFB@BANEImVZjX@XDfTOHH\t-2.07\nsNx@AddQeUPC@pu|Rp\t-2.07\nsGX@@eOUT@pLqoDD\t-2.07\nQMBCDRZAaGFP\t-2.07\nsGX`JDdrmT@pexlP\t-2.08\nsJQ@@dmU@LLInID\t-2.08\nRF`EECqH\t-2.1\nHkmLAHdDvISdfyWVxV`@i`@XTUMt|`p\t-2.11\nHcMLAHdDvISdfyWWaZ@Bd@FEES]OHT\t-2.11\nHklD@@QIVYYQujjjj@FBxUMprngrH@\t-2.11\nHeTLbHS@|LyJoeQej@@@FATwCq@d\t-2.11\nHcL@@DjU_VnBBJh@FBpfES\\LkrM@\t-2.11\nHiFHA@`IclddqRjjh@XLfES]rA@\t-2.11\nHidL@HP\\ddRNijjj`A`VEP|Qn@\t-2.11\nHidD`HPOAJvUxV`@@AaQTwCr@@\t-2.11\nHidH`DBHR[e^FX@@@XTATw\\`P\t-2.11\nKA|PBA@SGYIIbjjh@piLJfyG@\t-2.11\nKAxQ@HDPdvkMU@FEAaTwHx\t-2.11\nsNyDJQHJPR[nihAaGqR`\t-2.11\nsJPL@xRHTQGuPCCQ[dH\t-2.11\nqCbXXQD|EDIMRA``nR@\t-2.11\nsOx@@drm\\@@@pHV_DZ\t-2.11\nsJPDADIpRVj`FADqyD\t-2.11\nsGPH@DISMU@LBEcqR`\t-2.11\nsNp`ATiujj@XYY|TH\t-2.11\nsJQHHGAJ^j@XYX|`@\t-2.11\nsGX`JDdrmT@pQoI`\t-2.11\nsGP`@deUjPFFqoI@\t-2.11\nqCaPQApcu@XH[bb@\t-2.11\nqCaPAR`RZhCAA\\f@\t-2.11\nsJPdE`DRPcyXAyB\t-2.11\nsGP`@dfUj`FBMyL\t-2.11\nqC`PApcu@XXQ\\f@\t-2.11\nqCx@AYIf`LLE`\t-2.11\n`IE`Cr@\t-2.11\nsJQ`@bdvt`ODl\t-2.11\nHaD@`@bDeeVz`@@AaPXUMqHx\t-2.11\nsOp@DjWkiV`FAbMxlp\t-2.11\nsGX@@djuT@pHVOEJ\t-2.11\nsNxA@IRiVjhA`xlZ~P@\t-2.11\nHcLF@@siWTify^ajjjj@FDpaTwBn|SI@\t-2.13\nHmtLbHS@BL{IIKDeaeZ@B@AaUMpj\t-2.14\nHeUDAHdDbTyInU~Eh@H@FAES]rI@\t-2.14\nqCcQQX^B{]GZ@|`@\t-2.14\nHaF@@@RYWih@H@FA@aUqLx\t-2.15\nsJPhEaDIMsPCBCdH\t-2.15\nRGDQxQP|R@\t-2.15\nsOx@@drm\\@@@phQkyL\t-2.15\nsOp@DjWkjj`FEDVOEV\t-2.15\nQMBCpRZAaWDP\t-2.15\nsJP`@TfVdAxe`\t-2.15\nQMHAIXFE\\d\t-2.15\nqC`@IRtA`enHP\t-2.16\nHevH@DAIemRhYZ`@`@XDwCODP`\t-2.18\nJoC`@@PzTlrj\x7FI{[P@@A@@FDeS\\Lkm|ap\t-2.19\nHk\\D`HP@cIHXheDQgSV@@@@@XMWCNgq@T\t-2.19\nHk]@A@LINTjWvUimLHB@@@A`LHUCJ{qLL\t-2.19\nHclL@@STfUmVfeVi@B`@XEgBoDkP\t-2.19\nHmt@`@\\DjYuQVhHD@A`JES\\Lkq@p\t-2.19\nHmtD`HPOAJUyVUjh@@@XMc\\Lkq@H\t-2.19\nHcnD@D@TfYg\\fWVjA@`@XEtkoHh\t-2.19\nKAxPP]D`daT`taddabjj`CAB{dX\t-2.19\nHidH`HCpRUe^Fh@@@XLaTwCr@@\t-2.19\nKAxX`Pf@DDxYIBeEjh@prf{b@P\t-2.19\nHiFD@L@TeYVjj`AapPaTp|c`\t-2.19\nHid@@DjUfaBB`@FGPfES]rA@\t-2.19\nsNqLKIARCdLddJjj@XKWdH\t-2.19\nsNqDHG@nFRQFUU@LJEj~P`\t-2.19\nsNpdIPxEprRHrjhA`Pl~Ht\t-2.19\nsNpXHlqxYIITuR@payej\t-2.19\nsNt@A\\dbJjj@XVKE|e@\t-2.19\nsNqhHlOAJkVj`FBkyB\t-2.19\nsJPDADQpRVj`FABqyH\t-2.19\nsNp`@dfvZj@XEFodp\t-2.19\nsJPhHaxIUmPCBGbF@\t-2.19\nqC`HCDvHdmPFBFxh`\t-2.19\nsJPhHQLiJuPCCA[dH\t-2.19\nsJXHHOAIZj@XYX|P`\t-2.19\nsJPYHlQxGh}j@XIX\t-2.19\nsFx@@eJf`@@LKEcP\t-2.19\nsGP`@Tizj`FAfMyD\t-2.19\nsGP`ADiVj`FBMxe`\t-2.19\nsJPhH`xQ}T@pfyhb\t-2.19\nqCaPKBHRZXCBCdp\t-2.19\nQMCALhabHzA`sr@\t-2.19\nqCaHK@HdaGe@|`@\t-2.19\nqCbPPNBTu@XI[d@\t-2.19\nsJPH@xQ}T@pTWEb\t-2.19\nRFDEaFCqH\t-2.19\n`IlaHFD\t-2.19\nsNx@@djmUPCAbKF|c@\t-2.21\nqCpPHABRk@XP\\f@\t-2.21\nsJQ@@dsU@LBHmrD\t-2.21\nsJX@@dmU@LLL^JH\t-2.21\nsJXaBDnR[Z`FDwHP\t-2.21\nsFp@DiTt@@AaacsQT\t-2.21\nHeVD`La@BLddlRPrm@@@CBj[agdX\t-2.22\nHif@@@RfU~F``@@XLfES]q@D\t-2.22\nsJX`LDdvu@LInID\t-2.22\nsJP@DiZhA`QEnP`\t-2.22\nsJP`@TfZhA`QEnP`\t-2.23\nsNp`@dfVZf@XJodH\t-2.23\n`IK`Cr@\t-2.23\n`IG`Cr@\t-2.23\nHmVD@NalddUfRjij`A`rXWCOHT\t-2.25\nsGP`@dfui`FBuxdP\t-2.26\nsFp@DiTujdA`QC^IX\t-2.26\nHed@H@\\HbDbLbLddjRUUUP@pFDpj[ayD`\t-2.27\nHmtF`HSBEP|LddqbbeVjjj@FEXULODzP\t-2.27\nHeT@pHdDdLdLddlRPsU@@@C@jxYyC@\t-2.27\nHiDHHNbPRPrPYprRRiJjj`AaaTOHX\t-2.27\nHcND@LADfuYU]Zj@@@FGYWCJ{qDH\t-2.27\nHeTHbACpBTieUzZBA@@XLfDwSq@h\t-2.27\nHeTD@@YIfUqfhH@@FG@UMpsqHp\t-2.27\nHefD@NalddUfUUMP@piLKiy@`\t-2.27\nHifH@JGIIEJnFjih@XUBXS\\c`\t-2.27\nHiFL@BAAR[eVji@FAIa]qJX\t-2.27\nsNplJyDJHtQddeeTpCCQ[dX\t-2.27\nKAxQ@PCaddblji`C@dpfyG@\t-2.27\nKAxQ@PC`eUkUU@FCIaTw\\b@\t-2.27\nsNpBIHJPt`wCIIJjj`FBMyF\t-2.27\nHid@@DjWffB@h@FEPf\\OHX\t-2.27\nKA|P@XBRvsUT@XLfES]rH@\t-2.27\nsNqLKIARFdLddjjj@XQ|a@\t-2.27\nKAxH@MvRRJrjf@LBSB{dP\t-2.27\nsGPLIHJPtaddejhAaCrT\t-2.27\nsNqHHGCIIEZj`FAVKyJ\t-2.27\nsGPD@xRHRjzj@XFKGdh\t-2.27\nsNpH@xYIHkUR@plVKyJ\t-2.27\nqC`DAhdPhcQD^hC@bK@\t-2.27\nsJQdHl@`nFRPkPCq@`\t-2.27\nsJQHHGAJzj@XYX|P`\t-2.27\nsGXHI_AJijdAaecrT\t-2.27\nsGPH@xIUMU@LBl[rP\t-2.27\nsGX@JeTuT@pJqoI@\t-2.27\nqC`PApcu@XP\\tV@\t-2.27\nsJPYHlQLGh}V@P\t-2.27\nsJQa@bnR[ZPGdp\t-2.27\nsJPYHlQVGh}V@P\t-2.27\nRFBCQQDXLJy@\t-2.27\nQMBBpchGfR\t-2.27\nRFDAaFCqH\t-2.27\nKAxP@@djkUU@FGABXUMrN@\t-2.27\nQMbDBDePXQrP\t-2.27\nsJP`@deVhAaCqS@\t-2.27\nRFD@QFCBNT\t-2.28\nsJP`@TizhA`inID\t-2.28\nsGP`@Tivj`FBfxeP\t-2.29\nsNx`BDdw[UPCCXwbS@\t-2.31\nsGP`@dfyi`FBMyD\t-2.31\nsJPD@DDHRgj`FFDwDb\t-2.31\nqCaPQCpcm@^XK@\t-2.31\nqCa@CIKTA`hnHX\t-2.31\nqCb@AIj`LDmqB@\t-2.32\nsGP`@TeYf`FBUxhP\t-2.33\nHeVLAHAIbTyInU~Eh@H@FAES]rI@\t-2.33\nsNpYHlQxGlddqZj@XR|VX\t-2.33\nHeTLbHS@BL{IIKDdLkP@@@pJfx^QH\t-2.33\nRG@D\\OJ@\t-2.33\nsGP@DiVj`FADVxcP\t-2.33\nj`q@@@DjU_VUiqw``RX@@@A`ZBBTYpVcV]{bLR@\t-2.34\nHkLLxJ[hBLdBdAdIdMdCdBbHaHaHbXjejj@Gb\\h\t-2.34\nJoBDH@QPIPIRlrjzv[uP@@@@@XKS\\Lkiv\x7FDa@\t-2.34\nJoB@H@^E^BTrj}ktv}AA@@@@FFiaMtkiv\x7FDB`\t-2.34\nHg\\BPHP{@HTHrRPqIIZSjtBDJ@CCbinF]yB`\t-2.34\nJoBF@DHNRRIGSQITuoUUT@D@AaNEPkiv\x7FD[`\t-2.34\nHctDHDXGBHbgBWCIILYDYUUUP@pzLKaW^QH\t-2.34\nHmTHHDBHapIpzHrJIQRrjjj@F@aeMproD``\t-2.34\nJoB@P@NBULrj~mf}P@`@@@FAxUMprng[|`@\t-2.34\nJoBDPDAxIU\\vjzv[mP@@@@@XKS\\Lkiv\x7FHH\t-2.34\nHk\\@b@B@eJYeUquSh@@@@@XKaTwCJz_H@\t-2.34\nJoBD@@ISJlzoJ[tD@@P@@XJfDwCNf\x7FHl\t-2.34\nHknD`La@BLddJbRvWUjB@`@XMc]JgqJD\t-2.34\nHcNBAHAIvISdfyWWaZ@Bd@FAES]rE@\t-2.34\nHedLPHFP\\JBLddRaeUTh@pKB[nHe@\t-2.34\nHefD`La@|LdabbeUUP@pxBinF^IB@\t-2.34\nHcLD`HP@cIHXhhjJk@QD@CBfxYwd@\t-2.34\nHmUH`Dr@|DjUyjjjh@XBATwCJ|QL@\t-2.34\nHcNB@D@agHhhdmCSMURu@CCLY^Qh\t-2.34\nHed@P@BH|DfUfZjj@FD`fES\\L|b@\t-2.34\nHmv@@@rRJEKKaj@BP@X\\fES]OHT\t-2.34\nHcLD@@QIe^UWVj`@@AavEprn|b`\t-2.34\nHiDHHJbPRPzPFPrRPqRjZ`AxaL\t-2.34\nHidH`HApRkm^Fh@@@XMaTwCq@`\t-2.34\nHmt@@DjU_ZxHHj@AaLIaTwCOHT\t-2.34\nsNpJIVJPtaYArFRRVUU@LINP`\t-2.34\nHiE@`HPOAJ[fjjh@XMaTwCq@P\t-2.34\nHiDD@@kIEDUJjj@FCQaMp|a@\t-2.34\nHiF@`HApRjYjjj@FCXUMp|a@\t-2.34\nHaDH`HCpRVU[j@@@FEXUMwH@\t-2.34\nHaE@@@yIe^f`@`@XTBXU\\c`\t-2.34\nKAz@@AVRQERij@LBSF{bPP\t-2.34\nKA|H@DFIS[UUPAadMwDR`\t-2.34\nsGPdH`xEprRHuT@ppuxdP\t-2.34\nsNqTHmV@`aFRPjKR`ODB\t-2.34\nsNx`BMdbaeUPCCRobV@\t-2.34\nsNqHDHaImYj`FAFMyF\t-2.34\nsJQHBLQIfi@XHSbV@\t-2.34\nQMIDbKpRYAaGJ@\t-2.34\nsJT@@Te^lAyD\t-2.34\nQMBCDRZA`cr`\t-2.34\nQMBApRYA`sr@\t-2.34\nsJPYHlQxGh}j@^IX\t-2.34\nsGP@Djyj`FFbwDZ\t-2.35\nHaE@@@yIe^f`@`@XDfEWDC`\t-2.35\nsNx`DJdrkUPCCHwbs@\t-2.38\n`IaphFD\t-2.38\n`IiApD\t-2.38\nsGPXHlQxIU[U@LInHt\t-2.4\nHet@@LddTQbMpuUUT@LAaLJfz^PH\t-2.41\nHcLH@@RfyY^Vjjjh@XKFES\\LkoHP\t-2.41\nHet@@DjYUZ^D@@@@A`rDwCODr`\t-2.41\nHidD@@QInUxV`@@A`REP|Qn@\t-2.41\nHiDB`HRnApReYjif@FBLOH@\t-2.41\nHaDH@@Rfu[j@@@FAIa]qJX\t-2.41\nHaF@@@RVU[n@@@FAXUMrN@\t-2.41\nsGQHHGAJmjhA`Uc^HP\t-2.41\nsJQDHG@nBUMT@ppVyB\t-2.41\nsJXHHOAIYj@XKGbB@\t-2.41\nqC`P@HRVhCCBKdp\t-2.41\nqCbPPND^hCCA[d`\t-2.41\nsJQ@@dls@LEcrP\t-2.41\nQMJDbDf`XQqd\t-2.41\n`Ld`\\WaB@\t-2.42\n`Ld`XP\t-2.42\nHeT@@LdbbQwCUUU@CBPaBinF^Q`\t-2.44\nsGP`ATf]jPFDWEb\t-2.44\nHclD@@QIeYWieujP`H@FEYpsoHT\t-2.45\nKAxA@AbIJjuUPAapPfES\\c`\t-2.45\nqC`PCDRVhCAA\\Tp\t-2.45\nsJX@@dku@LDmrD\t-2.45\nQMPBcXGcH\t-2.45\nsGQ`@jdvmR@pfxdP\t-2.46\nj`aA@@NYIHiXihYIFj``hj@@XRQ`gIFl{wHJ@\t-2.48\nHg\\@xHdDdLdNdIdMdKdLddlTTtrgUADQ@@|`p\t-2.48\nj`aaP@NPXkSlddUfbbaVcUTuMSP@LJHpRUnP|\t-2.48\nh`\x7FC@@B`qVRRJsSQZRjfjjh@LEHpS`iZl{p\t-2.48\nHmTLhJ[hBDdLdBdA\\LddTgRjej`A`dkrA@\t-2.48\nHcLHPHApiprRQUQIKmUP@@@pELKae]yE@\t-2.48\nHo|H@NrRQRqZZR]j``bh@FDiaMtg[|cP\t-2.48\nsNpJE@Z@LAXApBUSUU@NJdCHAPJ`M@yH\t-2.48\nHg}@@@aJVYU^Svv`@@@@AaITwCJz_Hl\t-2.48\nHiD@H@\\HbDbLbLddjRjjh@X]BXUMwHD\t-2.48\nHo^L@AaerRQVZYJRjfjj`AaJXWCIvx\t-2.48\nHmu@`HZoCIIEUDiVjZj`AarXWCJ|b`\t-2.48\nHiD@HH\\DdLdBdLddTjjjh@XES\\OH`\t-2.48\nHkND@NalddUfRdjijj@FGIa\\ngrA@\t-2.48\nHedLPHS@\\J\\LddQTeUMP@phfxYxbX\t-2.48\nHcvL@NamrRQVYQUTuT@LNSBxYwdJ\t-2.48\nHiDLPHS@\\J\\LddUdjjh@XDS\\ODS@\t-2.48\nHiDDPHXGBgCIIEYjji@FEIa\\ODi`\t-2.48\nHeTD`HPOAJ]eQfj@@@FCYS\\L|PD@\t-2.48\nHmLH@ARjZYjZVjjZh@XMaTwKrI@\t-2.48\nKAxI`UtQBQFQFRRUJji@LBaLKdL\t-2.48\nKAxX`Pw@xTxYIHkJjh@pILJnHw@\t-2.48\nHiFL`FaL@HrRRiQZj`AafEWDxP\t-2.48\nHeV@@JrRQRiCMT@@@LJSBZ^Ip`\t-2.48\nKAxX`Pw@xUPYIHkJjh@pqLKbMp\t-2.48\nHmVD@AalddUffjij`A`rXWBoHd\t-2.48\nHefL@H[aRjUVjjh@XCBXUMp|bP\t-2.48\nKA|Y@MBX@QddeRVj`CCLJnHw@\t-2.48\nHiFL@H[aRjUZjj@FGPfDwCrJ@\t-2.48\nqC`FB`d@hCP@zOTAqh`I@rAr@\t-2.48\nKA|AP\\dad`TaT`t`eTuUU@Gd\\\t-2.48\nsGQLJhCPA`DjfjPGFRAd@hGI@\t-2.48\nHiE@`HZoCIIEUJij@FEIa\\OHh\t-2.48\nHid@@DjUfaBB`@FEPfMwLJa@\t-2.48\nKAxY@PwUXYIHkJjh@pqLKbMp\t-2.48\nHiF@`DApRjZZjj@FCXUMp|a@\t-2.48\nKA|H@XCIKJuUPA`pQaTwDS`\t-2.48\nKAxH@AfRJIFjj@LJaJ[nPP\t-2.48\nsNpdHpxV`rRQVjhAaecqU`\t-2.48\nKAxX@PwYIHkJjX@pqLKd\\\t-2.48\nHaD@@DiUVyjjPA`HPfES\\\t-2.48\nsNplJyHJPtaddeeTpCBL\t-2.48\nsNphH{XYIHkUT@prqxjp\t-2.48\nsGQDHG@nFRQFj`FABuyB\t-2.48\nsNx`LFdlmUPCBbXobU@\t-2.48\nsNqHHGCIIEZjPFAVKyJ\t-2.48\nsGXLKIARFdLddmT`ODZ\t-2.48\nsGYHEAxIVuU@LMc^XQ@\t-2.48\nsJPiLQxBTiZhA`Xl^P@\t-2.48\nsGPD@xVHRjZj@XEXwd`\t-2.48\nsGXHHGAJijhA`Xl^R`\t-2.48\nsGQII[B|eTuT@prqyJ\t-2.48\nsGX`LDdwUT@ptMx``\t-2.48\nsJQhHlGBOj`FDOME`\t-2.48\nsJQLCIARFdH~j@^P`\t-2.48\nsJPD@xPHczhAaecrP\t-2.48\nsJQHHGAJnj@XI[fDH\t-2.48\nsNp@Djfjj@XUXu|d@\t-2.48\nsGX@@dkUT@phVMyH\t-2.48\nsFp@DiTt@@A`qEcP\t-2.48\nqCcPQXVD^hCsQX\t-2.48\nsJQAINczhAaeb\t-2.48\nqCcPQXZT]TCr@\t-2.48\n`IB`Cr@\t-2.48\n`IDpCr@\t-2.48\nKAxX@ASIRjuUPAaTIaMrN@\t-2.48\nqCc@AYIj`OBHl\t-2.48\nsNq@@djmUPCAbKF|c@\t-2.49\nHg~@@@RYfUWd}nh@@@@@XJUMprng_DB@\t-2.49\nsJPHADIJuPC@bK\\a@\t-2.51\nsNp`ATf^ZZ@XYY|e@\t-2.51\nQMIDbKpRZAaGFP\t-2.51\nsNq`AVeJmUPCBqXwdX\t-2.51\nsGQDHGBnBUSUPCCKGdh\t-2.52\nHeTH@@Re[TYj`@@AatIS\\L|``\t-2.53\nsJP@DjvhA`inID\t-2.53\nQMH`yIhFD|h\t-2.54\nsGP@DiVj`FEDVOIP\t-2.54\nHmtH@@RYeeZZjjj@FBpfES\\Lkr@@\t-2.55\nHmND@DCdfVUrjUZ`PH@FALLkrD@\t-2.55\nHaDH`HCpRnU[f@@@FEXUMwH@\t-2.55\nHaDH@@RVU[j@@@FCAFES\\c`\t-2.55\nsJPhLQDIKTpCBCba@\t-2.55\nsJXHHGAJZj@XYX|`@\t-2.55\n`Jg@XP\t-2.55\nKA|X@DB\\dwNuT`FFIa\\Rf@\t-2.55\nHmtD@@QIgYVUZh@@@XLS\\LkrL@\t-2.56\nHeTLbHS@BL{IIKDdLkP@@@prf{bCH\t-2.57\nHidH@@Rge^Fh@@@XMATwCrD@\t-2.57\nsGQhHbGAJ^jXAaKqA@\t-2.58\nsGX`BDdwMT@pVODj\t-2.59\nsNy`BDtfuZi@XIGbu@\t-2.59\nqCbPXXbRt`XP\\TP\t-2.6\nj`q@`@@LRYfWg^Qg^jB`@@@@FA`DhpTeZMYwnHa`\t-2.61\njhip@@@P\\eKLjo}HvkM@@@EP@@pTRcNBdkW`|aX\t-2.61\nj`q`@@@IToLjoiuoUT@@@@@C@tDLxJRmFl{wHX@\t-2.61\nJoB@P@^BULrj~mf}PA@@@@FA`UMprng[|c@\t-2.61\nHg|@b@|@eJf[U^Svz`@@@@AanES\\Lkiwr@@\t-2.61\nJoC@@@IRlrjzv[uP@@@@@XGBTwCJz]or@@\t-2.61\nHg|H`HApRkfUWd}nh@@@@@X[ATwCJz]|`@\t-2.61\nHg\\B`HSM@HrRPjIIHjZuAAD@CCj[ae[yF`\t-2.61\nHmT@XDdLdJdFdAdIdLddTaajjj`AaG\\Pe@\t-2.61\nHkmLbFvDp@cNrRRiQIY]Vjjj`A`qUproHL\t-2.61\nJoB`@@Ndrnlktqw@AP@P@A`hIaUJz[|c`\t-2.61\nHcm@A@tIvTiWYTjWP@`@@@XCBXWCJ|PM@\t-2.61\nHcMLbFvDp@cNrRRiQIKjuUUP@pXjxYWdZ\t-2.61\nHk\\@`@|DifUWGUNjjjj`A`\\IaTwCJz_H@\t-2.61\nHedDpHhG@gCgCIHcEiUUT@LNAL[agdD\t-2.61\nHcLD`HP@cIHXhdhLk@PT@CBfxUwfAT`\t-2.61\nHcLD`HP@cIHXdlipk@AT@CBfzUwf@U@\t-2.61\nHcL@@LdbRbUeBDEEP@LAcFxYW^Ha@\t-2.61\nHcL@@LdbRbceBDEEP@LAaL[iW^IP`\t-2.61\nHid@`@\\LdbaRxZ`@@AarXUMp|`@\t-2.61\nKA|P`E@NENFRQERjj@LJSB[nHE@\t-2.61\nHiDNQHSB[a@XhXKa{IICiEjV@D\t-2.61\nHmw@@@`Tke]fy`@j@A`vESRoH`\t-2.61\nHidH`HCpRkm^Eh@@@XTUMp|PL@\t-2.61\nHidD`HPOAJ^UxZ`@@AaQTwCq@P\t-2.61\nHeT@@DjYoIjjjh@XJDIaTwCH\t-2.61\nKAzQ@IdAxIUsMUPA`QTw\\`@\t-2.61\nsNxTMEV@`aFRPjKR`OLLP\t-2.61\nsGXHHGAJfjhA`Uc^P@\t-2.61\nsGQHDHaImfhAaacrT\t-2.61\nsJPDAHJPR[j`FDwEB\t-2.61\nqCbB@\\duPFBVyH\t-2.61\nQMFAjAIhFBOJ@\t-2.61\nHifDAHAHeNR[e^Eh@@@XXWCqJX\t-2.61\nsGQ@@eKuT@ptqxeP\t-2.62\nHaDH@@RVU[f@@@FFXW\\rJX\t-2.64\nKAxX@@gILjmUHA`aMqLh\t-2.64\nsJQ@@dkU@LBHmrD\t-2.66\nJoBBXBwD`dadaddebbTRtj[uTaPI@@XDpz_H\\\t-2.67\nHmtLbHS@BL{IIKEDiUZ@`@A`S]J|`P\t-2.67\nKAx@P@xQDIDYDYIITjjh@pZDpj[d\\\t-2.67\nHcLH@NrRQRqYRmTDA@@pYLInWbCh\t-2.67\nHkLF`HSNgP\\DjUYfjjYf@FFBi|`@\t-2.67\nHmVL@NaerRQVYJjfj@FCIa]J|`P\t-2.67\nHedL@@pdie]jjj@FCIS\\L|b@\t-2.67\nHedL@HZ\\ddUfUUMH@pILKnPH\t-2.67\nKAxX@AaYHhdZjh@pIJ[nIA@\t-2.67\nKA|X@QS\\eUkUU@FCIaTw\\b@\t-2.67\nsNpDHDTHrRQVjhAaXl[rL\t-2.67\nsGPDHDTHRjZj@XFKGdh\t-2.67\nsGQHHGCIHcUPCCKWbA@\t-2.67\nsNx`LDdvkUPCAY|rM@\t-2.67\nsGXHHGAJijhA`Uc^R@\t-2.67\nsGQ`AbeLuT@pRoMLP\t-2.67\nsGX`LJdmuT@pHaoDl\t-2.67\nsGXHHGAJijdAaecrT\t-2.67\nsGPHHDIUMU@LCEcrT\t-2.67\nsGP`Adinj`FBUxhP\t-2.67\nqC`PALcu@XZK\\`@\t-2.67\nsGQ@@dsmL@pruyB\t-2.67\nQMIBhF`chGcH\t-2.67\nqCp@BOTAahl\t-2.67\nRFTQVQP|`\t-2.67\nsNp`@dfUZj@X[E|e@\t-2.68\nHaDH@@RVU[j@@@FCQaTw\\`@\t-2.68\nsNpHAbIJkUT@pXbqoHp\t-2.69\nqCb@AIVPLDmrP\t-2.69\nsGQ`@jdvmR@|rq@\t-2.69\nsGQ@@djuT@phbqyJ\t-2.7\nJoC`@@PzTlrj\x7FI{[P@@A@@F@eS\\LkoDmp\t-2.72\nHeTDPDp@bHcIIKDdLrp@@@pjJ[ayD`\t-2.72\nHiDDHJZIAICi@YCIICEJij@GbDp\t-2.72\nKA|Y@UBXGaddeTZj`CCDpnHw@\t-2.72\nHid@@DjUfaBB`@FGPaTwCrL@\t-2.72\nsNyhKEaxYIITuT@prqxjp\t-2.72\nqC`XBHc`haIj`LLEnR@\t-2.72\nqCcRQXCFzNlAy@\t-2.72\nRFTEPQ`|R@\t-2.73\nsGP`ATiVj`FFbwDZ\t-2.74\nHaE@@@aJyUnX@@@XEaTwDc`\t-2.75\nsJPXHlQxQ{T@pbxlP\t-2.76\nsJX`BDdvu@LH^IX\t-2.77\nHid@`@\\LdbaRxZ`@@A`rES\\ODC@\t-2.78\nHmLD@@QIe[VfeVi@B@A`V\\J|Ri@\t-2.78\nHedJ`HSFDGAJeyjjY`A`gSq@p\t-2.78\nsJPD@DPHRnj`FFFOED\t-2.78\nsNp@Dj{Zj@XFKGbk@\t-2.78\nqCa@CISTAaEqS@\t-2.78\nHefD@NalddUfUUMP@piLKayD`\t-2.79\nHiFL@BAAR[eVji@FAIaUqFx\t-2.79\nsNpP@btf{Zj@X[E|Rh\t-2.8\nHiD@XHdDdLdFdNdAdLddjdjjh@^PP\t-2.8\nsNp@DiUjj@XLQXwdX\t-2.81\nHo|DpHhG@gCgCIHcDhhd[^jjB`@@XZBYprng[|``\t-2.83\nj`q@`@HRRjyeU\x7FSk^j`B@@@@FAhTYpTeZMYwnPH\t-2.83\nHglLXDp`BJdFdA\\IdEdLddTaLTdmUUT@LLt{yG@\t-2.83\nj`q@@@LddTjVTRPiN}U@A@@@@LMHpRcNBtZsnP|\t-2.83\nHo\\LxAgTdLdBdJdFdKdGdLddTgfTtjjffh@^PX\t-2.83\nJoB@Y@RGTCrG\\drnlktqw@AP@P@A`JXURngrN@\t-2.83\nHg^DHNihBDdLdBdLddTgTRQwUKP@@@pjUt{yG@\t-2.83\nHcvBXNiev@aICI@i@Pb\\CIIEIxiUKTh@pb^PH\t-2.83\nJoB@Q@^@ReSLjokYoT@P@@@A`^ES\\Lkiv\x7FH@\t-2.83\nHkLLpHS`\\J\\F\\LddRLbdjjjj@FGXPrngrN@\t-2.83\nHmTHXERPrPjPZPFPfPrRQRFFjjj@FB\\oHH\t-2.83\nHcvFPJaLe]CpGprRRjKRMUTt@LFSBY]yG@\t-2.83\nHmVBhNiiV@aICI@i@PcIIEIuJiZT@XQwHD\t-2.83\nHcLHpMbPRPrPrRRjIKRmU@A@@pinF]yA@\t-2.83\nHmVFPJaLFUCp{prRRiJQjjZ@FCIaMJ|b`\t-2.83\nHo~D@NalddUfRbRmzjZ`@@AaJXWKiv\x7FHD\t-2.83\nHk\\@b@a@eJYeUquSh@@@@@XKaTwCJz_H@\t-2.83\nHk\\@`LhDjU^ukmLHH@@@A`lHU\\Lki|c@\t-2.83\nHmTDHNFIAICIAgCIIJeDjjjh@XDURoHX\t-2.83\nHmTJhJ[iV@aICI@i@PcIIEIuJiZT@^PH\t-2.83\nHmVHHFjIAICICgCIIKMEJijh@XXLkrN@\t-2.83\nHedLjDp`BJdFdAdIdB{IIEIyKUT@OHx\t-2.83\nHedDpHXGBg@WCIIEXmUUT@LFSBkiy@`\t-2.83\nHmM@`HPOAJYeWaeZjjj`A`NES\\Lkr@@\t-2.83\nHeTL`HS@\\LddlRPsU@@@CBj[agfPf@\t-2.83\nHmVD`Naj|LddUfTjjj`AarXUCJ|Qn@\t-2.83\nHmVHpHxGBYAYCIIEKCJjfh@XDfDwHD\t-2.83\nHcw@`H[j|LddUbbeTuU@CAdpYW^HU@\t-2.83\nHkLL`HS@\\DjUYfjjjj@FDeS\\Lki|`@\t-2.83\nHmW@RDp`|Hq@eJkfZjjj@F@aEMprh\t-2.83\nHmWHbDphCpBTjnYjjjh@X\\EMproH`\t-2.83\nsJPKAXR@TAh@p@zOj`GAb@dCHAP@\t-2.83\nKAxX`Pw@xUxYIHkJjh@pILJnHw@\t-2.83\nHefH`FboCIIETiUUT@LFSBxYxeL\t-2.83\nHmTH`HApRjyfjjj`AaJXUMproH`\t-2.83\nHeT@@LddTjPsU@@@CAdpjZ^Ip`\t-2.83\nHaD@P@bH\\DeeVz`@@A`pXUMwH`\t-2.83\nHiD@`@\\DiVZjj`A`LIaTwCr@@\t-2.83\nHiD@`@lDiVZjj`A`LIaTwCr@@\t-2.83\nHed@`@lDjWfjjj@F@paTwCOHp\t-2.83\nHig@PBhPdDdDfyWaj@@@GfPw@\t-2.83\nsGPBIDJHtQXcIIKUPC@qZ|a@\t-2.83\nsJPKAyRHTQh`q@zOj`FEDVH\t-2.83\nHiFH@FcIIEUJjj@FEIa\\OHh\t-2.83\nKAzA@P`^BTlsUT@XDUMwDC@\t-2.83\nHed@@Djffjjj@FGXUMpsrD@\t-2.83\nsNxBLIAREdGHIMmUT@|tq@\t-2.83\nKA|A@HC`eTuUU@FEXUMwHP\t-2.83\nsOpIMP[djWkB@@FEbM_I`\t-2.83\nsNpL@xVP\\`eTuUPCCKGd`\t-2.83\nsNtIH`DBTifjj@XGFod@\t-2.83\nsNtIHaxBTifjj@XGFod@\t-2.83\nsNp`H|ddUjj@XYX|UX\t-2.83\nsNq`AbeMmUPCCJod`\t-2.83\nsJPD@xRHczhAahmrD\t-2.83\nsJPXHlQDQzl@pa@\t-2.83\nsJPYHlQDCh}U@P\t-2.83\nqCcPQXAD]TB\t-2.83\nsNqThmVO@~Fy|eWsTpCq@`\t-2.83\nsGP@Dj}j`FFfODj\t-2.86\nsJQ@@drt`LDmrD\t-2.86\nqCr@HIJlAyL\t-2.86\nsJP`@TeVdAaEqS@\t-2.86\nKAx@@IRjuUPAapPfES\\c`\t-2.87\nHeTLbHS@BL{IIKDdLkP@@@pJnF^Pp\t-2.88\nHeTLbHS@BL{IIKDdLkP@@@pJfz^PH\t-2.88\nsGPD@DDHRgZj@XDSGbU@\t-2.88\nsNpXHjpTIRkUJ@p`xlP\t-2.88\nsJQhHbBaJ^i@XP\\Rp\t-2.88\nsJPYHlPDGh}Z@XS@\t-2.88\nKAx@@YIDTjjh@pXDpj{bPp\t-2.88\nqCaPS@hRVdCqA@\t-2.91\nsJQhHlOBOZ`GfVH\t-2.91\nHk^@@@RfYU\\]Tz@@@@@FBaaTwCJ{rC@\t-2.93\nHeU@@@gIHhTmpu@A@@pYLJf{dR\t-2.93\nHiFD@DBlbbTLZjh@XTfUp|Pf@\t-2.93\nHefD@DBdfV^Zjj@FCIaTL|Qn@\t-2.93\nKA|H@HAIMwMUPA`VDw\\QJ@\t-2.93\nsGPHAbIJmU@LJHl^R`\t-2.93\nsOx@@drm]UT@pxbqk@\t-2.93\nsJQHDHaInZ@XH[dH\t-2.93\nqCcAAY]nRYhCbRp@\t-2.93\nqCcAAY]nRYhB\t-2.93\nQMBApRZA`sr@\t-2.93\nHmt@h@dBdFdAdEdDfYn~fBHb@AyD`\t-2.94\nQMFAjAIhGfR\t-2.94\nQMhDRUAyH\t-2.96\nRFDUAFCqH\t-2.96\nqCp@AI^`LHnS@\t-2.96\nHgnB@NamOIIEYeEEUSUM@CCdpnD{yB`\t-2.98\nHmtD`HHIeIUYVUjh@@@X\\BXwCOHT\t-2.98\nsGPBE@Z@LAXAJijhApT`Y@JATCd`\t-2.98\nHiDDpJFIAICICIIKLjii@FDMrN@\t-2.98\nHaDH@@RVU[f@@@FEQaTwHx\t-2.98\nHaFD@DCdfYRYje`A`fMrJ@\t-2.98\nsNpdHpxWprRQVjdAaecrT\t-2.98\nsNpXHmPxYIDYUL@pcy`l\t-2.98\nsNqHHGCIIEZj`FAVMyF\t-2.98\nsNqHHGCIIEZjPFFVOEV\t-2.98\nsJPD@xRHczhAaIsKD\t-2.98\nsJPD@xQpczhAaecrP\t-2.98\nqCc@AYIj`LINXK@\t-2.98\nqCpB@SGZ@pRwI@\t-2.98\nQMFIJrMP^P\t-2.98\nqC`@Qv`LEErX\t-2.98\nqCbPPSJRu@XHKdp\t-3\nQMJHfTf`XQrP\t-3\nRFTQLq`pce@\t-3\n`IC@Cr@\t-3\nsJQ@@dkU@LLInID\t-3.01\nsGX`LDdrmT@pfxcP\t-3.01\nHed@xDkLdBdJdFdAdIdLddTgeUUP@paNQp\t-3.02\nHg|@`@bDfYeUyO[j@@@@@FF`UMprng_H`\t-3.02\nHidD`HP@cIHXdnEX@@@XHw\\HBhP\t-3.02\nKAx@`ADPxILsUUPAapIaTw\\b@\t-3.02\nKAxQ@PC`eWMUU@FCIaTw\\PH@\t-3.02\nKA|A@PG`dsMUU@FCIaTw\\`@\t-3.02\nHaDD@HSIIDcSUUT@LBpj[d\\\t-3.02\nsNxTMEV@`aFRPjKR`LInHD\t-3.02\nsGPdIPxEprRHuT@ppVxcP\t-3.02\nsOp`Hdjekjj`FFqoHp\t-3.02\nQMFIBbN`XQqd\t-3.02\nRFTPTQ`|R@\t-3.05\nRFDGaFCqH\t-3.05\nHk\\@@DjU^ukmNeZ@B@A`LHUCJ{sLxp\t-3.06\nHeTD@@QIUeQej@@@FEYS\\ODbP\t-3.07\nHig@@@`Tke]nX@H@FAXUMqHD\t-3.07\nsOx`DFdrikTl@pVoH`\t-3.07\nsNp`AdenZj@XEZoba@\t-3.07\nqCbPPNBUt`XI[bD@\t-3.07\nqC`PApRZhCCQ[d@\t-3.07\nsJQDHGCNBT}T@pRODL\t-3.07\nRFTPLQP|`\t-3.09\nHcMLbEvDp@cNrRRqIYCJt@D`@pJfx^Qh\t-3.11\nHg^@B@B\\ddRRTjQwUUP@@@pNDpfxYWSl\t-3.11\nHo~J@Naeu|ddUfbbatzjZfi`A`RXT|bp\t-3.11\nHmtHpBbPRPrPrRRjIJUjh@@@XDwCOHT\t-3.11\nHmt@`H\\LddUbReZj@@@F@iaMproH`\t-3.11\nHkND@NalddUfRTjijj@F@ia]Jz_HD\t-3.11\nHiDHhARPrPJPjPZPrRQR^jjPAyG@\t-3.11\nHiDDPHPGBgCIIEYJjj@FEXS\\OHP\t-3.11\nHmTB@@SarJIIPijij@FADtkrL@\t-3.11\nHeV@B@B\\ddTjPsU@@@C@Tpj[ad\t-3.11\nHefD@AalddUfeUMP@piLKayD`\t-3.11\nKAxH`EpRBRBS]mSR@XQWDa`\t-3.11\nHiDL@HX\\ddUfjih@XDfDOHx\t-3.11\nsNpLHxVH\\PeTuUPCBkFod`\t-3.11\nsNyLGYHJPtaddeeTpCrL\t-3.11\nsNqhHlIIJeZj`FFM_H@\t-3.11\nsNx@@eRmUPCAqXu`\t-3.11\nQM@HvA`sr@\t-3.11\nHiDB@@SaRYUfjf@FBDwDpP\t-3.13\nHo~B@LAEwHhddhhd[]jjA`@@XCaCNg[|b`\t-3.15\nsJPIAxBTeZhA`Xl^P@\t-3.15\nsJP`AdizhA`d^R@\t-3.16\nRFBDQADXLHyP\t-3.17\nj`q`@@@YIEBedhdnB]zh@IiX`@XJQ`eF\\tZsnHex\t-3.19\nHglHHDApbHipVHrRSJJJ^UUUUP@pvLInFUt{yE@\t-3.19\nJoBD@@ILrkNx{[uA@@@@@XZAUprng[|RL@\t-3.19\nHg|@`@\\DjYmUyO[j@@@@@FFxUMprng_H@\t-3.19\nHctHPHApIprRIQQNUUUT@LEALinFUwdD\t-3.19\nHgmH`Dr@|DjV^Yjjjjh@XZATwCJz]|c@\t-3.19\nHiDHPHApqprQJHrjj`A`rES\\ODC@\t-3.19\nHmW@@@H\\dbabLjfj`A`rXwRoHh\t-3.19\nHiE@`HPOAJUfjjh@XMaTwCs@a@\t-3.19\nqCq@XIIV`OEL\t-3.19\nHiF@B@BTjeVjj`A`LIaTwB\t-3.19\nsJPHAbIJuPC@bK\\a@\t-3.21\nHg^J@Naev|ddUfbbNgUSTtp@pqLKdR\t-3.23\nHiFD@AalddUfjih@XDfDOHx\t-3.23\nKAx@@YIHkJjh@pZDpj[d\\\t-3.23\nsGPDHxVHRjZj@XEXwd`\t-3.23\nsNq@GddbmUHCCKGbe@\t-3.23\nsNpH@xYIHkU\\@prqyF\t-3.23\nqCcPAZTBSU@^XK@\t-3.23\nsOx@@drm\\@@@pHQoEf\t-3.25\nRFBDQ^DXLHyP\t-3.25\nHiDDHJZIAICi@YCIICEJij@FDMrB@\t-3.27\nsGPdCQHJPR[jf@XR|d@\t-3.27\n`IJ@Cr@\t-3.27\nHg|@@DjU_eZx{BBH@@@FBpaUtkiwqLX\t-3.31\nHo\\DxM]ICI@iAiCi@YBYCIIEIYGLjjjii@FDGrK@\t-3.35\nj`a``@NPYddblrRbR]zjfj@@@A`iFB\\ehug^y@P\t-3.35\nHo\\BxJX]bPRPrPzlNPnP^PrRRsIJJRjZjZ`AyG@\t-3.35\njhqA@@EYIHiXeDkIKUTADUT@@pTcAFJtYw`|`H\t-3.35\nHiD@g@hHdDdLdBdJhFdNdAd@zIklddUdjjh@P\t-3.35\nHkLLhJ[hBDdLdBdA\\LddTgTRjejj@FARngrA@\t-3.35\nHkLDxMMICI@iAiCi@YBYCIIEIYGJjji`AyA`\t-3.35\nHg\\LPHS@\\J\\LddQbdRiwUPU@@@pEnFUt{xbX\t-3.35\nHg|@P@bH\\DfYeUyO[j@@@@@FF`UMprng_H`\t-3.35\nHklDPHXGBgCIIEYhdmNjj@@@F@iaCJz_Di`\t-3.35\nHko@hAdtdLdBdJdFdLddTgbRtzjh@@@^Hn`\t-3.35\nHmV@XEbPRPrPzPFPfPrRRqRJjjj@FBDoHX\t-3.35\nHo|@`NqLddTlVVdeZhHBj@AaJXS\\iv\x7FHD\t-3.35\nHo|@`NqLddTlVfdgZhHHj@AaJXS]iv\x7FHd\t-3.35\nHg|H`HCpRkfUWd}mh@@@@@XJUMprng_H@\t-3.35\nHkLLPHZP\\A\\LddUbRdjjZj@FGIa\\ngrI@\t-3.35\nHkLLPHXP\\I\\LddUfRdjjZj@FGIa\\ngrF@\t-3.35\nHmVHHFjIAICICgCIIKLiJjZh@XXLkrJ@\t-3.35\nHmVHHFjIAICICgCIIKEiJjZh@XXLkrF@\t-3.35\nHcLHpJbPRPrPrRRsQIKmTp@@@pKae^Qh\t-3.35\nHmM@bHPO@IRfYUxYVjjjh@XCaTwCJ|`@\t-3.35\nHk^@@@RfYU\\]Tz@@@@@FBxUMprngr@@\t-3.35\nHkM@`HzoCIIDbiEJijj`A`JXPrngrJ@\t-3.35\nHctDPHxG@WCIIETeIUSUP@pyLJiW^Pp\t-3.35\nHg^@@JrRQRiKRCMT@ET@C@TpfgSod\\\t-3.35\nHef@HJbPRPrPYprRRiRUSU@CCNF^PP\t-3.35\nHct@PHBNBLddURTeUUU@CAXSBine]@\t-3.35\nHmTDPHXGCgCIIETiJjjh@XLfDLkrJ@\t-3.35\nHctDPHXG@WCIIEXmIUTuP@pYLJUwd\\\t-3.35\nHkLD@J{IIETdiJjjj`A`LIaBngrF@\t-3.35\nHeTD`HP@cIICLdLkP@@@pjfxYyA@\t-3.35\nHiDBPHSBCpiprRSFQjj`Aac\\ODp`\t-3.35\nHidD`HP@cIHXdnEX@@@XDULODC`\t-3.35\nHiDBbJ[aCpBTjeVjj`AaHPfES\\H\t-3.35\nHmVD@NalddUfRjij`AaRXWKqAd\t-3.35\nHmTD@H[IIETiJjjh@XLfDLkrJ@\t-3.35\nKAxYDPwUXUvRRJrjj@LBSBkbMp\t-3.35\nHiFH`D`OAJyfjjh@XMaTwCq@`\t-3.35\nsJPK@zRHTQh`q@ZOj`FEDVH\t-3.35\nsJPK@yRHTQh`q@ZOj`FEDVH\t-3.35\nsNqdIVG@nFRQFUU@LLEnXu`\t-3.35\nsNqiCVO@ReRmUPCAqXu|`@\t-3.35\nsJPJ@tRHTQh`qD_U@LJHlP\t-3.35\nsNpiH{XWlddUjj@XYX|UX\t-3.35\nsJXHHGAJfj@XYX|P`\t-3.35\nqCcPQX^D^hCBCfbp\t-3.35\nsJPXHlPYQzj@`\t-3.35\n`IoAHGd\t-3.35\nHeT@H@dBdAdIdDfYu[hHB`@^Ie@\t-3.39\n`L@LH\t-3.4\nsJXDHGCNBT}T@ptQxa`\t-3.42\nsJTHHaxIWMPCAX|P`\t-3.42\nsJPhLQHIKTpCqP`\t-3.43\nKAxX`Pw@xUxYIHkJjX@pqLKbUp\t-3.45\nsGQLKHaQFbLddmT`LMEnP`\t-3.45\nqC`DBHg`hcQBSU@XXK\\d@\t-3.45\nsGQDHGB~BUSUPCCKGdh\t-3.45\nsGPH@xYIDZj@XFKGbE@\t-3.45\nHo|D`HP@cIHXhheMAUXBHj`@XBwCNg[|PE@\t-3.48\nHo|D`HP@cIHXhdicAeXBBj`@XBwBng[|PJ@\t-3.48\nJoBBPDHG`eJsJkkYoU@@@@@A`mMprng[|`@\t-3.48\nHo|@@LdbRbblThP`hjj@AalIc]Jz]orA@\t-3.48\nHg}@@@aJVYU^Svv`@@@@A`ITwCJ{qCl\t-3.48\nHk^@@@RfYU\\]Tz@@@@@FDaaTwCJ|SS@\t-3.48\nHmTLPHS@BB\\LdaTTTVjj`A`uMproD@`\t-3.48\nHiDDhJZ@aICICi@YCIIECJiZ@GbPP\t-3.48\nHee@@@[IEDTiUUT@LAALJfF^IG@\t-3.48\nHid@`@|Die_ahH@@FCIaMp|PJ@\t-3.48\nKAx@`@DPDIRsUUPA`pPUMwDS@\t-3.48\nKAxH@ABTluUT@XDUMwDS@\t-3.48\nqC`HBHc`duPFFBwI@\t-3.48\nqC`HBHc`duPFDGME`\t-3.48\nHmvB@D@aeIfUzfZjeh@XIc\\aP\t-3.52\nQMCBHoAbDf`XH|h\t-3.52\n`IlAHFD\t-3.52\nHiDHhJbPRPrPzPFPrRRsRjZ`AyC@\t-3.55\nsNpB@xRHTQhcIIJjj`FEbqoHp\t-3.55\nKAxX`Pw@xTDYIHkJjT@pqLKdT\t-3.55\nHaD@`@\\DimVz`@@A`rXUMwH@\t-3.55\nKAxQ@HC`eTuUU@FEXUMwHP\t-3.55\nsNpmJyHJPt`~rRRrjXA@\t-3.55\nsNpH@xITkUT@p\\VM_H@\t-3.55\nsJPH@xIRuPC@qX|`@\t-3.55\nsGQHHGAJWjhAaecqB`\t-3.56\nHcND@LADfUyU]Zj@@@FGXWCJ{rJ@\t-3.57\nsGPeCQHJPoIMuS@OI@\t-3.58\nsJPdE`DRHcyXAaIrD\t-3.58\nsNp`@Ti]jj@XFZodP\t-3.58\n`IjApGd\t-3.59\nj`q`@@@YIEBedhdnB]zh@J@@@@XJQ`eF\\tZsnHex\t-3.61\nKAxLbPfDwAxUxEw]ddfLZi`CqLh\t-3.61\nsNqHHGAJkjj`FAqkxh`\t-3.61\nsNt@@\\dbLjj@XEZod`\t-3.61\nsNpP@jtfvZf@^YY`\t-3.61\nqC`PCDRVhCCBKdp\t-3.62\nKAxI@PpNFRRJrjf@LLSByG@\t-3.64\nsGQhHlGCIIKUHCAF|tV@\t-3.64\nsNq@IddbmUPC@kE|e@\t-3.64\nsNqdHl@`nFRPjKU@LEWq@`\t-3.67\nsJPhH`xQ}T@pVOED\t-3.67\nqCbPPND^hCBKfDp\t-3.67\nsJQHHGAJVj@XI[bA@\t-3.7\nHkLLzJ[hBLdBdAdIdMdCdNxhbHRHRHfJiZj`AyB`\t-3.73\nJoB@Y@QGTCqG\\drnlktqw@AP@P@A`hIaUJz[|c`\t-3.73\nJoBBPDHCaddabbRRrv[uP@@@@@XKS\\Lkiv\x7FDa@\t-3.73\nHknBPLaAd@b`cIIBhhd]MZ`T@@FCXwKi|b`\t-3.73\nJoB@P@ABTwLjnmf}T@@@@@FFaS\\Lkiv\x7FDa@\t-3.73\nHg|@`@|DjYmUyO[i@@@@@FBeS\\Lkiwq@p\t-3.73\nHgnD`Naj|LddUfbbeUUUT@LESBhYWSodL\t-3.73\nHcO@HBhPdDdEdMdLbfbRagCT@EP@OLci@\t-3.73\nHg|@`@BDfYeUyO[j@@@@@FBeS\\Lkiwq@`\t-3.73\nHglLPHNp\\JBDjefYjjjjT@XRfDwCJ{rJ@\t-3.73\nHk\\@`@SDifUWGUN`@@@@A`nES\\Lki|`@\t-3.73\nHmTLHHS@BJ\\FdNdLddJbdVjj`Aa`roHH\t-3.73\nHk\\@BLeJeWmZ{SBB@@@@XKBEWCJz_Hp\t-3.73\nHkNH`FboCIIEUEEJjjj`AaJXWCJz_Hh\t-3.73\nHo\\``HSBCpRjVYffjjjj@F@mprng_H\\\t-3.73\nHk^@@@RfYU\\]Tzjjjj@FEaBXUMprnf\t-3.73\nHef@XLBPRPZPzPFPfPR[fZjjh@^YAT\t-3.73\nHiDLPHQ`\\J\\LddUdjjh@XEa\\ODQ`\t-3.73\nHmTLHBk`dDdIdEdDf{[jffh@^I@`\t-3.73\nHkL@@LddTbdLjjjj@FDxS\\Lki|b`\t-3.73\nHeg@bHS@|@eJfYjjj`A`qTwCOH@\t-3.73\nKAxH`PpNENFRRJrjj@LBSB{bTp\t-3.73\nHeg@bHS@B@eJfYjjj`AapES\\L`\t-3.73\nsGPH@xIUMU`LLl^R`\t-3.73\nHcl@@DjYU_egX@@@@@XBaMprn|SJ@\t-3.75\nHmvD@LADf]eYUj`@@A`qMproHp\t-3.77\nHklL`HS@BLddJbRvWUjB@`@XMS]JgrA@\t-3.78\nsJPhH`xYICT`LEcsBH\t-3.78\nsJPXhlPD[ct^m@H\t-3.8\nHeVB@D@aeIfUzYjjV@FBXwHx\t-3.81\nHaFL@D@nRYgifjf@FBXwHH\t-3.81\nsGQLKIARFdLddmU@LI^P`\t-3.81\nsJPHHDQ}T@prqyH\t-3.81\nQMBcpIRZAaWDP\t-3.81\nsJQHHGBOj`FFVOI@\t-3.81\nHmvLbEaL@HslddlRVFUh@H@FATwCrE@\t-3.83\nHcLL`HS@BLddJfRtjmP@P@LJ[ag^QP\t-3.83\nHiDDpHhG@gAgCIHbeJjj@FC@fMp|``\t-3.83\nHidD`HPGCIHXdnFh@@@XTUMp|pHP\t-3.83\nHef@@@Ri^Zjjh@XCBES\\L|c@\t-3.83\nHiF@@@ReYjjj@F@pfES\\OH@\t-3.83\nqCaHKBH`PdthFDGI@\t-3.83\nQMBCDRZA`erP\t-3.85\nHeTD@@QIUeQej@@@FCYS\\L|b@\t-3.85\nqCbPPNBRu@XI[d@\t-3.86\nQMIDbHHRYAaGJ@\t-3.87\nHo|H@IrRQRiQFPUj`BJh@FDiaTtg[|aP\t-3.88\nHedHHJbPRPrPYprRRiRUUU@CCNF^PP\t-3.88\nHmVHPF`GCgCIIETiJjZh@XLfDLkrJ@\t-3.88\nHiDLhJ[hBDdLdBdA\\LddTgjeh@^PH\t-3.88\nHiDLHJ[hBDdLdBdLddTgjeh@^PH\t-3.88\nsNplJyHJPtaddeeTpCrL\t-3.88\nsNphHpxYIHkUR@prqyJ\t-3.88\nsOx`DFdrikUL@pVoH`\t-3.91\nqCbPPNBTu@XS\\PP\t-3.91\nHctDXAeICIBiAiAYCYCIIEHXYUUMP@pb^Qp\t-3.93\nqCpPP^BSU@XI[d@\t-3.93\nQMABHgAIhFBOJ@\t-3.94\nsNxaBDnR[YjhAaMqU`\t-3.96\nqC`PApRVhCAQ\\Pp\t-3.96\nsGXaBDnR[Vj@XS\\Qh\t-3.97\nsGQHHGAJijhAaecrT\t-3.97\nHaDH`HApRnU[j@@@FEXUMwDB@\t-3.98\nHkLHxMRPrPJPZPzPFPfPrRQRVQrjjjX@^PX\t-4.02\nHmTLhJ[hBDdLdBdA\\LddTgTjej`A`dkrA@\t-4.02\nKA|PtMpFdQBQFQAQEQ@MdddgjjPCA`aLJ`\t-4.02\nHmt@pHdDdLdLddjbReZj@@@FEMproHH\t-4.02\nHcl@@DjYU_egX@@@@@XBfES\\L|Q]@\t-4.02\nHmtL`HS@BLddlRVFUh@H@FETwBoHp\t-4.02\nHiDB`HSBBRRjUZjj@FATwCr@@\t-4.02\nsNxDHG@nFRQFUU@LKEj~HD\t-4.02\nsGP@DjZj`FAVMxa@\t-4.02\n`Jd`^P\t-4.02\nQMJH\\Df`XSr@\t-4.04\nHk|@@LdbbbRQKauS`@`@`@F@ySCJz_Hx\t-4.04\nsGPB@xRHTQhcIIKUPC@qX|e@\t-4.09\nJoB@P@NFRRJJEIKKYoU@@@@@A`mMprng[|SB@\t-4.11\nHcu@`HPOAJYYfjjjh@XSaTwCJ{q@P\t-4.11\nHiD@@DjfZjj`A`vES\\ODa@\t-4.11\nsGPdCQHJPR[jf@^JT\t-4.11\nqCbPPND^hCAK\\P`\t-4.12\nsGQ@HeTuT@prqyJ\t-4.12\nKAxH@PvRRJrjf@LLSByG@\t-4.14\nHet@@DjYUX^d@@@@A`rXULODzP\t-4.18\nHcLBHHQaApIpipUprRIZJJbmUUUP@pKNg^DATh\t-4.2\nsNpdHpxWprRQVjhAaecqU`\t-4.22\nsJPYhlQxKmqzOZ`D\t-4.22\nsGX`LDdsmT@pexlP\t-4.23\nRFPaMt\\H\t-4.25\nQMIH\\EpRZAxb\t-4.25\nHiFB@LANEImfZjX@XYaCqDX\t-4.26\nHmV@xNRPrPJPjPZPfPVPrRQR]Rjjj@Gb\\H\t-4.27\nHcu@XFVIAICICi@YBYCIIKEHkUSUH@|cP\t-4.27\nHgnD`Naj|LddUbRdUUUUT@LISBjUt{yG@\t-4.27\nHmU@XFVIAICICi@YBYCIIKEHjjZh@^Ph\t-4.27\nHedLpHi`\\B\\N\\LdbLVeUUP@pXDsagbDp\t-4.27\nHmU@pHTGBgA`cIIEKHjjjh@X\\fDwCOHT\t-4.27\nHef@XFbPRPrPzPFPfPrRRqRUTu@CrF@\t-4.27\nHcvD`Naj|LddUbteUUU@CCdpje]yG@\t-4.27\nHcw@`H[j|LddUbbeTuU@CCdpae]yE@\t-4.27\nHef@pHApipXHrRQRrUUU@CAdpnF^Pp\t-4.27\nHmTD`HZoCIIETiJjjh@XLfDLkrJ@\t-4.27\nHed@`@\\DjYfjjj@FDpfES\\L|`@\t-4.27\nKA|HP]SPDIHYHEHIUMURpAyG@\t-4.27\nsGPH@xIUMU@LCEcrT\t-4.27\nsJQ@IGuPCCKGd`\t-4.28\nHid@b@|@eJYWxZB@@A`rXS\\ODB`\t-4.31\nHiFB@LANEIevZjX@XI`|Pj@\t-4.32\nKA|D@XBMrSZsUL@XIg\\QB@\t-4.32\nqCbPHQBSS@XP\\f@\t-4.32\nHedL`HS@\\LddRRmUUP@phj[ayD`\t-4.33\nHk^@@@RfYU\\]Tzjjjj@FApfES\\Lki|`@\t-4.35\nqCaPQApcu@XS\\pb@\t-4.38\nsJPHHxQ}T@prqyH\t-4.38\nKAxI@P`NFRQIFjj@LBpj[bAp\t-4.4\nqCsCPKRUvyIf`NIO@\t-4.41\nqCsCPKRUvyIf`H\t-4.41\nHctDxAe@cI@iBiAiAYCYCIIEHhyUUKP@|QN@\t-4.42\nJoB@P@^BULrj~mf}PA@@@@FAaaTwRng[|`P\t-4.42\nsNpH@xISMUT@p\\VM_H@\t-4.42\nsNq`@jdssTpCqY`\t-4.42\nqC`XR@TAhBOTAqh`I@rAr@\t-4.43\nsJPB@xRHTQhbOj`FFbwHP\t-4.43\nsNqLKIARFdLddljf@^Q`\t-4.43\nQMJH\\HzAaOD`\t-4.44\nKAxPPUD`d`tataddaTjf`CqLH\t-4.45\nQMBCpchGfR\t-4.45\nQMJH\\Df`^H`\t-4.48\nHctLhJ[hBDdLdBdA\\LddTgReTmU@CCIW^PH\t-4.49\nHiDL`HS@\\DjeVjj`A`QTw\\`P\t-4.49\nqC`PApRfhCAQ\\Pp\t-4.5\nKAxH`P`NENFRRJrjj@LBpf{bIP\t-4.52\nHg|H`HApRkfUWd}nh@@@@@XJUMprng_DB@\t-4.55\nsNphH`xITkUT@pvMx`p\t-4.55\nsGQDBIARBS]TpCqR`\t-4.55\nRFDTAFCbdCd@\t-4.56\nsGQ`@jdsmR@|VH\t-4.57\nHedL`HS@\\DjUUjjj@FCES\\L|`@\t-4.58\nKAxY@Pf@xITnuUPA`QTw\\PL@\t-4.58\nKAxY@Pf@xIUJuUPAaeMwHH\t-4.58\nsGQhHlGCIHcUPCAF|pV@\t-4.58\nsNpHHxIUMUT@pjqkyH\t-4.58\nQMJDbDfPXQr`\t-4.63\nQMBApRZAaWDP\t-4.64\nsNphH`xIRkUT@pNM_H@\t-4.66\nsJPhH`xISuPCAX|PP\t-4.66\nHglLhJ[hBDdLdBdA\\LddTgTbeTmUT@LBWSodR\t-4.67\nHo\x7F@XBhPdDdMdCdKdGdDfyV^[aj@Bjh@GfQJ`\t-4.67\nh`~@@@YIHiEHYCJjjjj`@pu`cNRUhug^y@P\t-4.67\nHctDpHPGBgAgCIIDcHiUUUP@p{BxYW^Pp\t-4.67\nHmVBhNiiV@aICI@i@PcIIEIuJiZT@^Ip`\t-4.67\nHmW@`HS@|DjVYfjjh@XMS\\Lkq@H\t-4.67\nsOpH@xILkW@@@LJlZ~P@\t-4.67\nQMABHgAIhFD\\Y@\t-4.69\nsGPhH`xITmU@LD[qC@\t-4.7\nqC`PCpcu@XP\\tV@\t-4.72\nQMbH\\HzAaOD`\t-4.75\nsGPH@xITuU@LBl[qB@\t-4.75\nsGPBIHJPtaYCIIKUPCrD\t-4.76\nQMAJ@XBN`\\L`JAr@\t-4.77\nRFBDQNDXLHyP\t-4.77\nsNqhHlGAJeZj`FFM_H@\t-4.79\nsJQ`@bdjt`OEL\t-4.79\nj`aA@@NYIHiXmDiIZj``bj@@XRQ`cNZl{wHF@\t-4.83\nHed@DHADdLdBdFkNdAdIdLddTleUUP@panQ@\t-4.83\nHkLLpHS@\\J\\F\\LddRLbdjjjj@FGEprngrL@\t-4.83\nHkLDpHXGBg@WCIIEXdiJjjZ`A`JXWRngrJ@\t-4.83\nHctLpH[`\\J|A\\LddUbteUUU@CCdpje]yG@\t-4.83\nHctLpH[`\\J\\A\\LddUbteUUU@CCdpje]yG@\t-4.83\nHglLpHS@\\J\\F\\Djevfjjfjh@XBWCJz]|c@\t-4.83\nHctLpH[`\\J|A\\LddUfTeUMU@CAdpiW^QP\t-4.83\nHkLBpHSBCpipYpRjwiijjjh@XMprngrB@\t-4.83\nHctLpH[`\\JhA\\LddUbteUUU@CAdpiW^Qp\t-4.83\nHedHXFbPRPrPzPFPfPrRRqRUUU@CBFyA@\t-4.83\nHmTDpHXGBjCgCIIETiJjjh@XLfDLkrJ@\t-4.83\nHg\\@@LddTjTt`kU@DU@@peLJfWSodB\t-4.83\nHg^@@JrRQRiSRBmT@QT@C@TpfWSodB\t-4.83\nHctL`H[jlLddUbteUUU@CAdpiW^Qp\t-4.83\nHmTD`HZkCIIETiJjjh@XLfDLkrJ@\t-4.83\nKAxX`Pw@xTxYIHkJjh@pqLKfTw@\t-4.83\nqC`DBHc`hcQBSU@XXK\\d@\t-4.83\nsJPH@xITuPCCQ[bA@\t-4.85\nsJPhH`xIRuPCAX|`@\t-4.86\nHid@`@\\LdbaRxZ`@@AaQTwCs@S@\t-4.88\nHct@@LddTbaeUUU@C@\\InFUwbIP\t-4.88\nqCbPXRBRt`^JH\t-5.01\nsOpIAxBTfUk`@@FEVM_H@\t-5.03\nHaD@`@\\DimVz`@@AaVES]q@P\t-5.04\nRFEG`SFCqH\t-5.04\nsGX`LDdvmT@pfydZ\t-5.06\nHo]@`HPOAJYfYfjjjjh@XGaTwCJz]or@@\t-5.07\njhy@`@@HRUYfUWyHwgAZj@@@H@@XJpPRmFl{p^P`\t-5.08\nqC`PApcu@XZK\\`@\t-5.08\nJobD@@IKLrj}\\mf}T@@@P@A`lHprng[|`@\t-5.09\nQMCBHgAbDf`XH|h\t-5.09\nHctHxMRPrPJPZPzPFPfPrRQRVQuUUR@OHT\t-5.11\nHiFD@NalddUfjih@XDfEwHD\t-5.12\nJgB@@BULrjy\\Nk\\@D@Q@@FDyS\\Lkm|`p\t-5.16\nsJXHHGBOj`FFVOI@\t-5.21\nh`\x7F`D@PxJgaddbQbdTTjfjjj@CARLDdkQkN}rE@\t-5.24\nHkLLHHi`\\B\\N\\A\\LdbLRTTjjjj@FD`f\\Lki|``\t-5.24\nHcu@XJZIAICIBYAYCYCIIJdeIULuP@|Pn@\t-5.24\nHo^D`Naj|LddUbRdTjjjjh@XJfETkiv\x7FHx\t-5.24\nHk\\@bLhLyJeWmZ{SBB@@@@XKBEWCJz_Hp\t-5.24\nHmU@pHXGB`cgCIIETiJjjh@X\\fEProDa`\t-5.24\nHiD@P@\\J\\LddUdjjh@XLfDwCrH@\t-5.24\nKA~A@PfAxIUsMUPA`QTw\\PH@\t-5.27\nsNp`H|ddUji@XYX|e@\t-5.3\nHg|@`@\\DjYmUyO[j@@@@@FBeS\\Lkiwq@p\t-5.31\nQMBApchFCOH@\t-5.31\nsNpdHpxUprRQVjhAaecqU`\t-5.32\nRFDCaFCBnP\t-5.38\nRFTPxQ`|R@\t-5.39\n`IG@Cr@\t-5.39\nsJPYHlQDGh}V@P\t-5.4\nqCpPPND^hCAK\\P`\t-5.44\nKAxXPTwPDIHYHEHIUMURpAyG@\t-5.45\nKA|H@]CYIHkJjX@pqLKd\\\t-5.48\nsNqlHl@brCdLddlVj@^KD\t-5.49\nHctDpHXGBg@WCIIEXmIUUUP@pyLKiW^QP\t-5.55\nsKP@Di\\Zj@XTQX`\t-5.55\nHeT@pHdDdLdLddlRPsU@@@CCJZ^Ip`\t-5.6\nqCcPQXQD]TCr@\t-5.62\nQMBApchGfR\t-5.62\nHgl``HSBCpRjVYfZjjj`A`K\\LkiwrJ@\t-5.64\nHk\\@`@\\DifUWGUN`@@@@A`nES\\Lki|`@\t-5.7\nsNtHHaxISMUT@pNM_H@\t-5.73\nsJPLAHJPL`dwU@OEL\t-5.77\nHctLbH[jlJ{IIEXmIUUUP@pyLJiW^Qp\t-5.81\nHmTDbHZkBnrRQUJRjjj@FCIaCJ|b`\t-5.81\nHkNB@NamOIIEYeEJjZi`A`rXWB_HT\t-5.83\nHcvB@NaewIIEYdiUSTp@piLKmy@`\t-5.88\nsGQLKIARFdLddmT`OHP\t-5.94\nHo\\LhJ[hBDdLdBdA\\LddTgTTTjejjh@XMJz]orA@\t-5.96\nHmTDpHXGBoCgCIIETiJjjh@XLfDLkrJ@\t-6.03\nsOpHAxILkW@@@LJlZ~P@\t-6.07\nQMBApchFE\\Q@\t-6.07\nRFDCaFCqH\t-6.09\nsJQDBIARBS]R@|Tp\t-6.14\nsJPH@xQ}T@ptVyB\t-6.14\nJoB@Q@^@ReSLjokYoT@P@@@AanES]Jz]oq@D\t-6.22\nHmT``HSBCpRjyfZjj`A`uMproH`\t-6.22\nsJXA@IczhA`XlP\t-6.33\nHiD@p@\\H\\J\\LddUdjjh@XLfDwCrH@\t-6.38\nKAxXTTwPDIHYHEH]rUSUTl@P\t-6.38\nsNqmHl@brCdMvRRVKU@OHP\t-6.44\nqCcPQXND^hCpbK@\t-6.5\nHaD@b@|@eJ[Unh@@@XUaTw\\PD@\t-6.53\nqC`PApcu@XJKbF@\t-6.53\nsNpO@YRHTQh`qEbGDAh\x7Fjj@X\\QXu`\t-6.53\nsNpO@ZRHTQh`qEbGDAh\x7Fjj@X\\QXu`\t-6.53\nsNpOAYRHTQh`qEbGDBh\x7Fjj@X\\QXu`\t-6.53\nHiF@PHApiprRQVRjj`A`rXS\\OH`\t-6.53\nsNpO@\\RPTai@rEdGHAh\x7Fjj@XP@\t-6.53\nsNpO@JRPTai@rEdGHAh\x7Fjj@XP@\t-6.53\nHeg@`HS@|DjYfjjj@FCES\\L|`@\t-6.53\nsNpOAXRPTai@rEdGHBh\x7Fjj@P\t-6.53\nsNpOABRPTai@rEdGHCh\x7Fjj@P\t-6.53\nsNpyHlZqfCh\x7Fjj@X\\QXu`\t-6.53\nQMFIGBN`^YH\t-6.58\nsGPG@ZRHTQh`qEb@t_jhAaXl[r@\t-6.75\nsNpJIHJPtaYArFRRVUU@OHP\t-6.89\nHaD@`@|DimVz`@@AaVES]q@P\t-6.95\nHk\\@b@|@eJYeUquSh@@@@@XKaTwCJz_H@\t-7.06\nHg\\@XHdDdLdMdCdKdLddlRTt`kU@DU@@prfWdB\t-7.11\nsNpbJxDJPt`YAJijiPGd`\t-7.19\nsGPBAHJPLaYAInjhAxi`\t-7.19\nHefD@NalddUfUUMP@pILKnHL`\t-7.2\nsGPlH`DFPladdLVhAxa`\t-7.25\nsJPKAPRPTai@r@zOj`D\t-7.29\nqC`FBPe@iCRDyIj`OI@\t-7.34\nHctLpH[`\\J\\A\\LddUbteUUU@CAdpiW^IW@\t-7.38\nHg|@`@|DjYmUyO[j@@@@@FF`UMprng_Hp\t-7.38\nsNpOAfRHTQh`qEbGDCh\x7Fjj@X\\QXu`\t-7.53\nsNpOAYRHTQh`qEbGDAh\x7Fjj@X\\QXu`\t-7.53\nsNpOAZRHTQh`qEbGDBh\x7Fjj@X\\QXu`\t-7.53\nsNpO@zRHTQh`qEbGDAh\x7Fjj@X\\QXu`\t-7.53\nsNpO@tRPTai@rEdGHAh\x7Fjj@XP@\t-7.53\nHed@xDdLdBdJdFdAdIdLddTgeUUP@|c`\t-7.62\nHk\\@`@|DifUWGUN`@@@@A`nES\\Lki|`@\t-7.7\nHmTDpHXGBgCgCIIETiJjjh@XLfDLkrJ@\t-7.73\nHo]@HHTGBgA`cWCIIEKHjiJjjjj@FBiaMpr]orE@\t-7.79\nHgl@dDdLdBdFdNdIdEdMdCdLddTedLeUUUT@OHl\t-7.79\nHg|@b@|@eJf[U^Svz`@@@@A`iTwCJz]|PL@\t-7.99\nHkL@dDdLdBdFdNdAdIdMdCdLddTed\\jjjj@GdJ\t-8.08\nsNpOAfRPTai@rEdGHCh\x7Fjj@XP@\t-8.11\nh`~CDHPYreaSlddUbRdTeUUUUP@XJQ`eEZMYw`\t-8.37\nsNpBIHJPl`yCIICJj`Gbq@\t-8.5\nsNpO@yRHTQh`qEbGDAh\x7Fjj@X\\QXu`\t-8.52\nsNpO@xRPTai@rEdGHAh\x7Fjj@P\t-8.84\nHed@XDdLdJdFdAdIdLddTaeUUP@|Pn@\t-9.1\nHkL@H@\\H\\J\\F\\LddTlbdjjjj@FDia\\Lki|b@\t-9.37\nHkL@DLdBdJdFdAdIdMdCdLddTbd\\jjjj@Gb\\h\t-9.57\nHiD@XHdDdJdFdNdAdLddLTjjh@^Ia@\t-9.59\nHct@DDdLdJdFdAdIdEdMdLddTaaeUUU@CqBx\t-10.1\nsNpOAxRPTai@rEdGHCh\x7Fjj@P\t-10.77',Pq,Qq=false;
	var IE=KI(124);nH(133,1,{},Wq);var KE=KI(133);nH(110,1,{110:1},Xq);_.b=0;var JE=KI(110);nH(20,1,{20:1},Yq);_.b=0;var ME=KI(20);nH(65,1,{},$q);var LE=KI(65);var _q,ar;var ir,jr;nH(136,1,{},Kr);
	var nr,or,pr='eOHBNZ`pge@\ngCa@@dmHFFbwH@\ngFp@DiTujhCBbKWdH\ngJPXHlQxQ{TAaeb\ngCi`HEdfZ@pRp\nfJ@FD\ngJPHAbIJuPFADVyB\ngC`@Die@ppfyD\ngJQ@@dkU@XFKGd@\ngJP@DizhC@qX|`@\ngJQ@@dru@XI[dH\ngGQ@@eMuTA`Xl^R`\ngJQ@@eKU@XYX|d@\ngGQ@@djuTAaQEcrT\neMABHXaIhH\ngCa@@dkPFBbyL\ngGQ@@drmTAaekrD\ngJQ@@eKS@XZK\\a@\ngCh@@dmPFFDwH`\neMACD\\QIhH\ngJU@DPdju`P\ngGX`HDdwMLA@\ngGY@JDivjpH\ngCi@LDek@`\ndeTH@@RYWVf`@j@CC`pjxYyB@\ndid@p@bBbFbDfYoa`b@@LJ@fx^QP\ndeTH@@RYe]aZZj`cJ\ngFq@@drfmU@X[F|b@\ndeTH@@rJJIHdsSUL@P\ndeTL@@QdfygFV``@@pjfxYyB@\ndaDH@@RVU[f@@@LBcB[bUp\ndifD@HADfyWaZjj@H\ngGQ@@dkLtAad[rP\ngGQ@@dlltHkCXwd`\ndifH@JAJ[gxZB@@CBdJf{dB\ndidHPBBHFHRYgVzB@`@phLKayE@\ndeVD`FFPbDfUnkh@a`@`\ndiD@@LdbJTZjh@pzDpjX^Qp\neFDBcA`d\ndidL@@KdiuVDjjj@H\ndaDH@@RYe[hB@@LJpj[nP@\ndiT@@DiYXfifjjh@`\ngF|@ABeKZsU@P\ngNq`@fdvkSHf\\EcqJ`\ndiDL@@PTfU]jZP`f\ngJP`@TeZhCCKGbD@\ngNp`@dfujj@plVMx`p\ngGQ`@jdjmTA`l^JT\ngNp`@dfUZi@pVOEV\ngNq@@djkUPFEVM_I@\ngNq@@djmUPFCbqky@\ndiDD@@QIeuZfhHJpkBiny@`\ndaxD@@QIgUjj@LLpfxe\\\ndaxD@@QImeijBLlBSJ[d\\\ngNp`@deVZj@pNM_I@\ngNp`@dfvZj@pNM_H`\ndaxD@@QIeejj@LBpj[d\\\ngNq@@djmSPf\\GEcWr@\ngJPdE`DRPcyXCrD\ngGQ@@dsmLIkCKGdh\ngNq@@dsmUPFEDVOEV\ndaxH@@RYuji`bgA`SBknIC@\ngGQLJIARAdDfzj`LInJT\ngGQLLIAREdDfvj`LINP`\ndiDHhLBPRPjPzPFPR[[jjj@H\ngNq`@jdjsUPFAqkyH\ngGP`ATiVj`LMEnHt\ndaxH@@RYWjj`CC`aLInyE@\nfHc`A@\ndiF@@@rRHiJjj`CChSBiny@`\nday@@@{IEHkUU@FC@fES\\c`\ngGXDL@aABS\\uPFFAoH`\ngNxLL@aAABDfVZj@`\ngGPB@DHHpQPaIUZdB\ngGPD@DXHRfZf@ppUxlP\ngGX@@dsuTAaQEcrT\ngJY@BDeZlCBSbB@\ngGY@LDeVj`LCD[qC@\ngNx@@eRmUPFEbu_HP\ngNx`HDdvkSPfX\neMhDRZCAKd`\ngGQ`@ZdruTA`qEcP\ndiDDpLH@bOA@aIkUZjh@`\ndaDH@@RVU[f@@@LJcBinQp\ngFp`@dfTujXCAZ|a@\ngOx`FDdrikTtA@\ngJP@DkfhC@bH|f@\ngC`D@DSpRnhB\ngNq`@bdvkUPFFV_IP\ngGPP@cTfyi`ODj\ngJP`@TeZhC@qX|`@\ngCaHL@aIZPLDIrH\ngNp`@dfUZj@pvMyF\ndaxH@@RUVZj`CAdpj[nQ@\ngJQHLHaIVj@`\ngNphMQDIK[UTA@\ngJQ@@dkSBJpHbwHP\ngNqBLIAREdGHIMmUTA@\ndaxL@@RdfuVjh@pILInQp\ngGQ`@jdvmTA`l^IT\ngNp`@|dTQjj@plVMyF\ngJQ@@eOU@XZH|f@\ngGT@ATiVj`LJHm^P`\ngGT@Ade[j`LHnHt\ngCe@H`dkPGbV@\ngGUHLZHaIUjdB\ndazH@LAIV^jj@LFBDInyE@\ngJP@DiVhPVFbwDB\neMDARVCAd\ngNphBqDILsTrA@\nfHghA@\ndeTD@@EIYe^efjZ@H\ndeTD@@QIgeQej@@@LJrfF^Qp\ndcLD@@UIUe]FVX@J@aKCdrfx]yD@\ndmtD@@QImYVUZX@@Hrp{B[ae^P`\ngGP`@deUjPLEcqR`\ndeTH@@RUYTYi`@@aK@XSJ[agd@\ndmtD@@QIee^UZ``@@pXjXYWd\\\ngOp@DjWkjj`LJEc^JL\ndmtHPBBHfHRYeUXXHHh@H\ngOp@DjWkZj`LCD[qY`\ngJQHBJqIVz@`\ngCa`@ldkPD\ndmtL@@RTeYW^Eh@J@CBbinWdP\ndid@@DjU^nBBD@LFaLiaxa\\\ndeTD@@qI[eQej@@@LNSJ[agdP\ndcLD@@QInUuxV`@j@CCdJfzUyF`\ndmwD@HePQInUwaZ@B`@`\ndaE@@@YIeZn`B@@pILinHG@\ndmvL@HAFR[f^FV``H@H\ndeVD`NFPbDfUvih@I`@`\ndmvD@DATfYUQUjjj`CAlJfx^QH\ndeVD`BxPbDfYYZXHF@@`\ndmt@H@bAdIdEdDfUvjZ@Bj@C@`pjyB@\ndcNH@DAIee^eVhHB@CCbine]yB@\ndmvH@JAJUuTjjjjh@pFDpfxYyB`\ndmvH`HX@cIEDdTljjVj`B\ngJQ@@dkU@XDSGdP\ndiDB@@SaRUYVjj@LJrfx^IA@\ngGQ@@dkUTA`Xm^HD\ngGP@H\x7FUPD\ngGP@DkYj`LJEc^R@\ndaxD@@QIgUjfBJlLpfxe\\\ngGQ@@eNuLIkCKWba@\ndctH@@RgYujfjZBLX\ndiDD@@QImiZjh@piLiny@`\ngJP`@dfvdCBGbV@\ngNq`@fdrkThD\ngJT@@defhCCSGd@\ndeTL`HS@BLddlRPrm@@@FEYSCOHx\ndmLD@@QIee\\jeVhHB@CBbXYWd\\\ndet@@Dje^ifzjjj`B\ngOp@DiUMZj`LFHlWrT\ngC`H@DIMTAa`mrP\ngNq`@fdr{UHFBqyJ\ngJPXHlPDQztAxlP\ngJQ@@dmS@XZX|`@\ngJQ@@eMU@XYX|d@\ngNphBpDISkURA`QEnR`\ngGPhLQDIKUU@P\ngJP@DkVhC@bK\\a@\ngJQ@@djsBJpTwDb\ngNq@@drmUPFCDVMyF\ngGP`@TfVj`LJHl^R`\ngNq`@fdrkUHD\ngGY@LDenj`LJHl^R`\ngGPhCQbILmU@P\ngOx@@drm]UTA`plZ~R@\ngGP@DjZj`LCEkq@`\ngNq@@dkMMPb\\CD[qA`\ngJQ@@dju@XJGbV@\ngNq@@ds]UPFCDVMyF\ngNx@@eLsUP`lLb~KT\nfHdXA@\ndidH@@RUe^Ejjh@pyLJfx^Q@\ndidH@@Rf~hRjjh@`\ndmv@`EBHrJJIHin`HFpHy`\ndeVD@HADfyeFV`H@@piJ[iy@`\ngOp@DjWkB@@LBmWqP`\ndeVD@HADfyUxV`@`@piJXYyA@\ndeVD@HADfyWxV`@`@piJ[iyA@\ndmv@@@rQQJEJUjh@@@pdHPfxYWdT\ngNqhHl@cIIJeiaCP\ngNpP@jtfvZf@pfxdp\ngGP`@dfUjpLH^R`\ngNp@DkUzj@pjqkyH\ngJQHHOAJuj@prqy@\ngJQHHOBOZ`H\ngJQ@@dlu@XJGbV@\ngNq@@eJuUPFEbu_HP\ndeU@@@aJyenF`HH@H\ngGY`HEdf]j`LEkrD\ngJX@@dksBIpROI`\ndedD@@QImUVjj`C@Tpj[ad\neO`BNZ`pYy@\ndaDH@@RYe[jfj@LFBLJnyC@\ngJQ@@dsT`XDQ[dH\ndid@@DjU^nBBD@LNaLJfGd\\\ndidL@@RdeVWaZjj@LJpfx^Q@\ndaF@@@Rfu[j@@@LFABinyF@\ndedD@@QImiVji`B\ngGP@DjZj`LCL[qA@\ndiDL@@RdeVyjf`B\ndmtH@@ReY}Jjjjj@H\ndcLL@@Sdf^YV]Z```@LJqae^Qh\ngGT@@dfuj`LBEcrT\ndif@PACDJHRYgvzB@`@`\ndcMH@DTLbbbRRHjuUUT@X]aTwCoHd\ndkmD`LND@HrRPjZIE]VhBB@B\ndidHPBBHFHRYgVzB@`@pHLx^HU@\ndmvH@DCHhhhTiUjjj`CAl[ae^HU@\ndknH@DAIfYuUMjjjj@H\ndcND@DCdf^YV]Z```@LFQae]yF@\ngF|@AbeJf`@@P\ndifD@HADfyWaZ@@@LBRnGbDp\nfHapA@\nf`i@`@@VRYfYU]`eNMyh@`AB@@H\ndk\x7F@@@cLdRfbTQragSfhJ@T@H\ndmLH@@rJJIQEneX@@@@C@`xYxVTr`\ndk]H@BDLbbbbRQZ]NB@P@@B\nfoA@R@HHqH@QddebRbrPeV\\m@D@@@A@\ndaFH`JHHaIf]n``@@`\ndmv@HBBHFPfPVPRYUzih@Jh@H\ndeTHPIBPzPRYeea`Ha@CCLX^QP\ndeVHPIHHchaIf^VFBBH@LBCNGbEH\nek`PJ@@@GNimlbbRfbbebrTRLrThXTlBbrjZVjjjjjfijh@CAICBc`RQSPrqspIHjhX{dFP\ndmvL`EaL@HrRRqIXYV`@`@`\nfewAP@@LtT^QQQRUJQYSQZXpgCNCeNVfjjijjjZj@B\nfoQ`@@@YIEDeDTdqWAF]UUAAE@@XB`cENRUkaFFlx\nfde``@C@heMrklk|dYpXtDDUUTT@D\ndk^H@EAJ[UVVySh@JjH@pyBhYT~If`\nfoA@@@LdbRdVeRiJs``j@@@@LEPPRgAJtZwDR\\\nf`qA@@@YEDeeHhTjL]z@Bj@@@@`\ndcnH@EAIfV^XYv@@B@@H\ndmtL`HS@BLddlRTFUh@H@H\ndeT@H@bBbAbIbDfYu[hHB`@`\ndcLHpJBPRPrPrJPsQIKmTp@@A`WBn|bP\ngGP@Di]ja@xTQF|f@\ndcLB@@Q]R[e[neh@a`@piBj]yG@\ndeU@@@eJYW~F``H@LFCBinxbR\ndeUD@HdDR[eWaZ@B@C@diaxaR\ndeVH@DAIgeQej@@@LJSJX^It`\ndcNL@HAFR[fUqUhHH`@`\ndg^L`EaC@HrRPsIYJCJt@EL@FCTwBm|``\ndaFHpBxHa@bhcHheBSTuL@P\ndg^L@D@mRY^UueVj@Bh@H\ngOp@DjWkB@@LMc^ZI`\ndidD@@yIfVXXBH@C@`[axfT\ndaDH@@RYWih@H@LJSBknP@\ndeTD@@YIfUqehD@@LJJnF^Q`\ngFtHHPDIRnMKPFBEyD\ndcnDPJa@BBBLdabRRS\\nkSP@@A@\ngNxhMD@cIHUEj`LCcWr@\ndclL@@pTign_JWZjB@`@`\ndcnD`HI`BDfYoVnWZfX@@@`\ndidH@@RVY^Ejjh@pyLJfx^Q@\ndedB@@PiRUi]jjT@`\ndmTD@@QIeUyjZZBBh\neMFINbMP|`\ndo}H`BMPbLbbbRfebXXHHfj@B\ndo}H@DhDfUfUWWZhJB`@H\ngGT`EaTf]j`LDkqX`\ndayL@DpFyIeUjj@H\ngKP@H~Jj`LEcqQ@\ndid@@LdbLTifjj`B\ndaDD@@QInXjZjh@`\neMJDBDfPpce@\ndaEH@FxDiebjiV`CCDJnHw@\ndk^H@FAJY}e\\kSie`@`HipyLhYW^HQ`\ndaFH@LAIVUnZjh@pHj[nIB@\ndieH@DHDfvWaZjj@H\ndg~H@LCHeEEDdcJg[UPTA@A@\ndifD@HADfyWaZ@@@LLPjyc\\H\ndg^L@HAER[e[[xV`@jh@H\ndeVH@LAIVYQejjj@LNPj[agdP\ndeVH@BAIV[Qejjj@H\ndmtHPEBHzHrJJISEa`HbP@`\ngGQHLHaI[ihCCBWdH\ndmuD@HXDR[fUEV```@LBRiWfMp`\ndg}@@@mJYeU|]Tz@@@H@B\nfhy`B@N@BLdTTTRRVqirUmNh@`BBh@@pt@cARUhugAyCp\ngKP@LdabjhC@bH|f@\ndmtH`ABHRYW[ih@Jh@LNALJaWb]H\ndg|@@DjWmijXYB@jjb@H\ndmtD@@gHhhhdVEjjj`C@TpfxYWdT\ndeT@@DjU_k``RPHjpFDpj[ayD`\ndeTJ@@qaeJYyzzjjj@LIaLJfxY@\ndev`@@rfeJY{ZxYBBJD@`\ndefH@LAIVYfjj`B\nf`aQB@BFTBHrJJIJZUJLEAADuT@A@\nfHdHA@\ndidHPFBHJHRYf~FBH@@`\ngCe@H`dkPFDwH`\ndcND@DCTfVutYZ`@d@LJJfx^Hb`\ngGT`IPdfuj`LDmqF`\nda{D@Hi`QImejj@H\ndkm@`DDHaIe]YZZ@Bjh@H\ndcL@@LdbRbjeBDEEP@XCBES\\n|SI@\ndmvHPBTH`XaIfUmi``hP@pXLIagd\\\ngGYHCaDIK]M@XHSbM@\ndcND@DCdefV]]Z`b@@H\ndmtD@@QIVYdUZ@b@@`\neFPBca@\ndiDJ`HSJDOCIIJdfjj@LJSBx^Pp\nf`aqR@AF}AFJZAxYIITdhhmkNZjjfV`@pxcANJm{dF@\ndid@p@bFbAbDfUfn`BH@LLAaybYp\ndeVL@HAFR[f\\YZB@@C@diixgB\ndif@`ABHRYevz@``@phLJny@`\ndcNH`BdHaIfUyXXHHZ@B\ndo}H`FMPbLbbRfRaRkh@bfj@B\ndayH@DhDfWVjh@pKB[nHe@\ngNx`BDdvkUPFFu_Db\ndigD@Dq`yIeUifff`B\ndk^D@D@\\bbbbRQImMj`XB@C@jWSxgR\nfgA@@@DjYU_VByHu`@@@@@@H\nfoA`@@@ILkjrmFV]@AL@@@ar`\ndcLD@@SHhmEDcJmPDD@FA\\L{qLX\ndeUD@BdDR[YTYZjj`B\nfoA@b@HHAxIRlrjzkF]U@@@@@A@\ndif@@@RifvFjjh@pzDJfx^Q`\ndaD@`@bDfUZZ@B@C@`qnxbD\ndcLD`BTHaIfUVXXHHf@B\ndidH@@rJJIEn`HH@LJ@jX^Q`\nfbu@`@@NrJJJIPjFKQLDFLADUA@T@@P\ndidH`ACDRYWZZ@B`@pXDpjGd\\\ndg}@@@mIe]e^ftx@H@H@B\ndmvH`FdHaIe[zn`BI`@pXDrf{dJ\ndcNH@EAJYYeGZBHh@B\ndeTL`HRPBLdabRwBl@D@FEES]OH@\ngOp`Adigujj`LCEWrD\ndmtH@@RYeUEV`P`BJlNpjxYWdL\ndeTL`HS@BLddlRPrm@@@FETwCOHp\ndeV@@@rQQQHcMAP@@XBBXUMp|bP\ndmvD@H@de[eYVZ`@@bJ\ndaE@@@yIe^f`@`@pKBknHB@\ndcLH@@RfUW~f``b`@pEBinE]xfR\ndo|H@@rJJIQPrEn`HJjh@H\ndg^D@MADfVU}iUjB@j@B\ngGY@LDenjPLBHcqZ`\nf`qh@@@XIQfRJJKZJEJgG^ejj`@`@H\ndcnH@LAIYe_x^fjjjj@H\ndg^B`LaAl@cIIBheEeikTBPH@XUgSi|Re@\ndg^B`LaEt@cIIKEDhcIkPPLP@P\ndo}B`LfDEpBLddJbbbJNujAbA@B\ndieH`LE`BDiU_Bjij@LBAJ{bPH\ndk~@@@RfYU_JGUN`@@B@@pDB[aeSyF`\ndmtB`HSE@HrRRqIXYV`@`@pKFy^IP`\ndmtL@@jTef_^E``J@C@biexd\\\ndcl@@DjYU_egX@@@@@pxjxYW^XfL\nf`q@`@@HRYyV{TRg^Z`B@@@@H\nf`qA@@@ILk\\joSagPA@PP`@D\ndmt@H@bAdIdEdDfU^jZ@Bj@C@`pfyB@\ndcLHHBBHfPVPvPRYg^fzB@j`@`\ndcn@@@Re]eRi]jj@B@CBXPjxYW^HF@\nfbuQB@BFTBHrJJIJZUIQILDgLDDSU@@@@P\ndcMH@DhDfufU]Zjjj@H\ndmtD@@[HhhhdYUhJ@@CAlJae^Hw@\ndmtD@@qIYyVUZh@@@pYFxYWbPP\ndeT@@LdbRTm\\DDT@FGIeMpsrH@\ndmtHpEBHJPFHRYgW[hHBd@H\ndid@@DiUWajjj@LAaLJfx^P@\nfde@P@@BLEIfYfY\x7FyiWgQZ@HJ@b@@H\ndieH@JxLbTTQkfej`CAFGbPP\ndaD@P@bNbDfUzZ@B@C@`pnxbT\ndmMH@DhDfUmZZU`@@@@H\ngNqdEb@b^FQRHmU@P\nfoAab@GPQ`@QddebbTVLmFlm@@@P@A@\nfH`pA@\ndg\\B@@SSrJISISPbkT@Pt@D\ndeV@@@RiU\\Yjjj`C@XSBkagdL\ndmLD@@IJ]YVDeZj@B@B\ndmLH@@RgYVaAfj@B`@`\ndid@@DjWxjZjZ@H\ndaxD@@QIUijj@LLqnxdT\ndmtD@@QIee^UZ``@@pZfxYWdD\ngC`dE`DSpRZXCsBX\ndeV@@@RfV\\YhH`@CCdJfxYy@@\ndcMH@FxLdTReRQUTkUT@P\ndcNL@HAErJZJIECKPDE@A@\ndefD`BpPbDemgijj@H\ndo~H@DCHeEEEEBmmjBbH`@`\ndo~D@D@|bTTTTRqvvhJHb@B\ndknH@ICHhhhdUFF@bJh@H\ndeT@@LdbRbmBDED@FGPfTwSrB@\nfoAab@NPQ`@QddebbrRTeV\\mA@@@@A@\ndeVD`Aa@BLdabRgRl@P@D\nfoAPB@NJ@DYHhhheEcJqgT@PP@@@P\neMAALhbN``\ndidH@@RYWZZ@B`@pXDpjGd\\\nfde`B@N@BLdTTTRRVqeNRmiu@D@PUP@A@\ndk^L@IANRY[f~]tvjjjj@LApjXUt~It`\nf`iPB@N^@DISLro\x7FSdcZmPA@@W@@D\ndcLD@@QIVYVFV`HJ@CAfxYW^IE@\ndklD@@QIgfUiUj@`h@H\ndk\\D@@QIVZVVfSZjjjh@`\ndk\\D@@sIEDdXdj[Sjj`@`@`\ndeL`@@JfRiUfnXVfjjjh@`\ndif@PBBPFPRYgvzB@`@psJ[dD\ndmvHPBdIAYAIfUua``a`@`\ndieHPJD`bFbDfYoaiZi@H\ngJX`LDdvu@XI[dH\ndcnH@BAJ]fuaEvjh@H@H\nfHcxA@\neFAADdRLD\nfHdxA@\neMJD|Df`pYy@\ngJPhHaxIRuPFBqy@\ngJ]@EbDfVhCAH|f@',qr='fHe`A@\ngFq`@ldrfmU@XR|a@\ngCl@@ldsPFFBp\ngC`HADIKTAaaMrH\ngNxHLHaIYjj`H\ngNxHLHaIVjj`H\neFDBcAaWH@\neMDARVCBnR\ngGP`@TfYi`LI^S@\ngJQ@@dkT`XDKGd`\ngGQ@@dkUTAaXl[r@\ngJQ@@djsBJprqyH\neMHAIdLF^P\ngJQ@@dls@XKGd`\ngGP`ATiVj`LCEkrD\ngJP`AdejhC@qX|`@\ngGP`ATiVj`LCEcrT\ngJQ@@dsU@XDKGd`\neMJDbDfP`\ngC`DADZHRVhB\ngC`DAb[DRVhB\ngCa@@dkHFBbyL\ngCa@@dkPFBfyD\neMABHYAIhH\ngJPH@DIRuPFABqyH\ngCa@@dkHFBVyH\ngGQ`@jdjmTAal[rP\ngGY@LDeVj`LJHm^P`\ngJXHLHaIVj@pHbOI`\ngOx@@drm\\@@A`plZp\ngGXHLHaIUjhCBbHwdp\ngCh@@doHFDwH`\ngJY@BDeZlCAQ\\`@\nfHgdA@\ngJQ@@dsT`XDKGd`\ngOp`@dfUMZj`LMc^Q`\ndaD@@DjUZxHD@CAhSBinQp\ngOp`@dfUkZj`LMj~P`\ndeTH@@RVYWahBA@CC``j[ayD`\ndid@p@bBbFbDfYoa`b@@H\ndaDH@@RYg[ffj@LBrf{dD\ngFq@@drfmM@X[F|b@\ngGQhHj@cIHTmPFFqoH@\ngJQhHl@cIHUhCBGd@\ndaE@@@yIe^f`@`@piLJny@@\neMhDRUB\ndie@@@aJvUxZ`@@CChPj[ay@@\ndifH@DAIf_Ifjj`CBlJf{dB\ndifD@BADfyWaZ@@@LBQnGdT\ndeVD@FADfygFV``@@pjfxYyB@\ndeVD@AADfyVzV`B@@piBkayD`\ngF|@AbeJfuU@P\ndetD@@QInYvDYZjjh@`\ndedH@@RUUUfjhHRpELJfxYyD@\ngJQ@@dkU@XZX|PP\ngNp@DiWjj@p\\VM_H@\ngNq@@djmUPFEfM_DD\ngJQ@@dkT`XZK\\PH\ngJQ@@dkU@XDQGdp\neFA@HoBJD\ngJP@DjvhCCKGd`\ngGQLLIAREdDfvj`H\ndiDHhABPRPjPZPzPRZyjjj@H\ndiDB@@SaRY]fifBBX\ngNxHF@aJUzZqDxXH|Tp\ndmv@@@Rf~UeZj@@@LEBDpfxYT\ndaxD@@QIUYjj@LBrf{bPP\ngNq@AdTbMUPFEBq_IP\ngGP@DiUjaAXFKGbE@\ndaE@@@YIeZn`B@@piLiny@@\ngCa@@dsPFBV@\ngOp@DjWkfZ`LKEc^Q`\ngOp@DjWkZjPLKEc^Q`\ndaD@`@bDeeVz`@@CA`cBinQp\neMABHPaIhLDnR\ndaDH@@RVU[f@@@LJ`j[nQ`\ngC``AdeZ@pTWI`\ngFp`AdiTvjhCCQWdH\neMbDBDfp`\ndaEH@JXDiWRjjj`CBhSB[d\\\ndaFH@NAIe^f`@`@piLJny@@\ndaF@@@RYe[hB@@LJCBknPp\ndaF@`NBHRYUih@H@LJCB[nP`\ngC`@Die@ptVy@\neFA@HoBLD\ngGQ`@jdvmTAaecrT\ndaxB@@RfRYYZf`B\ngJQ@@eKS@XJKbq@\ngCaHLLQIZ`LDEqS@\ndaxD@@QIeUjj@LBpj{dL\ndaxD@@QIUUjj@LJpj[nQ@\ngNp`@df]Zj@pvMyF\ngJP`@dfzhCCA[ba@\ngGQ@@eKuTA`Uc^R@\ngCaHLHaIZ`LLHnS@\ngGPhMQDIK]U@XTQX|e@\ngNp@DiUZjDC`qEc^Q`\ngNpH@DIRoUTA`qEj~P`\ngNp`AdiWjj@pJM_I@\ngGP`@TeZj`LKEc^P@\ngGQ@@eJuTA`Xm^P`\neFJBhHp^I@\ngCah@mJAIj`H\ngCahHlOBOTAaAsQX\ngJT`H`TeVdB\ngNx@@eJmThFCbqky@\ndif@@@RUe^Fh@@@pDHPj[a@\ngNy`LDtfuZj@pNM_H`\ngNx`LFdjmUPFCDQkyL\ngOx@@drm]UTAaqEcV\ngGT@ATivj`LKEc^P@\ndiDDHJXIAICi@YAIkfjfh@`\ndcLL@@STfVyVUZ`HD@H\ndaDH@@RVU[fZj@LBJf{bQ`\ndmtD@@QIUYVUZh@@@p{B[ae^Q@\ndeTD@@QIgeQejjj@LFpj[ayD`\ndmtD@@QIgeTYZjjh@p{B[ae^QP\ngOp@DjWkZj`LCL[qI`\ngNp`@df^Zj@pvkyB\ndeT@@DjWvifjjh@pFDpjXYyG@\ndidD@@qJY~rjjZ`B\ngGQ@@dmltA`h^KT\ndcL@@DjU_ZnZjij@H\ndcL@@LdbRbjUBDEEP@XSBXUMt{rE@\ndid@@DjWZfZjj@LFcB[ayB@\ndid@p@bBbAbDfYun``H@H\ndcMB@HDDWTfyV{iZ@HX@H\ngC`dEaDPHRZTB\ndmtD`NDHcHhheDVfBAb@CB`rfWdR\ngNxhGD@cIHTefqMP\ndaFH`HX@aJYWJjeh@pHDJnQp\ndax@@DkUfjh@pZDpf{bAP\ngNp`@df^Zj@pV_DZ\ndedD@@qJ[^ZjZ`bf\ndaxD@@QImUjj@LJSBknPp\ndiD@@LdRbJZjhHBpxHpj[nH``\ndaxD@@QInejj@LBRf{dD\nfH`TA@\ngJQ`@bdjt`P\ndaD@`@bDfUjZ@B@CB`SJ{dL\ndkm@`ATHaIe[ujZ@BfhBAh\ndif@`BBHRYgfzB@`@`\ndetD@@eIYe~DYZjjh@`\ndaFH@DAIYUnZjX@pkBinyD@\ngC`HAVIMTAaaMrH\ngNq@@djuUPFCDqkyD\ngJQ@@dju@XZX|b@\ngCa@@dmHFFDwH`\ngJQ@@dsMBRppVyB\ngCahHlOBNtA`anQ@\ngGQDJH`qBSKMHdX\neMIDbKpRYB\ngNx@@eJ}UPFCDVkyB\ngJXhEbLQIZf@`\ndnD@@DiYrbYjj`CA`aLinPP\ngF}@EbDfTuiXB\ngJP`@TfZhCCQ[bA@\ngJPhLQDIKUPD\ndiDB@@RnRYufjf@LDp^PP\ndmTD@@SHheHjfjjh@pXj[agdJ\ngNpTHjpDDHrREQZTB\ngGP@LdbMU@XTQZ|a@\ndiDH@@rJJQUjj`CBlJf{dB\ngJQDDH`qBS]LHj\ngNplJqHJPtadTaeTpGdX\ngJYHLPDIStpblDEqP`\ndiFDpJXPdDdLdLbdJRjfdHI`\ngGX@@eKMTHGCKWba@\neFHBJFE@\nfHfpAa@\nfH`XA@\ngOu@DPdrykURA`l~Q@\nfHgHA@\ngCa@@dmHFBVxa@\ndmtD@@QIgYVUZh@@@p[FxYWdD\ndmtH@@RgfueZj@@@LASJ[ae^Q@\ndid@p@bFbAbDfUfn`BH@H\ndidH@@RYUZZ@B`@phLKayB@\ndmuL@DpIUIfVTfZjjX@`\ndeVD@HADfyVxV`@`@piBkiy@`\ndeVL@HAIR[e_aZ@B@CBdJngdL\ndmvL`NaL@HrRRqQZUV``@@`\ndco@`LK`BLdTTRRITntpTA@Pe@\ngGP@Djuj`LLm^JD\ngKP@Di\\Vj@pHfOH`\ngNp`@dfVZf@pQ_IP\ndaxD`Fx@aJUzjf@LJBDsnPP\ngGQ@@djuTAaQL[rH\ndaxH@@RUUjj`CC`cBinyB@\ndiDH@@RYujjj@LAALJfx^Q@\ngJX@@dku@XIGdp\ngJX`DBdju@XI[ba@\ndazH@LAIUjjj@LFBDinyF@\ngNq`@fdjkUHFBqxiP\ndaDD@@aJyUnh@@@`\ndid@@LdbbQxXF@@CAdrfx^PP\ndid@@Dj{WaZjf@LNaLJf{dB\ndaDH@@RYUifjj@LJpj[nP`\ndaDD@@YIeZn`B@@piLiny@@\ndidD@@iJ[gxZB@@CBdJnGdL\ndaFD@FADfyVyjj`CBdpj[d\\\ndewH@HP`RY[TjFZd@H@H\ndiD@@DiuejjP`GChSB[ax`T\ndmtDPNDHaXaIfVUi``X`@`\ndmt@@DjU_jxHHj@CBXPj[ae^Q`\ndmt@@DjU_ZxHDj@bg@XSBkagbLh\ndkl@@LdbRdSRjP`jJ`@pfDJfxUOdZ\ngOp@DiWMZj`LKEb~HT\ndmtH@@RYfWXXBHh@LF@fFUxe\\\ndax@@LddUeUT@XMBXS]rJ@\ngOq@@eJqmUTA`Xl~Ht\ndaD@P@qBbDfYvzB@@CB`pj[d\\\ndmuL@HDDWHihdh^eh@b@B\ndcNL@HALRYymUujh@@@`\ngNyhMDpDYIBdmTA`\\Z~P@\ngNx@@dlmUPFEbq_DJ\ndknL@CAErJIQIIF]Z``b@B\ndeVD@DCdeeY[fjjh@`\ndid@@DjUfaBB`@LNaLinGdD\ndifL@DCaRY]bijih@`\ndifH@DAIf_Ifjj`C@lJnxcB\ndcMB@HXDeTfyed]ZBA`@H\nfHcdAa@\nfHchA@\neF`BNFE@\ndeTD`HP@cIHXdepk@A@A`ULL|PB@\ndeTL`HS@BLddlRPrm@@@FAXwSqJD\ndcnH@NCHhheEBtkl@D@@@P\nfoA@R@HHqX@QddebRfR`iF\\m@@A@@A@\ndieH@BxDfYUa``P@LBCJ[b\\H\ndeTB@@pYRf[^njjj`CBXSBinFP\ndaE@@@aJyUnX@@@pkBinyD@\nfduA@@@ILsLjm{AJ\\XOhm@@@@A@@A@\nfhy`@@@ISLjm{btjw`t@@@@@@@P\ndmvH@DAIf{VUZh@@@p[J[agdJ\nfnkA`@@N[dTRTtTTlVRbUFJlFNZmKUUUUUUT@F@TXipTeZMYw`iKWbLm@\nfig@P@@NZOHhdihhiXleDbjLUXL\\uZVjjjjjij`@`\ndeTL`HS@BLddlRPrm@@@FAXwCqJd\ndet@@DjYUX^dHbH`CAdJfx^Id`\nffsA`@@LudTTTeRdVTtLIps`ySeijjjZjjj@B\nf`ia@@E@RfuUe]gEF]z`@jjhh@LAHIPTmFmsFG^@\nf`ia@@M@RfuU[UgEZ]z`@jjhh@LAHIPTeFmsFG^@\ndmLH@@RYegXYV@@@@@pXJXYWbYp\ndmtD@@QIee^UZ``@@pXfxYWdT\ndmtL@@QTfyeQehBA@C@jXYxb\\\ndcLB@@RUR[fVQuhHF@@`\ndklH@@rJIJQQNfZjji`B\ndmt@@DjU_ZxHHj@CBXSBine^PH\ndaDH@@RYWih@H@LB@j{bI`\ngNq@@dsKSPFFu_HP\ndeTL@@QdfygFV``@@piJXYyG@\ndmv@@@RfYWEZB``@LIALJfxYyB`\ndmuL@HTDYInYtYZB@`@`\ndeVH@IAJYW~F``H@LJPj[nId`\ngFuHC\\@aJYMif@`\ndifH@HAIYexV@`@C@biny@`\ndmvD@D@dfWeYUj`@@CCdpfxYyB`\nfoA``@H@PdwJ{J|EYsP@P@@@D\ndif@pDBHjHFHrJIQEn`HH@H\ndclL@@{TivY~DeZhHB`@`\ngFp`ATiTvjhCAH|Tp\nfgA`B@N@BDifYWz\\d[Uj@H@B@@LI@Hs`eZM[dI@\ngC`HAxIKTAahmr@\ndg|@`@|DjYmUyO[j@@@@@LM@j[ae]N~Q`\ndeTD@@YIfUqehH@@LFJfxYyF@\ndeTL@@jTef_xVB@`@phj[iyD@\ndeTL@@RdfVUFVjZd@pHfF^Qp\ndeT`@@biRnY\x7FaXHB@B\ndif@PJ@H`HRnY~F``@@pXBinGdP\ndk^@@@RfYU\\]Tz@@@@@LECBinFUOdZ\ndieDPJZD@HHHrRFIYnVfi@H\ndmND@DCdfVUrjUZjZi@LFrfFUyB@\ngOp@DjWkjj`LFEcWrP\ngOx@@eJqmUTA`xlZ~P@\ngOx@@eLm]UTA`xlZ~P@\ndcnH@DAIYegzUujBHH@LNInFUwdP\nday@@@aJVYjjB@h\ndedB@@PYR[UYjjX@pILZ^HU@\ndkLF@@RUttfyenZjif@LFSBiSyG@\ndmTL@@QdfUivijdHJ`\ngGY@LDeej`LBl[rP\ngGY@BDeUj`LBl[rP\ngGY@LDeUj`LBl[rP\ndkmH`NMPbLbbbTNfXXBHf`@`\ngGY@LDeUj`LLc^JX\ndmv@@@rRJIIFUjB`@@pELJfzUy@`\ngOx@@drm]KTA`Pl^Jl\ndaF@@@RYUijVj@H\ndif@@@RYWZZejh@`\nfoAa@@D@RUfV]qZlyhH@@@@CBRJ\\DkQkNxbD`\nfoAa@@D@RYYeUuVLyj@@@@@CARJLEIVcV]rG@\nfj}a@@D@rJIQQIQKQEYSkQrUj@@`@@@@@`\ndie@@@iJYWxYB@@bK@lInybTH\ndifH@NAIe]ih@I@C@dpjx`B\ndcn@@@rRIHqIER{UT@D@FDpaUprn|c@\ndig@@@aDiyWaV@@@LJPj[nPH\ndg~DPFvpbEBLbbRfbRM\\JpAESI@D\ndeVD@JADeUeFVjjh@p[B[agdP\ndmuD@LXDRYueeVjjj@H\ndmtD`BTHaIfUma``bP@`\ndaE@@@{IHdbUUUT@XMBXUMrN@\ndifH@LAIVUxVjj`CAdJfx^Q@\ndeVH@IAJYW~F``H@LFSBinyD`\ndifD@HADfyWaZ@@@LLRayaMp\ndeTD@@QIgeQej@@@LLsayeMH\ndeT@@DjUghP`h`@pYL[agfPU@\ndeVH@LAIUeQejjj@LASBinF^Q@\ndmuH@DHDfvYYUjjj`B\ngOx@@eLvmUTA`xlZ~P@\ngOx@@eRimUTAaXcWrX\nfle``@C@Pdrrj\x7FLlmQRuAAEUTP@P\ndiFH`JpHaI[kijh@`\ndeVL@BAIR[YTYZjj`B\ndg|H`ABHRYW[ficn@BjjH@`\nfoAqB@EZ\\HDPdrnvrtYYt@EURd@FD`HpR`iFmrG@\ndk_H@FdprJJISPkatzjjiZ@H\nfoAab@GPQ`@QddebRfRpiFlm@@@P@A@\ngNy@LDeVZj@pJM_EL\nf`aQ@@DT@drllsNoMTDQT@@P\ngJX@@eKU@XYX|P`\ndid@@LddRL[jjj`CChSBkayC@\ndk]H@DdDefueFUujjjj`B\ndg|@@DjU_eZx{BAH@@BJlARne]N~EFDp\ndmvD@HADfyeQehBA@C@dXYye\\h\ngBX@@eLUTAahmr@\ndmLH@@RYiYKnVjjjh@pFLinFUy@@\ndg_@`DGPbDfUueZZ@Bjj@B\ndeVH`BdHaIfUvFBBD@H\ndaFH@LAIVUnZjh@piBinyD@\ndg^H@LAJUyfUSjhBH`@`\ngGPHAbIKUU@P\ndmtH@@rIQQQWiXBH`@pjfxUyD@\ndcOD@Ds`wHheELUPmMUT`FCTwBn|bP\ndeTH@@rJJIHmtAAP@XTALL|sJx\ngOu@E`drm[SRAalWrT\ndo}H`AMPbDfUo[Vf`@jZh@H\ndg]H`AMPbDfY_[Vz@`ij@B\ndkmH`NMPbLbbRrbaih@Jf`@pxDpjg^PX\nf`q@@@BbHRDRHQHaIXkf`bJbjb@CARB\\EKQkN}rB`\ndcLL@@G\\dTRRbOKPPTP@XRfES\\LkrM@\ndklL@@Ptfym]eVj@BP@pyLinF^Qh\ndg}B@HTDf|bfbbTThfnmA@tI@D\nfoAP@@@HR[ieUuVLyjhJBH@B\nfoAab@KPQ`@QddebRfR`iF\\m@@A@@A@\ndg~H@FCIEDhcLdLg]AP@@@A@\ndmvH@DCHhhhdYUjjj`CClJfxYyB`\nfhiA`@@Hddjrm|jIW`mPAD@@@A@\ndk~@@@RfYU_JGUN`XJJH@pDB[aeSyF`\nf`i``@E@PdwJvvoAJt{sP@TuQP@P\ndcNL@FAMRUUeUujjjh@`\ndidH@@rJJIEn`HH@LBJfGbA`\nfhyA`@@BMdTTTTTTVoMJ|xKPAAPA@@F@aRTZsoAyCP\nflu@P@@BLgHhhhhhhml^ZUytV`BB`HX@@`\ndeTL`HS@|LddlRPru@@@FETwCODS@\ndk^LPLaC@HTHrRPqQYKiWUjfYj@LJXUt~QP\ndcNH@BAIUfYgVjjj`B\ndmt@@DjU^jxHHj@CChPjFUxf\\\ndg\\D@@QInUukaZ@Bj`@`\ndknJ@HAIT|bfbbTUGV``X`@`\ndidH@@Rge^Fh@@@pZDJf{dB\nf`qAA@A@bOQBSJ{\\ktYYt@EP@P@A@\ndmtD`ATHaIe]nf`@jP@pXDpjGb]H\ndcND@NADfUyU]Zj@@@H\ndcn@@@RigVRX]fBBb@CClkae]yB@\ngCa@@duPFADV@\ndidL@@cDkkWajjj@H\ndg|H@@RVYYwySn``@@@@pTHIne]N~PH\ndmtLPNePbABDfUujZ@Be@B\ndaDh@DqnAIeZfZZd@`\ndmM@PBx@c@aJYg\\jeZdHB@B\neFAAx`bLD\ndmv@@@rQQJEJUjh@@@pdHJfxYWdH\ndmLH@@rJJIQEneX@@@@CA`rnF^Hr`\nfoAa@@D@rJJJJHqYQkNZj`bB@@`\ndklH@@RUYffSYjZj`aJ\ndeTH@@rJIJFTt@EP@XLFTpsqDx\ndo|H@@rJJIQRFIn`HJjh@H\ndmvH@DAIgfVUZ`H@@pYFxYWdX\ndeTD`HP@cIHXhdLk@P@A`UMp|PI@\ndcLD@@QIeeUgVhHH@CAbinF^Hn`\ndknD@FADfye_EV``bP@pyJ[aW^II`\ndo~D@FADfye_TUZBBIhBMX\ndg^H@LAIYVUW[jiBB@Hi`\ndkmD@NLJrQSQQITUhHbI@B\ndiW@@@cDi[WBxYjeX@`\ndev@@@rRIIHus]UUUPA`JXUMpsrH@\ndifD@B@TfYun``H@LJCJx^PP\ndo~@@@RV^UviUj`@j`@`\ndaDH`BBHRYg[hH@@LJCJ[nPP\ndif@`ABHrJJIEn`HH@LJCBinPH\ngJXLBIARFdDfjhB\ndcLHPBBHzHrJJKQFLLDDU@A@\ndcLHPBCD{DrJJKQFLLDDU@A@\ndklJ`HSNL@cIIKEDdYuZBBH@H\nfhiAb@B^BBHRYe^unXHshHH@HX@@`\ndg\\L`AWPbDfUv{ZZ@Bij@B\ndcn@@@Re[mRY]jj@B@CBXSBxYW^HC@\nfde`@@@IRmrkNyFZ\\FMUPP@@P@A@\ndk_@`LI`BDigvUrmNfV@B@bj\nfoApA@EZ\\BHeDILrk|kNV]@PMTi@ar`\ndaE@@@yJeVnjjh@pZDpj{dL\ndmvH@LAIUYVUZh@@@pELInFUyD@\ndmL@@DjYUVGi@@@`@LNpjxYWdH\ngJX@@djsBIptQxa`\ndmV@@@RUgVYjf`aJ\ndeTD@@qI[eQfj@@@LNSJ[agbA@\ndazD@J@dfWjjh@pjLInx`H\ndg^D@EAdfYewiuhJBJ@B\ndidD@@QIVUxV`@@CCFx^YAT\ngJX@@eST`XZK\\a@\ndmvD@HALbfbbQFV`HH@H\ndk]H@BxLbbbRaRX]NBA@@@B\ndeu@@@gIHhikWLMUTu@D\ndid@P@bNbDfYYa`H`@LJBfx^Q`\ndmtHPIBHVHRYfUXXBHX@H\ndeUD@FxJRVYmnYjZ`B\nf`q@`@@LrQQJIQKHbL{uAPA@@@A`iANBdkUg^y@p\ndk\\@@DjWmkiadHBjh`B\ndk]H@DXDfYYwz]MjhHB@CClhYWSyC@\ndg~HpFlI@i@YCHhhihdUtz\\DQEJPA@\ndcLL@@S\\bbTrTHru@AH@XDUMODEP\ndg\\`@@SFRYueUNvjjjj@H\ndk\\@`LhDjU^ukmLHH@@@CAXPjxYWSyF@\ndk]H`AdpqDfUmUiev@Bfd`B\ngFp@DjTujhCCKWba@\ndkLD@@SHdiDbeFjff`B\ngGP`Ademj`LBl[rP\nfhyH@@@X\\EJYnUWoEEVMyj@@@b`@B\nfhyH@@@X|EJYnUWwEEVLyj@@@J`@B\ndk^H@FAJY}e\\kSie`@`Hj`\ndieH@FxLdTReJjeZ`B\ndeVD@HADfyeFV`H@@pqNgfTp`\ndeU@@@qJYejxBHh@LJJfF^Qp\ndmuH@DXDfUgjZ@Bj@B\ndmvH@ACHhhdcFz@`j@CA`Jfe^Ig@\ndmvH@AAIe]Zf`@j`@pXBkiWbI`\ndcn@@@RfumVy]d@@@@CClIae]yB@\nfoAP@@@TRfUVu~RlzP```@ABC@\ndknDpItpdDdLdLbdLRTtEZh@a`@`\nf`qa`@H@PqInYWmQJ]yhHH@@@@`\nfbuac@HjSdD`bPqHYEHXdleDeeAR|Fj@B`@f@@H\ndeTD`HP@cIHXhdLk@P@A`UMt|PA@\nfdy`b@LPP@HrRPjJJIIDf|xJu@A@A@@D\nf`qa@@M@rQSIYQIPlxZu@AUUQ@A@\ndig@@@`Tke]nX@H@LBpfGbQP\ndaF@`B@HRYg[hH@@LBpj[bAp\ndid@@Ldbbq[`bB@C@lJaxbL\ndidD`HPOAJvUxVjj`CAlJfx^P@\ndmtB`HSBCprRSFIJUZh@@@pinFUxfD\nfHbXA@\ndaFH@BAIf]n``@@pKBknHC@\nfjsQ@@DB@dsLsKjvldIUhaJgKU@p@@@D@@D\ndnD@@DiYrbYjj`CB`aLkbDp\ndmLD@@eIYfUayVjjZPB\ndaDH@@RVU[f@@@LJcB[nQP\ngFp`AdiTvjhCAF|TP\neMBBHRYCAKd`\ndieH@HPDeYWaZ@@@H\ngOu@E`dsu[UTA`TZ~S@\ngOx`DFdrikTlA`e^S@\ndaD@@DjWZXHB@CBdpf{dP\ndmL@@DjYeVdUBHhb@LNpjXYWd\\\ndiTH@@RVYV{ajjf`B\ndmN@@@RYVuiiV@@@@@pxLkae^P`\ndml@@LdfbTJifzUZjjj`B\nfHcDA@\nfHgPAa@\nfHe@Aa@\neMBBHRYCAGe@\ngC`DAbZHRVhB\nfHbxA@\ngCa@@dtpFBVy@\ngC`HADIMTAa`mrP\ngJQHDHaIjj@`\ngC`HADIKRAaaMrH\ngJP@DivhPNAbqy@\ngJQ@@dkSBJpHVOI@\neMJAhHzB\ngJPhLQxIRuPD',rr='daD@@DiUVyjjPPGd\ndaD@@DjUZxHD@@\ndaD@@DjUZxHH@@\ndaD@@DjWjXHB@@\ndaD@@DjWzXHB@@\ndaD@D@BHBDBLBBBJBFBNBDiUVzjj`@\ndaD@P@bBbDfYvzB@@@\ndaD@P@bNBDfUzZ@B@@\ndaD@P@bNbDfUzZ@B@@\ndaD@P@qBdDfYvzB@@@\ndaD@P@qFdDfUjz@H@@\ndaD@`@BDeeVz`@@@\ndaD@`@bDfYVz@`@@\ndaDD@@IJVVfijh@@\ndaDD@@QIe\\jZjh@@\ndaDD@@YIeZn`B@@@\ndaDD@@YJZUnjjh@@\ndaDD@@qIYUnZjX@@\ndaDD@@qJYoJjjX@@\ndaDD@@qJZ_Fjjh@@\ndaDD@@yIe^f`@`@@\ndaDD@@yJYVfjjh@@\ndaDD@@yJYfnjjh@@\ndaDH@@RVU[f@@@@\ndaDH@@RVU[j@@@@\ndaDH@@RYVih@H@@\ndaDH@@RYWih@H@@\ndaDH@@RYe[hB@@@\ndaDH@@Rfu[j@@@@\ndaDH`L@HRf][jZj@@\ndaDL@@SDfUrijj`@\ndaE@@@IIf]njjh@@\ndaE@@@YIeZn`B@@@\ndaE@@@yIe^f`@`@@\ndaE@@@yIe^fjjh@@\ndaEH@DpDfYbYjj`@\ndaF@@@RVU[n@@@@\ndaF@@@RYVih@H@@\ndaF@@@RYWih@H@@\ndaF@@@RYe[hB@@@\ndaF@`NBHRYWih@H@@\ndaF@`NBPRYWih@H@@\ndaFD@DCdeeVyjj`@\ndaFH@BAIf]n``@@@\ndaFH@DAIYUnZjh@@\ndaFH@DAIeUnZjh@@\ndaFH@DAIfVfZjX@@\ndaFH@DAIf\\fZjh@@\ndaFH@FAIeZn`B@@@\ndaFH@NAIe^f`@`@@\ndaFH@NAJYfnjjh@@\ndae@@@yJeVn[jjj`@\ndaf@@@RiUkfzjjh@@\ndax@@Djuvjh@@\ndaxB@@QnR[VZY`cD\ndaxB@@QnR[VZY`cH\ndaxB@@QnR[VZi`@\ndaxB@@RnRUUZjP@\ndaxD@@KHhhbtu@@\ndaxD@@KHhhcUT`@\ndaxD@@QIUUjj@@\ndaxD@@QIUYjj@@\ndaxD@@QIeUjVBB`\ndaxD@@QIeUjZBB`\ndaxD@@QIeUjf@@\ndaxD@@QIeUjj@@\ndaxD@@QIeejj@@\ndaxD@@QIgijj@@\ndaxD@@QImUifALj`\ndaxD@@[HiDYUU@@\ndaxD@@iIijjj@@\ndaxD@@iJUfjj@@\ndaxD@@iJUvjj@@\ndaxD@@yIi^jj@@\ndaxDPDxHahaImZYiBL`\ndaxDPFxH`haIf^jj@@\ndaxDPFxLPlQIf^jj@@\ndaxDpBhHa@chaIffeZBDP\ndaxH@@RUUYf`QHh\ndaxH@@RV[jj`@\ndaxH@@RYUZj`@\ndaxH@@ReWii`QJh\ndaxH@@rJJHmUP@@\ndaxH`HALRkUZj`@\ndaxH`HALRkfZj`@\ndaxJ`HSFx@cIIJhmS@@\ndaxL@@SdfUvih@@\ndaxL@@SdfvVjh@@\ndax`@@PjRUnzZ`@\nday@@@[HiDYUU@@\nday@@@kIHbiUU@@\ndayL`BzDp@cIICdmU@@\ndaz@@@RfVjj`@\ndaz@PLBHzHRUgjj`@\ndaz@`JBHRV^jj`@\ndazD@DAdfUvih@@\ndazD@LCdeYzjh@@\ndazD@NADf{Vfl@@\ndazH@DAIeYjZ@@\ndazH@LAIUjjj@@\ndazH`BpJqI[Vfj@@\ndazH`LPHaInVZj@@\ndcL@@DiUUU]ZjejC@^QP\ndcL@@DjYYYiBHhh@@\ndcL@H@qBqEqMqDfYn]a``bh@@\ndcLB@@Q]R[e[neh@a`@@\ndcLB@@Q]R[e]nEh@I`@@\ndcLD@@EJY[WWZjB@@@\ndcLD@@GIEDTiMBUUUS@@\ndcLD@@IIf]z[hHBj@@\ndcLD@@QIUVUWVj`@@@\ndcLD@@QIe]UJfjjj`@\ndcLD@@QIgVUWVj`@@@\ndcLD@@QIge]FVh@I@@\ndcLD@@SHhdhTeSMUUU@@\ndcLD@@YJYYwEZB`b@@\ndcLD@@iJ[g]xZB@f@bX\ndcLD@@uIUfUeVXBB@aH\ndcLDPDtHaXaInUnzY`BI@@\ndcLH@@RYWZZYjjjh@@\ndcLH@@RYeZvz@`j`@@\ndcLH@@RYguRYijjh@@\ndcLL@@G\\dTRRbOKPPTP@@\ndcLL@@QTfVUV]Zjjj@@\ndcLL@@QTfVutYZ`@h@@\ndcLL@@QTfvUtYZ`@h@@\ndcLL`HQPBLddLRRTzmAA@@@\ndcLL`HS@BLddJfRtjmP@P@@\ndcM@@@eIi_Z[jjjj`@\ndcM@@@wIHhdd]JuAPD@@\ndcM@pItIAICICHiCDeDJuPAD@@\ndcMB@hDDWXeNF]yInUnzV`BF@@\ndcMD@DdMRUe]^EX@IP@@\ndcMD@LDMRUe]^Fjjjh@@\ndcMD@LtARem[~fl@bp@@\ndcMDBLHDSdf{YU]Zj@@@@\ndcMH@DdDfY}XfZjjj@@\ndcMLAHtDVISdfyW[aZ@BX@@\ndcNB@BAEuInVVFV`HF@@\ndcNBAHAEvISdfyW[aZ@BX@@\ndcND@AALbbTRbJzuAP@@@\ndcND@MADfVU~UZ``H@@\ndcNDaFePBFe^RfV^Qv`hF@@@\ndcNH@DAIf_UIfjjj`@\ndcNLAHAEbTyInUnzV`BF@@\ndcNL`NaL@HrRRqQ[RjtDA@@@\ndcO@@@JldbRTQU]UUUT@@\ndcO@@@xTjU]Znjjjj@@\ndcOLpHkb[PbAbEbDfYn\x7FijYjf@@\ndcl@@DjUg^aWP`hjH@@\ndcl@@DjYU_egX@@@@@@\ndclD@@QIe[UiiUjP@h@@\ndclD@@QIe[WiiUjP@h@@\ndclD@@SHheDhbJkkUUUT@@\ndclD@@aJVfnKfFjjjf@@\ndclD@@iJYW]rnF``IhBI`\ndclD@@iJYW]rnF``Jh@@\ndcm@@@UJfUWyYvhJBH@@\ndcmH@DHDfUyTjWVi`@`@@\ndcn@@@rJJJJJlJ{@A@@@@\ndcnD`EGPqDfUn^neX@aiH@@\ndcnH@AAJYYwhUvj``H@@\ndcnH@DCHhheBeSKkUUUT@@\ndctB@@PYRYU{Vjij@@\ndctD@@QIeWUZjjh@@\ndctD@@QIgUUZjjh@@\ndctD@@QImUUZjjh@@\ndctD@@QImUVZjjh@@\ndctD@@wHiDThmUUUP@@\ndctH@@RUgVVZijADn`\ndctH@@RV]UVjjj@@\ndctH@@RgUUZjjj@@\ndctH`HALRkUUVjjj@@\ndctH`HALRkUYfjjj@@\ndctL@@Pdf{e]jjj`@\ndctL@@X\\dTQfReUUU@@\ndctL@@jTiV[Vjjj`@\ndcvD@MADfuUUjjjp@\ndcvH@LAIVUUjjjh@@\ndeL@@Di[ernDYZjij@@\ndeL@@DjUYkfEijjjj@@\ndeT@@DjUghP`h`@@\ndeT@@DjWvifjih@@\ndeT@@DjWviifjh@@\ndeT@@DjYUXPbH`@@\ndeT@@Dj[[[ifjd@@\ndeT@@DjeUZZjjh@@\ndeT@@LdbRTm\\DBR@@\ndeT@@LdbRTm\\DBT@@\ndeT@@LdbRbmBDED@@\ndeT@@LdbTRoBuUM@@\ndeT@@LdbTRoBuUT`@\ndeT@@LdbbQwBuSU@@\ndeT@@LdbbQwCUUU@@\ndeT@P@bIbDee][j@B`@@\ndeT@p@bNBIbDfUuih@J`@@\ndeTD@@EJYU^f```@@\ndeTD@@IJVWZZfjj@@\ndeTD@@QIe]Rijjj@@\ndeTD@@QIgeQej@@@@\ndeTD@@QIgeQejjj@@\ndeTD@@QImeQej@@@@\ndeTD@@SHhdhUSMUUP@@\ndeTD@@eJ[WVz`@h@@\ndeTD@@iIYe^e```@@\ndeTD@@qIUeQej@@@@\ndeTD`AdHaIe]jZ@BX@@\ndeTD`DpHaImeQfZ@@@@\ndeTD`NDHaIfVVfBA`@@\ndeTH@@RUYTYY`@@aH\ndeTH@@RUYTYj`@@@\ndeTH@@RYVZfZZj`@\ndeTH@@RYVZfZij`@\ndeTH@@RYVffjjj`@\ndeTH@@RYWZfjjj`@\ndeTH@@RYe\\YZB@@@\ndeTH@@RYm_aZ@B@@\ndeTH@@RYm_ajjj`@\ndeTH@@RgYTYj`@@@\ndeTH@@rJJIHmtAAH@@\ndeTH@@rJQPiCMT@@@@\ndeTHPABHxHRYWZf`@f@@\ndeTH`DBHRZ{TYf`@@@\ndeTH`IBHrJJJJlLADP@@\ndeTHpACDKD[DRYf{i`bH@@\ndeTL@@QdfygFV``@@@\ndeTL`HS@BLddlRPrm@@@@\ndeTL`HS@|LddlRPru@@@@\ndeU@@@eIYVvG`BL@@\ndeU@@@eIYWVz`@h@@\ndeU@@@eIYWVzjjj@@\ndeU@@@eIYWV{`@l@@\ndeU@@@gHeDeBwT@E@@@\ndeU@@@qJYVjXBBh@@\ndeU@`Ld@aJVu~Fl@H@@\ndeUB@DpFFTfUgkfjYX@@\ndeUH@JXDiWUJjjjh@@\ndeV@@@RUYTYy`@@aH\ndeV@@@RVUenh@J@@\ndeV@@@rQQIHtpDCP@@\ndeV@@@rQQQHcMAP@@@\ndeV@@@rQQRItMMUR@@\ndeV@@@rRHqICMT@@@@\ndeV@PABPRPR[e[ij@H@@\ndeV@pABPJPZPRYf{i`bH@@\ndeVD@DAdfygFV``@@@\ndeVH@AAIfuneh@`@@\ndeVH@IAJYW~F``H@@\ndeVH@JAJUuRjjjj@@\ndeVH@LAIUeQfj@@@@\ndeVH@LAIVUVzjjj@@\ndeVH@NCIELeBpt@Q@@@\ndeVHAH@NbTfY_[hBB`@@\ndeVH`IHHaIfUVFBBH@@\ndeVH`NdHaIe]ZZ@BT@@\ndeVL@D@YrJJHjDsUTt@@\ndeVLAHAAbTyInUneh@`@@\ndeWH@DJPRY[TYZ`@@@\nded@@Dj_VfZZ@@\nded@@LdbQRdsSPQD@\nded@P@SHBDjuUZjj@@\ndedB@@PYRYWYjZX@@\ndedB@@PYR[UYjjX@@\ndedBpJxYCDKD[pRY]jjih@@\ndedD@@QIUUVjj`@\ndedD@@QIkWZjj`@\ndedD@@QInUvjj`@\ndedD@@aJVfjjj`@\ndedD@@eIffZjj`@\ndedD@@qJY]zjj`@\ndedH@@RUUUfihDRY@\ndedH@@RUUUfjhHR@\ndedH@@RUgVZjhHb@\ndedH@@RV]Ujjh@@\ndedH@@RYVYjjh@@\ndedH@@RZW^jkh@@\ndedH@@RZWvjjh@@\ndedH@@rJQEJUUU@@\ndedH`HALRkUUjjh@@\ndedH`HALRkVYjjh@@\ndedL@@PTfUvZfj@@\ndedL@@pdie]jjj@@\ndedL`@JdhDi[Ujjj@@\ndedL`HS@|DjUUjjj@@\ndee@@@eIUUZjj`@\ndee@@@{IHh\\iUUT@@\ndee@PJdLQlSHiDdUU]V@@\ndef@@@RiUVjiT@@\ndef@@@Ri]Vjjh@@\ndef@pLBHFHfHRUeVjjh@@\ndefB@LAAeIeUVjj`@\ndefB`HKad@aIf^Zff`@\ndefD@AADfUfZfjBBP\ndefH@LAIVYjjj`@\ndefL@L@YRUeVjjh@@\ndeg@@@FTjWUjjj@@\ndeg@@@JTeV]zjk@@\ndet@@DjYUX^d@@@@@\ndet@@DjYUX^dHbH`@\ndet@@DjYUZ^D`dJ@@\ndet@@DjyZkfyjjj`@\ndetH@@RYVvfFX@Jb@@\ndeu@`Dp@aIeURhYfh@@@@\ndev@@@Re[TjFP@@@@@\ndev@@@rQQJHtpr@@@@@@\ndev@`JADrQQQHyPsPLA@@@\ndevH@JCIEEDceCM@pD@@\ndevH`HX@aJVU|HYjA@`@@\ndg\\B@@Q]rJISQJHr[TDCD@@\ndg\\B@@SSRY[W[FVh@Ih@@\ndg\\B@@pSRf^Y]vzjB``@@\ndg\\D@@QIeUyT{Zjh@@@@\ndg\\D@@QIe]UTjZjjjh@@\ndg\\D@@QIgUYT{Zjh@@@@\ndg\\D@@QIge]hYZjjjh@@\ndg\\D@@QIgfVVSZjjjh@@\ndg\\D@@QIgfWzUZjZih@@\ndg\\D@@SHhdhTdeSMUUUT@@\ndg\\D@@SHhmHcDd]mUT@@@@\ndg\\D@@SHhmHhTmimUUTt@@\ndg\\D@@SHhmHhTmimUUUT@@\ndg\\D@@eIfU_Un`HJj`@@\ndg\\H@@RV^UveVj@Bh@@\ndg\\H@@rQIIQQHg]UPT@@@\ndg\\LPLi`bBBLbRTabRvgUK@A@@@\ndg]D@DdMRYe_[FVjZif@@\ndg]D@DtKrIIQIPiCJt@EJ@@\ndg]D`NV]CDRYWVyih@JZh@@\ndg]H@LlDeYeUuNj``c@@\ndg^D@L@teYee]nj`bH@@\ndg^DPKFPbNBLbbRrdJUM@AKM`Pl@\ndg^D`Ca@BLddLRRVTzm@aG@Pt@\ndg^H@DAIfVU^]Zjjjh@@\ndg^H@DAIf_UTfZjjjh@@\ndg^H@DCHhhhdhb]mTED@@@\ndg^`@@SAgHhihhhb]mTCD@@@\ndgl@P@BH|DfeUUVjjjh@@\ndglB@@RUrJIIIPiMUTuP@@\ndglD@@QIeWUUjjjj@@\ndglD@@QIeuUUjjjfBM`\ndglD@@QImUUUjjjj@@\ndglD@@SHhmHbeDuUUR`@\ndglD@@SHhmHdThuUMM@@\ndglD@@qJ[]UVjjjj@@\ndglDB@QNrJZQEIIMUMUPPt@\ndglDPDlH`xaImUUZZjji@@\ndgm@@@mIUUUVjjjj@@\ndgnB@DBcoHheEiDbuUUU@@\ndg|@P@bFBDfUoeZx{`BH@@@@\ndg|B@@Q[RYvUmgSmj`BJH@@\ndg|D@@SHieEDhcJg[T@@@@@@\ndg|DB@QNrJYQQJHrivuUUUT@@\ndg|D`BTHaIfUm]aNxHHD@@@\ndg|H@@RVYYwySn``@@@@@\ndg|H@@RYe[W[cn@`jjH@@\ndg|H`BBHRYg^U[cnB@`@@@@\ndg}@pBl@c@aPaJYgU|jgZdHHn@@\ndg~D`NTpbDfUvYj[[`@jYa@@\ndg~H@NAIe]YVfNx@J@@@@\ndg\x7F@PBWPbAbLbbbRfaSR]pPTMQ@@\ndiD@@DiUVjj`@\ndiD@`@BDiUVjj`@\ndiD@`@bDee^jj`@\ndiD@`@kDf]Vjj`@\ndiDD@@QIgUZjh@@\ndiDDB@QNR[UfjZ@@\ndiDDPBhLQlQIf_jZh@@\ndiDH@@RVUvjj@@\ndiDH@@RVvjZj@@\ndiDH@@RYuYjjBH`\ndiDH@@rIRHrjj`@\ndiDJ@@PnEInvZjX@@\ndiDJ`HSNDOAJoVZjX@@\ndiDL@@IdfY~jjP@\ndiDL@@kdiVZjj`@\ndiDLPBhPbFbLbbbeiZdHQ@\ndiDLPDp`bH|DfmVZj`@\ndiE@`ND@aJUUjj|@@\ndiEH@BxDeUZjj`@\ndiF@@@RUUZjj@@\ndiF@@@RVUzjj@@\ndiF@@@ReUZjj@@\ndiFD@AADfuUjj`@\ndiFD@BCdf]Zjj`@\ndiFD@FBdiUzjj`@\ndiFD@LCldTatjjh@@\ndiFJAHALXXgNRYvvjj@@\ndiG@@@HTeUWjjp@\ndiG@@@xTiUVjj`@\ndiT@@LdRbQrbYjjZ@@\ndiTH@@RVYz{ajjj`@\ndiTH@@ReUxRfjjf`@\ndiV@@@RVYz{ajjj`@\ndiV@@@RfU|kahDB@@\ndiV@`J@HRfU|kahDB@@\ndiVH@AAJUWaJZjjz@@\ndid@@DjUfaBB`@@\ndid@@DjWffB@h@@\ndid@@DjYUaBHP@@\ndid@@LdbRQk``b@@\ndid@@LdbbQxXF@@@\ndid@P@bNBDfUvf`@h@@\ndid@`@bDf[Waj@@@@\ndid@p@bBbAbDfYun``H@@\ndid@p@bBbFbDfYoa`b@@@\ndidD@@EIe]ih@J@@\ndidD@@EIfU[hBB@@\ndidD@@GHhdhZZ@B`@@\ndidD@@KIDhdZZfjh@@\ndidD@@QIe]Jfjj`@\ndidD@@QInUxV`@@@\ndidD@@iIYgxVB@@@\ndidD@@iJ[gxZB@@@\ndidD`BDHaIf_[hHB@@\ndidDpNDH`ha`cHhhcJZjiX@@\ndidH@@RUe^Fh@@@@\ndidH@@RVUvz`@`@@\ndidH@@RYVZZ@B`@@\ndidH@@RYWZZ@BP@@\ndidH@@RYm^Eh@@@@\ndidH@@RYm^Fh@@@@\ndidH@@RYm^Fjjh@@\ndidH@@RZU~Fjzh@@\ndidHPBBHFHRYgVzB@`@@\ndidHPBBHzHRYgfFBB@@@\ndidH`ACDrJIJFf`@d@@\ndidL@@HTfYun``H@@\ndidL@@IdfYoa`b@@@\ndidL@@KdfYynZej@@\ndidL@@RdfVwaZii@@\ndidL@@rldTTUkjjj`@\ndidlAHJfAAbTyInW[fiY`@\ndie@@@EIYW[n@B@@\ndie@@@EIfW[hBB@@\ndie@@@GHhhdVz@``@@\ndie@PLx@a@cHheDZyjjh@@\ndie@`BDHaIf][hHB@@\ndieD`JXaBPRYgvzejX@@\ndieH@JDDiWTjjjj@@\ndieH@LDDeYWajjj@@\ndif@@@RUe^Gh@@@@\ndif@@@RVUf{`@`@@\ndif@@@RVUv{`@`@@\ndif@@@RfU~Fjjh@@\ndif@@@RfWzXBBP@@\ndif@@@RfWzXBB`@@\ndif@@@rRJEKaj@@@@\ndif@PABHJHRYgVzB@`@@\ndif@`ABHRYWZZ@Bp@@\ndif@`BBHRYgVzB@`@@\ndif@`NBHRYeVFBC@@@\ndifD@D@TfY|fZjj@@\ndifD@J@TiWTjjjj@@\ndifDAHAHeNR[e^Eh@@@@\ndifFAHALkab\\yIgnxVij`@\ndifH@AAJYYhZjj`@\ndifH@DAIfVifjj`@\ndifH@DAInUxVjj`@\ndig@@@xTjU^njjj@@\ndkLB@@SSR[UUYjjjX@@\ndkLB`HSBCprRSEQIYjjjh@@\ndkLD@@QIeUoVjjj`@\ndkLD@@QIeWUVjjj`@\ndkLD@@QIe]Ufijj`@\ndkLD@@QIe^Uvijj`@\ndkLD@@QImUUVjjj`@\ndkLD@@qJ[]UZjzj`@\ndkLFPHSaTpBJBLddJTbNVjVj@@\ndkLH@@RUUUUfjjhHR@\ndkLH@@RVUU^jjjh@@\ndkLH@@rJIJJJrjjjh@@\ndkLH@@rJJQUIIjjjh@@\ndkLLHBi`bL|MbCbDeZuUjZjj@@\ndkLLHLi`bB|MbCbDeVUUjjjj@@\ndkLLXJXPdDdLdEdMdCdLbdLrfdjffj@@\ndkLL`@JdhDiYWUjjjj@@\ndkLL`@idhLdTTJTTjjjj@@\ndkLN@@PiWSR[kVYjjfX@@\ndkM@@@UJeUUZjjj`@\ndkMDHLve@HZPzPFPrQSJQVZfjihHR@\ndkN@@@RUUUVjjjh@@\ndkN@@@ReUUVjjjh@@\ndkND@CALbbRbJRZjjj@@\ndkNH@JAIgeUzjjj`@\ndkNL@BB]RYyVZjjjh@@\ndkO@@@Y\\dbJRRTjjjj@@\ndk\\@`@BDifUWGUN`@@@@@\ndk\\D@@QIenf^WSZjjjh@@\ndk\\D@@SHihheDQgSZjjjh@@\ndk\\H@@RYeg]itvi``D@@\ndk\\H@@RYeg]itxH@@@@@\ndk\\H@@RYm[Watv`@@@@@\ndk\\H@@RfU{WatzB@@@@@\ndk\\H@@rJJZIQDYtv`@@@@@\ndk\\H`ABHRYVvvftx@Jjb@@\ndk]@pLh@a@c`aIegmRkSZj`@P@@\ndk]H@DHDfYyWImMjhHA@@\ndk]LbLjDd@birRPqSIYntuj`PH@@\ndk^@@@RfYU\\]Tzjjjj@@\ndk^D@DBTfYYwimMjdDB@@\ndk^D@DBTfY[W[mNfhHB@@\ndk^HPNHJrXaIf^UvGS``B@@@@\ndk^LpB[a@HpHkprQPjSIILPjjZjj@@\ndkl@`@SLddTlTUgZhBH`@@\ndklB@@Q]RY[WoaZjjZ`@\ndklD@@QIeUY]Mjjjj@@\ndklD@@QIe]URijjjj@@\ndklD@@QIgfU}MjhD@@@\ndklD@@QIgge]Mjj@@@@\ndklD@@QInUvnEh@Jh@@\ndklD@@SHhdhTdjYjjjj@@\ndklD@@eJ[Vvfz`@jh@@\ndklD@@qJ[[m]Njj@@@@\ndklDB@QNR[V[WSZj`@@@\ndklDpLHHbOA@aIkVuVzZjjj@@\ndklH@@RYeZUn`HJj@@\ndklH@@RZWyWSjj`@@@\ndklH@@ReYUfSj``h@@\ndklL@@STf^UvFVh@J`@@\ndklL`AtpbDfUoVih@Ji`@@\ndklLpDppbHBMbLbdLRTtEYX@bP@@\ndkmB@hTDtxeNVS{HihhdUAehBBX@@\ndkmD@DTCRUfWtYV@`e@@\ndkmD@DdCrIJJIPxUV@bE@@\ndknB`NaLt@cIIKEEeiUZB@h@@\ndknD@LCTeYeUTzjBB@@@\ndknD`Ca@BLddLRRVgUhDHpHZ@\ndknD`LIPBDiZuYdzzjfh@@\ndknLPASBBH`HrJPjJKI]ehHB@@\ndknL`LaA@HrRPjIKY]VdDB@@\ndmL@@DjYYVgeBHhb@@\ndmL@@DjYeVdUjjjj@@\ndmLD@@QIe[VfeVj@B@@\ndmLD@@yJY~WJeZYijP@\ndmLH@@RYVuiiV@@@@@@\ndmLH@@RYVuiiVjjjh@@\ndmLH@@RYegXYVhH``@@\ndmLH@@RYiYKnUjjjh@@\ndmLH@@RYiYKnVjjjh@@\ndmLH@@RfYUxYVjifh@@\ndmLH@@RfYUxYVjjjh@@\ndmLH@@rJJIQEneX@@@@@\ndmN@@@RYVuiiVj`@`@@\ndmN@@@ReZ}IiVjjZh@@\ndmN@@@rQQJKFnFP@@H@@\ndmN@@@rQQQQVneP@`@@@\ndmN@`J@HrQQQH{JFZA`J@@\ndmN@`JADrQQQH{JFZA`J@@\ndmNH@BAIfUmiEX@@@@@\ndmN``DkaT@aIefUneVjVjP@\ndmO@@@SdfVUrjUZ`PH@@\ndmT@D@dDdLdJdFdAdIdEdLbdLadjjj`@\ndmT@D@kDdLdJdFdAdIdEdLbdLadjjj`@\ndmT@p@bBBEbDeYyzjjh@@\ndmTB@@RiRYyVZje`@\ndmTB@@SiRYyvZji`@\ndmTB`HSBCpRjuUZjj`@\ndmTB`NFU@HReUfjjY`@\ndmTD@@QIUUUjjj@@\ndmTD@@QIeUyjjj@@\ndmTD@@QIgUUjjj@@\ndmTD@@QImUUjjj@@\ndmTD@@iJU]Vjjj@@\ndmTH@@RUUUYjj`aH\ndmTH@@RUgVYjf`aD\ndmTH@@RUgVijf`aD\ndmTH@@RUgVijf`aH\ndmTH@@RVUWjjj`@\ndmTH@@RZWvjjj`@\ndmTH@@rJQEJJjje@@\ndmUH@JXDiUYjjjh@@\ndmV@@@RUUUjjj`@\ndmV@@@ReUUjjj`@\ndmV@@@RfWYjjj`@\ndmVD@DAdfUufijh@@\ndmVD@LA\\bRbdUjjj`@\ndmVL@IAARYW[Zff`@\ndmWH`DphCpRjyfZjj`@\ndmt@@LdbRdSjP`jH@@\ndmt@H@qAdIdEdDfYVfz@`j@@\ndmt@H@qAdIdEdLbbRadih@Jh@@\ndmtB@@RUR[e^[fjjZ@@\ndmtD@@IIf]yn``J`@@\ndmtD@@QIe]TjZjjh@@\ndmtD@@QIem\\YZ`@`@@\ndmtD@@QIgYVUZh@@@@\ndmtD@@QImYVUZX@@Hr@\ndmtD@@UIfuwaZ@B`@@\ndmtD@@aJye[ahBB`@@\ndmtD@@qJ[[VUjh@@@@\ndmtD@@yJUe^Uj``@@@\ndmtDPAdHc`aIe]jf`@e`@@\ndmtD`JTHaIYe_ihHHP@@\ndmtD`LTHaI[e\\Yi`@`@@\ndmtD`LxLQI[f^Ui``@@@\ndmtD`NTHaIe]Vf`@j`@@\ndmtDpDpHb@aXcHiCDeafV@B@@\ndmtH@@RUfueVZ@@BD`\ndmtH@@RVUv[j@Bh@@\ndmtH@@RYYf[ffjj@@\ndmtH@@RYeZ[hBBh@@\ndmtH@@RYeeZVfjj@@\ndmtH@@RYeeZVjjj@@\ndmtH@@RYeeZZjjj@@\ndmtH@@RYe~[ffjZ@@\ndmtH@@Rfuu[j@BXBAP\ndmtH@@rJJIHhfZZjh@@\ndmtH@@rJJIJEn`HJ`@@\ndmtH@@rJQPiXYjjjh@@\ndmtH@@rJQQHxYjjih@@\ndmtHpEBHZHfHrJIJHrn`BJP@@\ndmtL@@PdfueYUj`@@@\ndmtL@@YTf[gqehHB@@\ndmtL@@hTef^~e``b@@\ndmu@`ATIAIe[^n`BNp@@\ndmuDPHhfBHFHRYf~kjfZj@@\ndmuDPHhfCDFHRYf~kjfZj@@\ndmuH@DTDf^Uqej@B@@\ndmuH@DdDf^UaUj@H@@\ndmuLAHTDZISdfygQehHB@@\ndmv@@@RVUv[n@Bh@@\ndmv@@@RfUWzZjjj@@\ndmv@@@rQQJEJUjh@@@@\ndmvD@BADfueYUjjj`@\ndmvD@DCdf^YyUjB@@@\ndmvD@NADfVyyUjB@@@\ndmvD`La@BLddlTReUhB@@@\ndmvH@BAIVUwaj@B`@@\ndmvH@EAIeYfnZZjx@@\ndmvH@HAIffgejjjh@@\ndmvH@JAJUuTjjjjh@@\ndmvH@LAIUfVUj`H@@@\ndmvL@EAFR[f_FV``H@@\ndmvL@FAIR[ev[fjjZ@@\ndmwLPHkbYPbAbLbbbfezZfZf@@\ndndD`LH@aJZ\\hjijjj`@\ndo\\B`HRUALrRQIIIHjjjej`@\ndo\\D@@QIe]UUZfjjh@@\ndo\\D@@QIe]UVZfjjh@@\ndo\\D@@SHhdddhbfjjjj@@\ndo\\F@@Savtf^UVYjjjY`@\ndo\\J@@PYWHheDhbdfjYjj@@\ndo\\J@@QiuIe[YoZfifT@@\ndo\\L@@ptimyujjjjj`@\ndo\\L@@rTie]mVjjjj`@\ndo^@`L@HReuUUZzjjj@@\ndo^J@JAIW\\bbTRTtqZjifh@@\ndo|B@@RgrJYIQQIGSZZ@`hBL`\ndo|BHDrwBH`HzHNHrJPqQYIRUe``JX@@\ndo|D@@QIeUyemvij@`@`h\ndo|D@@QIe[e~WVjijf`@\ndo|D@@QIgfUYuvj``h@@\ndo|D@@QImYeeVvjjjj`@\ndo|D@@SHhmHbhdk]jjh@@@@\ndo|D@@qJY]YWmzjjB@@@\ndo|DpElH`hbXcHhhidbeFFBBJj`@@\ndo|H@@RV^UviUj`@j`@@\ndo|H@@RYfV{vF@bJj`@@\ndo|H`EBHRYWUnjZ@Bij`@@\ndo}@DDhJs``YBYAY@yByAyCHheEiEYBjfjjjd@@\ndo~@@@RfUYw~V``hj`@@\ndo~@@@RfUYw~Vjjjjh@@\ndo~B@GAEoHheDdhbiMjBBb`@@\ndo~BpIx[\\H``cXcHhheHe]FVBAXi`@@\ndo~D@AADfUvUwSZf`@h@@\ndo~D@LALbbTTJTLWVj`@j@@\ndo~H@DAIVYenEU`Hbj@@\ndo~L@DA]rJJKIJHhfZjjZj@@\neFA@HoBJ@\neFABHiBL@\neFABPiBL@\neFACDlRL@\neFBBHc@@\neFBBlc@@\neFHBJ@\neFHBL@\neFJBhHh@\neFJHbHh@\neF`BL@\neF`BN@\neMB@HRZ@\neMB@Hch@\neMCAD`aBHu@\neMFI@bMP@\neMHAIX@\neMHAIh@\neMLRRWhv@\neM`AId@\neM`AIh@\neM`AIx@\neM`BN`@\neMhDRV@\neOB@Hcfh@\neOHBNZ`@\neO`BNZ`@\nfHbd@@\nfHcp@@\nfHdP@@\nfHd`@@\nfHdp@@\nf`a@`@@FrJIJQQNKTXuUUTu@@@\nf`a@`@@HrJIJQJqIN|uUU@@@@@\nf`a@`D@HQvQSRIIFIIwfjjh@@@@\nf`aA@@@ILjjjj{sUUUUT@@\nf`aA@@@ILsKWRpTADUUP@@\nf`aA@@@YEEDcEEHc^ZZjZj`Pq@\nf`aA@@@YEEDdTddf\\`HJjj@@@\nf`aA@@@YEEEETddfB`Hbjj@@@\nf`aA`@@HqdTRTTbUrMYj`j@d@@\nf`i@A@@AG@cIEEEDedkSdcZ]PA@AE@@@\nf`i@a@FRAD^bDfUm[WirRkN`BJ@BH@@\nf`iA@@@ILrmtvQcAV|uUUUUT@@\nf`iA@@@YEEEEDhdYFTzwf`@``H@@@\nf`iA@@@YHhedhh]HHUhujjjZjj`@@\nf`iA@@@YHhhdXdhhHehujjjZjj`@@\nf`iPB@N^@DYHhhhdldZ\\d[Sj@H@Hx@@@\nf`iQA@B\\|@HpDISLzsnRdcN}TaAQUD@@\nf`q@B@@^BULrjkj\\[uPA@D@@@@\nf`q@`@@^RVYYywbkNXH@BA@@@\nf`qA`@@B|dsLrozkF\\t@P@D@@@\nf`qA`@@H\\drsJkrkF|u@@@P@@@\nf`qA`@@HidTRbRQbREIwfjZh@D@@\nf`qPA@AZ@DPBLdRbbbTVJgV}T@PP@@@@\nf`qPHAHV@cGIF]zDxzt~{HhmEDdThJRmMUUUST@@\nf`qPQ@INxJw`QA@cHhheHeUDqQgPPKELd@@\nf`qPaABLEh@Q@HIKIEvnrQJJJIQXj][uPAA@@@@@\nf`qPb@EZ]xDQdRTRTraTxIVj`@iib@@\nf`qa@@D@rJJJJIZHjl{sUTEDD@@@\nf`qa@@D@rJJJJJFHjl{sULEDD@@@\nf`qp@@@Hpds\\rj~gV|uP@@@@@@\nf`y@@@LdbbbbbfkEBMIuo@@@@@@@@@\nf`~@@@DiUUUUjjjjj@@\nf`~@H@@Hdhug^rJZJIQJFMUTts@@@\nf`~@P@@Ht[HhdhbeLhuUUMT@@\nf`~@P@@HuYIe]UVvijjfP@@\nf`~@`@@BrQQIIQSVUUUUU@@@\nf`~@`@@HRYuUUUjjjjh@@\nf`~@`@@HR[UUUUjjjjh@@\nf`~A@@@YEDeEDcEJjjjj`@@\nf`~Ab@@Dhb`rQJJIEJJUUUUU@@@\nf`~Ab@@TXb`RfYwf^jjjjh@@\nf`~aK@JPQaVcV]xG`KpexYIIUDeHiFjjff`@@\nf`~a`BH@QbDxyIgUUUVjjjj`@@\nf`~ab@IPQ`G`eUnoLsUUUUP@@\nfbe@B@@QBSLjojjheUAAEUUP@@\nfbeAP@@Hu[rSKJkK~lcMPPTUUP@@\nfbea`@D@XgHhhdddcDedFKUUUP@T@@@\nfbm@A@@IdIAJkfYUU|tWICfj@@@@@@@@\nfbmAB@H@SDjnYeUWsQ\\dNZh@@@@@@@@\nfbmAB@H@SDjnYeUWsQ\\dNZhJhJhhh@@\nfbmAB@H@SDjnYeUWsQ\\dNZjjjjjjh@@\nfbmA`@@HsdTRfbTbtjRejshiZjjj`@j@@@\nfbmPa@LN``@QhHrRPqPiSISIJL{r\\kU@DT@A@@@\nfbmp@@@XXeL\x7FLjsobe`iruUPP@@P@@@\nfbu@AP@QAHadPJHeDZbGQ@XaLQfHrJJJ[PrZJ[TyzMLuUULuP@@\nfbu`q@OPQbJ\\`B@aFRRVIJYJYZPTcVV`@@Je`@@\nfbua@@M@rJQEJKJJIKNBgMUUSTBA@HR`\nfby@`@@HRYuUUUUZjjjjj`@@\nfby@`@@HR[UUUUUZjjffj`HTv`\nfby@`@@HR[UUUUUZjjfjj`PT`\nfby@`@@HR[UUUUUZjjjjj`@@\nfbyAb@HHpCpRkUYeU}Zjjjjj`@@\nfbyP`@LR@aIemUUUujjjjjj@@\nfbya@@D@rJJIIIHiIIMUUUUUP@@\nfbya`@D@UkHhhdddbddduUUUUU@@@\nfb}@P@@H]gHheDheEeD\\jugQRgKUUUUUUU@@@\nfb}AA@K@qLxbSLl|}z{ARtYtTp@@QL@P@@@\nfde@@`@QAHa`QhHrJJJZIKPi\\EjpXpQAU@@P@@\nfde@`@@HrIJQQZQXiRljw`mUUUUUT@@\nfde@``ARADDb@qDXaIf]UUUYqVg^``Jh@h@@@\nfdeP`@DNA[HhhhlmMCDRbc^BuPPPuTP@@\nfdea@@H`rQQQIRIZHbmHq`tEAUETT@@\nfdi@`@@BrQQIJHyII\\UPPTUUP@@\nfdi@`@@HRYUUUUPqZjjjjj@@\nfdi@`D@HQrS\\jjrnFKUTuA@@H\\`\nfdiA@@@ILjjjjhXmUUUUT`aE@\nfdiA`@@BCdbbRTTbWTxjjjjjjh@@\nfdiA`@@HLdrjjjjabuUUUUT@@\nfdiA`@@H\\drjjjjabuUUUUT@@\nfdiP`@DVAGHdiEBeCHbkRuP@UR`@@\nfdiXpCHLDXLPHUiwhRcfRJ]]{lbfbbbbbblkMADMCT@@@\nfdi``DF@Pcdfye_UTRf``ajj@PU@\nfdia@@D@RYguUURLZjjjjj@@\nfdiaB@JDAbYEEEIkHhT`qjZjj@@@@\nfdiaPBH@QYwhRclbfbbRLTTpiM@PKLt@@@\nfdq@P@@H]yIeWUUmZjjjfh@@\nfdq@`@@HRYWUUUVijjjj@@\nfdq@`@@HR[UUUUVjjjjj@@\nfdqAa@HRTALhDYIHddiDeTjjjVjj@@\nfdq`@@@ITnjjjmUUUUU@@@\nfduA@@@ILsLjm{AJ\\XOhm@@@@A@@@@\nfdy@`@@XrQQSPzIKJXiYuUUP@UP@@\nfdyA@@@IKLjoSWAF|pDEUUQ@@@\nfdyA@`I@bBQGhbLQdTTVVfbRaYqpXHBh@b@@@\nfdyAB`M@qBXcLPVHkDRYf{}e^RCFBHbh@@@@\nfdyAP@@BUhNQQQQQQDqIdgAZYjZZj`@@\nfdyAP@@BtFNQQQQQJKGISk^Z@HH@h@@@\nfdyA`@@BudbbRTQrbRxhLZBBb`@@@@\nfdyAb@FAb@HrQQJVIKJJDihuRl@ESP@@\nfdyPPBHZ@aShRcdfyVyuwdmFZ@HZfh`@@\nfdyP`@KN@cHihdliEDcpPXm@AUMTP@@\nfdy`R@KPQcp@cIIKDeLeBdJQgKP@@QT@@@\nfdy``@A@Pdrrr\x7FZjLFKTEA@@@@@\nfdya@@D@rJJIIHiQIBTFKUUUP@P@@\nfdya@@D@rJJJIGIQIRTFKUUUP@P@@\nfgA@B@@XbSLrjyFRMjuP@@A@@@\nfgAP@B@BAHirRJIJHkLUpQkAPP@A@@@\nfha@B@@IbURjjjmUUUUT@@\nfha@P@@HiKHhmDeDTdfjjZjh@@\nfha@R@HHehBYddbRRbbSUUULuT@@\nfha@R@HHpPG`eUjjsLuUUUU@@@\nfha@`@@HrJYQZQHiQjjjZZ@@\nfha@p@@HhkQdfV^yuVijVjhDAP\nfhaAP@@HEirSJwkO[TuUTr@@\nfhaAp@@HYqV`iLkWl{mSUSSP@@\nfhaAr@HHpSQk@|DjmUUUVjjjjh@@\nfha`@@@IRlrj~uUUUUP@@\nfha`B@B@bDeUUUUYjjjjhDHP\nfhah@@@\\ExJTjjjjmUUUUT@@\nfhi@R@NJmx@QdbbbbTVadgFCPAAAD@@@\nfhi@a@AFADAbDfUmygZL]z@BhHB@@@\nfhi@a@OAADBBLbTTRbfQtyiUj@B@bX@@@\nfhi@b@HH@DYIHXhhddSiuoKP@P@P@@@\nfhi@c@BFADRb@qFQQQIIPq[LD{tDDPPD@@@\nfhiA@@@ISLwZkf|xMUP@@@@@@\nfhiA@@@YEEDhdcLeKW`m@dP@@@aR@\nfhiAP@@PIqRTmMJ{yoNCUUUUUT@@\nfhiA`@@HBdwLl|zKSoMA@@PP@@@\nfhiIP@DXxHDc^CdTRbfaTVUNZltuUUUL@@\nfhiP@@@ArJJIEJIJYgKN`HJ@B`@@\nfhiPA@B\\@DXBDif]YybTdZiBBbj`@@\nfhiPC@IF@|PBDAFRIJJJIQXz|xMT@PP@@@@\nfhiQ`BHL@`LIQrS\\roZxeN|tDD@A@@@\nfhiQaBOAQbpHb@QzP}dTabbTVeTmF]K@QBrd@@\nfhi`@@@ISLwZkf|xMUP@@@@@@\nfhia@BH@AtIRYeV]WEjwjP`@BH@PP`\nfhiqP@DXxBQoArJIQSPjKJ`mVZZjjjf@@\nfhqA@@@ILkKjj~BuUUUUP@@\nfhqA@@@YEEDhbdddsdAAUUT@@@\nfhqP`@DD@YIeYU_UQfjjjjj@@\nfhqh`@NFmxHJYHihhdkLhIUADQML@@@\nfhyA@@@YHiMEiEbdHtcN}UUUUUU@@@\nfhyA`@@BMdTTTTTTVoMJ|xKPAAPA@@@\nfhyq@@B\\DAIfV]UudeZ|FBBaZeJ@@\nfle@`@@LRfVVW]|QgAhJ@HBF@D@p\nfleA@@@ILwJkttJU`m@PUUUD@@\nfleA`@@HbdssLjoyoNBuT@@@T@@@\nfleP`@DA@eIVUue]^B]yX@J@BT@@@\nfleP`@DA@eIVUue]^B]yZjjjjV`@@\nflea@@D@RYeUmU|RgAZjjBBJ`@@\nfleac@FV|DD`RPEHYEEEMDbeierVcPQDTluD@@\nfleiR@AZlFLDXhdGaddeRRbbRtQk^BuUURmSP@@\nfli@@@LdbVRRbbjTjjjjjj@@\nfli@RBKN|DBX{`|eTjjkLmUUUSMP@@\nfli@`@@HrJIJHiIIIIjjjjjh@@\nfli@`@@HrJKRIEJKIQjjZZihDEH\nfliAb@@Dhb`ReeUU]Vjjjjjh@@\nfli`@@@IJjjjjkUUUUUT@@\nfli`@@@IJjjjjkuUUUUT@@\nflmA@@@YEEEEDeDTbrRgF}EKPLQTKTR@@\nflmAB@K@qDfYYy{uXJVcNbf@@BI`@@@@\nflu@B@@^BULsJjozCZOdu@@@@@@@@@\nflu@B@LTBUJssZktDzHTaAP@@@@@@@\nflu@`@@HrJKRJKRKEISmNCEjjjjjjh@@\nfluP@@@ArQQQQII[ERdmNmxH@@@Bh@@@\nfluh`@DXUipAYEEEELTdedrVcN|uUMSURt@@\nfluqB@AJMDFHdrmrlzmNZ\\EL@PuA@a@@@\nfly@PB@HbeGI{HiiBddddeBTZjjjjf`@@\nfly@`@@XrQQISHqIYQwjjjh@J`@@\nflyAP@@DExNQQQPkIIJYTXtuMUSU@@@\nflyPa@L^bdDQjHrIJJIIHiSQQjjBBJi`@@\nfly`P`LHEIpH`LaFPSHYEMEEDlbeIjtu@pQUP@@\nflya@@D@rJJIIIHiIIVfjjjjjh@@\nflya@@H@RV[WUUTTih@Jjj`DHH\nflyaR@IBlzJPUfQQIYSJJHjTY@AMTuL@@@\nfoA@@@LdbbQbRbDkQfjijjh@@\nfoA@@@LdfbTrbUipufjjjfhDCH\nfoA@P@@Ht[HheMEEEQJeYjjjZi@@\nfoA@R@HHqp@QddebbfRtmV\\mA@@@@@@\nfoA@`@@NrQQQIISDVeVh@@BH@@@\nfoA@`@@VRfUYu^JLz``@B@@@\nfoA@`@@\\RVUoeVBly`BH@@@@\nfoA@b@KN@DISLjohmJMP@@AP@@@\nfoAA@@@IRlrjzkF]U@@@@@@@\nfoAI@BDDXhCIUNQQQSQIHdyYsURE@P@@\nfoAP@@@NRYWVUzLMZ@B`@`@@\nfoAP@@@NRYWVUzLMZjjjjj@@\nfoAPPBHZ@aShRcdfyVywdmFZ@HZd`@@\nfoAQC@DL\\BHiDVbLbbTTJRtYqVhB@@i@@@\nfoA`P@L@IrRRllrkhugLuSMThHHP\nfoA``@D@ydTRbTLRIFFluR`PT@@@\nfoA``@L@QdTVbbbblmV\\u@A@@@@@\nfoA`b@LTX@HRe{VYSVlznZjjZ@@\nfoAa@@A@RfuueV\\lz`@jjb@@\nfoAab@KPQ`@QddebRfR`iF\\m@@A@@@@\nfoAab@NPQ`@QddebbfRtmV\\mA@@@@@@\nfoAqB@JLDPDQdTTTtlRWAV]RuT@B@@@\nfoQ@@@LdbTrdrLYs`cVZjjjjh@@\nfoQ@`@@HRYVvvQRuXsfiZjjY@@\nfoQ@`@@HrJIQJKPjReFlyjjjij`@@\nfoQ`@@@YHhhheDbKTkF]P@PPD@@@\nfoQa@@N@rQQQQJKGbiVLz`BB@D@@@\ngC`D@DPHRfh@\ngC`DADZHRVXRP\ngC`DADZHRVh@\ngC`H@DIKT@@\ngC`HADIKLIH\ngC`HADIKR@@\ngC``@dfZ@@\ngC``AdeY@@\ngC``Adej@@\ngCa@@dkH@\ngCa@@dkP@\ngCa@@dmH@\ngCa@@dmP@\ngCa@@dsP@\ngCa@@duP@\ngCaHH@bNt@@\ngCaHL@aIZ`@\ngCaHLHaIZ`@\ngCah@mJAIj`@\ngCd@Adej@@\ngCe@E`dsP@\ngCh@@dmH@\ngCh@@dmP@\ngCh@@doH@\ngCh@@doP@\ngCh@@duP@\ngChHD@aIU`@\ngChHLHaIZp@\ngCh`LDdsP@\ngCi@DDeV@@\ngCi@DDeZ@@\ngCi@LDej@@\ngFp@DiTt@@@\ngFp@DiTvjh@\ngFpHADILimSP@\ngFpL@DXHHPeJfuU@@\ngFp`@dfTujh@\ngFp`@df_Ejh@\ngFp`AdigVjh@\ngFq@@drfmU@@\ngFq@@drftm@@\ngFq@@drfuM@@\ngFq@@eLzts@@\ngFq@@eLzuU@@\ngFqHJ@aJUMjj@@\ngFt@ATiTvjh@\ngFtHE`DILikUP@\ngFx@@eJf`@@@\ngFx@@eJfuU@@\ngFy@JDiTvjh@\ngFy@LDiWFjh@\ngGP@DiVV`iJ@\ngGP@DiVj`@\ngGPBADJPtaXcHiCUP@\ngGPD@DPHReZj@@\ngGPDADFHRYjY@@\ngGPLADFHlPdrsTID\ngGPLADFHlPdruT@@\ngGPLAbGDlPdruT@@\ngGPP@cTfyi`@\ngGP`@TfYi`@\ngGP`@TfYj`@\ngGP`@dfUjP@\ngGP`@dfUj`@\ngGP`@df]jP@\ngGP`@dfuiaM@\ngGP`@dfuj`@\ngGP`@dfyj`@\ngGP`ADkjj`@\ngGP`ATeVj`@\ngGP`ATeej`@\ngGP`ATf^j`@\ngGP`ATiVj`@\ngGPhH`DYIHUi@@\ngGPhMQDIK]U@@\ngGPlEaDPHlQdTaeh@\ngGQ@@djuT@@\ngGQ@@dkUT@@\ngGQ@@dlmT@@\ngGQ@@drmT@@\ngGQ@@druT@@\ngGQ@@dsML@@\ngGQ@@dsMT@@\ngGQ@@dtuR@@\ngGQ@@eJttHh\ngGQDBHbqBSKTp@\ngGQDJH`qBSKUP@\ngGQDJLPxbSKUP@\ngGQDLHbqBRwSP@\ngGQDLHbqBRwUP@\ngGQHDHaInfh@\ngGQHJ@aJUjh@\ngGQHJHaIUjh@\ngGQLJIARFdLbdMU@@\ngGQ`@bdwMT@@\ngGQ`@jdsmR@@\ngGQdEb@bRFRRVV`@\ngGQh@ZjAJVjh@\ngGT@Ade[j`@\ngGT`EPTfyi`@\ngGX@@dj|tHd\ngGX@@dkUT@@\ngGX@@dk]L@@\ngGX@@dtuV@@\ngGX@@eNuT@@\ngGXHD@aIUVd@\ngGX`hEIWIMkU@@\ngGXhhZ@bS^Rmjf@@\ngGY@BDeVj`@\ngGY@DDeUZP@\ngGY@DDfYj`@\ngGY@HDefZaH`\ngJP@DknX@\ngJPDADFHRYj`@\ngJPDADFHR[f`@\ngJPH@DIJuP@\ngJPH@DIKUP@\ngJPH@DIRuP@\ngJPHADILth@\ngJPXHlPDQzt@@\ngJPXHlPiQzt@@\ngJP`@TeZh@\ngJP`@TfVd@\ngJP`@TfZh@\ngJP`@deVd@\ngJP`@deVh@\ngJP`@dfVh@\ngJP`@dfvd@\ngJP`@dfvh@\ngJP`Adizh@\ngJPdEaDPHRZe`@\ngJQ@@djsBJ@\ngJQ@@dkU@@\ngJQ@@dls@@\ngJQ@@dlu@@\ngJQ@@dmS@@\ngJQ@@drt`@\ngJQ@@dru@@\ngJQ@@dsT`@\ngJQ@@duU@@\ngJQ@@eKS@@\ngJQ@@eKU@@\ngJQHBHaIfj@@\ngJQHBHaInZ@@\ngJQ`@bdvu@@\ngJQhHlOAJmj@@\ngJT@@TeZh@\ngJT@@Te^l@\ngJT`E`TfVh@\ngJU@HPdkU@@\ngJX@@dkU@@\ngJX@@dkt`@\ngJX@@dku@@\ngJX@@dms@@\ngJX@@dmu@@\ngJX@@eKU@@\ngJX`LDdru@@\ngJY@BDeZh@\ngJY@BDeZl@\ngJY@BDizh@\ngJY@DDefh@\ngJY@DDfvd@\ngJY@LDeZh@\ngJYHCabIKTp@\ngJYhCE`DQzt@@\ngKP`Adi\\Zj@@\ngKX@@eKcUP@\ngK\\@ABeKcMH@\ngNpB@DSppPPaJ[Zj`@\ngNpJAbJHLaYArBS]UU@@\ngNpLADXH\\PdjmUP@\ngNpP@jtfvZf@@\ngNp`@TfYZZ@@\ngNp`@dfUZe@@\ngNp`@dfUZf@@\ngNp`@dfUZi@@\ngNp`@dfUZj@@\ngNp`@dfWZfDL@\ngNp`@dfWZj@@\ngNp`@df]Zj@@\ngNp`@df^Zf@@\ngNp`@df^Zj@@\ngNp`@dfvZj@@\ngNp`@tf]jj@@\ngNp`@|bdQjj@@\ngNp`ATf^jj@@\ngNp`ATiUjj@@\ngNp`ATiVjj@@\ngNphDqDYEHcUR@@\ngNphH`DYIHTmJ@@\ngNphJpDIRkUT@@\ngNphJqDIKMTl@@\ngNq@@dlkUP@\ngNq@@dl}MPb`\ngNq@@dr{Vpa`\ngNq@@dr}Vpa`\ngNq@@dsKSP@\ngNq@@eLuUP@\ngNq@AdTbMTpa`\ngNq`@fdskUP@\ngNq`@jdrkUP@\ngNq`@jdssTp@\ngNq`AVeJmUP@\ngNq`AbeMmUP@\ngNqhAbjAJyZj`@\ngNr`ijpiJyImfi`@\ngNt@@TeVzj@@\ngNt@@|dbJjj@@\ngNx@@djmUP@\ngNx@@dsuUP@\ngNx@@eJmTh@\ngNx@@eJmUP@\ngNx@@eRmUP@\ngNx@AddQUUP@\ngNxDHHaQBS]UU@@\ngNx`DFdskUP@\ngNx`LFdjmUP@\ngNy@BDf^jj@@\ngNy@DDfYZi@@\ngNy@FDeYjg@@\ngNyHJPDIJwTt@@\ngOp@DjWkB@@@\ngOp@DjWkjj`@\ngOpH@DILkW@@@@\ngOp`@dfUMZj`@\ngOp`@tiguif`@\ngOp`@tigujj`@\ngOp`ATeekZj`@\ngOq@@drm[ST@@\ngOq@@drm[UT@@\ngOq@@drm\\@@@@\ngOq@@drm]UT@@\ngOq@@eLnmLt@@\ngOq@@eMN]UT@@\ngOq`@ldrikUT@@\ngOqhHl@cIIBjujh@\ngOt@@tjWkjj`@\ngOt@ATiUkjj`@\ngOtLHPDXHhPeLq]UL@@\ngOx@@drm\\@@@@\ngOx@@drm]UT@@\ngOx@@eJqh@P@@\ngOx@@eJyh@P@@\ngOx@@eLmXD@@@\ngOy@DDfYKZj`@\ngOy@JDiWMjj`@\ngOyDEQDDHRYXnZZ@@\ngOyDLpDHHRY\\ujf@@\ngO|HDVHaIeZx@@@',sr='fHfXAa@\nfJ@FD\neOHBNZ`pge@\neFhHba@\ngFy@DDfXujhB\neFHBJFE@\ngFt@ATiTvjhCAbKF`\ngChHLHaIZ`H\neMhHchLJyH\neFB@JcAaGJ@\ngGPH@EIJmU@P\ngGPHAbIJmU@XTQX|e@\neMBBlRZCAKd`\neMABHXaIhH\ngJPDADXHRUj`LBHmrD\ngJQhHl@bOV`LH^S@\neMHAIdLF^P\ngCa@@dkHFBVyH\ngC`HABQz`H\ngCaDL@b^BTt`P\neMJDbDfP`\ngC`D@DXHRUdB\ngGQhHl@cIHTmPFBMy@\ngJXHD@aIUj@pHVOI@\ngGX@@eMUTA`Uc^P@\ngChDL@aABSM@XHKdp\ngOx@@drm\\@@A`plZp\ngJX`BDdru@P\neMC@thabHzB\ndaDD@@QInXjZjh@`\ndid@@LdbLTifjj`B\ndeTH@@RUYTYY`@@aKChSFxYyE@\ndaD@P@bNbDfUzZ@B@C@`pnxbT\ndeTHPBBHfHrJJIHlLDDP@P\ndaD@`@bDeeVz`@@B\ngFp`@TizJjhCCSGbU@\ndidD@@yIYVXV@H@CBhpf{dB\neFJHbHpP\ngO|@AFeVm]UTAaUcWrP\ngOy@FDiguie`LMj~ID\ndaD@`@bDfUjZ@B@CB`SJ{dL\ndifH@DAInUxV`@@CBdinGdD\ndaEH@HpDeeVz`@@B\ndeVD@AADfVuFVijh@phj[iy@`\ndifH@HAIYexZ@`@B\ndifH@JAJ[gxZB@@CBdJf{dB\ndifH@HAIYW[j@B@B\ngOx@@drm\\@@A`Qj~ID\ngOr@Ajti]qZY`H\ngF|@AbeJfuU@P\ndmN@@@rJJIQEneX@@@@B\ngJX`DBdru@XKGdP\ndid@`@qDeYWaf@@BH\\NABinGdP\ndifD@H@Tee]nh@H@H\ndeVD@LBTeegXV@HP@`\ndaF@@@RYWih@H@LJCBknP`\ndie@@@aJyV[f@B@B\ngGY@JDeUjpLDmrP\ngFt@AdigUjXCAF|Rp\neMBBHRZCAGe@\ngC`HADIKTAa`mrP\nfHcdA@\ngJX`HLdmU@P\ndaz`@@SFyIeYjf@LJAL[nQP\ngNtDLpDHHR[UjhB\ndiTH@@RgeXSaj@B@CAhJfx^P`\ndew@@@pldTTJVTLmP@P@XUaMt|`P\ndiUH@HPDiUWBxZVeh@`\ngNq`AVdlmUPFEfM_DD\ndaxL@@[deiZjh@pXHpf{dT\ngCaHLLQIZ`LLInQ@\ndedBPLinCDKpRUZvjZh@`\ngNplLPDSpPPdukUPFFE_H`\ngJPL@DSpPPdju@XXK\\TH\ndiDDpLH@bOA@aIiUZjh@`\neMIDBKpRYCqH\neMXIDf``\ngG]@DZDfuiPLEkrH\ngGY@JDf]j`LLl^R`\ngJX@@dlu@XZX|PP\ngNxHF@aJZzjPH\ndazD@LADeUffhHr`\ngGQHJLQIUjdCCBKbq@\ndaxD@@QIgUjj@LBrf{dD\ngNy@BDf]jj@phbuxbp\neMXIDfP`\ndiGL@DK`hTfV^ii`B\ndmvD@E@dfYwVzB@j@C@PpjxYT\ndmvL`BaL@HrRRjIJUVjjh@`\ndaFH@NAIeVf`@`@phLInyB@\ndiGD@JxPQIeUZfX@`\ngCi@DDej@ppfyD\ngCa@@dsPFBV@\ngCd@Adej@ppVyH\ndiFD`Li`BDenvjZ`CA`aLxP\neMC@HoABDe`pQyP\ndiDDpLH@bOA@aIkUZjh@`\nfHdpAa@\nfHa@A@\ngFy@JDigVjhCCSGbU@\ndaF@`L@HRe]pjjj@LFBDJfyG@\ngChHL@aJZ`LLHnS@\ndaFD@DCdfVRiji`CCDinQ`\ndaGH@DK`R[e[fii@LLPfyE@\ngOtHLPDYHhckSM@XXI|a@\ngNqhHl@cIICej`H\ngNphJqDIJmSLHf\ngJQ@@dju@XZK\\a@\neMABHYAIhH\ngJP`@TeVhCAQ\\VH\ngCahHlOBNtAaAqK@\ngGQDLHbqBRwUPFEDQoI`\ngJT@ADjzhCAQ\\VH\ndazL@BANR[UZj`CBdrf{dD\ngJX`LHe[U@P\ngNx`LDdssUPFFq_IP\ndaz@@@ReUjj`CC`aLJnyC@\ngNx`LFdjmUPFCDQkyL\ngChHHOAIj`H\ndeUH@JdDin]xZB@`@`\ndieH@BDDfY}n``H@LJpjX^P@\ndaE@@@yIe^f`@`@pHLKnHe@\ngOq@@dlvKUTAaeWqP`\ndid@p@bBbAbDfYun``H@H\ngOy@FDiguie`LMc^IL\ndaDh@DInAIf]nZiX@p`nIe@\ndigH`LH^@HRf_ljfYh@`\ndie@@@EJ[W[j@B@CBlJfGb@`\ndaFH@NAIe^f`@`@pILknHA@\ndieH@BDDfY}n``H@LBpj[b@H\ndeUD`JXiCDrJJJXlMKUL@P\ndaED`LJDCpRjw[fjj@LLinxfD\ndaDH@@RYUih@H@LBCB{bHp\ndaDH@@RVU[f@@@LB`j[bYp\ndmuD@FDDR[f[eV`b@@H\ndaDD@@yIe^fZVX@pSJxbD\ndcN@`LCDRUgeUvjh@@@`\ndk^@@@RYWYVftx@H@@@H\ngO|HEfHaIeZx@@B\ndeT`@@pjrQQIFTpDEP@P\ndif`@@pj[IEEEZxBH`@pPfy@`\ndid@p@bFbAbDfUfn`BH@H\ndaF@@@RYUih@H@LBCB{bHp\ndmuD@JDBRY^YEZjif@H\ndifH@AAJY}rjY[`bf\ndaE@@@yIe^f`@`@pKBknHB@\ndaxD@@QIeejZ@LLJfyG@\ngC`HAbIMLA``nS@\ngJQHH@aJmj@ppQyL\ndaxL`HS@|Dj}fjX@`\nded@@DiUWeiZCHTZ\\IBDpjXYyG@\ngGU@CPdsmJA`e^S@\ndeU@@@aJWeQfZ@@BHlNSJ[agdP\ndmu@pFTH`h`XaIf[oi`bH`@`\neMPBchLF^P\ngGU@DPdrmTAaecrT\ngN}@DZDfVZj@prqxjp\ngGUHEhOAJmZhCAF|pV@\ndmND@DBdfV]RZUZf@@@LBSagdJ\ndev@@@RfV^nFP@@@@LFPj[ayD`\ndcnH@HCHhheEbprl@@A@@P\ngFu@LPeLftu@XYF|f@\ndiT`@@rnRfUjEnBA``B\ndmLD@@IJ]YVDeZj@B@B\ndcnH@DAIYegzUujAHH@H\ndmL@@DjYUVGi@@@`@LNpjxYWdH\ndcn@`N@HRYeevz]`@@`@B\ndcn`@@rfeJY{]kadHHZR@H\ndevH`LX@aJWY\\HYiZZd@`\ngC`HADIKTAaaMrH\ngNpDADXHRV^jhB\ngJPXHlPDQztAxlP\ngNqHLHaIYzj`H\ngGQDJH`qBSKMPdX\ngNq`@jdvsTpFBsyD\ngGQHJHaIYfdRL\ndaFH@NAIe^f`@`@pXDpjx\neMaDBKpRVB\ngOx@@eJqmUTA`xlZ~P@\neFA@H`bLFE\\`\ngKP@Di\\YZ@phbq@\ngJPhIaxIVmPFDODD\ndcLL`NWPbDfUuZf`@jX@LNALJat\ngN|HEb@aIevj`H\ndaE@@@aJyUnx@@@`\ngJQ`@bdru@XS\\a@\ndayL@DhByIeuji@LBSBkdL\ngJY@DDfzhCCSGbB@\ndmVD@JADf^Uvjjh@`\ngJXdIbHaABRuJA@\ndiDDPNDHc@aIUVfjXHb`\ndefHPFDHc@aIUUiji`bJ\ndiEL@DpByIf^ZjX@`\ngNy`LETeUZZDs@\ngNx`BFdskUHFBVxcP\ndmLH@@Rge]aNFh@J`@`\ndeT@@DjU_k``b`@pFDpjXYyG@\ndmNH`Jd@aJYW_JxZA@j@CB`IaWdH\ndmM@@@[IEDhhZXU@@B@@H\nfHdxA@\neM`AIxLI@\ndeVD@DCDenUFVh@@@pZLinGdR\ndeVD@D@dfVuFVh@@@`\ndif@@@RfU~F``@@pYLJf{b@H\ngOx`FDdrikUTA@\ndeVH@IAJYW~F``H@LFSBinyD`\ndig@@@aDiyWaZ@@B@h\ndco@`LK`BLdTTRRITntpTA@Pe@\ngOx@@drm\\@@A`Pl~Ht\ndaE@`LH@aIYZfijd@`\ngOu@LPeLimMTHf\ngJP`@dfvhCCKD\ngKP@Di\\Vi@pLVOH@\ndiVH@BAIfUInFjjZ@H\ngOpH@EILkW@@@P\ngJPDADFHRYj`LBHcrX\ngJPHAbIKUPFBDyeb\ngNthLXaxYIHTuTA@\ngNxdMVLP~BRkUS@P\ngCd@AH}PFBVyH\ngCd@ADkV@pdxe`\ngGU@MPdllrA@\ngJPLADHHLPdwSBJ`\ndeVH@IAIe]ZZ@Bh@LAALJnFP\ndidD@@iJ[gxZB@@CBdJnGdL\ndaFD@FCdig|jfV`bf\ndaE@@@YIeZn`B@@piLiny@@\ndaEH`Dq`BDfUjyjfPC@`SNyE@\ndieH`Dq`BDfUfnZii@H\ndaFH@BAIf]n``@@phLJfyG@\ngFxhMD@cIHXZmTA`c^P@\ndaFH@BAIf]n``@@phLInyE@\ndifD@N@TfUvfZVZ@H\ndeTL`HS@BLddlRPrm@@@FEYS\\OHd\ndmtLPHS@BEBLddlRVFUh@H@H\neMPBchLD^T\ngJPDADFHRYfaIXXH|f@\ndkOL@Dhpg\\bbTTLVZjjj@H\ndcLL@@gTfYe]aZYjf@H\ngNp`@df]Zi@pvMyF\ndmtHPBBHfHRYeUXXHHh@LFCJxYyB`\ndaE@`LX@aIYZfjZd@`\ngGTHE`DILkU@XDKWdH\ndeWD@Li`QImenEjZi@H\ndcOH@DWPRYyWQej@BP@`\ndg}@@@mJYeU|]Tz@@@H@B\ndcND@LADf^YZUZ`HH@H\ndcnH`FDHaIe[gkev@@`@@H\neMbDBDfp|`\ndcMD@DpBRYgmUujh@@@`\ndmuh@DJaePRUeYxZ`@h@H\ndcNd@DJadMrIJIJE\\MP@U@A@\ngChHH@aJz`LDEqS@\ndeVH`BDHaIf]vzB@h@H\ndeU@@@eIYVvG`BL@H\ndcM@pEtIAICICHiCDedLuP@R@D\ndkmH@JTDeVVutvjh@@@`\ndmw@`Ds`BDf^YyUjB@@B\ngGYHMQHIJmT`XJKbq@\neFhHcA`d\nfoA@R@HHqH@QddebRbrPeV\\m@D@@@A@\nfoA@R@HHqp@QddebbrRTeV\\mA@@@@A@\nfoA@R@HHpx@QddebRfRpiFlm@@@P@A`sEFBT{bMF@\ndaE@@@yIe^f`@`@pILJnHG@\ndmuD`LVD@HrREQIXYV`@`@`\nf`i@@@LdbbbTRVHeZ][uHAD@D@@P\nf`i@@@LdbbRRlRSI\\D{qAHT@D@@XJpRgIZMYwnHPH\neMCBthabHzB\ndk\\H@@RfU}WJxZA@fXBIh\nf`iQ@@AR@drnrjmFJt{t@Du@@@@XR@cAJRM[wHN@\ndmM@@@qJY{WJeVj@B@CCdrfzUy@`\nffc@H@@\\eYtRurJJIQPpjYQYLxkR\\m@qAUUUQ@A@\nfmo@H@@B}GKYkrJJJJJIY[EQJKIbmNlGhv`BH@Rjjj``@`\ndk|@@LdbbbRQKauS`@`@`@H\ndcND`La@BLddJTrRzmT@@@XMaMpkqIt\nfc\x7F@H@@\\ddoU{rJJIQQXsIYJIQYLxhpXcftCDP@EUUUA@A@\nfewAP@@Fbt^QQJJJIRI[RKYr`mA}eMVfjjjjjjjj@B\nfheP`@BJ@GHhhdhlhiVRxHuc^ZejjjYh@LNXIsQk^yAp\ndcmH@EtDie_[JxZA@f`@`\nfhy`a@APP@HtDYICDeLeLerVc^Bl@QP@D@A@\nfoQP@@@VRfYe]Z\\d[S`@@@H@@CCaFBUhsnHyX\ndco@@@PTfyVwiWV`BJD@`\ndig@@@aDkYWaZ@@@LJPj[nI@`\nfbmA``BLbCDubNqLxfQQQQJYRqZGdeVBfZfi``bX@B\ndg|L`HS@BLddlTRbLj]kP@@@@FGXpsiwrE@\nflm`@@@ITssJjnsdk^RFHP@@@@@@@D\nf`i@`@@DRYfyU]`mNmyi`@@B@@LN\\dhug^yCP\ndk\\B@@zSrJJIQPenWV`X`h@LLFUyfLX\nedZPK@@@FAEG@dnaec`X\\bbbbbbIbRbTrbJffW@fefUUssPSDQUUUUUUTT@A@\ndmvL`NaL@HrRRqQZUV``@@`\nfa{@a@K]@DNdLdTtbRLRbLfVuAJtFMVuUUUUURsU@AaxAJLxJRcVBgIZ|QA@\nfew@c@OS@DXB@rFRJQZQYFIQFSK[bcVSghzjjjjjjefj@B\nffsA`@@VkdTRTtRabrTRhqQoARUijjijjjj@CArLTxJRcN}GIZ|`d\nfa{@P@@VkwHhdiheCEdheKQbc^BdkSUUSUUTuP@P\ndmL@@DjYeVdU@@`@@LFpjFUxc\\\ndie@@@aJyexV@`@C@binxdB\ndk^D@IAdfYYwz]MjTHB@CBjE]ObYH\nf`ih`@LRt{pAISK[NzRbmV]UUPHEP@FCHDipWnHPX\nfnki`@DTxIPOMrJIQQKYQQIIEgIJSWIVjVZ`hJJb@B\nf`iQP@DX@IQoYEEDeEeBf\\uYwfjffjj`@`\ndetB@@kirQQIRyS]UUUPAaTXPsqDX\ndieH@BDDfYun``H@LLrny`DH\nfoAP@@@XRf^uu\\Tdij`@fXACU@\ndeUH@JDDinUzZBA@@pIBZ^Ip`\ndeUH@AdDimW[j@BP@pIBknId`\ndig@@@pldTRaifij`B\ndmN@@@rRJKQEneP`@@@CCdrfFUyG@\nfb}@B@@AFQQQJQIHqZIgEV\\FNZjjjjjjj@B\nflu`P@@`T[vQQQQQQQIR|EjKdm@DQ@pP@A@\nf`ip@@@V}dbbbbRrQirQmN@@@@a@@B\nfc\x7F``@D@wdTRrbfdRQfRdrvtxLRufmjjjjjjjjjj@CCjLTYpRmFl{pXiKUoQsWodB@\ndmtL@@x\\bbbTUZViVf@H\nfoA@`@@NRYWVUzLMYiY`@hAAcasAJRTYwLHyh\nffcA`@@EjdrnsLjomF^SGKRsP@@AT@@P\nfdy@P@@^CEIe]YVvhpufef@Bf`@H\ndmtL@@QTfyeQehBA@C@jXYxb\\\ndg\\B@@SSRYYYyVvhJA`@H\ndeUD@DpFRUVTYZZZPcJ\ndeVH@IAJYW~F``H@LJPj[nId`\ndk^@@@RfYU\\]Tzjjjj@LKBDpj[ae]L\ngJQHBLQIVi@`\ndieD`Dqa@HRYVZyjfX@`\ndaDH@@RYWih@H@LLrny`HP\ndg^D@LADf^YVyUj@`j@B\ndifH`FDHaIe[kh@b@B\ngGT@Adekj`LD[rX\ndaD`@@pjRfUi`HH@LH{fHS@\ndeTh@DiiAIYmQfj@@@H\ndeVD@NBTfUuifefX@`\ngGYHL`DIMlu@XHwbF@\ndaxD@@QIeYjZ@LBpf{dT\ndcNL@D@mRY^UyUj`@`@`\ndeVh@LKadDimY[j@B`@`\ndmuD@ITDR[e]xV`@d@LBJf{bHh\ndmuH@DpDf[mYUj`@@CAj[ae^Q`\ngOp@DjWkB@@LMc^ZI`\ndcNH@DCHheEDbnmPT@@F@hUMproHt\ndmuL@DHJUIeeTYZijT@`\ndeVH@IAIfu~Eh@H@LJpj[nQH\ndmuD@DpERYyWFVjjj@H\nfgAp@@@XEdbbTTrLiI`mFBBhea`@pYSdmFmrB@\ndiW@@@pdieZfxPHJH@`\ndiW@@@rdiefa[``hH@ppf{bHH\ndev`@@pjYJYejxY@bJH@pPYxc\\\nfgA@@@LdbbbTRoIBMjp@@@@@@FDlTYpTeZmrA`\ndk|H@@RfU{WJx]N`PJjH@`\ndew@@@rdifYj^DHJ``B\nfgAP@@@BrQQJESITXJQk@PT@A@@X\\IPRmFmrB@\ndg|L@@ildTRbrJQTJtEAEL@D\nfoQH@@@XhiJYmg^YpRcVBHJiXX@H\ngOy@LDeYMjj`H\ndet@@DjYUX^d@@@@CAbinF^Hf@\ndie@@@EIe[ih@J@CBdrnGd@\ndmNH@HCHhheDVzU`@@@@LFCJXYxgJ\ndeVD@LBTeegijfjd@`\ndk^HPNHHbXaIf^UvGS``B@@@`\ndclL@@GTf[VwiWV`BJH@pHjy^Q`\ndaEH@DHDfURijZ`CAF{bI`\ndg}H`LHPBDigUm\\h{ifd@H@LAABe]N~Pp\ndaED@LhDRY[Ifjf@H\ndev@PF@HdHrQQJEEPsTlmPA@\ngJPhLQDIKTpD\ngJPhHPDIUmHFDGDl\ngJXhCL@aJyf@`\ndo~L@M@iRYg^ufzB@jj`@pLLJnFUt{\\\neMACDXaIhH\nfjs`@@@ISLjmvj~JBtjp\\iKP@@@@@D@@A@\ndmtB`HSBCprRSFIJUZh@@@pinFUxfD\nfbm@P@@BBeIfYfUWybm^mEh@b@aF`@B\ndclL@@HTfYm]aWViB@`@ppiWfUv`\nf`qAP@@LDivQQQQQRk[`mFZBX`j`@H\nfoQPB@F\\@DYHheBeLdRdeV]Th@@D@@X\\@RfcV]qBI@\nfhypB@F\\T@HrQQJEJIIXeIZ|FiPBB@`@B\ndg\x7FH@LiPRUYYWESnj@@@@@`\nfdeIb@LLDhwh`BLdTrbRJbTOARTxM@PMUUE@AaHBJRu[pX|`x\nfdeP`@E^@{HhhhhhdeBpV`vbt@Q@LD@@XLyhu`qxaW`\ngOx`FJdlm[MLAyib\ndk^D@NBdef^ukmMfi@B@B\nfb}@P@@HM{HihheDeEdbIVk^BgKP@@PT@D@A@\ndidL@@RdfVwaZii@LHKfMp`\nf`i`@@@ISLrj\x7FSdkZ\\@@@DD@@D\nfhyP@@@VrQQQQIYHrgIFtx@@@BJ@@B\ndg}H@DxDfVyVyO[Z`@@@@H\ndcl@@DjYU_egX@@@@@p[J[agaHRz\ndcl@@DjYU_egX@@@@@pYLJngaLJz\nfdyH@@@P]yJVYU_Ud[Uf`@@Bj@D@T\ndeVH@DAIgeQej@@@LJSFx^IT`\nfnsPR@FJtZw`AFRJQQEJIVYQIXYrUVuUUSLt@E@@XN@cAJ\\TXJ\\ejt\ndg}@@@aJVYU^Svv`@@@@`KCj[ae]yaGX\ndazJ`JaLK`BLddNRuR@P\ndmvh@HJfTLbbbdSZZfji@H\ndaDH@@RVU[f@@@LL`fyfUp\nfhyA`@@HBdrrkN~RdcN|uA@@AP@A@\nfdu@@@DjYee]}faRlGtP@@@@@@@@puS`eZMYw`qyC@\nflm@@@LdbbbbbVNVxhUc^bd@@H@@@@@CCUNRUhsoAbgdF@\nfjcA@@@YDhhhhdeElcqVgVcdm@@@@D@@@@P\nflm@@@DjYeeo\x7FyHQm^bd@@@B@@@@CCUNRUjsoAbgdL@\nfduA`@@TCdbbTVbfbLIPQmN}F``@@BH@@H\ndeT`@@aIRge_aV@B@B\ndif@@@RfU~F``@@pxDpj[nPH\ndmND@BA\\bbbTUZ^EjVih@pSayfTp\ngCaHLHaIYaIXHSbV@\ndcLD@@uIfYoXVfZi`CANWbUH\ndmtD@@eIfUTUjBB@@pDHJfxYxfJ\ngNy@LDeVjj@phQkxi`\ndg^F@D@nt{RUefuFVjjjj@LMSJ[ae]N~Q@\ndae@`LH@aJYTj[jZjPCC@RnHw@\nf`ipB@L\\D@HrQQPsISIDXkSoUL`@@P@A@\ndk]D@BXDR[ee]ntvf``H@H\ndk^D@M@dfYmUXUMjP`R@B\nfgA@`@@VRfU{WqS`mFhD@@h@@`\nfoQA@@@ISJkZ~J\\eYu@aA@P@A@\nfhyh@@@XIQVRJJIIZEKLyISo@TEP@P`@P\nfdeI`@LZCDDeYHhhhlhblbTM[pZjjhDBh@B\nf`iH`@LR]x@diemg]IQVkNjjhDBh@CCdBTxHwnHQh\nfHahAa@\nf`q@`@@^RYWUe^cKN`@f@B@DNVB`HpRbmFm{bNB@\ngGP@DiVV`hipJqoDH\ndeTH@@RYWVf`@j@CC`SBhYyG@\ndmu@@@QInUwaZ@BP@pxDJfz^Ph\nda{@`Dp`BDfUvjXHj`\nfoApP@DXxBQgYEDhihUCPVkMMUUTp@X\\hpRcV]qGM@\ndmM@@@{IEEEEZzU@B@@@LBHYWbTp\ndcmH@LXDee[UnWZ@@@@@`\nfoAQ@@NB@drnkJtYYt@Dp@@BGJ\nf`qQ`@DXAKrSLj}klyYsUUH@T@A@\ndclL@@YTfYetngV`hD`@pJag^Ic@\ngNx`LDdvkUHFAqkyD\ndif@@@RYWZZ@BP@piLJnx`B\nfhi`C@I@dDRFICHiCDeMhdaJ|Fj@H`@@@H\nfhia@@I@RfuuYWYqwj@BX@H@PEP\nf`qh@@@XIQfRJJKZJEJgG^ejj`@`@LADYIVcV]rG`\ngC``AdeZ@pdxe`\ndg|d@BE[CDeenUyT{Zj`PH@H\ndk^h@DX]LDf[e]xUvj`PJ@CB`riOdP\nfoAh`@BBUYpLIKW\\kleFluU@`T@A@\ndmu@@@EIYWYnX@J`@pxLJfe^Q@\ndaE@@@aJyUnX@@@pHj[nIF@\ndaDH`NCDRYWih@H@LBALkbEp\nfdyqP@DXxBUoQrJIQSQYQPtDYsSUUUML@D\ndg~H`NX@aJU{YWBNzVZ@B@B\ndaE@@@aJyUnX@@@pPjxTXw@\ndeVD@J@TinUzZBB@@`\ndcMD@JDErQSQIE]MA@e@A@\nfhipb@LBCA@@cIIBhhddmmNmyZ`@@B@@H\ngOx@@eLmXD@AaUcV\nfoQ@@@LdbbbRQrYHRkN@@`@@@@LIXIPRmFl{dN@\nfoI`@@@IRlrj|DTxjqgUP@@AP@A`jBFBdkQkNy@@\nfdu@@@DjYee]}faRlGtP@@@@@@@@pubgEZMYw`qy@P\nfmoA`@@HWdTrTTtbRLrTfVrk^CdhymUUUUUUUUU@AauFBTYrRmFl{pXyKUoQsV\ndifH@AAIfU[hBA@CB`Jf{bXH\nfoAP@@@TRfyWm^RlzP``@@@CBQJLdkQkNxaG@\ndmuD`IVD@HrRFIKKaV@BP@`\ndeVH@DAIgeQej@@@LBSF{fTL`\nfde@`@@DRYg[VU~BLxLViZjB@X@CCfBTyiwnDeXLP\nffsA`@@HjdkJvmk\\oAZMxJRm@AUUUUEP@XNISdeZMYwhirWbHU@\nfa{A`@@HzdrmkZvmrrUYtTeZuP@UUUUQT@D\nfoAQ@@KN@eLrj\x7Fbthu@@@D`@D\nfhy@b@K^@DISLsJntyIq`t@PPID@@XR@rRmF]xOHB@\nf`ia@@A@RYV{UVgEZ]z@Hf`@@@H\nf`yp@@@PudbTRbRbQqRVeNmzZ`@`@`@B\ndknD`La@BLddJTRVtuj``@@`\ndmuL@DpFEIeY~nZifh@pILe^Qp\nf`i@`@@VRYfYU]`eNMyh@`AB@@LNTyKQg^yAP\ndcnD`La@BLddLTJULnkU@A@A@\nfoQ`@@@ISLrkiJRMiu@A@DP@A@\nfoQP@@@LRfV]uZ\\djsjjfh@`@CAPHHIQfcV]r@`\nfoQPB@HH@DYHddheBe``iV]RuJ@E@@P\ndknD@FBTieenGZB`h`@`\ndieD`JXaCDRYgvzejX@pHLi`\ndcND`La@BLddJbRrzmPP@@XMS\\LkqLt\nfoAQ`@EZ@JVQQQQQIWLTZsT`tAP@D\ndcN@@@Rfye~f`Hb`@pzfxYW^HB@\ndg^D@DCdefVUUMjBHb@B\ndg^H@LAJUyfUSjhBH`@`\ndif@pDBHjHFHrJIQEn`HH@H\ndid`@@pjrQQIFf@`h@LDx^XaL\ndcN`@@pjYJYe}k`Hbj@B\ndid@p@qBqAqDfYun``H@H\ndeTL@@jTef_xVB@`@phj[iyD@\nfoAp@@@P\\eKLjorMjsP@@A@B@KBQJLxJRmNyBp\ndeT`@@pjrQQQUMpEAP@XDUCOHX\ndmLh@DkeAIYe]neZhDB@CCBF^HD@\ndk\\d@Dki@|bbTRQR[aejeZf`B\ndeu@PLX@bPaJWY\\HYiZVh@`\ngJ]@EbDfVdCqX`\ndg}@@@aJnYU^Svz`@@@@CARinFUt{yD@\ndcML@DpFEIeY{kfjYj`B\nfoAQ@@KN@eLrj~bthu@@@E@@D\nfoA`@@@ILkjrmFV]@AL@@@ar`\ndaFD@JCdefZyiZ`B\ndclD@@EJY}erevfVfiBJlFpje]xbL\nfoA@`@@VRfum[V\\Uj`@@JP@B\nfoA@@@DjU][VgKNBAJ@@@PiXZ`cAJLdkQk\\`x\ndaFH@HAIYUnh@@@phHJfxf\\\ndeV@@@rRJFICMPD@@XLfTwCrI@\ndk]@`FD@aJY}e\\kSif`@`@`\nf`qQ@@DX@drlrj~gV|uUUUUP@P\ndg}@@@aJVYU^Svv`@@@@`K@Z[ae]obDX\ndmwD@LxPQIeVvUZjZd@`\ndg\x7FH`NW[@HRfum]XYV`BFiH@pXLIewbHX\ndk^H`Lt@aJWYW\\JUiX@J`@pxD[ad~Q@\ndieH@JxLbTTQkfej`CAFGbPP\ndifH@AAJY}rjYY`bj\nfhiA`@@Hddjrm|jIW`mPAD@@@A`kEFBTZsoAyB@\nfgA`@@@ISLrotyHvk@@@@@@@XLYIVcVy`gA@\nf`q@`@@HRUfYU_Sk^Zh@@@@@LELxJRmFl{wDPp\nfoQAB@E@BDiegUteARlz`RB@H@@`\ngGX`JDdjmVA@\ndmtL@@RTeVUaUj@H@C@jXUydYH\ngJX`LDdju@P\nfjs@@@LdbbbbbbfIQxhSiFmGIP@@@@H@@@@LM\\dkQk^bgI^PB\nffkA@@@YDhhhhdeEmE^JuztPiKV`@@@@@@@@@`\nfbc@@@LdbbbbbbQQsEBMKuhir@@@@QE@D@D\nffsA`@@VkdTRTtRabrTRhqQoArUijjjjjfj@B\ndmM@@@iJYewJEYB`R@CBbinWbCH\nfb}H@@@TMYJYewyUWEAJ]yNYB`RZ`B@A@U@\ndiTH@@RfU|kahDB@C@biaxb\\\nf`iQ@@L\\@dmKZzhiJt{sUTu@D@@P\ndg\x7FH@DWPRUe[mzSmh@ajH@`\ndiW@@@rdiefa[``hH@pQnybDH\ndcm@@@sIEDeBeSKhD@@@@XYpkrdiit\ndieH`HHPBLdRbQrjYi`B\ndklF@@pUttiinwZZjjjh@`\nfbu`R@@zM[pHcHhheDeDeNdpTcPDQSTuQ@A`HFJRlxJ^Hcd\nfde@P@@BUYIfYfVwXKWgQZ@H``b@@H\nflu@P@@BBeIfYfWgvJtztV`BH@dh@@pypVcVbgdO@\ndk\\B@@HSRYfu}aWViB@h@LJKiT~QP\nf`iA@@@IKLl~krRmN|p@@@@@@D\ndmM@@@eJYYvfEP@@`@B\ndeUH@LXDeYgXZjYX@`\ndefJ`JaLFP|LddjRcUTpA`rXUMH\nfbc@@@LdbbbbbbejwMB]Hu`ir@@@@@@@@@FFnBehuoAbgOHJ@\nfdm@@@LdbbbbbfjSCBUIuoAb@@@@AP@`A@\ndo|D@@eIfUwU[hBAif@siXz\ndklD@@SHihdhYNEh@Jh@LFPjWSxgB\nfb}A@@@YDhhhhhdhb^ZMyrXyh@@@@@@@@H\nflmA@@@ILroJ}jQ`iV]EKPPA@@D@@D\ndk~H@NAJUmmRkatzVd@J@B\nfgAa@@N@Re[UUIPTcVijeif`@`\ndcNL@M@iRYg^vzB@j`@pdLJnFUt\ndmtL@@SdfVUyUjA@@B\ngFp@DiTvVhC@qX|Ph\ndif@@@rRJEKaj@@@LBSF{fEP`\nfoAp@@@P\\eKLjorMjsP@@A@B@K@QJLyIVg\\PJp\ndk]D@HDMrJJJJHiaTx@HB@@H\ndeTH`NBHRYWVf`@j@CB`SJgbDH\ngGY@DDfUj`LLc^S@\ndknJ@CCNgTieY_hZjjjx@`\nfhiAP@@XyKRTrlovmA^CUUUP@P@FAhDipTmFl{p^HPp\ndeVH@BAIemQfk@@@LFbfxYy@@\nfhyp@@@NBeSMrnjpRkF|D@@@Q@@A`kENBejsoA@\nfleq@@JBBAIYe_e]nR]z``R@Bh@PyP\ndclD@@{HhheEBtkl@D@@@XTGCJ|sFt\ngFx@@eRqUU@P\ngFx@@eSQUU@P\nfoAQ`@DX@pRSJs|kSegMTs@A@@X\\QaVcV]rG@\ndk^L@DBmRYVuvfeVj@Bh@H\ngNs@IcPdmmMHD\nfoAqb@BTYIS`RBSLnmnsakTmTuUP@P\ndaEH@DHDfYVyje`CAJ{bXp\ndieD@DHFRYf^EjiX@`\nf`q@R@HHpP@QddarbbTQtYwej`@@@@B\ndeTL@@J\\bbbRKBuKS@FBUwDq`\ndcLDPBtHbXcHhhddbppPQR@D\ndid@@DjUZnBBH@LBinGfPf@\ngOp`@tiguif`LEksHl\ndaD@P@qBbDfYvzB@@B\ndk\\H@@rIJJIQDYtz`@@@@H\nfgA@@@LdbbbTVKIBMjp@@@@@@FDlTYrRmFmr@`\ndmNH@BAJ]YVDeZj@B@B\ndk~H@LAJYWmRkatzA@@H@B\nfoQh@@@\\UYvRJJJJsITyKQk@A@PtD@D\ndcmD@DpFRYUmRi]Zijj`CAlxYW^P`\ndg}D@DpNrJJIIPiDqvuTuUT@P\nfgAP@@@\\RfYe_irQmV@@@@@@@pxQ`eZM[dI@\ndctDXJXIAICi@YAYCYCHiMEHyUMUPA@\nfjc@`@@VrJIJZIPqYIJcEF|ENVfjjjjjj`@p|cENBdkQkN}EN^HBT\ndieH@BxDfYUa``P@LBCJGbMp\ndg|H`BBHRYe^uXSnBB@@@@pxLhYT~Xvv\ndaE@@@yIeVf`@`@pHLKnHc@\nffk@`@@LrJJJJHsIIPi\\dkWhaRVmPTP@@@B@@A@\nffk@@@DjYee\x7F^uyHQmNCDmP@@@@@@@@@B\nf`q`@@@YIEBedhdnB]zh@J@@@@`\nfhy@`@@\\RYee~uYrVoAZA``@H@@pyPTmFm{fLNB\ndid@@DkYWaz@@@LF`j[ayB@\nfduP@@@^RiggmUvBdjwgAjjfABJh@B\ndcLDpITJsjsZqIfVYXXBHZ@C@`y]xfB\nfhiA@@@ILkkLktYxL@DtD@@H\\lM@Q`eEZMYwnHxD\nfleA@@@ILklrsoQdTp@SUA@@BGJ\ndaF@@@RYWih@H@LBALkbEp\nfdyQ@@@qAdTTRQTRVTYrshBA`@f@DNT\ndaF@@@RYWih@H@LBCBkbIp\nfbmP@@@IrRJJIQJIHdjmhKhu@DPQAT@@X^qS`iJtZsoAbgH\nfhya@@K@rQQQQIYHrgIFtziAhEJh@B\ndmvD@DCDeUeYUj`@@B\ndmL@@DjUgZFUBBbb@LISBinFUyD@\ndmvH`Nd@aIe]Zf`@i`@piLJex`\\\ndeTDPDpHb@cHiCDdLrp@@A@\ndmvD@JBTin_^F``J@C@dIexe\\\ndaE@@@aJmUnjjh@pYLJf{dP\nfl}A@@@IRlrjkoAENJl[tTuP@@@@T@@D\ndknL@LACRYVuvUZh@J@B\nfhyA`@@B|dsLro~pRkF\\t@P@EP@A@\ndk\\B@@z]rJJIQPqnTv`XbH@H\nflu@P@@\\e{HhheEEcDef\\TZJV`Xb@`H@@pebRkN|FJ^PD\ndaGH@LJ`rQQRyULs@D\ndcnD@B@TfYm]aWViB@`@`\ndcn`@@rawIEDhiUTkhPUCD@XDc\\oHt\nfdei`@LJLzHIZrQQQQIJJkDiYpXuUUTBAP@D\nfhypB@M^B@HRfYU[wDYUg^h@@HF``@`\ndmtL`HS@BLddlRRFUh@H@LJqne^QP\nf`qAP@@\\dYvQQQJJDiQgEZZAbBf`@H\nfj}@P@@\\]eIfVWyU^YrV`iZA``HHZ@@H\nfc\x7F@P@@H]oHidhiiDhjdeIemjpXekM[UUUUUUUUUT@F@tXIQgIJtZsoAbdmV}GM^p\nfj}@p@@BMGI\\bbbbbbbtQqxkWgIZ@Hb@dj@@H\nfdeP`@E^@{HhhhhhdeBpV`vbt@Q@LD@@XLxhu`qxcW`\nf`i`@@@ITrlnzpRkN|DA@@@@@F@lTyKQk^yaBg@\ndmtDpFTH`h`XaIf[oi`bH`@phBXYyB`\nfhiP@@@ARYe_YWYqwhBBh@H@@`\ndifH@DAIVUxU`@@C@biny@`\ndifH`Lx@cIEDcBjiYh@phLJayB@\nfoAaB@LJ@DYHhhmMDbQegULpLA@@P\nfhiQP@DX@IW`yEEDeDdbdsakMUMMUU@AaKAJRMYw`|ah\nfhiPP@DX@IWdfYVU_V\\MYjiijZhDKT\ndk\\D@@[HhhiDjbY]ZBhB`@`\ndeu@@@[IEDhcSCH@@@@FB]OBPjD\ndeVD@FADfygFV``@@pjfxYyB@\ndeT@@LdbRTm\\DDT@FCIc\\L|RJ@\ndidD@@iIYmxVfZPB\ndidD@@iIUexVZZPaF\nf`qA@@@ISZzljscoT@Dp@@B@kCRLDhpTmFl{dO@\ndk]H@NTDimYuX]N`B@@@B\nfhip@@@LCdbbTTrLvUIBt@DAEU@@FAdTYpTeFl{p^Pt\ndmuD@DTArJJJFHUZijX@`\ndaE@`LH@aJ[Unh@@@pHD[nQP\ndie@@@aJVuxZ`@@CAlJfx^HD@\ngG]@DZDfUj`LDkqX`\ndet`@@raRfVZi[``jB@H\nfhy@P@@BTGHhhhhhebfBtzwf`BH@J@@H\ndiU@@@aJVupnFZiV@H\nf`ia`@N@LyIfV]UV\\eiwf`XHjh`@`\nfhyaP@E@EIwlbbbbbRjRXhuoAZdF`Jh`@`\ndiDB`HSBCpRjuVji@H\ngGX`BJdsmLIgAZ|b@\nda{D@DJ`yIeUjZBBh\ngGT`EaTf]j`LD[qK@\ndknL`LaM@HrRRqQHjUV`HJ@B\ndcNH@DCHheEBdnmU@@@FGIeMpkqIt\ngChHLLQIZ`LDEqS@\ndmu`@@pjY\\dTTRak`Hbh@H\ndmt@@DjUiZdHJb@CAd[ae^IA@\nfdyhP@DTxIPCAcdTRbbURTRYrRfjVZjjh@LIHEKUg^CD\ndeUH@JXDeVVxVYjdHQ`\nffsA@@@YEDeMDhTihdZLUiwhyZjjjjjjj`@pbcAJ\\EIVcV\\FJ\\uy@h\nfoQP@@@\\rQQQQQKFdeVLx@B@@@@@`\nfj}P@@@LRfVVWV}qF]GIYB`B@@@@ABE@\ngGPP@cTfyj`LInYF`\ndk]D`LFD@HrRPjJIEatujB`H@LJrnE^YNf\ndg|D@@WIEEEDYcPsmAQDT`A@\ndif@@@Rfufz`@`@piLIax`\\\nflepr@M^SAFB\\\\CprRSEQIZJKZR`qZjjjfVh@LIDhpTeVBgdL@\nfjc@`@@LrJJJJHpiQKKdeZ]{IZ`h`@H@P@@`\nfhe@@@LdbbbbbbcxhQiNlD@@@@H@@@pepTeZMYp^P|\nfHbXAy@\nfoAA@@@ILkjrmFV]@AL@@@arpTAFBTUhug\\QpP\nfj}@p@@\\dYI\\bbbTTVaaRaYIUhyZAbJ@BJ@@H\ndcnH@EAIfV][iuhFAH@LJiag^Ib`\nffs`@@@YIDmeEEEDhlZL]DI\\ujjZ@HH@d@@p}AFBTuYw`qSdmP\nfhyH@@@\\EKIEEEEEMUfRU[pYBb`@B@@H\nfjsA`@@TdeJsZvoZpPsfk^CdmA@P@@@@@@D\nfbc@@@DjYU_eUfByKQ`icd@@B`@@@@@H\nfbc@@@LdbbbbbbcJwEB]Hu`ir@@@@DT`D@D\nfdyp`@FRbABS\\rornIW`mA@d@D@HBh\ndmLd@Dqe@TfUeZzUZjUj@LLrUyB@\ndmM@PBx@c@aJYg\\jeZdHB@B\ndaDHPH@HHHRme[fii@H\ndk^@@@RYeg]ntxB@`@@H\ndcmD@DHERYYUZz]Z``R@CBdHYwdL\ndigH@DJ`RYYrYjfh@`\ndigH@LHPRfU~F``@@`\ngC`HAbIMTA@\ngC`DAbZHRVhCCB[dP\ngCahHlNbNlA`a`\ngChHL@aIZ`LBHl\neMFIDRM``',tr='fHbTA@\nfH`pA@\nfHfXA@\neO`BNZ``\ngKXHL@aJWFj`LBEcrP\ngBP`Adibj`H\ngCh`LDdsPFDWI`\neMBBHRZCAKd`\neFhHcAaWH@\ngC`DADZHRVhB\neMBCDRZCAKd`\ngGP`@dfuiaMX[F|b@\ngCa@@dkHFBbyL\neFABH`bLD\neMDARZCAgd@\ngJQhHl@cIHUhCBGd@\ngJXDB@bABUmTA`Pl^R@\ngJXHD@aIYj@ppqyH\ngGX`DJdsmRA`enP`\neMhDRZCAKd`\neFDBcAaWH@\ngCh`LHe]PD\ngOx@@drm]UTAaqEcV\ngJPH@DISUPFABqyH\ngJX`DBdru@XI[dH\nfHapA@\ngC`DAb[DRVhB\ndaDD@@yIe^fZVX@psBkdH\ndidH@@RUe^Fh@@@pxHPj[nPH\ndig@@@x\\dTRQi`HF@akBdpj[dB\ndaE@@@yIe^f`@`@piLJny@@\ndaEH@HxDeeVz`@@B\ndeUL@DpFGHhdhYWMTuPA@\ngOx@@drm\\@@A`Qb~IT\ngOx@@drm\\@@A`Qc^IL\ngOx@@drm\\@@A`Pm^Hl\ndaD`@@pjRfUi`HH@LDKnHc@\ndaGH@DK`R[e[fiZ@LLQnyE@\ndmN@@@RYVuiiV@@@@@`\ngOq@@eL~mLlAal[qI`\ndid@p@bBbFbDfYoa`b@@H\neMBCDRZCAGe@\ndifH@NAIYVXZ@H@CA`cBX^Qp\ngFt@AdiWEihCAJ|TH\ngCd@ADkj@ppbyL\ngCaHLLQIZ`LDEqS@\ndetH@@RgYVDFZh@H@H\ndiTH@@RgeXSaj@B@B\ngGQ@@eJuRA`Xm^P`\ndiDB@@[aRVeZjj@H\ngGPdMQbGpRUZi@`\neFA@HoBJD\ndaxBPHQn@HhHrRPzKThA@\ngNqhHl@cIHUEj`LLZ~P@\ngGT@ATiVj`LJHl^R`\neMPBcTH\ngJY@BDfVhCAK\\a@\ngGX`JDdsmTA`l^R`\ngGY@BDf^j`LBHmqF`\ngGT`EaTf]jPLDmrD\ngGQHJLQIUjdB\ndefD@FADf]ZZjj@LJJnF^Q`\ngCi@LDeZ@pTwH`\ndaF`@@pjYJYfn@b@@pPfyG@\ngNt`E`tf]Zi@pVODj\ndiFB@BAFEInuZjd@pILJnQp\ngCiHEAxIVtAaMqA@\ngGU@DPdjmTAaekqP`\ngNt`E`tf]Zj@pJM_I`\ngNxhMV@aI[ji`LBHmrL\ngChhMDOBNtA`enP@\ngC``AdeY@pbyH\ndaDH@@RVU[f@@@LJcB[nQP\ndaE@@@aJyUnh@@@pXHpj[d\\\ndaFH@NAIe^f`@`@piLJny@@\ngFxHL@aJYujj@pHboEb\ndaF@@@RYe[hB@@LJ@j[nQ`\ndaFH@HAIYUnh@@@pXHpj[d\\\neFPBca@\ndaE@@@aJyUnX@@@`\ngCe@E`dkPFBbyL\nfH`XA@\ngGPBADZPLaYAIZjhB\ngJPDADFHRUj`H\ngCd@ADiZDE@\ngJY@DDeZhCCSGbB@\ngGX`LDdsmTA`m^P`\neMBBHRYCAKd`\ndkNF@BAIWSR[YVYjjfX@`\neF`BJFE\\`\nda{@`Dq`BLbbbKUR@P\ndaDD@@yIe^fZVX@pSBxbT\ndaD@@DjWZXHB@C@dpnxdL\ndmNH@HCHhheDVzU`@@@@H\ngFy@LDidviXB\ndmv@`LCDRUVUeZj@@@H\ngNxDLLQxbRjuU@P\ndaDH@@RYVih@H@LBrf{b@`\ndaG@`LK`BDimVz`@@B\ndeUD@DhBRY[TYZ`@@B\ndeUD@DdBRY[TYZ`@@B\ndaEH@LXDeYVzje`C@`RnxdD\neMBCDRYCAGe@\ngGPXHlQxIU[U@XR|VH\nfH`TA@\neFJHqHpP\ndaxD@@QIeyjZBBlLpnyC@\ngGP@Di^VaHxTQF|f@\ndctH@@RgUUZYfY@dRVQX\neFBBDcA@\neMBBHRYCAGe@\ngJQHBHaInZ@`\ngGUHEhOAJmZhB\ndmLH@@RgVUaIVj`@`@`\ngOx@@eR}XP@AaXl[rL\ndcnH@JAIYe[yYu`@@@@H\ndev@@@RfV^nFP@@@@LFPj[iy@`\ndmM@@@WIEDhlZxY@@@`@H\ngOx`DBdwQkUTA@\ndclD@@UIfV][iuhFAH@LJiag^Q`\ngJPDADXHRVj`H\ngJPDAbGDRUj`H\ngJQHBLQIVj@`\ngNt`Bpdf{Zj@pJqoHp\neMdDhzB\nfHehA@\nfHfpAa@\nfHchA@\ngOq@@drm[RtA`Uc^Q`\ngFx`LDdrfmU@XHwdp\neMhDRUB\neFbHbHpP\neMJDBDf`pQyP\ndcLL`NWPbDfUuZf`@jX@H\ngNx`JDdskUPFDwLZp\ngJX`DBdru@XS\\RH\ndiDDPNDHc@aIUVjjX@`\ngChHL@aIVPH\ngJXhEBOAJuj@`\neMJDbDf`pQyP\ndaFD@DAdegfyjj`B\ndmNh@DkaTDfVYVzUZiZi@H\ndaDD@@IIf]nfih@`\ndaG@@@kdiVrX@a@C@hPfyG@\ndcnL`LaA@HrRPjIKTrzmPHD@FEYtkh\neOHBNZP`\ndiVH@BAIfUInFjZi@H\ngJPDADFHRUfaIP\ngNqDLHaqBRjuU@P\ngNpDAbODRUVjhB\ngGX`BDdjmTA`m^JD\ndidHPBBHFHRYgvzB@`@`\ngJXHD@aIUZ@`\ndifH`NDIAIe]ih@J@B\ndaE@@@IIf]n``@@pHLJnHw@\ngJPDADFHRYfaIP\ndiFL@JANRY]fjf@LLJayF@\ndie@@@YJYYhP`X@CBdJnGdL\ngGTHE`DIJkSBZppUxhP\neMbDBDfp`\ndeVH@DAIgeQej@@@LJrfx^Hd`\ndcN`@@pjYJYenk`Hbj@B\ndidh@DJaAIVUxZ`@@B\ndcNL@BA]RYe]VEjVih@`\ngNxhIV@aJUji`H\ndcNL@LANRYygiUjB@`@`\ndid`@@pjrQQIFf@`h@LLKaxbL\ndmvH@NAIfUTUZBB@@p[BiaWdR\ndmuH@DpDfWeYUj`@@CAlInF^Hb`\nfH`PAa@\nfHd`Aa@\neFJHaHhP\nfoA@R@HHpx@QddebRfRpiFlm@@@P@A@\ndmLH@@rJJIQEneX@@@@CB`kaWfXt`\ndmLH@@RYVuiiV@@@@@phJxYybXh\nfgA`@@@ISLrotyHvk@@@@@@@P\ndaFH@HAIYUnh@@@pKBinXD\\\nfduH@@@X]GIEEMDdehUbbkF|FKT@@ACPP@P\nf`iH@@@TdyJYW^U|TxJsiB@jjh`@`\ndmM@@@qJY{WJeVj@B@CCdrfxYyB`\ndcmH@AdDfUvVfWX@IjH@`\ndiV@@@RfU|kahDB@CB`JfGbIp\nffsa@@G@RfYU_yUTVeFCDmZ@@@JZ@@@@H\neMJDBDe`pQyP\nflua@`IJAHFdKRCi@hRDQHQDaHaHFJLuzJX@Jfjja`@`\nfhyA`@@B|dsLsKnqVgVBt@Q@BP@A`s`mFlGbIN@\nfbmAP@@BBgJSLsLoOkEZ]ZKPAD@RU@@D\ndaE@@@yJe~fB@`@`\nfoAa@@D@RYYeUuVLyj@@@@@CBRJLxJRmFxbs`\nfdyQ@@DA@drsJkzjlYsT@@@T`@D\nfhiq@@D^BAIefUWuUcNZ`@@B`@B\ndcNL`LaI@HrREQISBjt@Q@AaVTp{q@T\ndg^L`LaM@HrRPiSISJZuPAD@D\nfgA@@@LdbbbTVKIBMjp@@@@@@D\nf`iA`@@F\\eLsJmmARmku@A@QD@@P\nfnk@P@@FbuIefYZWz^`mA|gMVfjjjjjjj@B\ndmLH@@RfY]raV`XD`@phj[axdj\nfoAA@@@ISLjoxmJMP@@AH@AaKAJLxJRk\\PYp\nfnsAH@@LDjwdu[dTTTTTiRbTVWAZMdkPSDEUUUD@D\nfoIQ@@BJ@dsJsllepQkF\\uKUUTt@D\nfoAaB@G\\ADILkkJ}FFm@AP@P@A@\ndk\\H@@RfY]\x7FJEZA`RXBAh\nf`qQ@@G^@eLrj\x7FpmJMP@@AL@@XJpRcNBdiwnPL\nfdyQ@@OA@eLrj~lbthu@@@EL`@D\nfhyi@@DTxIPLbbTTRqbRYrRoAZiYh@J@@`\nf`i@`@@DRYfyU]`mNmyi`@@B@@H\ndaF@@@RYWifef@H\ndaF@@@RYe[hB@@LB@j[bYp\nfhe@@@LdbbbbbqQXXUiJ|DB@H@@B@@`\nfnk@a@CM@DVdLbbdRQbTQdrvIrRoAKVjjjjjiYj`@p]`eF\\EKQoQSdoD@`\nfa{@c@K]@DHBGRFQRZQIFIQFSKZ`eZCFkZjjjjjiYj`@`\ndet@@DjYUX^d@@@@CAlJnF^Hc@\ndeth@DkiAIeeVxYZiZd@pQAxaT\ndcNL`LaE@HrRPzIJSju@D@AaVDwSqEt\ndk]@@@qJY{W\\jUZh@I`@`\ndmN@@@rRJKQEneP`@@@B\nfew@`@@HrJYJJZQIFYJSKJmxNRcfuUUUUUUUUP@XUQ`eF\\dkQkN|FNRu[t_HS@\ndeVH@DAIgeQej@@@LJSJX^It`\ndaFH@NAJY\x7FJifx@`\neMdHTf`|rP\ngJY`DLTefhB\ndiFH`Bp@cIECDjZj@H\ndeTB@@RirJIPqTsUUT@P\ndmtL@@slbTtTLpfjjj@H\ndmNH@BAIfUmiEX@@@@CC`qnFU@\ndg\\D@@eIVUuWaZ@Bj`@peBinWSodP\nfgA@@@DjYU_VByHu`@@@@@@H\ndclH@@rIQQJH|J{P@@@@D\ndk\x7F@@@p\\dTRbfQjVGSBBheF@H\ndk}@@@iJUmUR[atzjZ@H@C@PPje]OdP\ndk}@@@yJUmmRkatp@h@B@B\nfgAp@@@XheLvnjs`iFlDPT@@@A@\nfgAP@@@LrQQJEIITxJQk@QE@@@@P\ndcm@@@EJYYwietB@P@@H\ndif@@@RYWZZ@BP@pXDpj{dB\ndg}B@DpAV|bbbRbrK]imUMMU@FGXU]IwrM@\ndg|H`FBHRYV~Ukcn@H`@@@pdDrne]OdV\ndg|@@DjU_eZx{BAH@@BJlMaLJfe]N~Qp\ngGQhHjOAJmZhCBGfFh\ngGT`EaTf]j`LDkqX`\nfgA`@@@YHheEhTj\\EHu`@@@@@@H\nf`i@`@@VRYfYU]`eNMyh@`AB@@LFRUhso\\QS`\nffc@p@@DEkM\\bbbfbTtRrLKAF|dkTaQ@DDT@@P\nfoQPB@F\\@DYHheBeLdRdeV]Th@@D@@P\ndcoH@NWPRVUmVFUX@ah`B\nf`i@`@@VRYfYU]`eNMyh@`AB@@LF\\Uhso\\QRP\nfhy``@A@|dsLsKnqVgVBt@Q@BP@A@\nfde@P@@J]{HhhhhhdeBpV`vbt@Q@LD@@XLUjw`qxca`\ndaFL@NAFR[e[fff@H\nf`i@`@@VRYfYU]`eNMyh@`AB@@LN\\dkQg^yB`\ndk\\D@@qIY[mZ{SZZ`@P@`\ndk]L@LxDMIe]eRkSZjjjh@`\ndclD@@IIf]U[evjj@@@H\nfgA`@@@ISKJntXKQk@@@@@@@P\nfduP@@@FRe[Y]mRTDhu`q@@BJ@@H@B\ngGPdMQDGpRUYiDe@\ndeT@@DjUghP`h`@pYL[agfPU@\ndg]D@LlMrIJJIIHj]UAAD@D\nf`iA`@@BUdTTTTTRqXKSk^Z@H`@`@B\nfgAP@@@\\RfYe_irQmV@@@@@@@`\ndmw@`Dq`BDeUeYUi`@@cJ\ndiV@`J@HRfU|kahDB@CB`PfGd\\\nfgAPB@LD@DISJ\x7FJdhsakTuT@D`@P\ngGThEXQxIVsS@P\ndk^@@@RfYU\\]Tz@@@@@LECBinFUOdZ\nfgA@`@@\\RfYe_irQmVh@`@H@@`\ndiT`@@rnRfUjEnejfPB\nf`ih@@@XIQVRJJIIZEIgIJ]xB`j@@P@H\ndcn`@@xYUIYeg[ewiBHH@H\ndmtH@@RYWUih@IhBN\\NALJiWb\\H\nf`qAA@A@bOQBSJ{\\ktYYt@EP@P@A@\nfdy@P@@BtGHhhhheEcliuoM@DD@T@@P\ndeu@@@[IEDhcSCH@@@@FAEpsqDh\ndcm@@@{IEEEDcWSh@PD@@P\nfoAP`@DXAIIfU^uYrsfjjP@`@H\ndet@@DjYUX^d@@@@CBlJngfHp`\ndclh@LX]AIVYWxUuj`PH@H\ngJP`@TeVhCCSGdP\ndaxL@@RdfVVjh@ppj[bYp\ndg~@@@RYfUWd}mh@@@@@pdBinFUwbGX\ndifH@HAIfuxZ`@@B\ndmtD`NTLQIe]Vf`@jP@`\ngOqHF@aJW\\ZVXCCA[be@\ndk^@@@RfYU\\]Tz@@@@@LICBinFUxff\ndk}@@@iJUmUR[atpBJ@@@CChPiWSyE@\ndk^@@@RfYU\\]Tz@@@@@LI@j[aeSxfZ\ndeUH@JdDin_xZB@`@pqB[fUt`\ndetH@@RfUWJzZABH@LBInGbIH\nfoQAB@C@BDifYU^gIVtz`B@DH@@`\ngBQHDHaIejhB\ndaG@`D[`bDfUjZ@B@CA@sbUp\ndidHPACDZHrJIJFn`BH@H\ndknDPLa@BABLddJbTVtujAH@@`\ndayDPLZD@HhHrRESKSPAafTwDC`\ngNxHD@aIUVj`LFEcWrP\ndiEDPLZD@HhHrRESIZZ`B\ndayH@DpDf]Vjh@piBinyF@\ndeV@@@RfyWahBB@CBj[agf@a@\ndmtB`HSBCprRSFIJUZh@@@pInF^YaJ\ndif@`D@HRVU^Ejjh@`\ndmL`@@siRfUmhVxHFJH@`\ngO}@EfDfUkZZPH\ngCe@E`dmHD\ndeUL@DpFgHhdhUWMTuHA@\ndclD@@EJY}erevfVfiBJh\ndk\\H@@RYeg]ntxB@P@@H\ndk\\D@@MJ[Vuvy]h@@B@@`\nfoAaB@KN@DISLjoxmJMP@@AP@A@\ndaFH@HAIYUnh@@@phHpfxe\\\ngF|@AbeLzmS@XKWbQ@\ndcoH@DJ`RUeUVy]ZZ`@@CBdhYwbPh\ndmOH@FePRYVukaf@HZH@`\nfhiA`@@Hddjrm|jIW`mPAD@@@A@\ndmL`@@[aRfV[hYVPb``@`\ndeVD@LADfvUFVjjh@p{BinF^P`\nfhi``@L@PdssLjn[s`mU@@@@@A@\ndk|@`@BDie^urnGShD@@`@H\ndeVH@BAIemQfk@@@H\nf`qa@@O@rQQQIISGBtju@@@QX@A@\nfbc@@@LdbbbbbRJvcEBMIpTqrAD@@@@@@@D\ndcl@`@BLbTTRbOBnt@@@@A`LDwCJ{r@@\nfdu@P@@JMGIEEDhhhhgPPkR\\kUUSUUUUP@P\ngFxHH@aJUqiZ@ppMyD\nflu@P@@B\\EIfYfWgvJuztV`BHBDh@@`\nfHbhA@\ndcl@@DjYeeiGP@HH@@`\nf`i@`@@VRYfYU]`eNMyh@`AB@@LF\\ehso\\QQP\nfhy@@@LdbbbRQaREiQoA`@`@@@@@`\nfhyQ@@CA@dsLjm{Jvg^Bt@@DCA@A@\nf`q@Q@HH]x@QXHrRFIJYIZ\\Ehrp@@Dh@A@\ndet@@DjYUX^d@@@@C@binxRXL`\ndg|@P@bCbDfUnuj{[`B@B@@H\ndidHPBBHFHRYgVzB@`@pHLh^HW@\nfoAaB@GDADILroZ{AFmAA@@P@A@\nfoAaB@GLADILk_J}NFm@DP@P@A@\ndc\\@@DjYVYayYt@@H`PB\ndiDB@@SaR[eVfjBLh\nfoAP@@@NRYWVUzLMZ@B`@`@B\ngOq@@drm]SRA@\ndidh@DqaAIe[kffjPB\ndeV@@@rIQIPmw@AH@XUaMp|bP\ndeVB@LAaeJYyzzjjj@LAaBinF^Q`\ndk\\H@@RYm[Watz`@@@@H\nfoAh@@@XIQRTsNj~sdm@P@QT@@P\ndklB@@F]RYe]ynZYif`B\ndaF@@@RYVih@H@LLBnybXp\ndknD@LADf^YWeVhBB`@`\ndcNH`IDLQIe[^ih@Jj@B\ndmO@@@bTieulhUfhB@@H\nfoQh@@@\\eYvRJJJJUKTxkQk@AA@tD@D\nflmAP@@LUyNQQQQEJQJI|Eish~BtuUUUUU@A@\ndkm@@@QInUu^Eh@IdBIh\ndifH@JAJ[gxZB@@C@dJfxgB\nfoA@@@DkfYU]UcNz`@@@@@`\ndk~@@@rRJIJJEi{UNhJHb`@`\ndeT@@DjY]zXFB@@pYLinGbEH\nfoAA@@@ILkjrmFV]@AL@@@arpdAFBTUhunXxIp\ndcMH@EtLbbbRQc]@PLp@P\ndiTH@@RfU|kahDB@CCBknXcB\ndifH@DAInUxZ`@@CAhJfx^HB@\ndeVD@HCDi^UFZh@@@`\ngNx`DJdssTpFBsyD\nf`a``@M@EdbbRTQrdxj``hjh@C@rBTYpTeZl{wHX@\ndeT@@DjUghP`h`@pFDpj[iy@`\ndcl@@DjYU_egX@@@@@pyLJag^XwJ\ndmtL`HS@BLdaRbReUj@@@H\ndaxD@@QIUUjj@LJpj[nQ@\ndcl@@DjYU_egX@@@@@p{J[ag^XaJ\ndaE@@@aJmUnjjh@`\ngOr@ABtiYufjPH\nfgApB@LLx@HRevUUpPTcViYj@H@@`\ndeth@DkiAIeeVxYZiZd@pqJGdD\nfoA@P@@\\e[HhheEBcF\\UihFHIh@B\nfj}@P@@\\ceIfVW{WVYrVoAZA``@JZ@@H\nfbm@p@@BLEN\\bbbbbbbrNwEZ|zKPADPBU@@D\ndg|D@@iJYYytYvzB@@`@B\ndmMH@HxLbbbTQ[iV@@@@@`\ngNt@@\\dbLjj@pJu_I@\ndk\\H@@Rf_YWJtzYX@HBJX\ndg|@@DjU_eZx{BAH@@BJ\\EaLine]ObEX\ndg|@@DjU_eZx{BAH@@BJ\\EaLJfe]Ob]X\nf`q`@@@IKJzljsco\\@Dp@@B@j\ndevH@IAJYW\\kahDB`@`\ndif@@@RYWZZ@B`@pYLJnGd@\ndk_@@@Y\\dTRbJtiad@@Bh@B\ndk\\D`HP@cIHXheDQgSV@@@@@pZnE]ObAH\ndg\x7FL@Ds`f|bbTTtJuCimMUUS@FCTwJ]|P]@\nfoAq`@DXxBSlbbTTtJVhKQffjjjX@LATYpRmFmrC`\ndcnH@IAJ[Vu[ev`@@@@LFSBE]yC@\ndmM@@@[IEDhhZdU@B@@@LJRnF^Hr`\nf`iP`@B\\@aInVUuQRUiwfjij@H@@`\ndc\\@@DjYVYayYt@@H``B\nfgAa`@N@t[HhheDTdsdeFltC@UQ@A@\ndeTD`HP@cIHXhdLk@P@A`UMp|PI@\ndie@@@GHhhdVz@``@pKBinH@`\ndmN@`E@HRfUwrnF`PI`@`\ndk\\L@@R\\bbTTTU[mMjBhB@B\nfbmAR@HHqhH@cIIKDeMEhdlIUgIrm@DM@`D@A@\nfoAP@@@NrJJIHqIYgCV`HH@H@@`\ndcLL@@ETfYUUnZYjZ@H\ndcn@@@rIQQJH|J{p@@@@D\ndaF@@@RZW[jii@H\ndiVL@DBnRYYbZfZjj`B\nfHgPAa@\ngC`DAbZHRVhB\ngCaHLHaIZPLDErP\neMPBcXLJyH\ngCahHlHROTA@',ur='daD@@DjUZxHD@@\ndaD@@DjUZxHH@@\ndaD@@DjWzXHB@@\ndaD@P@bBbDfYvzB@@@\ndaD@P@bFbDfUjz@H@@\ndaD@P@bNbDfUzZ@B@@\ndaD@P@qFbDfUjz@H@@\ndaD@P@qNbDfUzZ@B@@\ndaD@P@qNqDfUzZ@B@@\ndaD@`@bDfUzZ@B@@\ndaD@`@qDeeVz`@@@\ndaDB`HSJCprRRsTsUU@@\ndaDD@@IIf]nZYX@@\ndaDD@@IIf]nZZh@@\ndaDD@@IIf]n``@@@\ndaDD@@IIf^fZfh@@\ndaDD@@IIfunZfd@@\ndaDD@@QIeUnZjh@@\ndaDD@@YIeZn`B@@@\ndaDD@@qJYfnjjh@@\ndaDD@@yIe^fZVX@@\ndaDD@@yIe^f`@`@@\ndaDH@@RVU[f@@@@\ndaDH@@RVU[j@@@@\ndaDH@@RYVih@H@@\ndaDH@@RYWih@H@@\ndaDH@@RYe[hB@@@\ndaDH@@Rfu[j@@@@\ndaDH`BBHRYg[jfj@@\ndaDL@@PdfyVyjZP@\ndaD``DJnBHrJIPeUMV`@\ndaE@@@IIf]n``@@@\ndaE@@@YIeZn`B@@@\ndaE@@@YJYVf@``@@\ndaE@@@YJY^f@``@@\ndaE@@@aJyUnh@@@@\ndaE@@@yIe^f`@`@@\ndaE@@@yJYfn@b@@@\ndaED@DHNRYWifif@@\ndaED@DXNRYUifej@@\ndaED@DpFRYVkfjY@@\ndaEH@DpDfYbijj`@\ndaEH`Bk`bDfUzZZY`@\ndaF@@@RVU[n@@@@\ndaF@@@RYWih@H@@\ndaF@@@RYe[hB@@@\ndaF@@@RfYk`H`@@\ndaF@@@Rfu[j@@@@\ndaF@@@rQQHtpDD@@\ndaF@`BBHRYg[hH@@@\ndaF@`FBHRYVkh@`@@\ndaF@`JBHRVU[j@@@@\ndaF@`L@HRf^rjjj@@\ndaF@`L@HRf_rjjj@@\ndaF@`N@HRYWih@H@@\ndaF@`NBHRYWih@H@@\ndaF@`NBPRYWih@H@@\ndaF@`NBlRYWih@H@@\ndaF@`NCDRYWih@H@@\ndaFD@BADfyVyjj`@\ndaFD@F@dfYvzB@@@\ndaFD@LADfVZYjj`@\ndaFH@BAIf]n``@@@\ndaFH@BAIfunZfd@@\ndaFH@DAIeUnZjh@@\ndaFH@FAIeZn`B@@@\ndaFH@HAIYUnfjh@@\ndaFH@HAIYUnh@@@@\ndaFH@HAIYUnjjh@@\ndaFH@JAIYVfiih@@\ndaFH@JAJUtjjjh@@\ndaFH@LAIYfnjZd@@\ndaFH@NAJYfnjjh@@\ndaFHPBxHa@aIeTjijX@@\ndaG@@@kdig|jVj`@\ndaG@@@rdifvxH`@@\ndaG@`Bk`bDfUzZ@B@@\ndaG@`Dq`BDfUjyijP@\ndaGD@Dp`yIeVfZiX@@\ndaGH@Dq`RYVkffi@@\ndaTD@@iJUfDifzjjj@@\ndaTH@@ReYaBinjjj`@\ndadH`DBHRZuSFzjjh@@\ndag@@@adie\\infjf@@\ndax@@Dj~fjh@@\ndax@@DkU^jh@@\ndax@@LddUeUT@@\ndaxB@@QnR[VZY`cD\ndaxB@@QnR[VZY`cH\ndaxB@@QnR[VZi`@\ndaxBPLinBHKpRUZjf`@\ndaxB`HSBCpRjuZj`@\ndaxD@@QIeejZ@@\ndaxD@@QImUifALj`\ndaxD@@QImUjj@@\ndaxD@@YIgYjf@@\ndaxD@@iIUmfjBD`\ndaxD@@iJU^jj@@\ndaxD@@yIUUfYADb`\ndaxD@@yIUUfZADb`\ndaxDPFxLPlQIf^ZjBH`\ndaxDPLHHb@aI[Vfj@@\ndaxDPLh@c`aI[njj@@\ndaxD`LhLQIUnjZ@@\ndaxH@@RUUYj`aH\ndaxH@@RUUjj`@\ndaxH@@RV]Zj`@\ndaxJ`HSBxOCIILTuT`@\ndaxL@@cdiZZjh@@\ndaxLRJ[`bBBNyIUjjV@@\ndaxL`HS@BLddJruT@@\ndaxd@DpnAdf]ffXHr@\nday@@@aJnZjj@@\nday@@@yIYwjk@@\nday@PFx@b@aJUVjj@@\nday@`Dp@aIfYjj@@\ndayD@DpFRYVZi`@\ndayD@DxFR[VZy`@\ndayD@HhNRV[ff`RDh\ndayH@DpDfUVjh@@\ndayH@DpDfYfjh@@\ndayH@DpDf]Vjh@@\ndayL@DpFyIeUjj@@\ndazD@BADf{fjh@@\ndazD@LADf]Vjh@@\ndazD@LADf^VihHJ@\ndazD@LADf^fjh@@\ndazD@NADf{Vfl@@\ndazD`B[`BDe[jjX@@\ndazL@BAFR[nZj`@\ndazL@LANRYuZj`@\ndazL`BaL@HrRPzKUP@@\nda{DAJ[`Qi{dfuVjT@@\ndcL@D@dDdJdFdAdIdEdMdLbdtbaa]UUUT@@\ndcL@X@bBbFbAbEbMbDfYn\x7Fijjjj@@\ndcL@X@bBdFdAdEdMdDfYn\x7Fi`bHh@@\ndcLB@@ImrJJJIH}KTsTp@@\ndcLB@@P]R[e[^eh@b`@@\ndcLB@@Q]R[e]nEh@I`@@\ndcLB@@RUR[fVQuhHF@@@\ndcLB@@R]rJYQIPbkT@Q@@@\ndcLB@@RiRYyVQejjjh@@\ndcLB@@SmR[YgYUjB@`@@\ndcLB@@reRf[ujzjjjh@@\ndcLB@@riRfY~Qfjjjh@@\ndcLD@@IIf]z[hHBj@@\ndcLD@@QIgVUWVj`@@@\ndcLD@@QInUvxVfjf`@\ndcLD@@cIMHhTmJuUUU@@\ndcLD@@eJ[W[[j@Bk@@\ndcLD@@iJ[g]xZB@f@bX\ndcLD@@iJ[g]xZB@i@@\ndcLD@@kIEMDdcttDDT@@\ndcLD@@uIfUe[ffZi`@\ndcLD@@uIfUk[ffZi`@\ndcLD@@uIfUk[hBBj@@\ndcLD@@uIfYoXVfZi`@\ndcLD@@uJ[WU[j@BZ@`X\ndcLDHFDH`haXcXaIf[ozYjYjP@\ndcLF@@Rag\\bbTVTILuSUT@@\ndcLF@@RiWTfV[UnZjjj@@\ndcLH@@RYeZvz@`j`@@\ndcLH`ECDRUYWQff@B`HR@\ndcLJ@@PUuInUgzV`BJ@@\ndcLJB@PUuNR[eY~eijjh@@\ndcLL@@GTf[VwiZ@Hh@@\ndcLL@@STfyWWaZ@Bh@@\ndcLL@@yTee[UaX@bh@@\ndcLL`HS@BLddJfRtjmP@P@@\ndcLLpLK`bEbMbDeeYunjjjj@@\ndcL``Dpn@HRYueUujX@@HJ@\ndcMB@DpIWTfeyYaZjeZ@@\ndcMD@DhARYVUuujP`@HJ@\ndcMD`LE]@HRV[]nEjiih@@\ndcMH@DdLbbtRTHju@DP@@\ndcMH@DpLbbbLRRzuT@@@@\ndcMH`BuPBDf[U{aj@BX@@\ndcML@DpByIf]vifjfj`@\ndcM`@@pjY\\dTTRrM\\ADUP@@\ndcN@`IBHRYWVjZ@Bj`@@\ndcND@BADf{YU]Zj@@@@\ndcND@FCTfUiffZjjj@@\ndcND@HC\\bbdTb\x7FKUUUT@@\ndcND@N@dfY{UnZejj@@\ndcNDPBePbMbDfYmoa`bAh@@\ndcND`MIPbLbbbbQcSAAPp@@\ndcNH@FAIe[mkh@bj@@\ndcNH@IAIeYUifejZ`@\ndcNH`Bp@aJY{UWZZjj`@\ndcNH`BpLQI[VUWZZ`@@@\ndcNJ@NCIWTify^ajjjj@@\ndcNL@LAERYyeiuj@b@@@\ndcNL@LAJRY{eUujh@@@@\ndcNL@LAMrJYQIPcKT@E@@@\ndcNL@M@aRYgWVzB@j`@@\ndcNL@NB]RfyUZziZjh@@\ndcO@@@rTie_ZnBBJh@@\ndcOB@DrPY]RYV]jyjfid@@\ndcOD@Ds`wHheELUPmMTra@p\ndc\\D@@iJYeUqavUhJBbD@@\ndc^H@AAJU[VaJZUijZjT@@\ndcl@@DjYU_egX@@@@@@\ndcl@@LdbbbRkRJ`@PD@@@\ndclD@@QIe[WiiUjP@h@@\ndclD@@UIfVW[iv@@B@@@\ndclD@@UIfV][iv@@B@@@\ndclD@@UIfV^XYv@@B@@@\ndclD@@aJyegzUvjBHH@@\ndclD@@iJYW]rnF``IhBI`\ndclD@@iJYW]rnF``JX@@\ndclD@@iJYW]rnF``Jh@@\ndclD@@uIfV_XYV@@@`@@\ndclD@@wHhheEbprl@@A@@@\ndclD`AtLQIe]miaf@Bjb@@\ndclH@@rQSQJH|J{P@@@@@\ndclL@@STfUmVfeVi@B`@@\ndcl`@@`nReeWZY]@``@@@\ndcl`@@i]RfYyvxU@hJhP@\ndcl`@@jURfYwVxY@hFh`@\ndcl`@@j]RfYuVxY@hJhP@\ndcl`@@seRfUeZEnBAbh`@\ndcll@DpYAmRYV]zzUZije`@\ndcm@@@UJfUWyYvhJBH@@\ndcm@@@YJYYwhUtH@@@@@\ndcm@@@iJYeyravPhJH@@\ndcm@@@qJY~Ureujh@H@@\ndcm@@@uIe[UiiV@@@`@@\ndcm@@@uJYU_rnf`Pbh@@\ndcm@@@{IDeCDdUKh@UUB@@\ndcm@@@{IDeCEDUSh@UUD@@\ndcm@`LH@cIEDUDeeKmLp@P@@\ndcmB@DpNE\\bbbTRMBtmULmP@@\ndcmD@hxEChgiWdfYYungX@@H@@@\ndcmH`LJPBLdTTJTvTJtpAE@@@\ndcmh@HqagPRVVY^E]fjVjPbH\ndcn@@@RVUmVy]x@@@@@\ndcn@@@Re]eRi]@B@@@@\ndcn@@@RfV]zE]B@@@@@\ndcn@@@RfYW\\hUhFBJ@@\ndcn@@@rIQQJH|J{p@@@@@\ndcn@@@rQQQIXyPkPLDT@@\ndcn@PABPJPRYgUVy]``@@@@\ndcn@PBBPZPrJJJIP}J{@D@@@@\ndcn@PBBPvPRYe[VFU`@@H@@\ndcn@PIBPJPRYfuvE]``@@@@\ndcn@PNBHvHrJJIQGMtk@@@P@@\ndcn@PNBPVPRYeeVF]`@@`@@\ndcnD@D@TfUe^fWX@B@@@@\ndcnDABCbgnrJJIQPll{@A@@@@\ndcnH@AAIVYWXUvjP`H@@\ndcnH@BAIfUnZQV@@@`@@\ndcnH@HAIYVu[ev`@@@@@\ndcnH@NAIYeUkiviBBH@@\ndcnHAH@NbTfYYungX@@H@@@\ndcnH`DDHaIe[gkev@@`@@@\ndcnH`NtHaIfV]XYV@@@`@@\ndcnH`NtLQIfV]XYV@@@`@@\ndcnL@LAMRYUUrhYZh@h@@\ndcnL`LaA@HrRPjIKTrzmPHD@@\ndcnh@DkaTLbbTTRK\\nmHTA@@@\ndcnh@DkatDfVYengVjVjd@@\ndco@@@JdeYUUnW^fh@@@@\ndco@@@pdif]wJeVhHB`@@\ndco@`FePbDfUmVnFX@ajH@@\ndct@D@dBdFdNdAdIdEdMdDfYkjZjj`bH\ndctB@@I]rJJJIVMRuLDE@\ndctB@@PYRYU{ViijBBP\ndctB@@PYRYU{ViijBB`\ndctB@@PnR[kfVjjj@@\ndctD@@QIeUUZijhHj@\ndctD@@QImUUZjjh@@\ndctF@@IaWTfYn~jjj`@\ndctF@@rngTen{mjjj`@\ndctH@@RUUUZjjj@@\ndctHxJBPRPrPFPfPVPvPrJPqJQUUUT@@\ndctd@BE]ADf{UYjji`@\ndctl@BE]ANR[mUfjjf@@\ndcu@HLd@a@```PcHheDYhuUMP@@\ndcuD@LTIrQPiIQTuUL@@\ndcuDPBwaBPRPrJZSQEUUMT@@\ndcvDBAAAeIeUzZjjh@@\ndcvJ@BAIWTfuiUjjj`@\ndcvJ@LBngTen{mjjj`@\ndcwLaNWXS@|Eg^rRSIIHmUUJ@@\ndc~D@JCldRTTRLHp|J{PA@@P@@\ndeL@@Di[ernDYZjij@@\ndeL@@DjYeIjGijjjj@@\ndeLD@@eJUUXSaFZjjj`@\ndeT@@DjUYk``R`@@\ndeT@@DjWvifjih@@\ndeT@@DjYUXPbDP@@\ndeT@h@bBbFbAbIbDfYokjYjh@@\ndeTB@@IaRYf{aZfj`@\ndeTB@@KiRYg]nZej`@\ndeTD@@EIYWVy`@h@@\ndeTD@@EIfUVz@`h@@\ndeTD@@EIfUvz@`h@@\ndeTD@@EJYU^f```@@\ndeTD@@QIUeQej@@@@\ndeTD@@YIfUqehD@@@\ndeTD@@eIfWVyiff@@\ndeTD@@gHhhhjpmLtp@@\ndeTD@@iIYe^e```@@\ndeTD@@yIYVvE`BH@@\ndeTDPAdH`haIf]VzB@h@@\ndeTDPBDHbXaIf]VzeiZ@@\ndeTD`AdHaIe[jz@HX@@\ndeTD`AdHaIe]jZ@BX@@\ndeTD`NDHaIfVVfBA`@@\ndeTH@@RUYTYY`@@aH\ndeTH@@RUYTYi`@@aH\ndeTH@@RYVZfZZj`@\ndeTH@@rJJIHmtA@pD]@\ndeTH`IBHrJJJJlLADP@@\ndeTHpIBHJHZHrJJJX|LDPP@@\ndeTL@@FTfYW[ffZX@@\ndeTL@@FTf[eXVjjh@@\ndeTL@@KlbbbtK\\uKU@@\ndeTL@@Qdf]eFVjfd@@\ndeTL@@QdfygFV``@@@\ndeTL@@RTfyWxV`@`@@\ndeTLB@QdyInYqehH@@@\ndeTL`BjPkDf[W[jjjh@@\ndeU@@@[IHhXlLuA@@@@\ndeU@@@aJnUqfhH@@@\ndeU@@@aJueQfj@@@@\ndeU@@@gIHhTmpu@A@@@\ndeU@PBdHchaIf^VFBBH@@\ndeU@`Dp@aIgeQej@@@@\ndeUB@DpFFTfUgkfjYX@@\ndeUD@DdBRY[TYZ`@@@\ndeUD@DhBRY[TYZ`@@@\ndeUD@DxBRY[TYZ`@@@\ndeUD@FdDR[VTYZZV`cH\ndeUD@HDIRVUunfef`RKh\ndeUDAHDIFY{HeEDcptAA@@@\ndeUD`DpY@HRYf|fZjj`@\ndeUH@AdDee][j@B`@@\ndeUH@AdLbbRaUM@AT@@\ndeUH@DDDfyVzV`B@@@\ndeUH@HpDenUFYh@@Ha@\ndeUH@JdDie_xZB@`@@\ndeUHBDxNeIgeQej@@@@\ndeUL@DpFgHhdhUWMTuH@@\ndeV@@@RVUenh@J@@\ndeV@@@RYfUa`Hb@@\ndeV@@@RYyTYj`@@@\ndeV@@@rRJEK\\MP@P@@\ndeV@PNBHFHRYeYi``x@@\ndeV@`ABHRYVvf`@j@@\ndeV@`ABHRYWVf`@j@@\ndeV@`D@HRUYTYV`@@@\ndeV@`LADReyTYk`@@@\ndeVD@DCDenUFVh@@@@\ndeVD@FADfygFV``@@@\ndeVD@I@dfYw[hHB`@@\ndeVD@IADfyWxV`@`@@\ndeVD@LB\\bTTQU]TuT`@\ndeVD@N@dfY{[fiZh@@\ndeVD@NADfyUxVfjh@@\ndeVH@AAIfuneh@`@@\ndeVH@AAJYWnf```@@\ndeVH@BAIemQfk@@@@\ndeVH@DAIgeQej@@@@\ndeVH@FAIe[jz@Hh@@\ndeVH@FAIe[zz@Hh@@\ndeVH@HAIYVVz`@h@@\ndeVH@HAJUmQfj@@@@\ndeVH@IAIeYZYiZf@@\ndeVH@IAIe]ZZ@Bl@@\ndeVH@IAJYW~F``H@@\ndeVH@NAIe]jZ@Bh@@\ndeVH@NCIELeBpt@Q@@@\ndeVHPNHHbXaIf^VFBBH@@\ndeV``Dqad@aIeYzyiji@@\ndeVh@DkadDfV[[ffZh@@\ndeW@@@kdigvriZjh@@\ndeW@PH[`bDbDfueFZjZd@@\ndeWH@DJPRY[TYZ`@@@\ndeWH@DZPR[e_aZ@B@@\nded@@DiUUjjj@@\nded@H@RnbAbIbDjUUjjj@@\ndedB@@PYR[UYifXDrj@\ndedB@@PYR[UYjjX@@\ndedD@@QIeVVjjP@\ndedD@@QImUVjj`@\ndedD@@QInUvjj`@\ndedD@@iIUmVZj`aH\ndedH@@RUUUfihDRY@\ndedH@@RUUUfjhHR@\ndedHXDBHjPZPzPFPfPRYZZjjh@@\ndedJ@@IaeIf[zjj`@\ndedJ@@rneI[nvjj`@\nded`@@iiReUvjjh@@\nded`PDqi@HDHRYuYjjX@@\ndeddABxYAAf^R[kujjT@@\ndeddABxYAAf^R[mUjjT@@\ndee@HHxHaH`XbXaImUjjj`@\ndeeD@BdDR[mUjjh@@\ndeeD@BhIRUUUjZdHJ@\ndeeL@BdDEInufji`@\ndefB@BAAeInufji`@\ndefB@BANeInvvjf`@\ndefD`FFPBDiWnjjf@@\ndefD`FFPBDi]nijf@@\ndefJ@BAFFTfy^Zjf@@\ndefL@LAIRYuUjjh@@\ndeg@@@zTiUWjjj@@\ndet@@DjYUX^d@@@@@\ndet@@DjzYKaejjj`@\ndet`@@siRfUna[``ha@@\ndet`@@siRfUnnFP`bb@@\ndet``Dki@HRYYUnFVjVi@@\ndeu@@@[IEDhcSCH@@@@@\ndeu@@@kIEEDceCLaPD@@\ndeu@`Dp@aIeURhYfh@@@@\ndeu@`LH@cIEEBeeCML@D@@\ndeu`@@rfFTigmkadHHhP@\ndev@@@RYyULFZh@H@@\ndev@@@Re[TjFP@@@@@\ndev@@@RfUWJzZABH@@\ndev@@@rQQJHtpr@@@@@@\ndev@PL@HPHRYUTjFVj@@@@\ndev`@@raeJY{ZXYB@iH@@\ndevh@DJndDfVU[af@`hP@\ndevhADIadFf^R[fUnxVijY@@\ndew@@@pldTTJVTLmP@P@@\ndg\\B@@ESrJJIIIFMsSMSM@@\ndg\\B@@Q[R[VUmgVf@HhBL`\ndg\\B@@RSR[YVwEVh@bh@@\ndg\\B@@SSRY[W[FVh@Ih@@\ndg\\B@@i]RVYUuzVBBJh@@\ndg\\B@@kcrIQQQIGBkADQT@@\ndg\\B@@x{RYeewgV`hHh@@\ndg\\D@@cIMHhThYJuT@EP@@\ndg\\D@@eIfU_Un`HJj`@@\ndg\\D`ILIAIme[\\Uf`BJ`@@\ndg\\H@@RYvYiVvfijjBL`\ndg\\HpL@HcpPHRZUYwNvjhH@@@\ndg\\J@@PUMInUeWiZ@Hj`@@\ndg\\L@@H|bbbftbkBtsMUP@@\ndg\\L@@PdfVUZYmjBBh@@\ndg\\L@@k\\dTtRRLwSPPQT`@@\ndg\\L@@yTimYvfF`BJj@@\ndg\\L`HS@BLddJrTRQvmUP@@@@\ndg\\L`NNpbDfUuijZ@Bjf@@\ndg\\``Dpi@HrJJJIRiG[UT`@@@\ndg\\dPHP{YPlmlldabbrV`suKRwP@@\ndg\\d`LF[a@BLddJbbQvfmPLA@@@\ndg]B@HxEv|bTTRRTlgM@aQ@IBt@\ndg]B@NTBNtfY}[fyjVjf`@\ndg]BbInDp`BB{IICiEDUikUUMR@@\ndg]DPCmaBHJHRYf{uzYjYj}@@\ndg]HPAuPbBbDfYw[fzB@ij@@\ndg]H`AuPbDfY_[fz@`ij@@\ndg]L@DDBmIeye]SZjjjX@@\ndg]L`FM]l@cIEEideCeTsUKT@@\ndg]L`LVDL@cIIKDedhLkP@Tp@@\ndg]L`LnDD@cIIBhhd]ikTC@P@@\ndg^@pLCDDHWDRUeYWtzjjZi@@\ndg^B@BAMoHiieDeBimU@DP@@\ndg^D`EppbDenUuaff@Bf@@\ndg^D`NEPbDfUv{jZ@Bij@@\ndg^H@DCHhhhddYimTE@P@@\ndg^L@NAarJJZJUQ]KSUMU@@\ndg^h@BzSlDf^[WUvjiif`cT\ndg_B@DhpK[RY[U{FVh@Ih@@\ndglB@@Q]RYUumZjjZ`@\ndglD@@QImUUUjjjj@@\ndglD@@uIUUUmfYfj@dRVQP\ndglFPHkivpqLqDen{nzjjjh@@\ndglLpDp`BH|MBLbdRRRQSUUUT@@\ndgl`@@`fRefUWejjj`RIH\ndgl`@@z[ReU]Ujjjj`@\ndgm@hNdHR@a@a``PaJeynzjfZj@@\ndgmBPFE]NpQHQDiUf{jjjfX@@\ndgmL@DdAuInUg]jjZj@@\ndgmL`DVCl@cIICDmihmUUS@@\ndgm`PFy]NpBHBDiUUYjjjfX@@\ndgnD@KADfuUUVjjjh@@\ndgnD`H[`BLdTRbJRUUMUT@@\ndgnDpKXpbBBJBDfzUUijjjX@@\ndgnLPFe]CDpHRUVV[jjif`@\ndgnL`Fe]@HRevV[ijif`@\ndg|@@DjU_eZx{BAH@@BJ`\ndg|@@Dke]eVx{x@H@@@@\ndg|@P@bBbDfYweVx{``H@@@@\ndg|@P@bKbDfUvUz[S`@`@`@@\ndg|A@@cJz]mJ{n{nDpjjjjj`@\ndg|A@@rae]oIEEDieFpr]UUUUP@@\ndg|A@@rfE]oIEEhYiCBJ]UUUUP@@\ndg|B@@KSRYfuVXUmjP`X`@@\ndg|D@@MIfV]UivviP`R@@\ndg|D@@MIfV]UivxH@@`@@\ndg|D@@SHhmEDhcJg[T@@@@@@\ndg|D@@WHhheEhbtg\\D@D@@@@\ndg|D@@mIe]e^ftvefef`@\ndg|D@@mIe]e^ftx@H@H@@\ndg|F@@RaW\\bbTbfbi]WMUUMU@@\ndg|H@@RVUvU[cn`@`@@@@\ndg|H@@RVYYwySn``@@@@@\ndg|H@@RYfUWd}mh@@@@@@\ndg|H@@RfYU[GUn`@@H@@@\ndg|J@@RiWHheHmDTWUsUUMUP@@\ndg|L@@HtfYnUvG[ZdJAH@@\ndg|L@@Pdf{UeRh{Zjh@H@@\ndg|L@@t|bbbbbJcBmm@tCD@@\ndg|d@Dq]@\\bbbbfJSSimUSTs@@\ndg|h@DqnAIe[UTYNvjZ`@@@\ndg}@@@OIEEEDTmWSh@PDT@@@\ndg}@@@aJVYU^Svv`@@@@`H\ndg}@@@aJVYU^Svz`@@@@@\ndg}@@@aJnYU^Svz`@@@@@\ndg}@A@LINTjWvUz[SB@`@`@@\ndg}D@DTBrJISQJHrivu@@@@@@\ndg}D@DhBRY[VuFSmj@@@@@@\ndg}D@LHNRfueWXSn`BB@@@@\ndg}DPDp{@H`HRefUWd}njjjjh@@\ndg}DPFES@H`HRenUVrnFijifX@@\ndg}H@DdDfvUmQT{Z`@@@@@\ndg}H@DlDfyVu~GSZ@@@`@@\ndg}H@DxDf^YVyO[Z`@@@@@\ndg}H@IlLdTrTraS]Jt@EMQ@@\ndg}L`JXiTIAIf]VunNzVjZj`@\ndg}L`JXiTIAIf^vunNzVjZj`@\ndg~@`K@HRfYU_GUN`@@B@@@\ndg~D@DCDenUmQd{Z`@@@@@\ndg~D@EADfufUqT{ZZP`HBL`\ndg~H@DAIge[TYNvh@@@@@\ndg~J@DBaW\\bbTbfbi]WMUUMU@@\ndg~L@B@SRYfU]Z]mjPhD`@@\ndg\x7FD@L[`QIeyUTYNvjZ`@@@\ndg\x7FH@DpprJJJJKJmJfuUUUT@@\ndiD@`@RdjeVjj`@\ndiD@x@bLBBdJdFdNdAdDeZjjj`@\ndiDB@@PaR[UVjj@@\ndiDB@@QaR[VvjY@@\ndiDBB@QaSdfumjj`@\ndiDD@@IIUZYjhHR@\ndiDD@@qJYWjjX@@\ndiDH@@RUUVZjBD`\ndiDH@@RUUZjj@@\ndiDH@@RYWZjj@@\ndiDJHDpnDAbHbaahcIIJiIZe@@\ndiDL@@HTeUUffPQJh\ndiDL@@IdfWUij`@\ndiDL@@PTfuUifPSJh\ndiDL@@idiUVjj`@\ndiDL@@idiU^jj`@\ndiDNPHSB[a@XhXrRPzQZe`@\ndiDdAB[aANd^R[gVje@@\ndiDdAB[aANd^R[mVje@@\ndiED@BDDR[mVjj@@\ndiED@BXDR[mfjj@@\ndiED`Dka@HRU[fjf@@\ndiFB@BANEInvZjX@@\ndiFD@BADf{Ujj`@\ndiFD@BADf{Yjj`@\ndiFD@BADf{ejj`@\ndiFD@D@dfWUjj`@\ndiFD@LADf]Yjj`@\ndiFD`JxPBDivzji`@\ndiFD`JxPBLbdTljjX@@\ndiFD`JxPQDivzji`@\ndiFL@DBarJIQEjj`@\ndiFL@LAJRY{fjj@@\ndiF`@@SNGHhhcFjf@@\ndiFd@DpjDNrJJHqji`@\ndiGDAFxPSiGdf]UjiP@\ndiT@@DiUTjxVjih@@\ndiTH@@ReUxRfjef`@\ndiTH@@RfUXQajiV`@\ndiTH@@RfU|kahDB@@\ndiTL@@idfV^nxVfjh@@\ndiU@@@iJYWrnFP`H@@\ndiV@@@RfU|kadHB@@\ndiVH@BAIfUInFjZi@@\ndiVH@FAIfU[fFjjj@@\ndid@@DjUZnBAH@@\ndid@@DjU^nBAHBJ`\ndid@@DjUfaBB`@@\ndid@@DjWffB@h@@\ndid@@DjYUaBHP@@\ndid@@DjYmaBH`@@\ndid@@DjY}nBHH@@\ndid@@LdbRQk``R@@\ndid@@LdbRQk``b@@\ndid@@LdbbQxXF@@@\ndid@H@bBbFbAbDfYnnifj@@\ndid@p@bBbFbDfYoa`b@@@\ndidD@@EIYW[f@B@@\ndidD@@EIe]ih@J@@\ndidD@@EIfU[ffiP@\ndidD@@EIfU[hBB@@\ndidD@@GHhhdVyifX@@\ndidD@@IIf][hHB@@\ndidD@@QInUxV`@@@\ndidD@@iIYgxVB@@@\ndidD@@yIYVXV@H@@\ndidD`BDHaIf_[hHB@@\ndidD`BxHaIf^XZVfP@\ndidD`FDHcHhdhZzZVX@@\ndidH@@RUe^Fh@@@@\ndidH@@RYm^Eh@@@@\ndidH@@RYm^Fh@@@@\ndidH@@Rfu^FfiX@@\ndidHPBBHFHRYgVzB@`@@\ndidHPBBHFHRYgvzB@`@@\ndidH`ABHrJJIEn`HH@@\ndidH`NADRYWZZ@B`@@\ndidL@@HTfYun``H@@\ndidL@@IdfYnfZfj@@\ndidL@@IdfYoaZYf@@\ndidL@@IdfYoa`b@@@\ndidL@@KdfYynZej@@\ndidL@@QdfumnZZjBL`\ndidL@@XTfUfn`BH@@\ndidL@@`TiYeLjjj@@\ndidL@@rldTTqkjjj`@\ndidh@DKaAInV[fiZ`@\ndidh@DqaAIe[kffjP@\ndidh`DJaxHcHheCBjfid@@\ndie@@@EIYW[n@B@@\ndie@@@EIfW[hBB@@\ndie@@@GHhhdVz@``@@\ndie@@@aJvUxZ`@@@\ndie@@@aJyW[j@B@@\ndie@@@iJ[gxZB@@@\ndie@@@yIYVX^@H@@\ndie@`BDHaIf_[hHB@@\ndie@`FDHcHhdhZz@H`@@\ndieD@DpFrJIJFnZii@@\ndieD@JXDR[Y^EjZd@@\ndieDAHxAzQyIYW[j@B@@\ndieD`JXaBPRYgvzejX@@\ndieD`LIN@HRZufFZid@@\ndieH@DDDfyWaZ@@@@\ndieH@DXDfyWaZ@@@@\ndieH@HHDeYWaf@@BH`\ndie`@@pjX\\dTTUk`Hb@@\ndif@@@RUe^Fh@@@@\ndif@@@RUe^Gh@@@@\ndif@@@RYVzZ@B`@@\ndif@@@RYevz@``@@\ndif@@@RYfVF@b@@@\ndif@@@RfU~F``@@@\ndif@@@RfWzXBB`@@\ndif@@@rRJEKaj@@@@\ndif@PABHJHRYgVzB@`@@\ndif@PBBHFHRYgVzB@`@@\ndif@PBBPFPRYgVzB@`@@\ndif@`ABHRYevz@``@@\ndif@`ABPRYVzZ@B`@@\ndif@`ACDRYVzZ@B`@@\ndif@`BBHRYgfzB@`@@\ndif@`D@HRUe^EX@@@@\ndif@`FBHrJIJFn`BH@@\ndif@`L@HRf_\\jjjh@@\ndif@`L@HRf_ljjjh@@\ndifD@BADfyWaZ@@@@\ndifD@BADfyWaZjj@@\ndifD@BADfzwaZjj@@\ndifD@DCdfYTfZiZ@@\ndifD@FADfW[aZjj@@\ndifD@J@TiWTjjjj@@\ndifH@AAIfuxV`@@@\ndifH@AAJ[W[j@B@@\ndifH@BAIfuxV`@@@\ndifH@DAIVUxU`@@@\ndifH@DAIVUxUjj`@\ndifH@DAInUxV`@@@\ndifH@FAIfuxV`@@@\ndifH@HAIYV[j@B@@\ndifH@JAIYekjZf`@\ndifH@JAIYgxZB@@@\ndifH@JAJ[gxZB@@@\ndifH@NAIYVXZ@H@@\ndifH@NAIe]ih@J@@\ndifH@NAJ[VXZ@H@@\ndifL@BANR[efEjjh@@\ndig@@@HTfYun``H@@\ndig@@@h\\dTRQriZj`@\ndig@@@idiggJejj@@\ndig@@@kdigwJejj@@\ndig@@@xTjU^njjj@@\ndig@`D[`bDfUff`@h@@\ndig@`Hi`bDeVWajfi@@\ndigD@DpP[HhdhZyjfd@@\ndigH@DK`R[e^Eh@@@@\ndigH@LxPRVUfz`@`@@\ndigH`BiaBPrJJIEniZf@@\ndkL@`@BDeUUUjjjj@@\ndkLB`HSBCprRSEQIYjjjh@@\ndkLD@@iIUmUVZjj`aH\ndkLF`DkaTpBLbdtVafjjji@@\ndkLH@@ReUUVjjjh@@\ndkLJ@@imMJUUUZjjj`@\ndkLLHLi`bB|MbCbDeVUUjjjj@@\ndkLL`HS@|DjUYfjjjj@@\ndkLP@@anF]OIDhhjeIjYi`RKh\ndkLd@BgSADf{UVZjjf@@\ndkLdABWSAMd~rJZYRHijjjT@@\ndkML@DdAuInUgVjij`@\ndkND@D@dfWUUZjjj@@\ndkNF@BAIWSR[YVYjjfX@@\ndkNH@DAIeuUVjjj`@\ndkNJ`EaLdp|LddrQTrZjij@@\ndkN`@@imMJUUUZjjj`@\ndk\\@@LdbbbRuZQT@B@d@@\ndk\\@`@bDfUvUimN@B@@@@\ndk\\@`@bDfYYwZ]NB@@@@@\ndk\\@`@dDfUnukmN@H@@@@\ndk\\@`@dDfUvUimN@B@@@@\ndk\\@`@dDfYYwZ]NB@@@@@\ndk\\@`@qDfYYwZ]NB@@@@@\ndk\\B@@P]RYVyznTviBBH@@\ndk\\D@@wHhhhhbfESZAhD`@@\ndk\\D`ALHaIe[UzZU`@iiH@@\ndk\\H@@RYeg]itxH@@@@@\ndk\\H@@RZYZ\\SgZifjf@@\ndk\\L@@KTfYmUXUMjP`R@@\ndk\\L@@X|bbbbTa[nEijjf`@\ndk\\L@@htie]urnF``Ij@bX\ndk\\L@@htie]urnF``JZ@aX\ndk\\L@@iTie]{rnF``Jf@@\ndk\\LPDp`BH|LbdRRaRX]Mjj@B@@\ndk\\`@@iSRfYyUnEPJBja@@\ndk\\`@@j]RfYuUnFPJAjb@@\ndk\\`@@kSrQQQSQEngPJBja@@\ndk\\`@@p]rQQJJIFiXP`jJa@@\ndk\\`@@y]RVUmUae^@HZb@@\ndk\\`@@{SRVUnUag^@Hja@@\ndk\\d@Dq]@\\bbbbfJZ]MjjZe`@\ndk\\d@DrUCdfY[uXUujijY`@\ndk\\d@DsmB\\bbbTrQXUujjUj`@\ndk\\d@LHYCdimY^X]N`BJh`@\ndk\\h@DrfAIgeU^GSZfh@@@@\ndk]@@@iJYez\\hSdJBh`@@\ndk]@@@qJYweZ[SB@`@@@@\ndk]@pAt@a@``aIeoeRkSZf`@`@@\ndk]D@DhBRY[UWatvjZ@@@@\ndk]H@ALLbbRfTJiaf@Bfh`@\ndk]H@BtDfYmUXUMjP`R@@\ndk]H@DHDfYyWImMjhHA@@\ndk]H@DTLbTTRaR[mMjj@B@@\ndk]`PLJnTpBIBDiguermNfZijP@\ndk]h@HKiTpRYmfTYtz`HIb@@\ndk]h@HKiTpRgefTYtzZiZiBD`\ndk^@@@RYV{Vntx@`@@@@\ndk^@@@RYeg]itxH@@@@@\ndk^@@@ReUVZ]TziZ@@ABZP\ndk^@@@RfYU\\]Tz@@@@@@\ndk^@@@Ri_YVftzjX@H@@\ndk^@pFBPJPFPrJJJZIGitxHB@@@@\ndk^@pIBPJPvPRYfuUaTxH@B@@@\ndk^D@BADfyVux]Mh@@@@@\ndk^D@BCTfYmUXUMjP`R@@\ndk^D@E@dfYuY[eNB@jh`@\ndk^D@IADfvYWz]MjdHB@@\ndk^D@MBdie]vrnF``Jj@@\ndk^H@DAIVUm^GSV@@@@@@\ndk^HPJHJqjqIf[u^GS`b@@@@@\ndk^HPNHJrXaIf^UvGS``B@@@@\ndk^HPNHLR\\QIf^UvGS``B@@@@\ndk^H`BPHaInUm^GSj@@@@@@\ndk^d@DkaTCrJIQQHynWVjVZZ@@\ndk^d@LzULDRZUnTYtvjiZi@@\ndk^h@DkatLbbTTTU[iujejjP@\ndk_@@@Y\\daRRRTaMNjjjj`@\ndk_@@@pdif]uriUjB@j@@\ndk_@@@pldTTtRJrmMjfjU`@\ndk_@@@x|dTTTRJkit@HBH@@\ndk_H@NWPRfumUaeZ@HZb@@\ndklB@@F]RYe]ynZYif`@\ndklB@@P]R[e[_iZ@Hj@@\ndklB@@QSrJYJIJF]ZX@b@cH\ndklB@@QmR[fUxUZBBF@@\ndklB@@RURYYV|jZfij`@\ndklB@@SSR[VUVUZZfjPcH\ndklD@@QIe]URijjjj@@\ndklD@@QIe]e]Mjz@@@@\ndklD@@QIgfU}MjhD@@@\ndklD@@[Hhdhbdjz@Hjh@@\ndklD@@eJ[Vvfz`@jh@@\ndklD@@kIEMDdbnf``bd@@\ndklD`AtIAIVUm~fh@bh@@\ndklF@@PittfzugEVjjjh@@\ndklL@@PtfyWUxV`@j`@@\ndkl`@@kaRe[vTf@HZj@ah\ndkm@`MLHcHhhdcDfz@`Z|@@\ndkmD@DHCRYvUvUZh@J@@\ndkmD@DTCRUfWtYV@`e@@\ndkmD@DdCrIJJIPxUV@bE@@\ndkmH`FVPbDfUonkh@bZ`@@\ndkmH`NVPbDfUunih@JZ`@@\ndkmL@DpAuIfYeVejjZZ@@\ndkmL@DpIOHhhdddVyjiVfBN`\ndkn@@@RYfVya`Hbj@@\ndkn@pLCDDHWDRUeYWSjjijP@\ndknD@BADfyWUxV`@j`@@\ndknD@D@tf^UeFVh@J`@@\ndknD@D@|bbtTTUgVhBH`@@\ndknD@LALbbRbaRtvjh@@@@\ndknDPAWPbFbLbbRbJfkh@bf`@@\ndknD`ItpdDfUunih@Ji`@@\ndknD`ItpdLbbRaTtih@Ji`@@\ndknD`ItpdLbbbRLt[hBBi`@@\ndknH`It@aJYWunF``JX@@\ndknL@BACR[me]]Zj@B@@\ndknL@D@SRUVYu]ZXHB@cH\ndknL@D@]R[e[_iZ@Hj@@\ndknL@FASrJJIIJT]ZBBb@@\ndknL@M@iRYg^un``Jj@@\ndkoD@DJPwHheLeCAej@BX@@\ndkoH@DHpRYYUfSZ``h@@\ndk|@`@BLdTRbtQJagShD@@`@@\ndk|D@@QIeeUrYngVjijjP@\ndk|H@@RYegYngUN@@BHH@@\ndk|H@@RfYU_JGUN`@@B@@@\ndk}@@@iJUmUR[atpBJ@@@@\ndk~@@@RYkUdUgYNjjjjh@@\ndk~@@@RfYU_JGUN`@@B@@@\ndk\x7F@@@p\\dTRbfQjVGSBBheF@@\ndmL@@DjYUVGi@@@`@@\ndmL@@DjYeVdU@@`@@@\ndmL@`@bLbbbTQ[iV@@@@@@\ndmLB@@IerJJJZEnxVijf`@\ndmLB@@RURYUVJaejVjh@@\ndmLD@@QIe[VfeVi@B@@\ndmLD@@UJYWwJxZA@j@@\ndmLH@@RYVuiiV@@@@@@\ndmLH@@RYiYKnUjjjh@@\ndmLH@@RYiYKnVjjjh@@\ndmLH@@RffeZVVjjjh@@\ndmLH@@Rge[aNFh@JP@@\ndmLH@@rJJIQEneX@@@@@\ndmLL@@yTee[VFUX@bb@@\ndmL`@@pURfV[jVDHJbD@@\ndmL`@@siRfUmhVxHFJH@@\ndmL``Dke@HRYYeXYUjfVh@@\ndmLd@Dqe@TfUeZzUZZeZ@@\ndmLh@DkeAIefUaeVjYZ`@\ndmM@@@UJYY~nFP@@H@@\ndmM@@@eJYY^fEP@@`@@\ndmM@@@iJYewJEYB`b@@\ndmM@@@qJYm^neP`@@@@\ndmM@@@{IDeCDbjU@Bjb@@\ndmM@@@{IEEEEZzU@B@@@@\ndmMB@DpNETfYYZEiZjYZ@@\ndmMH@DHDfVUzzUZ`PH@@\ndmMHAHx@zIrJJIQEneX@@@@@\ndmMh@DkaePRYYe[iUifjd@@\ndmN@@@RYVuiiV@@@@@@\ndmN@@@RfVWiaT@@H@@@\ndmN@@@RfV]iaT@@H@@@\ndmN@@@RfV^kad@@B@@@\ndmN@@@RfV_kad@@B@@@\ndmN@@@RfWUiiTB@@@@@\ndmN@@@RfYWraV`XH`@@\ndmN@@@rQQJJFfEP@@`@@\ndmN@@@rQQQQVneP@`@@@\ndmN@`BBHRYe[ZQV@@@@@@\ndmN@`BBPRYUUiiV@@@@@@\ndmN@`BBPRYe[ZQV@@@@@@\ndmN@`DBHRYVuiiV@@@@@@\ndmN@`FBPRYVukiV@@@@@@\ndmN@`NBPRYegXYV@@@@@@\ndmN@`NBPrJJIQEneX@@@@@\ndmN@pN@H`HPHrRPqIZneUhDB@@\ndmND@BA\\bbbReInFjZjd@@\ndmNH@BAIfUmiEX@@@@@\ndmNH@DAIe[VfeX@@@@@\ndmNH@FAIe[VneX@@@@@\ndmNH@NAIYe^neZdHB@@\ndmNH@NAIfV]aeX@@@@@\ndmNH@NCHhheDVzU`@@@@@\ndmNHAH@Nb\\bbbTQ[iV@@@@@@\ndmN``DkaT@aIefUneVjVjP@\ndmNd@DqiTARYVUkiUijUh@@\ndmNh@DkaTDfVYVzUZiZi@@\ndmO@@@pdif]|jUZ``H@@\ndmT@p@AHbDbLddJRRjjj`@\ndmT@p@bBBEbDeYyzjjh@@\ndmTB`HSBCpRjuUZjj`@\ndmTD@@QIeU]jjZ@@\ndmTD@@iIUmUfjjBD`\ndmTDPDpOBICIHUHiIjjh@@\ndmTD`HdDiJiUZjjf@@\ndmTH@@RUgVYjf`aD\ndmTH@@rJQHiRjZZ@@\ndmU@HLT@a@c`bPaIggYjjf@@\ndmU@pLD@a@c`cHheEKFjfh@@\ndmUL`LZiT@aI[mZjZf@@\ndmVD@D@dfWUVjjh@@\ndmVDbNp`qNeI[Ujfjj@@\ndmVL@LAERYuUZjj`@\ndmWLaNeXS@|Ie^Rju_ZjiP@\ndmlH@@RfVvaFGajjjj`@\ndmn@@@RZUYX^gejjjj`@\ndmnH@JAJUe^D[iV`@@@@@\ndmt@H@bAdIdEdDfUvjZ@Bj@@\ndmt@h@bJbNbIbEbDfV[vFZjj`@\ndmtB@@PUrJZIJGiZ@H`@@\ndmtB@@QeR[f]FV``H@@\ndmtD@@QIe]TjZjjh@@\ndmtD@@QIgYVUZh@@@@\ndmtD@@UIfuwaZ@B`@@\ndmtD@@WHhidh^Eh@J@@\ndmtD@@aJye[ahBB`@@\ndmtD@@iJ[g_ahHBP@@\ndmtDPAdH`haIf]Un``J`@@\ndmtDPBTHbXaIf^un``JP@@\ndmtDPITICiAIfVYa`Ha`@@\ndmtDPNDHaXcHhheEVfBAb@@\ndmtH@@RVUv[fZjZ@@\ndmtH@@RVUv[jZjZ@@\ndmtH@@RYWZih@Jh@@\ndmtH@@RYeY[hBBh@@\ndmtH@@RYe[[hBBh@@\ndmtH@@RYeeZVjjj@@\ndmtH@@RYeeZZjjj@@\ndmtH@@RYe~[ffjZ@@\ndmtH@@RYvUeVf@@BL`\ndmtH@@RZWv[jjjZ@@\ndmtH@@Rfuu[j@BXBA`\ndmtH@@Rfuu[j@Bd@@\ndmtH@@Rfuu[j@Bh@@\ndmtH@@rIQQQWiXBH`@@\ndmtHPNBHHHRUUeeZjii@@\ndmtH`IBHRUe]xY`@hBH`\ndmtH`JBHRYVueYi@@BHP\ndmtL@@ETfYUVyifi`@\ndmtL@@F\\bbfbQXVjjj@@\ndmtL@@QTfyW^Eh@I@@\ndmtL@@QTfyW^Eh@J@@\ndmtL@@QdfygQehHB@@\ndmtL@@SdfVyyUjB@@@\ndmtL@@yTee[VE`BJ@@\ndmu@@@GHhhhhvf@bb@@\ndmu@@@aJyyVUjh@@@@\ndmuB@DpAeTfUejyjiV`@\ndmuB@DpFFTfUgjyjfj`@\ndmuB@DpFe\\bbRaRkfjZi@@\ndmuD@ITDR[e]xV`@h@@\ndmuDAHDEFU{HeEDh^F`HJ@@\ndmuDPHhfBHFHRYf~kjfZj@@\ndmuD`LVD@HrRRqIXYV`@`@@\ndmuD`NEeCDRUf_FYiZfBH`\ndmuH@DHDf]eYUj`@@@\ndmuH@DTDf^Uqej@B@@\ndmuH@DpDfUmYUj`@@@\ndmuH`BhPbDfUmzZZZ[`@\ndmuH`BhPdDfUmzZZZ[`@\ndmuH`BhPkDfUmzZZZ[`@\ndmuH`BhPqDfUmzZZZ[`@\ndmuH`NVPbDfUujZ@Bf@@\ndmuL@DpByIf]zfZjZh@@\ndmuL`DxiTHaIevxjfjih@@\ndmv@@@RYfVXXBHh@@\ndmv@@@RYfWXXBHh@@\ndmv@@@rJQFIJUjh@@@@\ndmv@@@rRJIIFUjB`@@@\ndmv@HDBHFPfPVPRYWZih@Jh@@\ndmv@`D@HRUVUeUj@@@@\ndmv@pEBPRPrPrJPqIXYj`@`@@\ndmvD@DATf^Uqej@B@@\ndmvD@DATfvUqej@B@@\ndmvD@DCdf^YyUjB@@@\ndmvD@EADfvUqej@B@@\ndmvDPBS@BHBLddjbReUjjj@@\ndmvD`La@BLddlRVFUh@H@@\ndmvD`La@BLddlTReUhB@@@\ndmvD`NePBDig{ljfZf`@\ndmvH@DAIgfVUZ`H@@@\ndmvH@FAIe[Vn`BJ`@@\ndmvH@FCHhhhdYUhJ@@@\ndmvH@IAIeYVfZVih@@\ndmvH`NdHaIe]Zf`@i`@@\ndmvL`IaL@HrRRqIPUV`B@@@\ndmw@`Dp`BDf]eYUj`@@@\ndmwD@ByPQInvVUZjeh@@\ndmwH@Dp`RYvUeVj@@@@\ndnDH@@ReVDijiZ@@\ndnDH@@ReVDijij@@\ndnDH@@ReVDijji@@\ndnDH@@ReVDijjj@@\ndndD@@iJUhPfijjj`@\ndo\\BPHP{@HtHrRPzIKJQZjje`@\ndo\\F@@Savtf^UVYjjjY`@\ndo\\NPHQevw@DHDrRYJKJHqjfii`@\ndo]B@L\\Dv|bbtTTUTZjjjX@@\ndo]LpN_JXH`o@xaIUkUWjfjjh@@\ndo^B@NAK]ImgV^ZjjjX@@\ndo^D@D@dfWUUUjjjj`@\ndo^J`CaLKP|LddqbbTlZijfhHi@\ndo^LpGZ[BHHHhHrJZQIIHrZjji`@\ndo^LpNWSCDpHJPRV]efyjjfZBH`\ndo|D@@QIgfUYuvj``h@@\ndo|D@@QIn[WVeVj@Bj@@\ndo|J@@S[_HheDdeDYMjBBb`@@\ndo|L@@RtfUVuwSZjp@h@@\ndo|L@@RtfvYWwSZjA@h@@\ndo|L@@iTinU]_ihHHjXBCP\ndo|L@@iTinU]_ihHHjXBC`\ndo|L@@kldTtTRQrEZBHbi@@\ndo|LPDp`BH|LbdRRbRQmvjhJ@@@\ndo}D@DTIrJZQQQIVwZjAh@@@\ndo}DPAuSBHJHRYg]nVzB@ij`@@\ndo}D`ILmBHrJJIIESQa``bfh@@\ndo}H@DHLbbTbjbRmvjj`@@@\ndo}H@DpLbbbLRVTWVj`@j@@\ndo}L`LvDl@cIIBidleIUZ`@i`@@\ndo~B@BAC_HiiMhdh]mjj@H`@@\ndo~B@BAK]InVuf[fjjif`@\ndo~B@I@moHhhdddcFEjVjYh@@\ndo~B@JAC_HheBhdh]mjj@H`@@\ndo~D@DAlbbbRQbRmvjj`@@@\ndo~D`MNpqLbbbRLRa[hBAkZ@cd\ndo~J`IaLNpaLddlRTrTEVh@bf@@\ndo~J`LXUMpBLdTVafffrjjjjj`@\ndo~L@LANRYye[iujBBJ`@@\ndo\x7FD@Lk`QIgff{yVjZjjP@\ndo\x7FH@DxPRYYe}ZyiZjjh@@\neFA@lhbL@\neFAAD`bJ@\neFAADhbL@\neFABDhbL@\neFABHhbL@\neFACDlRL@\neFB@Hc@@\neFB@Jc@@\neFBBHc@@\neFBBlc@@\neFBCDc@@\neFDBb`@\neFDBc@@\neFHBL@\neFJHaHh@\neFJHbHh@\neFJhUKhh@\neFPBc@@\neF`BL@\neFbHbHp@\neM@H~@\neM@ghz@\neMA@HPaIT@\neMABD`bM`@\neMABlZqIh@\neMACD\\QIh@\neMB@Jch@\neMBBHRZ@\neMBBPRY@\neMBBlRZ@\neMDARV@\neMFI@bMP@\neMHAIX@\neMHAIh@\neMJHaHv@\neMLRRWhv@\neMPBch@\neM`BN`@\neMhDRV@\neMhHRY@\neMhHRZ@\neMhHch@\neMpBXv@\neO@Hyj@\neOBBHcfh@\neOBCDcfh@\neOHBNZ`@\neOPBcfX@\neO`BNZ`@\nfH`T@@\nfH`X@@\nfH`p@@\nfHap@@\nfHbT@@\nfHbh@@\nfHc`@@\nfHcp@@\nfHdH@@\nfHdP@@\nfHdT@@\nfHd`@@\nfHe@@@\nfHf@@@\nfHfp@@\nfHg`@@\nfHgp@@\nfHpXT@\nfHppT@\nfHpp\\@\nfHppt@\nfHrpT@\nfHtHh@\nfHt`x@\nfI@@\nf`a@`@@FrJJIJQJrLxtsUSU@@@\nf`a@`@@ZrJJJQIPfJltEPTT@@@\nf`aA@@@YEEEEETdfB`Hbjj@@@\nf`aAb@NFlBHrJIKIRJUTY@AUST@@@\nf`aAc@DXH@HaxNBLbdRRaRfvcMUP@U@@@\nf`aIB@DXHYp@aIgVUueZZf@Bf@PI@\nf`aPP@B\\@bwlbfdRLRTIgMUT@Q@@@\nf`aQB@NJdBHRYWVyncH@JZjp@@\nf`aQC@IVLBPQHXdLbdLRTvf`eUPADu@@@\nf`a`R@NBT{pHaIe]nujL`@jZf@@@\nf`a`b@KRTCDRVUvuYgJ@BZj`@@\nf`a`b@KRTCDrIQISPiJLEPACUT@@@\nf`a`r@MPQ`ag@|LddqTTRbNkMU@QC@@@\nf`aaB@NRADYEDediiDZL`@ijj@@@\nf`aaP@I@QPQlbbTabaaeNMUSUUP@@\nf`aa`@D@IqInvuURTZjZff`HUV`\nf`axB@DXIhso@BDf]e]VdijZVZZ@`dj@\nf`i@@@DjYeW_YHRg^@@`B@@@@\nf`i@@@DjYeeoyHQm^@@@@h@@@\nf`i@@@LdbbbRVQSEBd{p@DA@@@@@\nf`i@@@LdbbbTRISIBt{p@DD@@@@@\nf`i@@@LdbbbbbRkEB\\[p@@PD@@@@\nf`i@@@LdbbbbbSwEBlYp@@P@P@@@\nf`i@@@LdbbbbbT_EBl[p@@PA@@@@\nf`i@@@LdbbbbbrKEBl[p@@PA@@@@\nf`i@P@@HD[HhdihdhUSbkN|uHPTUB@@\nf`i@P@@HTYIe[VUZLeiwfi@HjhP@@\nf`i@`@@BrJJJJJIXlUiuoP@D@@@@@@\nf`i@`@@DRYfyU]`mNmyi`@@B@@@\nf`i@`@@DRYfyU]`mNmzB@@@@@@@\nf`i@`@@LRYfYuw`eV]zhJ`@@@@@\nf`i@`@@VRYfYU]`eNMyh@`AB@@@\nf`iA@@@YHhhheLUfBdYwjBb@@H@@@\nf`iH@@@RM[IEDhmBdeS`eZL@@DMTD@@\nf`iH@@@RM[IEDhmBdmS`eZL@@DMTD@@\nf`iH@@@RlyJYY{WZ\\Dhu`@@bZ``@@\nf`iH@@@Rl{IEDhmCDcS`eZl@@DUTB@@\nf`iH@@@TUkIEEEhdd\\s`eV\\APUTlL@@\nf`iH@@@XDiJYYe_jRXHs``jJYa`@@\nf`iH@@@XDkIEDhhdmcRSAF\\DEQSLL@@\nf`iH@@@\\myJYfUuZ\\d[S`@@@H`@@@\nf`iH@@@\\myJYfUuz\\d[S`@@@H`@@@\nf`iH@@@\\m{IEEEDedkSdcZ\\@@@AD@@@\nf`iI@@DJlxBSJvmjtYKQkMR@PuQ@@@\nf`iI@@HXIXBRsKkZtxkSoSUP@@@@aA@\nf`iI@@H\\EhFQJJIPiIKdeZ]z`HajTh@@\nf`iP@@@NRifyWU`eVMzjPZBbP@@\nf`iP@@@VRifyWm`eNMzjPZBbP@@\nf`iP@@@^RifyW}`eVLzjPZBJP@@\nf`iPB@LD@DYHhbhheD\\TtYwjY`@@H@@@\nf`iPBDK^@D@eJYfUuZ\\d[S`@@@H`@@@\nf`iP`@BJ@aInUUm^BUiwfjjh@F@@@\nf`iP`@BR@IIf]UUV\\UiwfiZZ@H@@@\nf`iP`@B\\@aInVUuQRUiwfjij@H@@@\nf`iP`@FB@QIf[eU~Rtzwff@@@H@@@\nf`iQ@DK^@BTifYWUirQmN@@@@b@@@\nf`i`@@@IKLlj{pRkN}p@@@@@@@\nf`i``@M@YdTTTTQaRyIQg^jBb@@P@@\nf`ih@@@LDYvRJIQPiIJcIJtX@@`ZhH@@\nf`ih@@@\\UYvRJJJJsIJgIZMX@HBJhH@@\nf`ih@@@\\eYvRJJJJUKJgEZMX@HHFhH@@\nf`ip@@@N}dbbbbRQrhJQmV@@@@J@@@\nf`ip@@@V|eLsJzmNRMip@@@DP@@@\nf`ip@@@XTeLwOvmNJt{pPQT@A@@@\nf`ip@@@XUdbbRRRaRiqVg^BBJ`@H@@\nf`ip@@@XdeLv{ZmNRUYpPQP@Q@@@\nf`ip@@@XdeLv{Z}NRUYpPQP@Q@@@\nf`ip@@@XheLwKkkNRT{pQAU@@@@@\nf`ip@@@XmdbbbTTqVXJQg^@H@@@@@@\nf`ipB@BBdBHRYeY_Y`nRlzBAJiXh@@\nf`iq@@BBdAIf]UUV\\UiwhH@@@@@@@\nf`iqB@HLEpBHeJkOrnBBd{uKSL@E@@@\nf`q@@`@QBhbtQzHRYegeudcN``@`b@@@\nf`q@A@@QGhaIe]fuzLlz@Bh@H@@@\nf`q@P@@HMyIgUe[]V]yjZ@Hh`PI@\nf`q@P@@HMyIgfU{]V]yjhDHh`@@\nf`q@P@@HTyIgUfUc^lyjZBB``PI@\nf`q@P@@HU{HhlhheEbhvkMULttr@@\nf`q@`@@LRYfWg^Qg^ZB`@@@@@\nf`q@`@@LrJIJHiQITx{t@QL@@@`J@\nf`q@`@@^rJIJEJIKTYYt@Dp@P@ar@\nf`q@`@@^rJJJJHpkTXkSPTPUT@@@\nf`q@a@JZADFbLbTTTtRROIN}TmPLA@@@\nf`qA@@@ILrj}jISoM@a@@@BEH\nf`qA@@@YDhhdmECJ\\UYfiVjZP@@\nf`qA@@@YDhhdmECJ\\UZfiVjZP@@\nf`qAB@C@bLbRbbbebpmV]TAECTP@@\nf`qAP@@De[vQQQSJJFTVcNZdJHbP@@\nf`qA`@@FmdbbdTUrRiIVjBh`jd@@\nf`qA`@@N|dsLjolcZlt@@@T@@@\nf`qAp@@HiIUgYEDhdeDUBLEIjfjjZ`@@\nf`qHB@DXIp@PdskKJzcN|uL@@@@HD`\nf`qHP@DXxHDg^rJIQSPiITyhsSUUUS@@@\nf`qH`@DLeXELbbTVRTQfcN|uMUUUP@@\nf`qH`@DXEXFdfYfWVYHufjjYZj@@\nf`qH`@DXUXAlbbbJRRfaJN|uUUSUP@@\nf`qH`@DXtX@lbbbbbQRSIF\\uUMULp@@\nf`qIB@DXIHP@aIgYfuyJ]yjZXHB@PI@\nf`qI`@DXEXBmYEEEEDldVRMYjjfVj`@@\nf`qP@@@PRkfUWvQmVj@@@J@@@\nf`qP@@@^RYWUe^cKN`@j@B@@@\nf`qP@@@^Rfuue]gKNh@J@B@@@\nf`qPA@NBAD^bDfUuYWhrsh@I`@`ACd@\nf`qPB@DX@DILwLjoiuoMUUUUT@@\nf`qP`@DBAKHheHdhbmPSoMUTa@P@@\nf`qP`@DXAqIfWnUrL]yjihHB@@@\nf`qQ@@FRAdTRTbdTLMYwfjjjjj@@\nf`qQB@G^`@HRkfUWvQmVZ@@@J@@@\nf`qQP@DX@ISoILrl{jsfcMUMMUT@@\nf`qQb@LD``P@cIICDhhlUrSoKUST@@@@\nf`q`P@L@PHrSJwJwJmhsUAAQQ@@@\nf`q`P@L@PZvQQISQIPiVg^ZhBBjH@@\nf`q``@D@EdTRdTTqVYIwfji``H@@\nf`q``@D@HdsOZvjmN|uT@@@@@@\nf`q`b@ILD@HrQQJJMQITX{uMTt@D@@@\nf`qa@@D@RYyeg^Qg^Z``@@@@@\nf`qa@@E@rQQIZYQF\\EjuA@TuQ@@@\nf`qaA@ODADRbLbbbRRaRsAV]AAD@D@@@\nf`qaP@D@hIVdfVfy{IrgFjjfjj@@\nf`qa`@L@PKHhdheEhchsoMTD@@@@@\nf`qa`@L@QqIgfUnyZTYjBBJh`@@\nf`qi`@DTxIPC^rJIQQJiILyISUKMUU@@@\nf`qi`@FRt{pDDR[mfUuVkNZjhDB`@@\nf`qp@@@Hpds\\rj~gV|uP@@@@@@\nf`qpP@DXxBQoYEDhihUDZBuYijjji`@@\nf`qpP@DXxBSoYEDhihTdjBtYijjji`@@\nf`qpa@LR}A@@`PQddaTTRRUtxuejBPha@@\nf`qq@@BBdAIf]ueV\\]zB@f@@@PE@\nf`qqa@FRUAE`AE@cIICDedeDJQgKTuMMR@@\nf`y@@@DjYeU\x7FYHRmF]x@B@D@H@@\nf`y@@@DjYegvYHQmNmx@@@BHA@@\nf`y@@@LdbbbbbfkEBMIuo@@@@@@@@@\nf`y@@@LdbbbbbfkEB]Jqo@@A@PA@@@\nf`y`@@@ISKJmmQ`cZ][p@@@@@@@@\nf`y`@@@ISKONwS`iZl{p@@@@@@@@\nf`y`@@@YHdhddhTbTeiQg^@@@@@@@@@\nf`~@`@@HR[UUUUjjjjh@@\nf`~@`@@TReWUUVjjjjh@@\nf`~@`@@XRfUv}ZjijihDFP\nf`~A@@@IJskNmSUMTtABGb@\nf`~A@@@ISjjjkSLsMTBbDbqDjP\nf`~AJ@HHpSdmV|CprRSESSSSMUUUT`@@\nf`~P@`LZ@DHBBAB`cHheDdiXduUTuT@@\nf`~PQ@FBUhu`AD@aJUYn{zjjfZ`@@\nf`~X@@@TYhwdiUUU]jjjjj@@\nf`~`J@NPQafcN|CprRRjYQQFMTuSS@@@\nf`~`b`KLLBHHDTBNA@`aIneUYYjjjZ`@@\nfbc@@@DjYeUU]VJEKQ`ybd@B@D@@B@@@\nfbc@@@DjYeUoUvRDkQoIcd@B@@@@B@@@\nfbc@@@DjYeU\x7FUVRDkQg^Sd@B@D@@B@@@\nfbc@@@DjYeeU_VZEJt_ICd@@@@`D@`@@\nfbc@@@DjYeeou~RD[W`qSd@@@B@P@`@@\nfbc@@@LdbbbTRrTroIBMks`ir@@@@Q@@H@@\nfbc@@@LdbbbTVraVSIBMkugIr@@@AP@@@@@\nfbc@@@LdbbbTVtRqSEBMjsoIr@@@@T@@H@@\nfbc@@@LdbbbbbVVrOEBlXKoIr@@D@B@@P@@\nfbc@@@LdbbbbbbQQsEBMKuhir@@@@@@@@@@\nfbc@@@LdbbbbbbQQsEBMKuhir@@@@QC@D@@\nfbc@@@LdbbbbbbcJwEB]Hu`ir@@@@@@@@@@\nfbc@@@LdbbbbbbcJwEB]Hu`ir@@@@DS@D@@\nfbc@@@LdbbbbbbcJwEB]Jq`ir@@DA@@A@@@\nfbcA@@@ILk\\l|{txhug^BgKRtBPBAQ@@@\nfbcA@@@ILsLjmwLDkqhnRGKP@@@@@@@@@\nfbcA@@@IRlrrk{pQSbgVBgM@@A@@@@@@@\nfbcP@@@JrQQJJZYIEITxKQkN|gH@@TUP@D@@@\nfbc`@@@IRlrrk{pQSbgVBgMT@A@@AP@@@\nfbc`@@@YHheDdihhTZLD[P[^Sd@@@@@@@@@@\nfbc`@@@YHheEMDXlijREhuoQSd@@@@@@@@@@\nfbeA`@@^rdrjljmkXKSUAAQT@ab@\nfbe`P@J@QjNQQJZZJJJYWrVjjAbJH@@\nfbe`a@KDtBlEVYEEDeDh]ddfR``hfzj`@@\nfbeaS@Lfl{rPPd@a@QddRTRRTTWTtFj`hFXf@@@\nfbepP@LZbAC`iLjmmnvjtuUMUTuP@@\nfbepb@BZ}IPHaIf]V_VUgHHBfjjh@@\nfbm@P@@BMGHhhhhhhm\\esRoNBt@PT@UP@@@\nfbm@P@@HD[HhdihdiddYSbk^BuHPTUMP`@@\nfbm@Q@NV\\DDPfHrJJIQPqIJFLUKT\\pPM@LQA@@@\nfbm@`@@HRYvYfUWTYrPyZh@@@H@@@@\nfbm@`@@YRYVvW[WhpThi`@ij`@b@@@\nfbm@a`FZADDbAQ@XaLQfHrJJJZIFYJK\\ehwhpQDT@QQ@@@\nfbm@a`FZADDbAQChbLQfHrJJJZIFZKP|ejpTpQDTDDQ@@@\nfbm@p@@JMxJ\\bbbbbbbRegAZb{KPADPLQ@@@\nfbm@p@@JmxJ\\bbbbbbTRacAZb{KPADDLQ@@@\nfbmAP@@BLENQQQQQQQYG[bm^]Eh@bHAJ`@@\nfbmAP@@BLGNQQQQQQQYGGbm^]Eh@bHAJ`@@\nfbmAP@@BUGNQQQQQQPeIG`mNBehIb@@b`@@\nfbmAP@@HCGNQQJIYJJKSDeEZBejjjjjjj@@\nfbmAP@@HeENQQJJJIKZIUgMNmyj@H@Bj`@@\nfbmAP@@JMxNQQQQQQQIRw`mQ\\eh@bHFB`@@\nfbmAP@@\\e{NQQQJJKFIKYgEFbehFH`HB`@@\nfbmAP@@\\e{NQQQJJKFIKYgEFbehJH`HB`@@\nfbmH@@@\\myJYfUu^zgIFtx@@@BJj@@@\nfbmH`@EVBdGlbbbbbbTRacAZb{KPADDLQ@@@\nfbmH`@JRUDBTin]UUU~Bt[pZB@@@Bh@@@\nfbmHp@J\\DhBC^SgHheEDjheEdsdeNBuRsUUUU@@@\nfbmIR@LLDiAoIr@HrJSJIHjIQY\\EIS`uUJuUUUP@@\nfbmPB@NA@DYHhhhddmcEJ\\e[Sj@H@`jj@@@\nfbmPB@NQ@DYHhhhddmbeJ\\e[Sj@H@`jj@@@\nfbmPBDK^@D@eJYfUu^zgIFtx@@@BJj@@@\nfbmPP@KA@kr\\bbbbbbTRacAZb{KPADDLQ@@@\nfbmPQ@ARMyNPQAHaIf]UyYugIJ\\FB@ijjjJ@@\nfbmPa@NVtx@PHHrQQQJIPjXiTD[r\\uK]S[@D@@@\nfbmPb@AJ|dDPdrmrljoSfgQs@DMPTBD@@@\nfbmQB@AJRBHRYVyV[WisShy`BFhJAB@@@\nfbmQB@EZBBHrJIJZIQQYHtxhr\\pACUAHA@@@\nfbmQ`@DX@sJSJmsJkyJNbEKUM@@@E@@@\nfbm`P@A@BgJSLsLoOsEZ}ZKPADABM@@@\nfbm``@A@BdsLsJk|qVoVbt@Q@PeP@@@\nfbmh@@@XIQRTsNj~rkNRtgHD@DU@@@@@\nfbmhR@DXyJroIrBPrJIQQJIYPyTDZs`sUMUUURp@@\nfbmi@@DTxIPLbbTTRqbRfSNRUxKUKM@AUP@@\nfbmiP@DTxIPC^SgHheEDjheEdsdeNBuRsUUUU@@@\nfbmiP@DTxIPMVSgHheEDbmDddsde^BuRsUUUU@@@\nfbmiP@DXXKPC^SgHhdheDYeEeSdmNBtuUUUUK@@@\nfbmiP@LF]EHIJugIEEEDdhjllRegAcUUUPHET@@@\nfbu@AP@QAHadPJHeDZbGQ@XaLQfHrJJJ[PrZJ[TyzMLuUULuP@@\nfbu@S@FZCDDPRH\\DILs\\}|r|dgLDQDuKTH@@\nfbu@`@@IRYV{eg^irNX@aj```@Py@\nfbu@`@@YRYWYeg_hrJVeffjef`@@\nfbu@b@AVADYEDeCMHiXdjLSf@Bji`@@@@\nfbu@b@AVADYEDeeMHiXdjLSf@Bji`@@@@\nfbu@b@AVADYEEDeKHiXdf\\Sf@`ji`@@@@\nfbuAP@@BtFNQQQQQJKGIISk^Z@HH@j`@@\nfbuAb`BJ\\BHxDRbHqFXcHhhmDiXhmDpPTpPQLDDP@@@\nfbuHP@DTtdCHyrJIJHqSSIQTxEKUMUUTsP@@\nfbuI`@DXtX@dyEEEEDbddUFRLyjjZjZfX@@\nfbuIp@DXyHBcV|gNQQJJIQYJGJ`gAZZjjjjj@@\nfbuPJ@CA`cANJ}dGaddfJbTQbbvejJVjjjjYf`@@\nfbuPb@GQxDDPdrnlkk]QakP@T@EMP@@@\nfbuPr@FVQSaoIAHIM\\w[KntDxMUUULuMP@@\nfbuPr@NBYhwdyAbIJsNk[NbdxLtmTuUUPHP`\nfbu`P@D`EGNQQQQQUJYJIb`iZjjjjfZ@@\nfbu`a@HLx@JpDYHheHiXddmgQBfje`@@B@@@\nfbuaP@L`pIUdifV^}}ZR|FjjjB@k`@@\nfbua`@D@uYIge]nyTTdyZ`@jh@@@@\nfbupb@IZCrpHaIe]YfWjcOA`@jjYZb@@\nfbupr@DDhJRgIrBHRYYymY_IRwiiijjjj`@@\nfby@`@@HR[UUUUUZjjfjj`PT`\nfby@`@@HR[UUUUUZjjjjj`@@\nfby@`@@YRUUUUUUjknknj`@@\nfbyA`@@LdeJl{jjkSUMLsU@haxjSKd\nfbyPH@BZ@bR`qSgHieDeDXdhhuUSUTs@@@\nfb}@@@DjYeeou~RD[Wdy@@@@`H@@@@\nfb}@@@DjYee\x7F]^RD[S`q@@@@@B`@@@\nfb}@@@LdbbbTRrJROEBMipT`@@@@DP@@@\nfb}@@@LdbbbbbRJvcCBTzHT`@A@@@P@@@\nfb}@@@LdbbbbbRVNSCBTzJ\\`@QDTB@P@@\nfb}@@@LdbbbbbRVNSCBTzJ\\`@QDTD@P@@\nfb}@@@LdbbbbbT^VgEBl[tT`@A@DTpD@@\nfb}@@@LdbbbbbT^VgEBl[tT`@A@DUPD@@\nfb}@@@LdbbbbbTqrOEBlXLT`@A@EEPB@@\nfb}@@@LdbbbbbqfvSMBlYr\\`@A@A@@@@@\nfb}@B@@RBSJwKON}NJMYr\\p@@@@P@@@@\nfb}@B@@RBSLl|{vkART{r\\p@@A@@@@@@\nfb}@B@@RBSLl}kvkART{r\\p@@A@@@@@@\nfb}@B@@RBSLsKoN{AJlxJ\\p@P@@@@@@@\nfb}@B@@RFQQISQJJZUJgEFmyNX@@@B@@@@@\nfb}@B@@RFQQQJIIQIKEgIF|ENX@@@H@@@@@\nfb}@B@@RFQQQJIIZJYEgIFmyNX@@@@H@@@@\nfb}@B@@RFQQQJJIJIIEgIVCfJX@@@B@@@@@\nfb}@B@@RFQQQJKPiIII`iJlzJX@@@@@H@@@\nfb}@B@@RFQQQJKPjJEI`iJmyNX@@@B@@@@@\nfb}@B@@XfQJJJJIIPy[bmNlENZ@@@@@@@@@\nfb}@B@@XfQJJJJJIJHgfc^\\fNZ@@@@@@@@@\nfb}@P@@HuYIeYUWUVcEF]yNViBBJ`B@@@\nfb}@P@@HuYIeYUWUVcEF]yNViBBJjjF@@\nfb}@`@@DRYfu{VuXIVg^Sei`P@@@`@@@\nfb}@`@@DrJJJZIQIIHlEksdqsA@@@@@@@@@\nfb}@`@@IRYe^um]HpTcVCEhH@@@J`@@@\nfb}@`@@LrJJJJHpiII\\dkSoIsTED@@@H@@@\nfb}@`@@LrJJJJHpiSI\\dkSoIsTED@@@H@@@\nfb}@`@@LrJJJJHpqJH|dhw`isTED@@@H@@@\nfb}@`@@LrJJJJHyISI\\dkSoIsTED@@@H@@@\nfb}@`@@LrJJJJHyJIK\\dkS`isTED@@@H@@@\nfb}@`@@LrJJJJJFHpi\\UjsoIrtCA@@@H@@@\nfb}@`@@LrJJJJJFHpi\\UjsoIs@D@@@@@@@@\nfb}@`@@LrJJJJKIIIH|Djw`isTEP@@@@@@@\nfb}@`@@QrJJJJIIQ[Rldiq`~Rt@@@@QP@@@\nfb}@`@@YRYVumUehrVkNBeijZfjjj`@@\nfb}@`@@YRYVum[ehrRkNBf@BjjjjJ`@@\nfb}@`@@YrJJQIFYIIKDyKUgQRuUTuPAT@@@\nfb}@`@@YrJJQIFYJYKDyIUgQRuUUU@AU@@@\nfb}A@@@IKLlrjk|Dip\\qSP@@PEAA@@@\nfb}A@@@ILrrkszlyHuoIs@@@@P@@@@@\nfb}A@@@ILrsvoZlEISoIrtDPD@@P@@@\nfb}A@@@ISZvmkZlxkSoQSP@@@AU@H@@\nfb}A@@@ISZvmkZlxkSoQSP@@@AU@P@@\nfb}A@@@IS\\lrr}|UjwlacP@@DAL@P@@\nfb}A@@@YDhhhhdeCenJtzpTyX@@@@@@@@@\nfb}A@@@YDhhhhdeCenJtzpTyh@@@@@@@@@\nfb}AP@@HeGNQQJJIQKIIVgIJlGrVi``@BJ`@@\nfb}A`@@^sdTTTTRRRTqXIScQBeh@`@HB@@@@\nfb}Ab@HHp@HrRRqQJKQYSRtZwhirm@@@@@@@@@\nfb}P`@FJ@yIfY^]oTcIFmyNV`hJI`B@@@\nfb}QB@I^DBHrJIKJSQQIHtYjw`is@AUTC@E@@@\nfb}Q`@EV@`rSJvlkjmFRt{r\\mR@A@@D@@@\nfb}`@@@ISLsJr{tdjqh~r@@@@AD@@@@\nfb}`@@@YHhhhhdddbj\\dxtPy@@@@`B@@@@\nfb}`@@@YHhhhhdhebZRUXt_I@@@@@``@@@\nfb}`@@@YHhhhhdhehZRUXt_Y@@@@@b@@@@\nfb}`@@@YHhhhheEDmZRTxrPy@@@@`H@@@@\nfb}`@@@YHhhhhecLej\\eXsdy@@@`@`@@@@\nfb}`B@I@qDefYe^}~RtzpTyh@@@@@@@@@\nfb}a@@A@RYVvWVuhrVg^Sf@@B@@@@@@@\nfb}a@@B@rJJIJZKQZHldKW`is@@@D@@@@@@\nfb}a@@I@RVYfU{wyKSkASe`@@@@@@@@@\nfb}a@@I@RVYfU{wyKSkASf`@@@@@@@@@\nfb}i@@DTxIPLbbTTRqbRfSNRUxJ\\mTlt@EUD@@\nfb}pB@ARlBHRYWYee}hpsk^Sf@Bjih@B@@@\nfde@@@DjYeew]daZCD@BBBH@@@@\nfde@P@@BLGHhhhhhhlcqVoNbt@QD@d@@@\nfde@P@@B\\EIfYfWgXkWkQZ@H`HR@@@\nfde@P@@B|EIfYfW^XkSkQZ@H`Ab@@@\nfde@P@@B}EIfYfW_XkSkAZ@H`AJ@@@\nfde@P@@HmEIeYVuuhqQkNZdHHfjH@@\nfde@P@@HuyIe[UWZhrRcVZd@JjjH@@\nfde@P@@J]{HhhhhhdeBpV`vbt@Q@LD@@@\nfde@P@@J]{HhhhhhdeBpV`vc@@A@T@@@@\nfde@P@@V}GHhhhhdddfpRgFBt@P@dT@@@\nfde@``ARADDb@qDXaIf]UUUYqVg^``Jh@h@@@\nfde@b@AZAHILkmmrmFBdFL@ETp@D@@@\nfdeAB`A@bBQCH`LQFHrJJJZEIII\\dkSoPQDT@T@@@\nfdeAB`E@bBQCH`LQFHrJJJZESII\\DkSoPQAP@TP@@\nfdeAC@A@bKQDXaIe]ke_hpRoA`@j``H`@@\nfdeA`@@BBdsLsJklUkuhm@DPDI@@@\nfdeA`@@DMdTTTtRRVLXKSk^ZXFBbjH@@\nfdeA`@@ZcdbbTRVTJVipRoAhHbH@J@@@\nfdeA`@@\\udTTRbVfaRYrQ`qZA`h@B@@@\nfdeH@@@\\mEJYfUuWirQmN@@@@bh@@@\nfdeH`@JZ|DBDfV]VUugEF]yjeifZj`@@\nfdeI@@DRUXFQQZJIPiIJVcVCEj@bFiR`@@\nfdeI@@DTYxBSOKKropQgAbuMT@@@@@@\nfdeI@@D\\tXBSOLkK{KRcAbuA@eTiP@@\nfdeI@@HXHHBRrr{lkQbmAcSU@D@@@@@\nfdeI@@HXIHBRsKj|kSbmAcMU@D@@@HPP\nfdeI@@JRUDBTwNjjkpVc^CPP@@@P@@@\nfdeI`@LZCDDeYHhhidhblbTM[pZjjhDBh@@\nfdeI`BLTEhDGZewIWNlkJ|DZLFMUMUUUU@aR@\nfdeP`@AN@EIfYfWgXkWkQZ@H`HR@@@\nfdeP`@E^@{HhhhhhdeBpV`vbt@Q@LD@@@\nfdeP`@E^@{HhhhhhdeBpV`vbuHSPME@@@\nfdeQ@@DXAdTTtTTRbqUXp_QZh@``A@@@\nfde``@A@BdsLsKslUiuhm@DPAI@@@\nfde`a@AZlBHYDYEDeDXhiij\\Lywh@bifjJ@@\nfde`b@H\\d@HRfYfWwQJMxLZjfZ``H@@\nfdea@@D@RYyVuUQRMXLVh@@@@@@@\nfdea`@D@DGHhhhieeLbrVkN|uPL@AP@@@\nfdea`@O@T{HhhhhhdeBpV`vbt@Q@LD@@@\nfdei@@JJMYpLbTTRbbQVwMBUxMAATDAB@@@\nfdei`@LZlFHIJrQQQQYQEYDhZw`uUUPHEP@@\nfdei`@LZlFHIJrQQQSIQEYDhZw`uUUPHEP@@\nfdep@@@NCdbbbbRVTqhJQm^@@@@hh@@@\nfdep@@@XMdbbTRRReRhHu`qBBbj@@`@@\nfdepA@BLBBlmVYEEEDhXXmNJd[tX@`@HH@@@\nfdepB@DXb@HrJIQIIHqIDhkPXsUAA@@@@@\nfdi@P@@Hl{HhehiheDT[sTuUSMPHD`\nfdi@S@HRMX@PkptDIUvnmZoAM@ASUT@@@\nfdiAP@@HtxJSOLkkMISTAATs@@@\nfdiPa@LR``@PHHrRPjJJKHyF\\mPLQEP@@\nfdiQ@@DT@drsMsJvbuTEDU@@@\nfdiQQ@LJ``ug@BM^FRRVIKIRIHTeh@Ijj@@@\nfdiQb@LR``P@cIIBhheedmjru@pQU@@@\nfdiQb@LR``P@cIIBhhhlcdYru@qDU@@@\nfdiY`@D\\Eiw`TbdloJskjuUT@EUP@@\nfdi`a@OJtCDMbIKJrwzsAT@QMUT@@@\nfdiqb@JLtRR`RFQQQYIPiIIgJVjVjj`@@\nfdiqc@DXipu`QBoCPQdTRbtQdrRIRZjjZjd@@\nfdm@@@LdbbRbaRRsA\\UKU`~b@@@@@@P@@@\nfdm@@@LdbbbbbfjSCBUIuoAb@@@@APA@@@\nfdq@P@@HMYIeUU{UZjjijh@@\nfdqPP@JV@bT\\bbTrTQRRSUUMUL``z@\nfdqPQ@FBUhu`AD@aJUYn{ujjjYjh@@\nfdu@@@DjYUUUU`nR\\GtP@@@@@@@@@\nfdu@@@DjYee]}daVuxLP`I@H@H@@@\nfdu@@@DjYee]}daZlGtP@@@@@@@@@\nfdu@@@DjYee]}faRlGtP@@@@@@@@@\nfdu@@@DjYee\x7F_daFtxLP@@@@@@@@@\nfdu@@@LdbbbTRerwIBMiw``@@@QT@`@@\nfdu@@@LdbbbTRerwIBMiw``@@@QTA@@@\nfdu@@@LdbbbTRrJwEBMipXp@PP@A@@@@\nfdu@@@LdbbbTVtjSEBMjpXa@RA@@P@@@\nfdu@@@LdbbbbbTUHeRlXOh`@@@@@@@@@\nfdu@@@LdbbbbbVVOEBlXOh`@A@EBA@@@\nfdu@A@@Q@XaIfV^]nXJRc^]F@@@@B@@@@\nfdu@A@@Q@XaIfV^^^XJVcN}F@@@@B@@@@\nfdu@A@@QBhcHhheDeDULpTmV|FL@@D@@@@@@\nfdu@B@@ABTsJk^wb`mJmzM@@@@DP@@@\nfdu@B@@ABTsJk^\x7Fb`mJmxM@@@@AP@@@\nfdu@B@@AFRJJJIIEYHeIFuXLZ@B@@@`@@@\nfdu@B@@AFRJJJIIQIDeIFtEtZ@@@@``@@@\nfdu@B@@AFRJJJIIQSDeIFtEtZ@@@@``@@@\nfdu@P@@HLGHheDdhidYJqk^bFKUUUUUUP@@\nfdu@`@@ARYegg[fBdhwgQZA@@hZA@@\nfdu@`@@ARYegggfBehsoQZA@@bZA@@\nfduA@@@IKJrkN{NJMipXt@A@@@P@@@\nfduA@@@IKLl{[oAJmhpXt@@E@@@@@@\nfduA@@@ILroZviFBdZpXmA@@@A@@@@\nfduA@@@YDhdhddhTf\\uXs`qh@@@@@@@@\nfduA@@@YEEDhmEhTjLehu`qZB@@@B@@@\nfduP@@@ARige[uVBeip_Qjjj`Pbh@@\nfduQ@@FRAdbbTJbRrRIQVcVCFiPHJ@H@@@\nfdu`@@@IRmjjviJBdZpX`@@@@@@@@@\nfdu`@@@IRmkZviJBdZpX`@@@@@@@@@\nfdu`@@@IRmrsziFRtZpX`@@@@@@@@@\nfdu`@@@YHheEMDXTjREhu`q@@@@@@@@@\nfdu`@@@YHheEMD\\djREhu`q@@@@@@@@@\nfdu`@@@YHheEhTddj\\EHu`q@@@@@@@@@\nfdu`@@@YHheEhTidj\\EHu`q@@@@@@@@@\nfdu`@@@YHhhhhdhbZRUXp_Q@@@@@@@@@\nfdu`@@@YHhhhhdhcjRTxp_QB@@`H@`@@\nfdu``@C@PdrmljmtYKUoAbuHAEUTT@@\nfdua@@E@RfVU]uZLEhu`qhJ@@@@@@@\nfdua`@E@QyIefUW]iqUcNCEj@@@JhD@@\nfduh@@@XUkrTs\\zsoSbcZ\\FHPQTa@E@@@\nfdy@P@@BtGHhhhheEcliuoM@DD@T@@@\nfdy@P@@HHkHheDdhcLeHpXmPPL@@@@@\nfdy@a@CVADQbLbbRrbbbQuF^C@ATC@P@@@\nfdy@c@OAAD\\BAABSJzlrsQchp@UA@p@@@\nfdyA`@@FcdTTTbbveVhsUf`jHbj`@@\nfdyAa@OAbBPUHYEEDhddYeFRMZB@B@i`@@\nfdyH@@@PL{IDhhddih]JvoM@@ADT@H@`\nfdyHQ@DDiIU`qADBBLbbTVbaTVQJF]MMMUUU@@@\nfdyIP@DXTx@cAbdsJslolyjsUSSUUTBDh\nfdyIP@DXxHDkAbdrs]k^txYsSUUUUL@@\nfdyIR@DDiHRkAbBHrJIQZJEQYDhYtttuUUT@@\nfdyP@@@HrJSQQUQIQ\\d{uTuT@EH@@\nfdyP@`ARADDbOQDXcHhhlleDeBsc`pPDpAD@HB`\nfdyPA@FN@DRBDiee\x7Ff\\R`qhJBHH@@@@\nfdyPP@LQ@bSdfUYiUmSkQZjBhJb@@@\nfdyPQ@LN``u`AF`cIICDmdiCEQg`kUUTmUP@@\nfdyP`@AR@EJ[WUe]Yqwj@Bh@J@@@\nfdyP`@NJ@aIeeU~UehLVhHD`@@DIP\nfdyPp@DX@IU`qrJJIJIIPyLxYsUSSUUT@@\nfdyPr@JLIIU`qAHILsjvskNF]RuSUUU@@@\nfdy``@F@PdwLk{JbTFKPPQP@@@@\nfdya@@D@RYyWUeQRCEj@Bh@@@@\nfdya@@D@rJJJFJIIKVCzKUT@@@@@@\nfdya`@I@UyIfUVyUEhLV``hjjH@@\nfdyaa@AZMXDPrHrJIJHqQRqTxYt@QTsTd@@\nfdyhP@AZlFHDDXdw]lrnfmxKUUTBAP@@\nfdyhR@AZlFLDXhCprRRiIQQIYFmxKUUTBAP@@\nfdypB@FR\\@HrQQHqQIIZXi[uLuAAEP@@\nfdypP@DT|@chyEDidhdeDQRlEj@@`X`@@\nfdypQ@FVcSao@dDRFQRZJZYQKF`gAjjjifZ`@@\nfdyp`@BRb@RSLzkrnsg`mRtt@E@HB`\nfdyp`@LLxABSKrjszJQgMTu@QT@@@\nfdypp@DXT@QgAbdsJslolyjsUSSUUTBDh\nfdypp@DXxBVkAbdrs]k^tDYsSUUUUL@@\nfdyppBDDDCbkAbR^]dTtRaTRbrXHsfiZjjjh@@\nfdyq`@LLxA@TfWe^UtTg^Zij`@i@@@\nfdyq`@LLxACdfWeUWTTcVZij@Jh@@@\nfdyqb@IFmcpPABT{JvnvIVcUPACTtP@@\nfdyqb@LFcA@`AFRREQQIJH{WcVVhIBhhP@@\nfd}@`@@AReYU[WhHirQmV}DLZ@`P@HBB@@\nfgA@@@DjYU_VByHu`@@@@@@@\nfgA@@@LdbbbTVKIBMjp@@@@@@@\nfgA@`@@\\RfYe_irQmVh@`@H@@@\nfgAAB@F@bDfUmUZ\\EHuh@b`@@@@\nfgAA`@@HLdrmlkQdmFluHADq@@@\nfgAA`@@HtdrmjkQdeFluH@UP`@@\nfgAH@@@RM[IEDhmBeS`eZL@@DMA@@@\nfgAH@@@XDYJYYmvdfBuXHJbYF@@\nfgAH@@@XDkIEDhhdkRSAFlDEQRc@@@\nfgAH@@@XhiJYmg]gAJMXH`jeF@@\nfgAP@@@LrQQJEIITxJQk@QE@@@@@\nfgAP@@@LrQQJJYPtdKQk@@@@@@@@\nfgAP@@@\\RfYe_irQmV@@@@@@@@\nfgAP@B@BAHirRJIJHkLUpQkAPP@A@@@\nfgAPB@LD@DISJ\x7FJdhsakTuT@E@@@\nfgAQ@@D\\@drjjkQ`iFm@AT@@@@@\nfgAQ@@F\\AdbbTJRRIPTcVjUj@H@@@\nfgA`@@@ISKJntXKQk@@@@@@@@\nfgA`@@@ISLrotyHvk@@@@@@@@\nfgA`@@@ITsZkdYHvkU@@@D@@@\nfgA`@@@YHheEMEZRDhu`@@@@@@@\nfgA`@@@YHheEhTj\\EHu`@@@@@@@\nfgA`B@N@BDifYWz\\d[Uj@H@B@@@\nfgAa@@K@RfYU_qPVeFh@@@h@@@\nfgAp@@@RMdbbTVaVipRmF@@BF``@@\nfgAp@@@XDeLzmkQ`iFlDAP@D@@@\nfgAp@@@XIdbbaRRRqPTcVZ`@@H@@@\nfgAp@@@XheLvnjs`iFlDPT@@@@@\nfgAp@@@XxeLzjkQ`iFlDAT@@@@@\nfgApB@LLx@HRevUUpPTcViYj@H@@@\nfha@P`BLxHDQSp}DAbDeUkUUZjZjjh@@\nfha@P`BLxHFISp}bAqDeUkUUZjZjjh@@\nfha@R@HHpPG`eUjjjjuUUUU@@@\nfha@s@DXHJR`ADOBgadTbRTbVQSUTuUT@@\nfhaA`@@HhdvvjjjuUUUU@@@\nfhaP`@DFAkHhdddeDTfjjijh@@\nfhaPq@BA`cAg^@DVBLddNRRRRdVjjje`@@\nfhaYA@DXHKPY@BOABSNrrzsTtuULAAKd@\nfhe@@@DjYfYuvJEXpW^@@B@I@H@@\nfhe@@@DjYfYuvJEXpW^@@B@J@H@@\nfhe@@@LdbbRbbvJYKfaJ|D@@bH@@@@@\nfhe@@@LdbbbTReryHQmN|D@@@BI@`@@\nfhe@@@LdbbbVTJrYHQeZ|D@`B`@@@@@\nfhe@@@LdbbbbbbcxhQiNlD@@@@H@@@@\nfhe@B@@ABTrnjjnJ\\Ehw`tB@@@D@@@\nfhe@B@@ABTrnkJ~J\\Ejw`tB@@@D@@@\nfhe@B@@ABTroZjnJ\\Ehw`tB@@@D@@@\nfhe@B@@ABTroZvnJ\\Ehw`tB@@@D@@@\nfhe@B@@ABTrssziJBUhw`tB@@@D@@@\nfhe@B@@AFRJIKSQJHxirQk^CPH@@@P@@@\nfhe@B@@AFRJIQZKPiDhIVc^CPH@@@P@@@\nfhe@B@@QBSLl|{[ARTYw`p@@@@@@@@\nfheA@@@IRlk\\~pQSdm^CUAAD@T@@@\nfheA`@@B|eJkjrmAEFNCxMUUUUUU@@@\nfheA`@@TdeJsZvoACNZmxMA@P@@@@@@\nfhe`@@@ILkJl{tYKRk^C@@P@@D@@@\nfhe`@@@ILrsZklxJQoNC@P@@@D@@@\nfhe`@@@YEDeDdeBeQbcZmxL@@@@@@@@@\nfhea@@D@RYYU[WirVcV|F@@@@@@@@@\nfhea@@D@rJIJIIJEJcEFu[pX@@@@@@@@\nfhea`@E@iIJUfv]nBFBL{pZB@`@@@@@\nfhep`@BLT@NQQQQQQRq\\tJQkN|uLuUTuP@@\nfhi@B`@QAHadPzHCDYEEELUDeCpUoPQA@DP@@@\nfhi@R@HHpPG`eUoLjn[s`mU@@@@@@@\nfhi@`@@ArJIKJQPiZcG^`@j`@`@@\nfhi@a@AFADAbDfUmygZL]z@BhHB@@@\nfhi@c@BFADRb@qFQQQIIPqYLD{tDDPPD@@@\nfhi@c@BFADRb@qFQQQIIPq[LD{tDDPPD@@@\nfhiAA@C@b@qBSJ{Lk}FN}@ATDA@@@\nfhiAP@@Lt[vQQQRJKYE\\d{sSUTruP@@\nfhiA`@@B|dsLro~jqgM@D@AP@@@\nfhiA`@@HBdrszroScoMSLp@T@`J@\nfhiA`@@H|dwMkZ{IUgMT@@AP@@@\nfhiA`@@LCdTRTQRbRuNN}@DS@A@B@h\nfhiE@BBTYIQoA@rY\\drkKN{hsoUTt``T@@@\nfhiHA@MFlDDPRHrJJKKQQQUgK^``HBH`@@\nfhiHP@DXyhDoARYYn]uhHuffjjji`@@\nfhiHR@DDhJQoAADILl{[NdijttuuUUP@@\nfhiH`@DXtX@lbbbbbQRRYHsfjijii`@@\nfhiH`@LTEhBDfWVUm]F|Ejf@@@@DJP\nfhiHa@LTdFB@A@`cIIBhhddmmNMYZ`hJJD@@\nfhiIB@DXHI`@aIg[ee_UoAZi`@@@@@\nfhiIP@DDhpDc^BdwJ|lzsfkMMMUUU@@@\nfhiIP@DXxHDc^CdTRbbeTVSNZltuUUUT@@\nfhiIP@DXxHDc^CdTRbfaTVUNZltuUUUL@@\nfhiI`@DXYH@`yEDeDbhdmScoMUJp@T@`J@\nfhiP@@@^Rfuue]Yrsj@B`@h@@@\nfhiPA@FV@DTBDiee~yqJ|F`hHB@@@@\nfhiPP@DB@SblbfdtQfbRHspVjff@B@@@\nfhiPR@AFIsPPRBSL{sNiFV]UUULtt@@\nfhiPR@JLIIpPRBSLzmj{NFmRuSUUT@@\nfhiP`@DZAyIgVYW^VkNZjdHBh@@\nfhiPb@OA``@QddabbRRvRkF\\m@@@E@@@\nfhiPp@DX@IQoARYeYv}YsUfjffjj`@@\nfhiQ@@DX@drlrloks`mTEATQ@@@\nfhiQ@@INAdTTTbRarrk^BtEP@@@@@\nfhiQP@DN@Qg@iLoJjnbdZsUUPAR@@@\nfhiQP@DX@IW`yEEDeDdbdsakMUMMUU@@@\nfhiQR@IV`Sa``dLbRbTQbbvXIwjjjjYf`@@\nfhiQR@JLIIW``BDfYu[UV\\MZejfjjh@@\nfhiQR@JLIIW``kDfYu[UV\\MZejfjjh@@\nfhiQR@LVXhw``BLdTVbRbbqqRVjYjjZj`@@\nfhiQR@LVXhw``QLdTVbRbbqqRVjYjjZj`@@\nfhiX@@@PHJpTiZUWYz\\MyjjbAb@DCH\nfhi`P@L@yHrTrlm{}AN}UUTDAP@@\nfhi`P@O@YivQQQRIV[SDXhsPUADu@@@\nfhi``@A@|eMkkJzsegT@E@AP@@@\nfhi`p@D@Dhw`iLrl{^lyjsUKUUUP@@\nfhia@@E@rQQQHyJIHToAhJ@h@@@@\nfhia@@F@rJJIIJZIDRoAjBBB`@@@\nfhiaB@ARADILk[OZtYxL@EM@@@@@\nfhiaB@K^@DISLjo{Bthu@@@EL@@@\nfhih@@@XIQRTsNj\x7FKNRtA@AEU@@@\nfhii`@DTxIPGArJIQQJiJYgIJZiYjjj@@\nfhii`@DTxIPK^rJIQQHpsQgEZZPhBjh@@\nfhipP@DXx@w`yEDhihUEePVkMMUSUS@@@\nfhipP@DXxBW`iLlwZztDZsSUUUTp@@\nfhipR@BTYIW``qDfY][UV\\MZejfjjh@@\nfhipS@IZCpSo@bBAA`cHhheHeTiFJlFBAXiVH@@\nfhipS@IZCpSo@bBAA`cHhheHeTiFJlFBAXjVH@@\nfhipb@AZL{pLQIe]e]ncEZ`@iZfb@@\nfhipp@DXH@Rc^BdsJsmzsfkMUMMUU@@@\nfhiq@@DZBCHheEDeDceNmyj@@`B@@@\nfhiqB@IF]hDadTTTbfLVWE^CMUTmRt@@\nfhiqP@DXH@RoArJJIJIIEIgCVZjZZjj@@\nfhiqP@DXxBQoArJIQSPjKJ`mVZZjjjf@@\nfhiqP@DXxBVoARYYnuuhHuffjjji`@@\nfhiq`@DXX@SdfUgyVj\\lyjiZjjh@@\nfhq@`@@AJDaHRDRHrHPVB`Hbjj`@@\nfhq@`@@JRVUeZZYq`@jjj@@@\nfhq@p@@HdkQlbbTLTTvRHqjZfZj`@@\nfhq@p@@LdkUlbbbbVRLrxIijjif`P]@\nfhqA``BZLBHyxRbEAFQQQIIRUILEAADuU@@@\nfhqH`@L\\MXBLbbTTJbbLTYjh@bj@@@\nfhqP@@@XRe]UUUpQijjjj`@@\nfhqQ@@DT@drlsLjXKUAQEP@@@\nfhqQa@EVEHpHc`QdTRVTaTrUFP@RtuP@@\nfhqXB@J\\dZpPAFRIJIJJqIBeUSMMUpHJ`\nfhuA@@@IRlrjwPQSbgFC[u@@@@@@@@@\nfhy@@@LdbbbTRrNYHVoA@@```@@@@\nfhy@B@@XbRsLrj\x7FIZ}XM@@@A@@@@\nfhy@`@@TrQQRJKSE[deV|F`jH@@`@@\nfhy@`@@\\RYee~uYrVoAZA``@H@@@\nfhyA@`A@bBQGh`LPdsNjjjsdeV]A@U@E@@@@\nfhyA@`F@bMQCh`LQdTTTTQbVSN\\U[tDPAAE@@@\nfhyA@`G@bEQEh`LPdsKOKrrQoN}A@qSUE@@@\nfhyA`@@BMdTTTTTTVoEZ|xL@A@P@@@@\nfhyA`@@BMdTTTTTTVoMJ|xKPAAPA@@@\nfhyA`@@B|dsLsKnqVgVBt@Q@BP@@@\nfhyA`@@DtdsMksjpRc^CA@@P@@@@@\nfhyA`@@Hldrlk[oQbcN|uHPQUP`@@\nfhyH@@@RM[IEDhmBdeJ\\DkQ`@@ajhH@@\nfhyH@@@RlyJYY{W^gAJMX@@HfjB@@\nfhyH@@@Rl{IEDhmCDcJ\\DkU`@@bjhD@@\nfhyH@@@XEkIEDhheYdjRXKpP`jJ@@P@@\nfhyH@@@XxkIEDeDehTjBYspP`Xj@@`@@\nfhyHB@FR|DDPdrmkZkSdeV]@@@@E@@@@\nfhyI@@DTeXBSOJwJxeZmxKT@QUJL@@\nfhyI@@H\\EhFQJJIPiIQ\\dkS`tADMSIP@@\nfhyI@@LDmxFRJIHqQJKTXYuoTuPDPtP@@\nfhyI`@LJMxD`yHhhhUEedRfcN}UUTBAT@@@\nfhyP@@@VRe]VYWISUoAjjjP`J@@@\nfhyP`@BZ@aInUe{W`mF|Ejjj`@X@@\nfhy`@@@ISLjm{btjw`t@@@@@@@@\nfhya@@O@RYVyY\x7FiqQkN`@@@B`@@@\nfhyh@@@\\eYvRJJJJUKKTxkQk@AA@uPP@@\nfhyh@@@\\e[vRJJJJUIITxkQk@AA@uPP@@\nfhyh`@LJMxHIYHhhhUEedRfcN}UUTBAT@@@\nfhyi@@HXIipDefWVuj\\TYwijh@@H@DHH\nfhyp@@@XheLwKjjsde^BDPUPP@@@@\nfhyp@@@^CdbbbbRRqUNRmip@@@PT@@@\nfhyq@@DTTAIgeUUTTmF|Ej@Bh@@@@\nfkAA`@@TTeJwsLDDXkVcUUUUUP@@\nfle@P@@HlgHhdeECDhl[^\\EjjifffP@@\nfle@`@@IrJJIERJEJYgOA`HJh@J@@@\nfleA@@@YEEMDleHiJJQoM@PUUUD@@\nfleA`@@HhdskLl{~cNBuT@@DR@@@\nfleA`@@QSdTTTRRTqfdcZ\\t@@AEL@@@\nfleHP@DTuDC@irJIJHqZIJJgOQZijjjYh@@\nfleH`@G^BdELdTtRRJbbQyHLZBBJ@``@@\nfleIP@DXxHDgQSdTRbffbTNUNV|tuUUUTp@@\nfleIb@LB\\fBK@BLddJbbRTVVuypUj@@HB`@@\nfleP@@@DrRJPqQPiIYtPijjh@@@@@@\nflePR@MA`cA@^FRRXqQJJMJJMjsU@QCUQ@@@\nflePq@JLIIShiAVVdLbbbrRfTbJYpwjVjZjjj@@\nflePr@FVQSaoIAHIM\\w[KoPS`uUUTsTt@@\nfleQP@EQ@RsoYEEEleDhiXRcNMUUULuT@@\nfleQa@AVQ``@bGadTbRTRRLrUgQRuUAP@@@@@\nfleQp@DXArVcQSdTTRbbtRjSAN|uUUMUUP@@\nfle`Q@LPQxH@bpQddebbTVVdleF\\m@@ABt@@@\nfle``@G@edbbTRbbNv`mV}PPE@QT@@@\nfle``@O@bdsJl{zpmV\\tD@@EL@@@\nflea@@E@RfVYUV\\tWIjh@`B`@@@\nflea`@I@U{HhhddihddQZbehHJJjh`@@\nflehPBDX}EHAJCFT}dTTRTRRJRsNFluTtuUKP@@\nflep@@@XleLl{rkMA^RDEEAAP@@@\nflepR@F\\EhtT`qDeYeumUEIwiiZijjjABD@\nflep`@IJR@bSLj~rnlExKTmS@AT@aJ@\nflepr@DDhJRgQRBHRYYym[teK^fffjjjh@@\nflepr@M^SAFB\\\\CprRSEQIZJKZR`qZjjjfVh@@\nfleqQ@BTYIShiAVVdLbbbVRfTbJYpwjVjZjjj@@\nfli@`@@HRYUoV]YjZfZjhFBPiT@\nfliAP`BJt{p@bG``HpDYEHdeCEeEluUTuMT@@\nflm@@@DjYee]{YhTkA|d@@@@@`@@@\nflm@@@DjYee]\x7FYhTkA}D@@@@@H@@@\nflm@@@DjYeeo\x7FyHQm^bd@@@B@@@@@\nflm@@@DjYee\x7F[yHQmNBd@@@@@`@@@\nflm@@@DjYee\x7F]yHQmNCD@@@@@H@@@\nflm@@@DjYee\x7F^yHQmNCD@@@@@H@@@\nflm@@@DjYee\x7F_yHQmNCD@@@@@H@@@\nflm@@@LdbbbTRRJrYHVkAbd@@B@@@@@@\nflm@@@LdbbbTRfvQyHQm^CD@@@BbhA@@\nflm@@@LdbbbTRrJRxhQmNBd@@@@@`@@@\nflm@@@LdbbbTRrVQyHQm^bd@@@@`@@@@\nflm@@@LdbbbTRraQxhQmNbd@@@@H@@@@\nflm@@@LdbbbTRvRQyHQmNbd@@@@H@@@@\nflm@@@LdbbbTVRcRXhQmNbd@@@B@@@@@\nflm@@@LdbbbbbT^VxhUc^CD@@H@bhA@@\nflm@@@LdbbbbbT^VxhUc^CD@@H@bhB@@\nflm@@@LdbbbbbVNVxhUc^bd@@H@@@@@@\nflm@@@LdbbbbbqeRYhUcNbd@@H@@@@@@\nflm@@@LdbbbbbqvRYhUcNbd@@H@@@@@@\nflm@B@@AFRJJJIISKHdiHvoQSP@P@PA@@@@\nflm@B@@QFQQQQQIJGKLdjqoQS@@@@@@@@@@\nflm@`@@QRYfYUgydeNLGrV`@@@BH@@@\nflmA@@@ILkZvmkQdeV]EL@@@@@@@@@\nflmA@@@ILroZrnQ`iFmEKPP@@PD@@@\nflmA@@@ILroZvjQ`iFlFKPP@@@T@@@\nflmA@@@ILroZvlQ`iFlFKPP@@@T@@@\nflmA@@@ILroZvnQ`iFlFKPP@@@T@@@\nflmA@@@ILrrknjsdcV]EL@@@@@@@@@\nflmA@@@ILrsssoQdmFmEKPP@@PD@@@\nflmA@@@ILrszmkQdeV]EKPQ@@@D@@@\nflmA@@@YEDeMDhmBeSbcV]EL@@@@@@@@@\nflmA@@@YEEDeieEBdQ`iF]EKPP@D@D@@@\nflmA@@@YEEDhihcBdqTcV]EL@@@@@@@@@\nflmA@@@YEEDhmBeLdpTeV]EKPQ@@@D@@@\nflmA@@@YEEDhmBeLdpTeV]EL@@@@@@@@@\nflmA@@@YEELeDdeBepQgV}EMP@@@@@@@@\nflmPB@JQAbIKJr|jlsfk^RFMUUTDCED@@\nflmQb@LA`bp@cIICMDeMDUARd[S`qVjZjZfi`@@\nflm`@@@ILkZvmkQdeV]EL@@@@@@@@@\nflm`@@@YHhhhhdddkSdgFbEH@@DDTHD@@\nflm`@@@YHhhhhdhb]RRkFCzH@@@@@P@@@\nflm`@@@YHhhhhdhbmRRkFCyH@@@@A@@@@\nflm`@@@YHhhhhdhecRRkFcyH@@@@D@@@@\nflm`@@@YHhhhhdhecRRkFcyH@A@ALPD@@\nflm`@@@YHhhhhdhecRRkFcyH@PAHE@P@@\nflm`@@@YHhhhhdhecRRkFcyH@PAPD`P@@\nflm`@@@YHhhhheED[RRgFbEH@@@D@@@@@\nflm``@J@SdbbbbLTtQqJRl[pXtC@@@AP@@@\nflm``@K@PdrlkZk]FJLxLTmRDDUUQP@@\nflma@@@`rJIJZIQPiZgEZmxLX@@@BI`H@@\nflma@@E@RfVU^_VcAZLzJZB`@H@@@@@\nflmaA@KQ@DPdLdtTRbtJfRyIVkNbfifZiZej@@\nflma`@E@PGHheEDdhlbj\\TxwhiZ`@@`j`P@@\nflmp@@@VbeJvsOviJBUYtT`@AEP@A@@@\nflmq@@DVbAIee^WmZ\\djshiZ`PJ`@b@@@\nflu@B@@YbULsJjozCZOdu@@@@@@@@@\nflu@P@@BBgHhhhhhehlVJtztV`BH@dh@@@\nflu@P@@BLGHhhhhhhlcnJuytV`BH`Dh@@@\nflu@P@@B|gHheIhcEDiRLu[pVfjjjjZ`@@\nflu@P@@HL{HheEhhdhh~BlGtVijjijj`@@\nflu@P@@\\\\eIfVWyWv\\ehLV`hHB@h@@@\nflu@P@@\\uyIfVWnuv\\dZJV`XJ@`H@@@\nflu@`@@IRYfUV}~QmNCEh@@@@H@@@\nfluAA@A@bDqFQQIYRZJIGTYYpXp@UPTAD@@@\nfluAA`A@bBQCHatQFHSDYEEEMBdeEerRm^CADQPPT@@@\nfluAP@@B\\ENQQQQQQKQXlUkuhm@DPDIP@@@\nfluAP@@B\\FJSLsLoJlUkudm@DPDLP@@@\nfluAP@@HdkrSKLvzjlxYtTmT`pQUP`@@\nfluA`@@FmdbfbTTRbawEZ|EM@@@TA@@@@\nfluA`@@LbdsLn}kkNRuxKPTD@AT@@@\nfluH@D@\\|DDiSLrno}SdcZ\\@@@AET@@@\nfluHP@CNbdDeZrQQQQIJJkHeKNCFjjj`PJ`@@\nfluHP@DLtdGGArJJIQRzJJY`iJbejijjYjh@@\nfluHP@DTuDC@irJIJHqZIJJgIJ}Ejfjjifh@@\nfluH`@DXYh@lbbRbTVaRRisQoAZZfd@Jh@@\nfluH`@DXlDGlbbbLTRvTtISQhiZj@`ijb@@\nfluHb@BJtFW`QFQQQIZKQFZLDZtTpPPuTuE@@@\nfluHb@LLxxLPABTnrjkmxHJQkTlu@EMP@@@\nfluI@@DRUXFQQZJIPiIIRtZpXmPDPuKE@@@\nfluI@@DTXDFQQZIQKQQH|DYtTmSU@A@@@@@\nfluI@@D\\tXBSOLkKzrthpXmPPIUKE@@@\nfluIP@DTxHFgQSdTRbRJbTVSNBe[sSMUUUTp@@\nfluIP@LF]DDeZSdbbbbRTUVQJV\\FMUUU@`U@@@\nfluI`@FNbdAMILs[[N}SagAcUUUPHEP@@\nfluPB@AJADYEDeMDeELcSfgQS@DMPT@P@@\nfluPP@B\\@bslbfbTTRTrJDkQhiZjfjX@`@@\nfluPP@DTAsUlbbTTTlTvRXHshiZjZfX@`@@\nfluPR@JLHkU`RBSL|kMjlyxLTtmUMUUU@@@\nfluP`@DIAEIeUYU}jLehufiZYfij`@@\nfluP`@DX@qIeVyeUrT]DJVjZ@@@H@@@\nfluQB@AJbBHRYVyV]VgMNBf@HZ``P`@@\nfluXP@L\\MZJPRUkIEEEDdeFdbTLxLZjjjP@j@@@\nflu``@C@PdwLl|{XmNbEKPP@@@@@@@\nflu`a@BJ|CDebYEEEheDXdlpQkQSAADtB@P@@\nflua`@A@\\EIfYfWgvJuztV`BHBDh@@@\nflua`@O@TyIfYfUYvBtFrV`BHAbH@@@\nfluab@FF|D@QdbbTVbtjfQJBUjuRsUMMTh@@\nfluhP@DTxIPCQSdTRbbUTRRSNRT{sUKMUUUP@@\nfluhP@LF]EHIJudbbbbRTUVQJV\\FMUUU@`U@@@\nfluhP@NFmEHIJudbbbbRRcRQJF\\FMUSUP@U@@@\nfluib@DTxIQhi@DYEDhheUDddsdeN|uRsUUUT@@\nfluqB@AJMDFHdrmrlzmNZ\\EL@PuA@a@@@\nfluq`@LLxAGdfWeUWnEHuhiZij@IjB@@\nflux@@@XIRRmYHhhldiUDdsdcQRA@AQ@@@@@\nflyAP@@HLxJSJkZrkzluT`DUT@@@\nflyP`@EN@cHheDdehbdiZZ``bjj@@@\nflyPa@LR``@PHHrRPjJJKHiXsejAbHj`@@\nflyQ`@D^@jrSOJzmkBdu@AUUT@@@\nflyQ`@D^@jrS[JzmkBdu@AUUT@@@\nflyQa@ANQ``@bGadTbRTRRLVegMUPTAU@@@\nflyQa@LR`cp@`PQddaTTRrrRVkKTCAEU@@@\nflyQb@LR``P@cIIBhhhlbecNVhFHbj@@@\nfly`R@IB]zH@aJYYY]gcAjhJ`fF@@@\nfly`R@JRU[p@cIDeDeEECEXijji`Z@@@@\nfly`R@LPQEH@cIICEDddeUC^VjB`hf@@@\nflyqa@AFlcA@ADOCHiDdhThmLmFZj`@jj@@@\nfl}@@@LdbbbTVtQVXhQmV]zJZPZHPPJH@@\nfl}@B@@AFRJJIIJISXxhKRoF]EM@@@@@@@@@@\nfl}A@@@ILrjvjvQ`mJLxLTmA@@@@@@@@\nfl}A@@@IRlkjmkAENRUYtTuPH@@@T@@@\nfl}A@@@IRlkvjkAENRUYtTuPP@@@T@@@\nfl}A@@@IRlkvmkAENRUYtTuPP@@@T@@@\nfl}A@@@IRlrjkoAENJl[tTt@@@@@@@@@\nfl}A@@@YHdhdmMDhcAENRt{tTt@@@@@@@@@\nfl}A@@@YHdhheDddcAENJ]ZHTt@@@@@@@@@\nfl}A@@@YHhhhddjdeAGERuYtTuUAL@@U@@@\nfl}`@@@IRlrjkoAENJl[tTuP@@@@T@@@\nfl}a@@A@rQIQJKJZEJBF\\UXshij``@@@h@@@\nfl}a@@E@ReYWm[VBJ\\ejshij``@@@h@@@\nfl}a@@M@ReYYy}VBF\\TZshij``@@@h@@@\nfl}aA@HF@DIdLdRbbRRtJR``cIFuXLZjjZjeif@@\nfoA@@@DjYeUlVeN`@`B`@@@\nfoA@C@@QAHadQdTTTqTRWAV]ADD@@@@@\nfoA@C@@QBhatQdTTRbRQsIFmA@A@P@@@\nfoA@P@@HTYIe[VWhrVfi@Hj`@@\nfoAA@@@ILkjrmFV]@AL@@@ar@\nfoAAB@A@bDfUmyVcKN`@j@@@@@\nfoAAP@@HiIRSKSrvSeNMUTuUP@@\nfoAA`@@HXdrl{ZlyYsUUP@P@@\nfoAAa@JJtBHxDYDhhmEDcpUgUKPJA@@@\nfoAHB@MFlx@QdbdRjbbcNZmUUTmU@@@\nfoAH`@D\\DXDdfVYe_ScVZ`ZBP`@@\nfoAH`BDRLx@cR{dfYeW\\cMVZhFAF@@@\nfoAHb@DXx[U`QFQQJIZJHdiHtuUTsL@@\nfoAI@@MFlxFRJQJjJJLyjuUURuT@@\nfoAP@@@NRYWVUzLMZ@B`@`@@\nfoAPB@KN@DISLjohmJMP@@AP@@@\nfoAPB`ARADDbCREiAt`dsNkmLyITDASUD@@\nfoAPR@JLIIU`RBSLzmlsagTmTuUP@@\nfoAP`@BZ@aInvYWejsfjiB@`@@\nfoAP`@CNAQJYW]YqS`jB@jj`@@\nfoAPa@LDlx@P`HRYYeUuVLyjjjjj@@\nfoAQA@BLD@HpDISOmrnJV]TuL@D@@@\nfoAX@`LTXKU`AB@aPPxHRYWUeRTMYjjjZV@@\nfoA`@@@ILkjrmFV]@AT@@@@@\nfoA`@@@IML|{wEFmUSA@R@@@\nfoA`R@EPQap@cIIKEDhliZMYZ@@@`@@\nfoA``@M@PdvkLkruYsUTa@P@@\nfoAaB@GDADILroZ{AFmAA@@P@@@\nfoAaB@GLADILk_J}NFm@DP@P@@@\nfoAaB@G\\ADILkkJ}FFm@AP@P@@@\nfoAaB@KN@DISLjoxmJMP@@AP@@@\nfoAaP@D@hIVlbbTbfbjIrgFjjfjh@@\nfoAa`@M@PQInvYWejsffiB@`@@\nfoAh`@JBUYpBILoLkleFmUU@`T@@@\nfoAp@@@P\\eKLjorMjsP@@A@B@H\nfoAp`@BZLABS]lroKUgMURDA@@@\nfoApb@HDihp@cIDhideDRLUZi``Xh@@\nfoAqB@JLtPFHdsM|klEYuKTa@P@@\nfoAq`@DXxBSlbbTTtJVhKQffjjjX@@\nfoI@@@LdbbRbaQXKbiZlx@@@`@`@@\nfoIA@@@IRlkZ|DTyKUgUSUUJs@@@\nfoIA@@@IRlkjlDTyIUgUPP@AP@@@\nfoIA@@@IRlkvlDTyIUgT@@@@@@@@\nfoIA@@@IRlrj|DTxjqgUP@@AP@@@\nfoI`@@@IRlrj|DTxjqgUP@@AP@@@\nfoQ@@@DjYUU}`nRlx@@@`@@@@\nfoQ@@@LdbbbRQrYHRkN@@`@@@@@\nfoQ@@@LdbbbTRQYHUmN@@@B@@@@\nfoQ@@@LdbbbTReyHQmN@@@@`@@@\nfoQ@B@@QBSJvjkQdeV]@@@@@@@@\nfoQ@B@@QBSLljzsdcV]@@@@@@@@\nfoQ@B@@QBSLsJ~pRkF]@@@@@@@@\nfoQ@B@@RBSLljzsdcV]@@@@@@@@\nfoQ@B@@XbSLljzsdcV]@@@@@@@@\nfoQ@`@@VRfYeUzBd[Sj@B@H`@@\nfoQA@@@ILrrkkNRMYt@@@@@@@@\nfoQA@@@YEEEEDdbrRkF\\t@D@D@@@\nfoQA`@@HldrlkZtXhugMRDDSD@@\nfoQA`@@HldrmlrtYKUgMR@QSD@@\nfoQH@@@BMYJUme]IRRmF@@HFhH@@\nfoQH@@@BMYJYYo]irRmF@@HFhH@@\nfoQH@@@RMYJUm[UIPRmF@@BFhH@@\nfoQH@@@RM[IEDhmBdj\\DkQ`@@ajB@@\nfoQH@@@Rl{IEDhmCDj\\DkU`@@bjA@@\nfoQH@@@TUkIEEEhddV\\Djs`JBjeF@@\nfoQH@@@TuYJYfU}YrQeZ@H@XhH@@\nfoQH@@@XD[IEDhiedZRXKU``jIfF@@\nfoQH@@@XDiJYYe_iI`cNBBhidX@@\nfoQH@@@XhiJYmg]YpRcVBHJiXX@@\nfoQH@@@XhiJYmg_YpRcVBHJiXX@@\nfoQH@@@XhiJYmggYrRkNBHJfhT@@\nfoQH@@@XhkIEELhddV\\Djs`bBjeF@@\nfoQH@@@XikIEEMEDUf\\ejs`bBjeF@@\nfoQI@@HTEHBRrjjjsdeV]P@TtiP@@\nfoQP@@@FRfYeUz\\e[SjdF`hd@@\nfoQP@@@NrQQJIIYFcAZMX@@@@`@@@\nfoQP@@@NrQQQQIHz`iFuX@@@@`@@@\nfoQP@@@RrQQJIJUJgAJlx@@H@@@@@\nfoQP@@@TRfY^]|TEjsiB`hjb@@\nfoQP@@@TrQQQQPqUdeZlx@`@@@@@@\nfoQP@@@VRfYe]Z\\d[S`@@@H@@@\nfoQP@@@XRf[WmZ\\djs``@@@@@@\nfoQP@@@XRf[eUz\\UXs``@@@@@@\nfoQQ@BHB@ChRdsLrolDjqgP@@@@@@@\nfoQ`@@@ILkZjmFRUYt@@@@@@@@\nfoQ`@@@IRlrj|DJlYuT@@@P@@@\nfoQ`@@@ISKON}NBeYp@@A@@@@@\nfoQ`@@@ISLro}NRMjp@@@A@@@@\nfoQ`@@@ITsJkyFJlYuPA@@P@@@\nfoQ`@@@ITs\\k{AJlYuT`tDR@@@\nfoQ`@@@YHheEMDcPTeF\\@@@A@@@@\nfoQ`A@F@bIABSJvmkSdeV]@DT@A@@@\nfoQ``@B@mdTTTTRQSEBdYsTmUSU@@@\nfoQ``@M@HdsMjoLDhugMLBDUD@@\nfoQa@@A@RYfYWvBUXsf`B@@`@@\nfoQh@@@LDZvRJIQPiYTYIVc@@DCTD@@\nfoQh@@@TejrTsLkzsdcJt@P@qPP@@\nfoQh@@@TtZvRJJJIIELEHrm@D@LTD@@\nfoQh@@@TyjvRJJJIIELEHrm@D@LTD@@\nfoQh@@@XijvRJJIQIELEHrm@D@LTD@@\nfoQp@@@XDeLvzjtyIUgAAEP@@@@\nfoQp@@@XDeLzmjtXJQkA@T@DP@@\nfoQp@@@XDeLzmktXJQkA@T@DP@@\nfoQp@@@XHeLsnjxiIUgMPP@A@@@\nfoQp@@@XdeL|oZtYIUgA@U@@P@@\nfoQp@@@XidbbfbQRSNRUYpQAT@@@@@\ngBQ@@eJuT@@\ngBX@@eLUT@@\ngBXHHHaIejh@\ngC`@Die@@\ngC`@Dkz@@\ngC`DADHHRVh@\ngC`DADZHRVXRH\ngC`DADZHRVXRP\ngC`DADZHRVh@\ngC`DADZHRVx@\ngC`DAHJPRZd@\ngC`DAHJPRZh@\ngC`DAHZPRVh@\ngC`DAVRDRZh@\ngC`DAbKDRZh@\ngC`DAbZHRVh@\ngC`DAb[DRVx@\ngC`HADIKLIH\ngC`HADIKR@@\ngC`HAbIKJ@@\ngC`HAbIKLIH\ngC`HAbIML@@\ngC`LAHJPt`duP@\ngC`LAVJluXduP@\ngC`LAbKDvHduP@\ngC``@dfZ@@\ngC``AdeY@@\ngC``AdeZ@@\ngC``Adej@@\ngC``Adij@@\ngCa@@dkH@\ngCa@@dkP@\ngCa@@dkX@\ngCa@@dmH@\ngCa@@dmP@\ngCa@@dmX@\ngCa@@duP@\ngCaHDHaIZ`@\ngCaHH@bNt@@\ngCaHL@aIZ`@\ngCaHLHaIZP@\ngCaHLHaIZ`@\ngCaHLLQIZP@\ngCaHLLQIZ`@\ngCah@mJAIj`@\ngCahHl@bNt@@\ngCahHlGBNt@@\ngCahHlHRNj@@\ngCahhlAa]ncm@@\ngCd@Adej@@\ngCdDI`BHDRZh@\ngCe@E`dmH@\ngCe@E`dsP@\ngCe@I`dlpd`\ngCh@@dmH@\ngCh@@doH@\ngCh@@doP@\ngChHD@aIU`@\ngChHLHaIZp@\ngChHLLQIZ`@\ngChHLLQIZp@\ngCh`LDdsP@\ngChhMDHbNl@@\ngCi@DDeV@@\ngCi@DDeZ@@\ngCi@DDfZ@@\ngCi@HDefDd@\ngCi@LDej@@\ngCiHEAxIVt@@\ngFp@DiTt@@@\ngFp@DiTvjh@\ngFpD@DTHReSZj`@\ngFpD@DXHReSZj`@\ngFp`@dfTujX@\ngFp`@dfTujh@\ngFp`@df_Ejh@\ngFp`ATiTvjh@\ngFp`AdiTvjh@\ngFq@@drfmM@@\ngFq@@eLqUU@@\ngFq@@eLzts@@\ngFqDDHbqBSZmUT@@\ngFqDLLRqBRwcUT@@\ngFq`AbeJfuU@@\ngFr@ACTiTt@@@\ngFr@ACTi[FZd@\ngFt@ATiTt@@@\ngFt@AdiTt@@@\ngFtHCQbILimKP@\ngFtHE`DILikUP@\ngFtHLPDISNmLp@\ngFu@E`drfmT`@\ngFx@@eJf`@@@\ngFx@@eJfuU@@\ngFx@@eRfuK@@\ngFxHJ@aJ]bjn@@\ngFxHL@aJYujj@@\ngFx`HJeJxtm@@\ngFy@DDfTujh@\ngFy@JDiTvjh@\ngFy@LDeXvjh@\ngF|@AbeJf`@@@\ngF|HLZ@aJYuif@@\ngGP@DiVj`@\ngGP@Di]jQ@`\ngGPBABRHTQXcIHUTpf`\ngGPDADVHRUZZDT@\ngGPDAbWDRUZj@@\ngGPP@cTfyi`@\ngGPPACTiVj`@\ngGPXHlQxIU[U@@\ngGP`@TfYi`@\ngGP`@df]j`@\ngGP`@dfuiaM@\ngGP`@dfuj`@\ngGP`@dfyi`@\ngGP`ADkjj`@\ngGP`ATeUfQD`\ngGP`ATeUfaE@\ngGP`ATeVj`@\ngGP`ATfVi`@\ngGP`ATiVj`@\ngGPhCQDIJuS@@\ngGPhH`DYIHUi@@\ngGPhMPDIK]U@@\ngGPhMQDIK]U@@\ngGQ@@djltHh\ngGQ@@djuT@@\ngGQ@@dlmT@@\ngGQ@@drmT@@\ngGQ@@dsMT@@\ngGQ@@dsmT@@\ngGQ@@eMUT@@\ngGQDB@jQBUkUP@\ngGQDL@aAFQRFj`@\ngGQDLHbqBRwSP@\ngGQDLHbqBRwUP@\ngGQHBHaIeiXQH\ngGQHBLQIeiXQH\ngGQHJ@aJ]jd@\ngGQHJHaIUjh@\ngGQLJIARFdLbdMU@@\ngGQXHlZHROjj@@\ngGQ`@ZdrmJ@@\ngGQ`@ZdrmT@@\ngGQ`@ZdruT@@\ngGQ`@bdvmT@@\ngGQ`@bdwMT@@\ngGQ`AjdmmR@@\ngGQ`AjdmmT@@\ngGQdEb@bRFRRVV`@\ngGQhHlLSIHTmP@\ngGR@aEQJyJ]Vh@\ngGT@ADiVj`@\ngGT@ATeVj`@\ngGT@ATeWfqE@\ngGT`E`TfUj`@\ngGT`E`TfYj`@\ngGT`HQTeVY`iZ@\ngGU@E`drmT@@\ngGU@E`dsmT@@\ngGU`E`ZdrmT@@\ngGXHD@aIUVd@\ngGXXKEb@cIIBmP@\ngGX`BDdvmT@@\ngGX`BDdwMT@@\ngGX`LDdsmT@@\ngGXhKB@aJvZX@\ngGY@DDfYj`@\ngGY@HDeVZaI@\ngGY@HDefZaH`\ngGY@HDfVj`@\ngGYDIQDJHR[Zj@@\ngGYHEAxIVkU@@\ngGYHEAxIVsU@@\ngGY`BETfuj`@\ngG\\DEj@`aBSJuP@\ngG]HHjPDIJuS@@\ngGp`AldTLRuUT@@\ngGq@@eJqFuUP@\ngJP@DjYd@\ngJPBAVJPt`YAIjj@@\ngJPDADFHRUfaH`\ngJPDADFHRUfaI@\ngJPDADFHRUj`@\ngJPDADFHR[f`@\ngJPDADQpRZj`@\ngJPDAbGDRUj`@\ngJPD`DHHGKdfzd@\ngJPH@EIRuP@\ngJPHADIJsHd`\ngJPHADIJsPd`\ngJPHADIJtpb`\ngJPHADIJuP@\ngJPHADIKSP@\ngJPHADILth@\ngJPHAVILuP@\ngJPHAVIMUP@\ngJPHAbIJuP@\ngJPHAbIKUP@\ngJPLADZPL`dmM@@\ngJPLAHJPt`duU@@\ngJPXHlPDQzt@@\ngJPXHlQBQ{T@@\ngJPXHlQxQ{T@@\ngJP`@TeVd@\ngJP`@TeVh@\ngJP`@TeZh@\ngJP`@TfVd@\ngJP`@TfZh@\ngJP`@dfVh@\ngJPdEaDPHRZe`@\ngJQ@@djsBJ@\ngJQ@@dju@@\ngJQ@@dkSBJ@\ngJQ@@dkU@@\ngJQ@@dls@@\ngJQ@@dmU@@\ngJQ@@dru@@\ngJQ@@dsT`@\ngJQ@@duU@@\ngJQ@@eKU@@\ngJQDDH`qBRmT@@\ngJQDHG@nBUMT@@\ngJQHBHaIVYDd@\ngJQHBHaIVj@@\ngJQHBHaIfe@@\ngJQHBHaInZ@@\ngJQHBLQIVj@@\ngJQHBOAJfj@@\ngJQ`@bdvt`@\ngJQhHl@bOV`@\ngJQhHlHROZ`@\ngJT@@Te^h@\ngJT`E`TfVh@\ngJU@DPdru@@\ngJU@E`dru@@\ngJU@LPdkU@@\ngJUHLT@aIjZ@@\ngJX@@dkU@@\ngJX@@eKU@@\ngJXDBLQXbS]V@@\ngJXHD@aIUZ@@\ngJX`BDdvu@@\ngJX`DBdjt`@\ngJX`DBdru@@\ngJX`LDdru@@\ngJY@BDfZl@\ngJY@DDeUh@\ngJY@DDeVh@\ngJY@DDefh@\ngJY@DDfVh@\ngJY@LDijX@\ngJYHC`DIKTp@\ngJYHCaHIKTp@\ngJYHEAxIVmP@\ngJ\\@@ldru@@\ngJ]@EbDfVh@\ngJ]HEcAxQ{T@@\ngKP`@df\\Vj@@\ngKP`Adi\\Zj@@\ngKQ@@eKEUP@\ngKQ@@eKcRp@\ngKQ@@eKcUP@\ngKQHDHaImZj`@\ngKQHH@aJoEj`@\ngKT@Adi\\Vf@@\ngKX@@eKcRp@\ngKX@@eKcUP@\ngKX@@eMEUP@\ngKXHL@aJWFe`@\ngKXHL@aJWFj`@\ngNpH@DIRkUJ@@\ngNpJAHJPtaYArFQRFUU@@\ngNpN@iRHTQh`qEbGDQ\x7FUT@@\ngNpOAYRHTQh`qEbGDAh\x7Fjj@@\ngNpP@jtfvZf@@\ngNp`@TfWZZ@@\ngNp`@dfVZf@@\ngNp`ATeVYjDT@\ngNp`ATf^Zf@@\ngNphJqDIKMTl@@\ngNphMQLISMSL@@\ngNpiJqbOdeVjf@@\ngNplJqHJPtadTaeTp@\ngNplLQDSpPPduluP@\ngNq@@djkLpRb`\ngNq@@djkLpRc@\ngNq@@djkMPb`\ngNq@@dl{UP@\ngNq@@dskUP@\ngNq@@eJmTh@\ngNqDLHaqBRjuU@@\ngNqHFHaIfYjP@\ngNqhHl@cIIBej`@\ngNqhHlOAJkVj`@\ngNqhMV@aI[jY`@\ngNt@@teUjj@@\ngNtHAePIKMuT@@\ngNtHE`DILruT@@\ngNtHE`DILzuR@@\ngNt`E`TfWZj@@\ngNt`E`TfYZj@@\ngNu@E`dl{Tpa`\ngNu@E`dskUH@\ngNu@LpdjmUP@\ngNx@@eLuUP@\ngNx@@eRmUP@\ngNxHD@aIUUj`@\ngNxHD@aIUej`@\ngNx`LDdskUH@\ngNx`LDdskUP@\ngNx`LDdssUP@\ngNxhMV@aI[ji`@\ngNyHEAxIVjuT@@\ngNy`BDtf{Zj@@\ngNy`LDtf]Zj@@\ngNyhGE`DYIITmT@@\ngN|@ADeJkUP``\ngOp@DiUkZV`@\ngOp@DjWkB@@@\ngOpHADILkW@@@@\ngOpHADILkWTu@@\ngOpHAbILkW@@@@\ngOp`@dfUMZj`@\ngOp`@dfVqZj`@\ngOp`@tiguif`@\ngOp`ATiekjj`@\ngOp`A\\dTQbjj`@\ngOphH`DYIHUVmT`@\ngOq@@drm[ST@@\ngOq@@drm[UT@@\ngOq@@drm\\@@@@\ngOq@@drm]UT@@\ngOq@@eLvmLt@@\ngOq`@VdsNkTl@@\ngOq`@fdrikTl@@\ngOq`@fdrikUL@@\ngOt@@TeVkzj`@\ngOt@@tiek@`@@\ngOt@@|daRbjj`@\ngOtHE`DILl[MT`@\ngOt`EPTfVKZj`@\ngOu@Dpdrm[Rt@@\ngOx@@drm]UT@@\ngOx@@eSRuUT@@\ngOx@AddJTUUT@@\ngOxHBHaIeZx@@@\ngOxHDHaIeZx@@@\ngOxHDIAIeZx@@@\ngOxHHHaIeZzjh@\ngOxHL@aJY}Zjh@\ngOy@DDfYKZj`@\ngOy@LDiisjj`@\ngOy@hAteIeZx@@@\ngOz@ACVeKNLuR@@',vr='fHe`A@\neO`BNZ``\ngF|HLZ@aJYuif@pPWHP\nfHgdAy@\neMBBHRZCAKd`\ngNxDLHaqBRjuU@P\neMABHXaIhH\ngCaHLHaIZ`H\ngJQ@@dls@XKGd`\ngJP`AdejhC@qX|`@\ngGP`ATiVj`LCEcrT\ngGP`ATeVj`LJEc^R@\ngGQ`@jdjmTAal[rP\ngGQhHl@cIIJmPFBMyL\neFBCPcA@\ndid@p@bBbFbDfYoa`b@@LJ@fx^QP\ndaDD@@IIf]n``@@pkBiny@@\ngChDL@aABSM@XHKdp\ndazD`N``|DjwVjh@`\nfHbTAa@\ndaxB@@InRYgZj`CBdpf{dT\ngNxLL@aAABDfVZj@`\ngGPB@DHHpQPaIUZdB\neMC@HoABDe`pccH\ngC`L@DSpPPdkPD\ngJU@LPdjr`XIGd`\ndaG@@@kdig|jVj`CAdpj[`\ndaD@@DjUZxHH@CAdpj[nQ@\ngKP`@Tixjj@ptVyB\neMhDRZCAKd`\ngJQ@@dkU@XDQGdp\ngC`D@DXHRVhCAC\\TP\ngGQ@@djmTA`Xl^R`\ngGXXKEb@cIIBmPD\neF`BNFE@\ndidHPBBHFHRYgVzB@`@`\ngCe@E`dsPFBV@\ndaFL@HABR[e[fii@H\ndaE@@@yIe^f`@`@piLJny@@\ngO|HEfHaIeZx@@B\ndcN`@@pjYJYe}k`Hbj@B\ngN|HEb@cHhhVj`H\ngNp`@deUZj@pvkxhP\ndax`@@bnRn[ff`RHj\ngJT@@deVhCCKGbD@\ndigDPLXXP@b`cIIKDnEZfd@`\neFBBDcAaWH@\ndeVL@HAIR[e_aZ@B@B\ndaDH@@RVU[f@@@LJ`j[nQ`\ndcoH@DJ`RUeUVy]ZZ`@@B\ndmO@@@pldTTJRraej@B`@`\ngNp`@dfUZf@pvMyF\neMBCDRZCAKd`\ngJPDAbGDRUj`H\neMBBHRYCAKd`\ngCe@H`dtpD\ngCi@LDek@`\neMaDBKpRVB\nfHbXAa@\nfHfpAa@\neMIDBKpRYB\ngJ\\HEb@aIej@pPWEb\ndcNL@M@aRYgWVzB@j`@`\ngNpXHmQxYIIXuTA`Uj~P`\ndeT@P@bNBDfUuih@J`@pxDpjx^QH\ndidHPABHJHRYgVzB@`@`\ndcl`@@`nReeWZY]@``@@B\ngOr@Ajti]qZY`H\ndeV@@@ReWTj@Bj@CCdrfxYyD@\ndeV@`IBHRYWVf`@j@CC`SBkiy@`\ngChHLIAIZ`LEMrH\ngNxhMVIAI[ji`H\ndeWH@DJPRY[TYZ`@@B\ngGPhCPDILuS@XXR|f@\ngGP`ATivj`LMc^JH\ngNp`ATiUjj@pLQoEf\ngJQ@@djsBJptQyL\ngNu@H`dlkUPFBqxjp\ndeV@@@RYyTYj`@@CBPaLinFP\ngCah@mJAIj`LLE`\neMFIHRM`pgd@\ndaD@P@bNbDfUzZ@B@B\ndifL@LAARYYRijjX@`\ndaxD@@QIUYjj@LJpj[nQ@\ndcN@@@rQQHqIKmUP@@A`hPfEprn|b`\ndmtH@@RYWUih@Jh@LAALJnF^Ph\ndmv@@@rRJIIFUjB`@@pyLJnF^Hr`\ngF|@AbeJfuU@P\ndiFB@LANEIn^ZjX@`\ndeTL@@Z\\bbRbM]@DT@FC@fMt|`P\ndcNL@MAirJIJHsUt@QU@A@\ndeT`@@pjrQQIFTpDEP@P\nfHd`Aa@\neFJHbHpP\nfdu@@@LdbbTRrLtSI\\TZwhaDTUUTU@A`YFBTYpRmF\\GfI^b\ndiT@@DjYVnXPbD`@pIBinYgB\nf`iA@@@YHheDdYdj\\DiwjBH`@H@@`\nf`iA@@@YHheEdXdj\\EIwjBHH@H@@`\ndmLH`I@HRfUwrnF`PJ`@phBXUxbT\ndedF@@PfFTf{nZjf@LFSBii@\nfoQPP@DLAhulbbbTRTLYpTmNZjjjZh@H\nf`i@@@DjUg^uhIVg^BBb`@H@B\nflmA@@@ILkZvmsQdeV\\EL@EUUUQT@FEdXipTeZM[tT|P@H\ndet@@DjYUX^dHbH`CAdJfF^Ig@\ngGY@JDeejpH\nfb}`@@@YEDeMDhTihjLUiwhyZjjjjjjh@LOHpRgARUhugASgb@Q@\ndclH@@rQQRJItJ{PUPB@FEDwSoLhU@\ndg|D@@OIEEHhfmPkmAU@T`A@\ndcMB@HDDWTfyV{iZ@HX@H\nfak`A@H`dDrBSJ{LjnmkQc`m{@ATDDUUPP@P\neghP@@@LdbbdRdRQbLf|VRcEdbgfPRSUUUUUUUUMUP@D\ndidD@@iJ[gxZB@@C@dkaxaL\ndeTD@@QImYQejjj@LNpj[agdH\nfdu@@@LdbTRTjTtSA\\dZwhmUUUUUU@A@\nfoQ@B@@AFRJJJIQX|UJqgT@PP@`@D\nflmA@@@ILk[J}sQdmV\\EL@EUUUQT@D\nfgA`B@N@BDifYWz\\d[Uj@H@B@@H\ngGUHEj@aIUZdB\ngGX`LDdjmLIkBWba@\nfnk@`@@MrJJZQIFYJSKYdmF|DmVjjjjjjjf@B\nfoQA@@@YHhhheEcqTkF]PAA@B@@P\ndiFD@HCDemVZj`bJ\ndcMH@LDDeYWWajjjj@LIBDJfzUyF`\neFDBcAaWH@\nfewAP@@Vkv^QQISQJFKIQJVZcEF|EIVejjjjjijj@CBJLTxJRmFl{t\\ejOdI`\ndmTJ@@PYUIeUYjjV@LBpjWdL\ndmLH@@RYVuiiV@BiH@`\ndk\\D@@OIEEHhkje]hJbB`@`\nffsA`@@VkdTRTtRabrTRhqQoARUiZjijjjj@B\ndg|@@DjYV}~T{`d@@@@H\ndeTH@@Rfuunh@I@C@lJfybCH\nfoA@P@@HuYIe[UvhrRfi@Bf`@H\ndeTD@@QIgeQej@@@LJrfx^QH\ndif@`D@HRUe^Eh@@@pXDinGbPP\ndg~@pIBPRPrPrJPqISIBiwU@@@@@P\ndmL@@DjYe^TYHI`h@H\nfb}A@@@YEEHdcLeIeb\\djsdyZjjjjjjh@LOXIQgARUjsoAbgdL`\nfc\x7FAR@CQ[OXICHhhdiDimCEDYmBrPk^SfmSUUMUUUSTt@D\ndmLH@@Re^UpiVe`@`@`\ngNp`@deYZj@pNM_I@\ndmtH`NBHRYWVih@Jh@LNALJiWdB\ngJQHBLQIVi@`\ndmtD`NTHaIe]Vf`@jP@`\ndmtD`NTHaIe]Vf`@j`@`\ndklLPDp`BH|LbdRRaRtvjh@@@`\ndeU@@@aJWeQej@@B@h\ndg|`@@pjrQQQGQIMqvAPP@@@P\ndeT`@@pjrQQQUMpEAP@P\ndaED@DXNRYUifjf@H\ndmND@DCdfVUrjUZjZi@H\ndg}@@@aJVYU^Svv`@@@@`J\ndg\\@@LdbbbTicRDQIS@Qs@\ndk\\d@DsmB\\bbbTrQXUujjUj`C@liS@\ndazH@DAImeiiBL\\Lrfxb\\\ndkNH@DAImgVVffZPsEhV\ndefH@HAIUVYfZPrKJj\ndaF`@@pjYJYfn@b@@pPfyG@\nfhi@@@LdbbQfTbdxKShF@jjh`@`\ndmt@`@bDfUuZZ@Bj@CC`SBkaxdj\ngOt`DPtfWMZi`OLlP\ndaED@DHNRY[Jfjf@H\nfluP`@DD@iIfUeeurL]DJVjhD@@H@@`\ngNy@BDeUZj@pJu_EB\ndcNDpBWPbNBIdDfYUYa``bT@H\ndmvDPIxPbBBDfYZVVBAX@CB`rfgdJ\nfoA@@@DjYW{WdkN`XH@@@Ppp\nfluA`@@HddrsJoN}NF}EKTpT@@D@@XJEKQkN|FJ^PX\nfhi@P@@HeyIefU]zgCNZfB`ah@B\ndcML`EvDp@cIIKDedLkP@R@D\ndieD@DpARYevyjiX@pRnxfD\nfhyA`@@HBdrrkN~RdcN|uA@@AP@A@\nfbmQA@AJRBH}HILk\\kOKtyit\\pACTE@a@@P\ndg^B@HAEmInUvwaZ@Bj`@`\ndg^L@DAaRUf^uNvjj@@@H\ndcNH@DAIgfYgVhBH@CBnFUwbI`\nfle`a@BAbBHeDYEEEDhXXeDqWdpPU@PL@@D\ndefL`BpYBHRVvZfjX@`\nfoAa@@F@rJJJIJINUeFZBPjHP@pDRgARtYwHJ@\ngOtHDpDILrWST`XHwbF@\ndigD@HK`QInW[fiZ`CCDX^QP\ndeWD`D[ad@cHhhhXWTuSHA@\ndg}@@@mJYeU|]Tz@@@H@CAPpj[aeSyE`\ndiU@@@aJUUpnFZ@@@LBinGbP`\nfoQP@@@XRfYV}|LEjsfjYA@h@B\nfhe@@@LdbbTbTurXkfaF|DHbhh@B@@`\ndaFD@DAdfUjyjf`CCDsnQP\ndax@@DjWzjh@pxHPj[nQ`\ndmO@@@`diWe\\JUfh@D@LFanFUyB@\nfdep@@@PHeKOLjoxH[s`sU@@@D`@D\ngGP@DiVj`LBl[qB@\nfdy@`@@QRYWYVuzL|F@Bj`@`@B\ndeTH@@RYWZf`@f@CA`SBj^PH\ndmtH@@RYWYih@IhBNh\ndg\\HpMBPRPrPrJPqIPsCMT@ET@D\ndmv@`EBHRYWYih@Jl@H\nfoApB@EZ\\BHRYWYyZLlz@BjiR@B\ndaG@@@rdifzxHH@CAB[bYp\ndev@`NBHRYUVfFX@Ja@LJCBz^H``\ndcnH`IHHaIfU]XUvBBJa@H\nfoAQB@FF\\BHRYVwUZ\\EJ@HjjQ@B\ndg]L`LfDD@cIIBhhd]ikTC@P@XMc\\nwrI@\ndaGH@DJ`rJIPdsTt`D\ngNq@@dsUUPFEDM_I`\ndklHPABHvHrJJIJQEn`HJj@B\ndeTH@@RfUWihHH@CCdpfxYyE@\nfduA@@@ILroZviFBdZpXmUUU@AT@A@\nfhya@@O@rJIJYRIKFcIF]z@BjjjJ@CCPDXhJRmFl{d@`\ndk\x7F@@@bdie^urnGSfj`@X@H\ndg|@@DjU^yZx{BAJjbBJX\ndid@@DjU^nBAHBJ\\FaLJaxc\\\ndeUD`LjD@HrREQICJt@@@XUc\\L|`@\nf`qPb@LB``@QddaTTRRVtzwej@@@@@B\nfdu@@@DjUe_[e`nRM[tYfjjjjj`@`\nfb}@@@LdtTbRLrTrUAJt{r\\}UUUTuUT@D\nflmA@@@ILkZvmsQdeV\\EMUMUUUUT@D\nfnk@`@@MrJJQJJYERKH{`iJ|dmZjjjjjjjj@C@hHXIQgARUYw`qSdmV|ah\ngJPhLQbIKTpD\nf`i@@@DjYU[wxjQg^`@@@@@@CBRLDirVkNy`Qo@\ngGUHEj@aIgZdCAA\\VH\ndcn@@@RieU~V]jjjj`CATpj[ae]yD@\ndmO@@@`diYuZZU@`@@@LJsae^PP\ndieD`JXaCDRYgvzejX@`\ndeVH@ACHhhdbwPDE@AaPXUMsNFP\ndknH@FAIfUWaVhHHh@LMBLJfxYt~Ph\ndg]H@FlDfYU^QVhHHj@B\ndknH`Bp@aJYvU}NfhH@@H\ngNqdEb@b^FQRHmU@XXU|VH\ndg|@P@bEbLbbbTRRKR]pP@P@@D\ndmtL@@QTfyeQehBB@B\neMdHTf`pQyP\ngN|@@ldssUPFEBM_I`\ndef`@@SFyIeYfjZ`B\ndidHPBCDGDRYgVzB@`@`\ndigD@HHPQInYXVijPCCDknPp\ndmvD@EADfzUQUjjj`B\ndifH`JD@cIEDd\\jfZh@`\ngOq@@dlvKUTAaeWqP`\ndaDD@@QInXjZjh@`\ndmMH@LhDeemZZUYh@H@H\ndeVH@ICHhdhUSP@U`A`RYS\\PN@\ndclL@@STfUmVfeVi@B`@pKaW^Ie@\nfheA`@@JLeLrsLsPPkR\\kUUSUUUU@A@\nflui@@DXYYHDfYewvUHrVhiZjifjjZ@CCUNBdkQg^CGdD`\nfoQa@@N@rQQQQJKGbiVLz`BB@D@@pxQ`iZM[bEN@\ndifH@BAIfuxZ`@@CB`inGbQ`\nfoAP@@@NrQQQUQIZgCVifh@J@@`\nfdy``@N@PdrwL}kjtFKTuUA@H@FDbLxHug^CqBh`\ndig@@@`Tke]nX@H@H\ngOq@AdbbLUUTA`Uc^Q`\ndk\\L@@jTie]urnF``Jf@B\nf`i`B@F@bDfUmYWiqQg^`BJB@H@B\ndeVD`NFPBDfUvih@I`@pKBj^HB@\nfde@@@LdbbTRtQRSIJuzHQEDDDD@A@\ndidHPABHZHRYVZz@H`@`\ndidH@@RfU~F``@@pYLJnGdL\ndmMH@NTDee[VFUX@ab@LBpfWbQH\ndcmH@DhDfUe]aWVjA@`@piLzUx`z\nfluQB@NNbBHRYeg[Y]dkNBfBAbB`P`@H\ndid@@Ldbbq[`bB@CBdJfGdX\ndefJ`JaLFP|LddjRcUTpA@\ndifD@DCdfVZaZjZ@LLRaxfL\ndeT@@DjU_k``b`@pzDJfz^I``\ndeWH@DJ`RYYTfZij`CCNF^He@\ndmwH@DJ`RYYYIfjZj@H\nfb}@`@@YRYUUm[ehrRkNBf@BjjjjJ`@p|CANBdkQk^CEN^PP\ndcnH@BAIf^u[evB@@@@H\ndcLB`HSFCpRj}mUujh@@@`\ndidH`HApRkm^Fh@@@`\ngJPhH`xQ}TA@\ndmL@@DjYUVgaHIBh@H\ndidD@@GIEEE\\jfZh@`\ngFp@DiTvVhC@qX|Ph\nfj}P@@@IrRJJIQJIHdqUmA]Fh@bBHJh@@p}bgARUhug^CGIP\ndknD@BADfyvUtvjh@@@pELXYWSxaT\ndeTH@@RYWVf`@j@CC`SBkiy@`\ndg|@@DjU_eZx{BAH@@BJlAaBjUt~Ec]X\nfj}a@@O@rJIJYRIKEIRcIF]z@Bjjjfb`@`\ngNy@LDegjj@plVKxaP\ndo~D@AA|dTRRbqbyZBBbj@B\ndidD@@yJ[VXZ@H@CBdpf{dB\ndmLD@@iJYW_JxZB@f@CBdIagdJ\ndaF@@@RYe[hB@@LJCBinQp\ndieH@FxDigwJiejBJlLpjyb\\H\ndg^L@LAER[eYWNvjhD@@LAPjF]N~Qp\ngNr@Ab|dTQeiDe@\ndaF@`H@HRVU[jjj@LNaLJf{d@\nfnk@`@@ErQSISISISQJUgEZ]zNZ@Bjjjjlj@B\nfb}A@@@YHiiDdYdidjBUiwdyjjjjh@J`@H\ndmLD@@eIfUTfEV``R@B\ngJQ@@dru@XS\\RH\ndeVD`NFPbDfU^ih@I`@phLIiyB@\ndmuD`BFUBHRYg^[hHBX@H\ndid@`@qDf[Wai@@@H\ndcmH@DhDfUe]aWVjA@`@pKNe^X`z\ndmvD@HADfueYUi`@@cF\ndeT@@LdbRQU\\DBT@FCPaTL|SF@\nf`q@@@DjU]YWiqw``R``@ABe@\nflmA@@@YEDeMDhTieQbmN}EKUUUUUUT@D\nfduA@@@ILkZvmmFRUYpXmMUUUUU@A@\nfoAA@@@ISZzrkNV]P@T@@@AaIFBTXkQk\\PIp\nfhi@`@@^Rfuue]Yrsj@B`@h@@`\nfdyA@@@ISZvnsKNJuP@@EUP@A@\ndo\x7FD@DgP]IefU\x7FTvhJBI@B\ndkm@@@kIHbdhdmNjj@@@LIaLIae]xeF\nf`qa`@D@EyIfYUwrLuYj`XHf@@pYrRmFmqEG@\ndk]H@FDLbbbbbey]N@H`@@B\ndeT@@DjU_k``b`@pFDpj[iy@`\ndg^L`LaC@HrRPzIKJRju@AL@FCXS\\L|bp\nfoAa@@I@RYeU{QJlyhHHjb@B\nfoA@B@@RFQQIPiQITYYt@Dp@@BGF\ndid@P@qAqDfY]n`HH@H\ndidHPFBHJHRYf~FBH@@`\nfdei`@LJLzHIZrQQQQIJJkDiYpXuUUTBAP@D\ndeTH@@RYWZf`@f@CB`SBkbCH\ndeTH@@RYWVf`@f@ckA`SBknHL`\ndmMH@HxLbbbTQ[iV@@@@@`\ndk\\@`@BDifUWGUN`@@@@CBPpj[ae^Ii`\ndeVD`LFPBDieWrjfiXHr`\ndg|L@@Z|dTRbfQuCNtEDQR@D\ndg]H@IlDfYU^QUhHHj@B\ndcLD`BtHaIfUuXXHHj@B\ndk_H@DhpRYVU}aWVjA@h@H\nf`a@@@DjU_gVipHDffXAbbItp\ndo}L@HdDuInUunxV`@ij@B\ndcvB@LANGHieEDXuTuPA@\ndkn@@@rQIJJIGSjhJ@@CATrfxYWSx`P\ndaxD@@QIeUjZBB\\Bpf{dT\ngCh`DLdlpd\\InHP\nfoAA@@@ILkjrmFV]@AL@@@ar`\ndk\\D@@WIEEEDYjF]hJHbP@`\ndmtH@@Rfuu[j@BXBAlJSBinXLj\ndklH@@Rfuuenh@Ij@`V\ndidB@@[aRfU\\jjjh@p[BinGbP`\nfhi@H@@XyIQgArQQIQJ[JV`k^jjjjjj@CCTBTxJVcN|GfDLl\nfhiA@@@ILrsZkf|xKUP@@@@@XFps`iJtZsoAyA@\nfdyA@@@YEEHeEBdekA}Ejj@@@@@B\ndmVH@NAIe^Yjjj@LNpjXYWdH\nfhqa@@C@RYegV^tyjhHJJ@@`\nfoAQ@@DJ@drrkNrMYsTDEED@FDdDYpVcV]sEIJ@\nfjc@`@@YRYVum[ezLdjs`i`@jjjjhj@B\ndeTH@@RfUWihHH@CCdpjxYyC@\nfbmA@@@YEEMHdcLeHVRt[pVjjjjjjh@H\nfbmA@@@YEEeHhmEhXmV]zNVjjjjjjh@H\ndk^L@IANRY[f~]tvjjjj@LApjXUt~It`\ndo|H@@rJJIPjHqaZZijZBAh\nfgAP@@@LrQQJJYPtdKQk@@@@@@@XBQPTeZMX\nfH`pA@\neMJH|Df`pgd@\neOB@HcfhH',wr='gFq`@ldrfmU@XR|a@\ngKXHL@aJWFj`LBHmrD\ngFyHL`DILikUPD\ngKTHLPDIRxtlA``nR@\nfHgdA@\ngNp`@dfzZj@pJMX\neFA@H`bLFE\\`\ngCh`LDdsPFDWI`\neMHAIdLF^P\ngCa@@dkHFBVyH\ngJXLL@aAABDfVhB\ngJXHD@aIUZ@`\ngJXHD@aIYj@ppqyH\neMXIDe``\ngOx@@drm\\@@A`plZp\ngOx@@drm]UTAaqEcV\nfHapA@\ndid@@DjUfaBB`@LNaLinGdD\ndidD@@IIf]xViZPCBlJfGd\\\ndidH`DBHR[e^FX@@@`\ndid@p@bBbFbDfYoa`b@@H\ndidH@@RUe^Fh@@@pxHPj[nPH\ngCd@ADkj@ppbyL\ndifD@BADfyWaZ@@@LBQnGdT\ndeV@@@RgYTYj`@@C@PaLinGdR\ndiDD@@QIn]Zjh@pYLInGdT\ngNp`@dfuZi@pJM_I`\ngC`hIaxIVtA`enP@\ngGYHKAxIVkU@XYZ|PH\ndiFL`JcaCpRm[fjf@H\nfHbTA@\ngNtDLpDHHR[UjhB\ngGYHEAxIVsU@XEXwd@\ngNq`@jdvkSPf\\Ll~P`\ndaxB`HSN@HrRPyKUPAaaTwHx\ngCaHDIAIZ`LINS@\ngJXDBIARBS]TA`h^S@\ndiE@PBDIAIAInujjh@`\ndiED@BDDR[mVjj@LFPj[ayF@\nday@`Lx@aIUVjj@LNaLJf{d@\ndmv@@@Rf~UeZj@@@LEBDpfxYT\ndmvD@E@dfYwVzB@j@C@PpjxYT\ndmvL`BaL@HrRRjIJUVjjh@`\ndmvL@EAFR[f_FV``H@LFRfxU@\neFA@HoBJD\ndiGD@JxPQIeUZfX@`\ndiFB@BAFEInuZjd@pILJnQp\ngCd@ADij@ppfyD\ndaFD@DCdfVRiji`CCDinQ`\ndaGH`LJn@HRf_rjYj@H\ngC`@Die@ptVy@\ngNq`AVeJmUPFEbq_IP\ngC`DAb[DRVhB\ngCaHLLQIZ`LDEqS@\ngJP`@dfzhCCA[ba@\ngNp`@dfuZZDu`TZ~S@\ndaxD@@QInuij@LBRf{dD\ngGPBADZPLaYAIZjhB\neMABHYAIhH\ngNqBLIAREdGHIMmUTAaCrP\ngNt`BpdfyZZDu@\ngJX@@dmu@XKGdP\ngGX`LDdsmTA`m^P`\ngNx@@eZoUHD\ngJY@HDeVhCAK\\a@\ngJXDB@bABUmTA`Pl^R@\nfHbxA@\ngGU@DPdrmRAaecrT\ndedd@DHYCdfW[ZfZBBX\ndcLL@@STfVyVUZ`HD@H\ngNp@DkVzZ@`\ndaD@`@bDfUjZ@B@CB`SJ{dL\ndcLL@@QTfVUV]Z```@LNJfFUwd\\\ndaxh@LInAIUYffBDh\ndaDh@DInAIf]nZiX@`\ndmu@`LTHaIUe\\Yj`@`@`\ndaFD@N@dfYvyjV`C@lJfyG@\ndeVDPL[`bB|DeYgFZjZh@`\ndk^@@@Ri_YVftzjX@H@LEaLJae]L\ngC`HADIMTAa`mrP\ndeT@`@bLbdTJPsU@@@D\ndcND`La@BLddJbRrzmPP@@X]S\\LkoHp\ngNphJpDIKMULA`QD^Q`\ndiDL`JXPBLbTTJjfd@`\ndaG@`LK`BDimVz`@@B\ndeU@PAdH`haIf]vzB@h@H\ndmuD@FdBRgmeeZjjV@LNaLJaWd\\\ngNp`ATeejj@pXfM_H`\ngNqhHjOAJmVj`LLZ~HX\nfH`TA@\ndaxL`HS@BLddNRuT@XXUMrN@\ngGR@ACTkVY`iZ`\ngN|@ABeJ|mPTdxJofVH\ndax`@@`fRegej`RIJ\ndayD@LXJRVUYk`aJ\ndigH`LJn@HRf_ljfYh@ppBGdH\ndaFH@BAIeZf`@`@piLiny@@\ngNuHDx@cIHTej`H\ndknH@EAJYYfQN`bJ`@LIRfxYWS@\ndifH`BDHaIe]ih@I@B\ndmOH`LJQ@HRf^yriVfZZh@`\ndmNH@HCHhheDVzU`@@@@LNCJXYWd\\\ndcnH@AAIVYWXUvjP`H@LABDkag^Ph\ndew@@@pldTTJVTLmP@P@XUaMt|`P\ndaEH@DhDfVVyje`C@dJfyG@\ngNp`@deVZf@pvkyH\ngGQ@@dluTAaQEkrD\ngNq@@djuUPFCDqkyD\ngNq`@fdskUPFFq_IP\ngJU@HPdkU`P\neMhHRVCBP\ngCi@HDfZ@`\ngCh@@dmHFFBwI@\ngGYHLQDIJuU@P\nfH`XA@\nfHbXA@\ngNpHAxITkUTAaqEcV\ngKP@Di\\YZ@phbq@\ngJQHH@aJmj@ppQyL\neMJDBDf`pQyP\ngJT@@TfVdCAK\\PH\ndiG@`Dp`BDfWejjPB\nfHcdAa@\ngCh`LDdkPFDwI@\ndcNL@M@iRYg^vzB@j`@pdLJnFUt\ndigD@Dq`EIeYkfje`CCDqnQp\ndiT`@@rnRfUjEnBA``B\ndmNH@DAIe[VfeVj@B@CAdkae^Q`\ndedHXJBPRPrPzPFPfPrJPsRUSU@D\nfHcDA@\nfHdXA@\nfHdxA@\nfHgHA@\ndeTH@@RYeYn`HJ@CC`JfxYyF@\ngGQHJ@aIUjhCBqXwd@\ndaG@@@kdiVrX@a@C@hPfyG@\ndcll@DpYAmRYV]zzUZije`B\ngNtPHPjtfvZf@`\ndeVD@HADfvUFVh@@@`\ngGT`EaTf]jPLDmrD\ndaGH@DK`R[e[fiZ@LLQnyE@\ndmvD@BADfyW^Eh@J@CBdingdJ\ngGY@LDeVj`LJEc^R@\ndcnL`LaA@HrRPjIKTrzmPHD@FEYtkh\ndaE@@@aJyUnX@@@pkBinyD@\ndie@`NDHaIe]ih@J@CA`SBknPH\ndeU@@@aJueQfj@@@LAaLinF^P@\ngN}@EbDf]Zj@pJqoHp\ndeU@@@aJueQfj@@@LAALinF^Q@\ngJT@@Te^hCCKD\ndcwD@BWPQInuVZjjX@`\ndiVH@BAIfUInFjZi@H\ndaz@pL@HPHxHRYyZj`B\ndaz@pL@HPHXHRYvZj`B\ngGYHE@DYIHUj@prqyJ\ndayH`Dr@|Djyfjh@`\ngNp`@dfuZi@pJq_IP\nfHdpAa@\ngNv@ALZtkefj@`\ndieH`Dq`BDfUfnZii@H\ndaF@PDBHzHRYWih@H@H\ndaF@`N@HRf_rjYj@LFALJnyC@\ndaFH@BAIf]n``@@phLInyE@\ngGQDB@baBSKTpD\ngJPhLPDIKTpFDGEB\ndeV@@@RiU\\Yjjj`C@XSBkagdL\ndg\\`@@SFRYueUNvjjjj@H\ndg]@@@IIUYyT{zjh@@@`\ndaxH@@RV^jj`CAhPj[nHF@\ngGX`JDdjmTA`c^JX\ndg^D@IADfvYW}MjhHB@B\ngNq@@dl{MPblLZ~JX\ndctJ`HSBtOCIILXhduSUHQS@\ndkl@@LdbRdSRjP`jJ`@pfDJfxUOdZ\ndidH@@RYeVz@``@pXLJf{dB\ndigH`LJa@HRf^|jfZX@`\ngJQhHb@cIHUhCB[bA@\ndaD@P@qBbDfYvzB@@B\ndkm@@@IIUfU}OjhH@@H\ndid`@@pjRfUjXBB`@pSaxbL\ndcND@E@dfYwYn``Jh@LACBkaW^QH\ndaF@@@RevpjjZ@LJAB[nIF@\ndmvD@BADfy]fyjjf`B\ndifD@NADfvWaZjj@LJSBx^IS@\ndcND@IADfvYXYZjjZ@H\ndcND@BADfuYU]Zj@@@LASJxYW^PP\ndeTH@@RYe\\YjB@@C@Ppj[agdP\ndmvH@FCHhhhdYVhJ@@C@PcJ[aWbEH\ndcNL@LANRYygiUjB@`@`\ndifH@HCIDhYLJejh@`\ndaED@DHFRUe[fff@LDRnIG@\nfH`PAa@\nfHdHA@\nfHchA@\neFHBJFE@\nffs@`@@HRYyVWm[W`cVCDmVjjjjh@J`@H\ndcLD@@UIUe]FVX@J@aKCdrfx]yD@\nfewI@@DXldBSLjj\x7FJzriFJMEHymUDDUUT@@P@D\ndeVD@HADfyeFV`H@@piJ[ayD`\ndet@@DjYUZ^D`dJ@CBlJngfHp`\ndaFH@LAIVUnjjh@pZDJf{d@\ndg~H@AAJYU^wiNzBBJh`B\ndet@@DjYUZ^D`dJ@CCdpjxYyC@\nf`qa@@D@RYeU{TRg^Zij`@`DJVBbTxIVcV]{bLL@\ndmLH@@Rfum[iV`@jD@`\ndclD@@WIEDhbmSCMAPEH@XTa]N|Rf@\ndclD@@UJYY\x7Fkaf`bBh@LJPfg^IW@\nfgAA@@@ISLrotyHvk@@@@@@@P\ndeUD@DhFrJIJHusUMT@XYgCqDd\ndaE@@@iJUdf@H`@pRnydHp\nflu@P@@\\u{HhheEEMGEfJdzJV`hJ``H@@pecdeZMzJ^PB\ndet@@DjYUX^dHbH`CAdJfx^Id`\nfbmAP@@BU{NQQQQQQFVKYbmNbehJbHHB`@B\ndeTB@@pYRf[^njjj`CBXSBinFP\nfc\x7FAR@AU[OXICHiEHhhhblXdicBkvkNbdmUUULuUMSUT@FD\\DYpTeZMYp\\eFo_HM@\ne`\\PM@@@AHdbjnikgolbbbbbbTtRQTNTtrSBfgefRvsPADADqUUUUA@@P\ngNpP@btf{Zi@prqyJ\nffsA@@@YEHeHlcDeidfRtXLRujnjjj`@j@@`\nfb}`@@@YEDeMDhTihjLUiwhyZjjjjjjh@H\nfjcP@@@FrQQQQII[FIJgIVt{IP@@@``@@@@`\ndknL`LaE@HrRPzIJZ]Vh@b@CAlInd~Qh\ndeUH@JdDin]xZB@`@pIBX^IT`\ndg]L`LnDT@cIIChdieNkT@QP@P\ndclH@@rQQRJJuJ{PUDD@FEDwCoLjU@\nfbmq@@DX|CHhhdhddlTdQfgV|uTTEEUA@Aa[ENBdkQkNCEOHY@\nffs@@@LdbbdRdRQbLcKRU{HTmUUUUUUUP@XNqQgARtZwhiKWb@y@\nfewAa@AMfBPSHYEHiEEEDUeheme^uYt\\ujjjifjjZZh@L@xHs`iJtZs`yKT_H]@\neghPJD@AFimk`IAJPrJQRJJJHkKQK[PiJ^ZVNQYUUUUTsUUMMSU@@P\ndedL@@PTfUUZjf@LJpjz^Pp\nfnkA`@@N[dTRTtTTlVRbUFJlFNZmKUUUUUUT@F@TXipTeZMYw`iKWbLm@\nfig@P@@NZOHhdihhiXleDbjLUXL\\uZVjjjjjij`@`\nechX@@@@LdbbbRRQbvfRdrqC@bfadRUSRvuUUUUUUUUUTp@D\ndg|L@@v|dTTbbluRitEQDR@FCTwSm|Pc@\ndeTL@@zTfY[XXBH`@pHJz^I``\nf`q@P@@Ty{HeEEDhYDIVcLDQEUB@D\nfi{@p@@Zldh|dTTbblvrbbfaiIQjmhJbHjBHJP@B\ndk]D@BXCrJJJIPkiWV`d`X@H\nfhiP`@CAAQJ[gnyodgAhHHBB@@B\ndidHPBBlFlRYgVzB@`@phLKayE@\ndmvH`NTHaIeU^f`@jP@phLKaxbR\ndeV@`ABHRYeun`HJ@C@`pixeB\ndmv@`EBHRYe][hBBl@H\nf`q@A@@QGhaIfUvuv\\lz@`h@H@@pdCAIJtZwnHhp\ndeV@`IBHRYWVf`@k@CB`SBkd\\\nfbu`c@MDTBleVYbLbbbtReTTRsAQSAADtAA@@D\nfhi`A@I@b@qFQQQIIJEKLx{tAAT@D@@P\nfns`P@H`EYvQQQQQVZEIQILDhuVm@tDMUUTP@XZiqQoASdmV|`p\nflmA@@@ILkZjmsSdeV\\ELuMUUUUT@D\ndmtD@@QImYVUZh@@@p{B[ae^P`\nf`i`B@A@bDfUmvUhpTg^`@i`@H@B\ngOx@@eJimUTA`plZ~R@\ndeVH@LAIVYqejfj@H\nfb}A@@@ISZvmk\\lxkSoQsP@UUUUEP@P\nfig@p@@HdFJ\\bbTTRRtVbarRipwlezMjXJBQj`B@@B\nfoA@P@@HeYIefU]ipsfi`hD`@H\ndcLL@@G\\dTRRbOKPPTP@XRfES\\L{rE@\nfdu@@@LdbbTRrLtSI\\TZwhaDTUUTU@A`[AJLxIVcNCGfDR|\nflmA@@@YEEDhhTmMDsdmV\\ELAAUUUQT@D\nfdu@@@LdbbTRrLtSI\\TZwhaDTUUTU@A`YFBTxIVcNCGfFR|\nfnkAb@AUZBPrJQRJJJHkFIIWmV]EIZjjjYjjZj@CCvBLxJRmFlxNRmyAH\ndid@`@qDeYWaf@@BHlJ@j[nYBB\ndid@`@qDeYWaf@@BH\\F@j[axdH\ndeTH`ICDRUe_af@B@bJ\ndmu@PNTHbPaIe]Zf`@i`@pxDpjz^Ph\ndmN@@@RfV_Jaf`RB`@phFzUxbT\ngOy@HDfUkjj`LJlZ~P@\nfhy@@@LdbbTRtjVYHRg^BHh`@b@@`\ngNy`LETeVZZDs@\ndazD@BADfUvjXHj`\nfb}A@@@ILk[Kk\\tyKSoQsUSUUUUUP@X^AAFJLEIVcV\\EODQr\ndmMH`LVPBDiiu\\XUjjij@H\nfc\x7F@R@AUFlDadTbdTTTQVLRVtJU{UgQRVjjjfZjffjj@CBNBLxJRmFlxNR}godD`\nfnk@`@@UrJIJYQKISQHrgIZ]zNZjZjjjjjj@B\ndmtD@@QImYVUZjjh@pGBinFUyB@\ndk\\L@@STfUmWiiUjP@j@C@nESxfT\nfhy@@@DjUg^UzBu[pP`hhH@`@H\nfb}a@@L`rJJQIFYJYKDyIUgQSUUUUUTuP@P\ngNqhHf@cIICejPLH^KT\nf`aab@APQp@QddafaRbR]yZij@@@B\ndid@`@dDfYUn`HD@LJpj[nPH\nfoA@B@@RFQQQIEQILyYtA@p@@BGJ\ndmvH`Dd@aIVUwaZ@B`@pxDJfy^Q@\nfj}P`@GEAKIEDheED]idaZm{IZB@hBJjB@CCrBTxJRmFmxLTyy@h\nfigp`@DZBAJSJvnrnwJtYIW`}FuP@UUS@AD@A@\nfoQ`@@@ISLk^~FBuYuAH@@P@AaHANBdkQk\\Pqp\nfc\x7F@Q@AMzlD`fPrJQRJJJHkKQK[ZJ}jshykUUUSMUTuMU@A`GAF\\EIVcV\\DmQ{yCH\nfc\x7F@Q@AMglD`fPrJQRJJJHkKQK[Pj}jshykUUUSMUTtuU@A`GAF\\EIVcV\\DmQkxcNp\ngF|LHjOC^A|DiTt@@B\nf`qPa@LV``@QzPrRPqQIIXjlYruPTDT@A@\nfluQ@@A^AdRbRrTTRbKNN}EK@AP@@@@@P\nfa{A`@@E[dTTbRLrTfVrTIrRkNSejjjjjjijh@H\nfhiP@@@\\RiU{WZisQjjh@Jj@@`\nfj}PB@AVADILkkJzrmFFmdl@EUUP@D@A@\nfbmP@@@\\RiUyU^uipsdyjj```@H@@p]AAJBdkQg^CEODXr\nfdyAp@@XyHwhiSJrwoMANCUUTDDT@AajAJ\\EKQoAcqBE@\nfbu@H@@TyjwdyrIQQQHqISYBTFKADQUUTP@P\ndg~HPItHciCHhheEJlpz\\ADMLPAaPXpwrE@\nf`q`a@IZ|BHyHYEEDhiULfBtZ@bFfd`@`\ndmLH@@Rfum[iV`@jH@piLIaxdj\nffsA@@@ILklsJwoQbk^RVl@EPT@@A@@D\nfnkA@@@ISZvjsJklyIRZe[P@UT@@@D@@P\nfdeA@@@ISJ~sJ\x7FAF\\FMA@UA@D@A@\ndetH@@rQQJHtpsPT@`AaQMpsqDh\nfdeIB@LZmzH@cIEEEEeEDnRfkF}TmULsMP@XLAQbcNxbPP\nflm@@@LddTTVbvebyjUcNBfjjjjjjj@C@LDXIQgARUhuoQSr@P\ngJU@H`dkSBI`\ndmtD@@QIee^UZ``@@phfFUxe\\\ndmtD@@QIee^UZ``@@pinFUxaT\ndmtL@@QTfyeQehBA@C@jXYxb\\\ndcLH@@RYeZvz@`j`@pxBXYW^Q`\neMhDRUB\ndmuD@HTDrJZIJGaZ@B`@piBkix`j\ndmv@`LBHRUVUeZj@@@H\ndmv@`LCDRUVUeZj@@@H\ndaDH@@RYU[fei@LJpj[nP`\ndiFB@LAFEIg[Zjh@pkBiny@`\ndknD@MADfym]eVj@B`@pELinF]yA`\ndmvD@D@dfWeYUj`@@CCdpfxYyB`\ndifD@LADfyWaZjj@LBinGbHP\ndifH@BAIVUxZjj`C@PaLinGdD\neMPBcXLIyP\ndcNH@DCHheEDbnmPT@@F@hUMproHt\ndcMH@ITDee]UnX@Jh@H\ndaG@`LK`BLdTRIUSUpPea`IWHH\ndaDh@DqnAIeZfZZd@`\ndaF@`BBHRYg[hH@@LJCBknPp\ndaEL@LhDYIe\\jZjd@pcnQ`\ndk^@@@RfYU\\]Tz@@@@@LECBinFUOdZ\ndidHPBBHzHRYgfFBB@@phL[ayA@\ngOt@AdiguZj`LBmWrD\ndk]H@HdDeVYWz]NjdHB@B\ndcnH`Jd@aJYW]rnF`PJh@H\ndcnD`HI`BDfYoVnWZfX@@@`\ndk^@PIBHDHRYWY^fWX@JZa@H\ndg~H@ACHhdieDYSSl@EMTPA@\ndg~D@DClbbbTlRUL]mUL@D@FGYSRngrK@\ndmM@PAdI@iAIf]UneXHBd`B\ndieDPLZD@HhHrREQKaVii@LBrnGd@\ngNq@@dsmUPFEbq_DJ\ndctB`HSE@HrRPzKJKUUT@P\ngCi@DDfj@pPwED\ndmvH`IDHaIfUin`HJ`@`\ndo~L@M@iRYg^ufzB@jj`@pLLJnFUt{\\\ndo~L@CB]RfyV~^F`HJj`@`\ndg\x7F@`LIPBLdTTJRrVUJtsUUM@FD`S\\Lz]`\ndaxD@@QIgUjfBJlBpj{dL\ndmt@@DjYefdHbR@CBlinWbCH\ndklH@@rQSQJYGahBBi@B\ndkNH@DAIeV}VijY`pdYZ\ngJY@HDeYdRVFBwHP\nf`i@P@@HD[HhdihdhUSbkN|uHPTUB@FALT]{bEZ@\ndaxL@@rdenjjh@pZDrf{d@\nf`qpB@MF|BHRYWUVVcG^`@jjeH@H\ndclD@@[HhheBeSKkTp@P@XEpkoLri@\ndclD@@kHheCDdUKkSP@P@P\ndaFH@FAIe^fZVh@ppj{bI`\nfdyaC@OVAHHdLRFQRFIJZZKHRoAj`BIZX`@`\nfbma@@E@rJJJJISIIH|TyL\\mSHPA@D@@P\ngFp@DiTujdCBqXwd@\ndeVH@LAI[eQejZi@H\ndk]H`FTpbDfUmYkiV@Hjd`B\nfj}qB@BVBxDadTTRbRRTVasIFCzLDEETuUD`A`kENBtZJ\\eyCp\ndid@@LdbbQxXF@@CBdrf{bDH\ndklD@@QIge]aej@BX@H\ndg\\D`EtICHhdhXhUSP@UMP@P\ndmtH@@rJJJJia`HbP@phBinxdj\ndeeL`LZDh@cIHULhmMT@XUc\\L|`@\nfbuqb@LRuA@`AFRREQJKKSISUhiVhFB@@`@B\ndmtHPBBHfPRYeUXXHHh@H\ndk^@@@rQQHjIKJtzjX@HBJX\ndg^L@FAMrJZJIKPbkPPPr@FGIS\\JgrK@\nff}`P@F@QkNQSQQIZEJIJXRdeZBBFX@b@DCT\nff}`P@F@QhnQSQQIZEJIKHRdyZBBFX@J@DCT\ngK\\@ABeKcMHFDgDl\ndmO@@@`diWe\\JUfh@D@H\ndmO@@@`ldRabRpiVZ`@P@`\ndg~DPFvpbEBLbbRfbRM\\JpAESI@D\ngC`@Dio@pfyD\neMBBHR[B\nfjc@`@@ERYYefUez\\UyvPiZZjjjjjj@CCrLTXJVcV]zJ\\ey@H\nfb}@`@@YRYVum[ehrRkNBf@BjjjjJ`@p\\AFJ\\EIQk^bgODZB\ngGU@EPdvmVAaErX\nfb}A@@@YEDeMDhTihjLUiwhyZVjjjjjh@LGHqS`iJtZs`isrDP\ndk}@@@aJVyY|hUtyjBHJ@B\ngGY@DDfvZPLLC^IX\ngNx`HLdmluHdX\ndkl@@LdbbTbsyYfjihDaV`\ngNp@DjWZeDCaXl[rL\ndet@@DjYWkafefiPCBdKagfYS@\nfhiAb@HHp@HrRRqQIYPsdcVVfiVji@B\nfoA@@@LdbRbbJvDkQfijZjT@H\ndknDpNWPdDdLdLbdLTRbdzhHF@@`\nfhq`c@IF\\BPQHXdLbdLRTvfdDjj@Hfj@@`\ndif@@@Rfy^F`H@@pYBinGd@\ndmvL@HAER[e]xV`@h@LFPj[eyD`\ndkmL@HLDUInUv~Eh@Jh@H\ndknH@LAIYyfUMj`H`@H\ndiFL@JAARY[vji@LLpfxe\\\ndiFL@BAAR[fvji@LLSJxc\\\ndeVD@JADfvYzVjZd@piLXYyG@\nflea`@F@bgHhhhdhebmIVTYhIBhjXP@`\ndeU@`Dp@aIUeQej@@@H\ndg|@@DjU_eZx{BAH@@BJ\\MaBine]N~Q`\nfhy@`@@BrJJJJIQ[DQeNmyh@`HB`@B\nfdeIb@LLDhwh`BLdTrbRJbTOARTxM@PMUUE@AaHBJRu[pX|`x\ndg}@@@yJeWe^nNzjhHB@CAXPjFUt{yF@\ndk]@@@yJeWmZ{Sjj`@`@pVDJnFUt~Q`\ndcmH@DxLbbTTRM\\nmPLA@AaSCJ{rD@\nfhyPB@ARADILkkKZtYhw`p@UR@A@@P\nfhyPB@ARADYEEDdXeLdsfc^C@PUH@D@A@\ndk]H`AdpqDfUmUiev@Bfd`B\nf`y@@@LdbbTRfNSI\\TKSoADTT@A@@XZPRcARtZso\\a`\ndg|H@@RfuvU[cn`@`@@@peBiiWSodX\ndg|H`ABHRYW[ficn@BjjH@`\ndk_H@FdprJJISPkatzjjiZ@H\ndid@p@qBqFqDfYoa`b@@H\ngGP@DiUja@xEXwbD@\ngGP@DiVV`iJpJqoDH\ndeTH@@RYWVf`@j@CC`SBhYyG@\ndmtH@@RYWUih@Jh@LNALJiWb\\H\ndcLD@@SHihheJLmUTu@D\ndg\x7F@`IVpbDfUuYZX{`@jiR@LAALJat~Qp\ndigDPLXXP@b`cIHUDnEZfd@`\ndk]@`AdHaIe[VZYS`@ijH@pxDret~Qp\nfoAaB@G\\ADILkkJ}FFm@AP@P@A@\ngOxhMDOAJmZvjhCCXobE@\ndk^D`La@|Dju^UimMjj@B@B\nfdyQR@NBYhwh`qLbRbbrRfTHiNCMKUMUU@aB`\nfluQ@@DJAdTTTTTRTQsEVbEKU@C@PD@@P\nfoA`P@D@DZrSLrkrQfgMTC@q@@P\nf`q@`@@HR[fYU_Sk^Zh@@@@@LMHYpTeZMYwnPp\ndg]LPElYLHc`cHhdliBiSP@Rtp@XLBXUKrK@\ndcNL@JAMRYYYyUjijX@`\ndcnH`LD@aJY{grevj``H@LABDxYW^Ie@\ndg~D`LePBLdTRTrbNT]uU@pD@D\nfoAab@LRMX@PeL|lmxiiuUAPLP@D\ndeVHPLX@bPaJU{\\Jjfj@LJANF^IA@\ndaFH`Dx@aIYUnZjh@`\ndeTH`N@HRVUmaX@b@B\ndknH@CAIe]eZZ@Bjl@H\ndk^@@@RfYU\\]Tz@@@@@LI@j[aWSxfR\nfhi`C@I@dDRFICHiCDeMhdaJ|Fj@H`@@@H\ndif@@@RYevz@``@pkBkay@@\ndew@@@pldTTJVTLmP@P@XEc]ODHP\ndaGH@LK`RUe[fjV@H\ndaGH@LK`RUe[jjV@LLBfxdH\ndeWH@BZPRYVtYjje`CB`SNGbQP\ndmtH`EBHRYWUih@Jh@LNALJnWbCH\ndo|H`EBHRYWUnjZ@Bjj`@`\ndcMH@AtDieV_ehHJH@H\ndk}@@@qJYVu|kitvi`PJ@B\nfgAP@@@XRf^~UqQgCVZjh@J@@`\ndk^H@LAJYeUquSh@@@@@pzfxUt~HT`\nfjcY`@LJCENPBedbbTRTQRRTqJZLxLTuUU@aDuQ@AaJAJ\\EJvR|``\nfmoYr@CA[t\\xHpSbk@|LddqTRbrfbRRRfejJRmzMjjjjhDHfjH@H\ngGPhMQHIJmT`XR\\RH\nfewh`@DRMdXHyEDhhhddmiUDenRuzp^cZ`B@HFjjhH@H\nf`qPC@MNADBBEQFQQQIQGQIgG^`HJjeH@H\nfdy@@`@Q@`bTQFHRYeWvUv\\|F@`j`@`@B\nf`qPA@MNADBBDfUuUehqwh@JjiR@B\nfdu@@@LdbbbRRltSIBTZwhmUUUUUU@A@\nfigA`@@U{dTRTtTTjTtRJeFJMxJRmKUUUUUSUP@P\nffcP@@@\\RiUyU_YVgCNKVjjBBF@B@DGVDXHIPTeZMYwhirVoHX@\ndg}@@@yJeWmZntzjh@J@CAXSBhYt{yG@\nfdea@@D@RYZymUr\\lGtVjh@@@`@B\nfoAQ@@KN@eLrj\x7Fbthu@@@D`@D\ndg}@@@cIDmEDhcJg\\l@@@@QE@\ndcn`@@rnuJYVuhUtHJIb@LBSIWbMh\nf`ipB@DX|@HRYeYU\\cMNmyjhhJHH@H\ndmvH`DH@aIVyVUZX@@@pxD[ae^Q@\ndeTD@@QInUnEh@H@LBRnGbEH\ndeT@@DjU^k``b`@pyLinF^IA@\nfoQH@@@XHYJYg]UirRkN@bJjhh@H\nfgApB@LLx@HRevUUpPTcViYj@H@@`\ngOy@DDfUkZj`LBcWrX\nfoQa@@H@RVUmUV\\djsj@Bh@@@B\ndclH`ABHRYVyzy]`BFh`B\ndcLDPND@c@aJY~vrjefj`B\ndidHPACDZHrJIJFn`BH@H\ngO|@AfeJykSTA@\ngNt`MPdfUZj@pvKyJ\ngNt`IPdfuZj@pJu_HP\ndg_@`DGPbDfUueZZ@Bjj@B\ndmWD@Hi`QImfUjjj@H\nfhiP`@C^@aImYWVVRoAZX@JiRACEaiFBLxJVkNB\ndmUL`LZDh@cIHULdeijh@p[FxYWd@\ngOp@DiYKZj`LFHlWrT\ndcLh@DxYCHdeEDcJmPDD@FEIcCoH`\ndcLL@@QTfVUV]Z```@LFJfFUxgZ\ndg^H@LAJUyfUSjhBH`@`\ndeTH`L@HReyTYi`@@CC`RfxYyD@\ngGYHL`DIMlu@XR|pq@\ngGYHL`DIMlu@XHwbF@\ndiFH`Bp@cIECDjZj@H\ndcLH`BBHRYg^fzB@j`@`\ndeTDPBdHcoAIfUvFBBD@H\ndg\x7F@PBWPbAbLbbbRfaSR]pPTMQ@F@acCNg_HH\nfoApA@BZLBHeDYEEDhiiTqUgPPUCTP@P\ndcN@PBBHFHrJJIJXmLDED`A`HXwCJ{rB@\ndig@@@pdigwJZjf@LFSJ[ayA@\ngOu@E`drm[SRAalWrT\ndkmL`LNDD@cIIBhdmeuZ`PH@LFqneSyE@\ndg_L`LfxPPBLddJbbQvfmPLA@A@\ndaxB`HRnCpRk]Zj`B\ndeV@PIBHzHRYeea`Ha@CA`rfx^QH\ndmu@PITHchcHhheEVF@bF@`Z\ngChhMDOBNtA`enP@\ndid@p@qBqAqDfYun``H@H\ndidD@@qJYWkjjj`CAhPj[nPH\ndeTL@@rTie_kjjjh@pZDJnGbMH\ndcLD@@QIeVuWVj`@@CClInFUyF`\nfoA@@@DjYUgWfiF`XJbh`@`\ndidH@@RYWZZ@B`@pXDpjGd\\\ndaD@P@qNqDfUZZ@B@CB`pf{dH\ndklL@@Ptfym]eVj@BP@pyLinF^Qh\ngOpH@DISOkSM@XDZobQ@\ndk\\H`F@HrQQJVIHjtzeX@H@LA@jFUt~P`\ndcLL`NWPBDif~{JifZZ@H\ndid`@@pjrQQQUn@hH@LDJnHp`\ndaG@@@pdifZxBH@CCJ[nPP\ndg~H@IAJ[VvuneZ@Bfh`CCdpfgSyE`\nf`qQB@FF\\BPRYVwUZgAR`BJjfD@H\ngNu@Dpdr{UPFAVMyF\ndg~D@EBldTtVRTOBntDASQ@D\ndig@@@pldTTQk`Ha@C@biny@`\nfoAh@@@XHkVRJJHyQJTxZpDPsUBBGJ\ndaF@@@Re]Jjjj@LFBDpnxeL\nfoA`@@@YHhhhdeCHvgT@D@P@@XJ@Q`iJtZsnPh\ndeT@@DjUijP`j@@pzDinF^PP\nfhy``@E@xeLsO}kSdm^CPUAEUQ@A`YAJLEKQkN|D\ndiT@@DjYVnXPbD`@pYLinGdD\ndmLH@@RfyYxYV`HJD@`\nfoA`B@N@bLbbbTNbRXJshBH`@@@H\ndcLH`L@HrQJSPiKmMP@@A@\ndaFL@LANRYUJfjf@LH[bXP\ndie@`NDHaIe]ih@I@B\ndmO@@@pldTTLRqiUj@``@pKNe^HP`\ndmM@@@iJYYtjFYBHJ@B\ndaF@`J@HRfWrjYj@LLAFxa\\\ndmOH@FePRYVukaf@HZH@`\nfdyAb@HHpCpRkVYU_]Nmyj`@@B`@B\nfj}A`@@HTdssKMzsRuYp\\mPDQTuTT@D\nfhiA`@@Hddjrm|jIW`mPAD@@@A@\nfhiQ@@JJ@djlklkIW`mUUT@D@AaiFBLxJUg^CqDC@\nfakQB@CQDBPRYW[Ue]eZLCEoX@Ijjj`@H@B\nfde@`@@JrJJJJJIIGLUXOhmR@T@A@@D\nfdya`@O@x[HhheDlTdhsdmM@pQUU@@P\ndmLD@@qJY{WJeZj@B@CAj[ae^IB@\ndg^L@HACR[e]VxV`@jX@H\nfdea`@D@dkHheEDheDUSfoVBuLDpTT`@P\ndmtL@@RTeVUaUj@H@C@jXUydYH\nf`qa@@O@rQQQIISGBtju@@@QX@A@\ndcNH@FAIfYWgZ`hH@CAPcBinF]yB`\nfnsqa@BLSFkPRBiCHhhhhhddTmeNZlGrXHbhjejXh@LABehsoE[rC@\nffsA@@@ILvuoZunsfc^BVkSUUUUUUL@D\ndcnD`I[PdDfUm^neX@biH@`\ndk^H`MdICHhheCEfGS`HaiH@prfOfXn`\nfbmqB@BNcxD`dsLrzlvqUhasAATUSUD`A@\ndid@@DjU^nBAHBJ\\FaBiaxf\\\ndmtDPNDHaYAIfVUi``X`@`\ndknH@JAIUYfUNjjjj@H\nfhipR@LBBhug@BLdTRbrRfeIrcJjjfYfP@pxBBBTE[bOA@\nfbmha@LBm{Lm@BDaBTrs\x7F]riFTyEMUULsRuL@FD`PPR``isqGK@\ndaE@@@aJyUnX@@@pKB[nIE@\ngGP@Djuj`LLm^JD\ndmtH@@rQQEJZDjjfh@`\nfhy@`@@\\RYeeo]xjQg^ZB`@@h@@`\nf`iA@@@ISZvmjsbmN}P@@ETD@D\ndclH@@RfumVy]h@Jh`CCdpfFUyF`\nflu@`@@IRfum]fUgEZ}F`@jjjhh@H\nfbm@`@@FrJJQIFIKSIDx{r\\uUUUT@E@@P\ndmtDPBTLSlSHhhmDVFBBI@CB`pnGdR\ndmvH@DAIe[VUZh@@@pyJ[ae^Q`\ndk^@PABHtHRYWYZfWX@JVb@LFALJmxbf\ndifD`JxPBDig{JifZ@H\ndmNH`NTHaIfVUazXBHX`B\neMJDBDe`pQyP\ndmOH@NFPRYegXYUhD``@`\ndaDD@@iJY\x7FJjjh@pjLInyB@\nf`q@a@ARADJbDfYV]}YsQhBBjjb@B\ndg\x7FD@NfpqJYoYWJNzjjjV`B\ndg}B@HTDf|bfbbTThfnmA@tI@D\nfluPP@DTAsUlbbTTTlTvRXHshiZjZfX@`@CCbLLDFJ^P|\nfhyQ@@CA@dsLjm{Jvg^Bt@@DCA@A@\ndmMH`NV@BDke[VFUX@ab@LBpfWbAH\ndiU@@@aJmUJnFjjj@H\ndo}D@DTNrJIQSEQJaZjZjj@H\nfoAP`@DNAsHheEEJefBMYji`@h@B\ndiF@@@rQRJVjj`CC`SBiny@`\nf`qa@@O@rJJJIIKERMjsPTEEQ@A@\nfb}A@@@YEEHdcLeLeB\\djshijjjj`@j`@H\nfoQHA@FJuXFH`HRYUYYbTT[UjZjefZ@B\ndcND@E@TfUvvf`@jh@LEALJnFUt\ndeTD`AdHaIe]jZ@BX@LJALj^PP\nfhi`b@FN|BHRYV~YYirpX@bBA`@@`\ndmtD@@qIUe\\YZ`@`@piFxUxdT\nf`a@P@@HhyIeWfUsVZj`HF@@`\ndklH@@rJJJIEQa`Hbj@C@PIne]OdT\ndeTH@@rJJIEMtAAP@XTFES\\PY@\nfdy@`@@QrJJIEIQISLx{tAAT@E@@D\ndg\\H`BBPRYg^U[hHBjh@H\ndcLH`IBPRYeWvz@`j`@`\ndaD@`@\\DimVz`@@CAdpj[nP@\ngGQDHG@nFRQFj`H\ndet@@DjYUZ^D`dJ@CAdpjz^Hp`\ndaxD@@QInejj@LLRfxa\\\ngOq@@eLvmLtA`l~Ht\ndidH`ACDRYWZZ@B`@pXDpjGd\\\ndaFH@NAIe^fiZh@`\nfoAPB@AVADILkkJ}FFm@AUUQ@A`hBLDiIVcNyC`\ndmvD@LADfvUaej@B@CAliae^P`\ndmvD@LADfWeYUj`@@CAlIne^PH\ndknL`LaM@HrRRqIYPYV`@f@B\ndeVH@BAIf_VzB@h@LJCBinHL`\nf`q@a@AZAD^bDfUmn]hrsh@JB@`@B\ndaD@P@bNbDfUZZ@B@C@`pnxbL\ndcND@NADfUyU]Zj@@@H\ndeV@@@RV[TYzP@@C@j[axaR\ndeT@@DjU_k``R`HipZDJagfXw@\ngGX@@dj|tHkAF|Rp\ndeT@@DjY]zXFB@@pYLinGbEH\ndcN@@@RVYUYwiBB@Hr`\ndif@@@rRQHqajjZ@H\ndazH@LAIYzjj@LFALJnxdL\nfbmPb@B^dDDadTTRbbRRTQXjrXy``jJjZbP@pyc`kNSgfC^b\ndazL`BaL@HrRPyKUPA`a]qJX\ndmVL`BaL@HrRPzJIZjj@H\ndcvL`BaL@HrRPyQZKUUT@P\ngNs@EjpdssTpFFU_I`\ndmtD@@QIn[VUZh@@@pyLkae^Pp\nfoA@`@@BRYfYWuVLyh@`@@@CBUF\\EIVcNyBp\ndmt@@DjYnvDHbJ@CBlkiWdB\ndg}H@ATLbbbbbJpj]mMULm@D\ndg}H@JxDefY^Zy[YjZZZ@H\ndmvH@ACHhhhdYUhJ@@CAbine^Q`\ndaF@`B@HRYg[hH@@LJCJ[nPP\ndg}B@DpAV|bbbRbrK]imUMMU@FGXU]IwrM@\ndcnL`LZ]@HrQQZYPyPkSMUU@D\nfoAQ`@EZ@JVQQQQQIWLTZsT`tAP@D\ndk\\D`HP@cIICDhl^e]V`bB`@`\ndg~D@D@dfVumQd{Z`@@@@H\ndg~D@FCldTRQTRUL]uUT@D@FBpfESKiwrI@\nfoA`b@LRL@HRf[g^|TuZjhDHh@B\ndif@@@RfU~F``@@pxDpj[nPH\nfoAqb@BTYIS`RBSLnmnsakTmTuUP@P\nfoAqP@DXH@RcNrJJIJKJUgMVZjZZj`@pybgIFl{dM@\ndaEH@DHDfYVyje`CAJ{bXp\ndieD@DHFRYf^EjiX@`\ngG]@EbDf]jPLInIT\ndmuD@FxERf_UrjYZjBJh\nfoQP@@@JRi^yWZ\\DhujjhHBh@B\ndo}B@HtDUtfyW[WaZ@BZh@LAPj[mM~QX\nf`qQA@CVHBHEDYEEDeMCLfR]zBBbfh`@`\ndmtH@@rJJIJEn`HJ`@pxBiae^Ig@\ndmvH@EAJYYtYhH``@pYBinGbRh\ndg^L@LAER[eYWNvjhD@@H\ndcND@BADfuYU]Zj@@@LNrnFUwbHP\ndazB`LaFx@cIHThmS@FBXWDC`\ndcND@EADfvUtYZ`@h@LFSJ[axbz\ndcN@pBBlFlVlRYfyVfBBb`@`\ndiFH@BAIUgjjl@pZDrfGd@\ndiFL@JANRY[vjj@H\ndcLL@@G\\bbbRfK]@PUP@P\ndo~D@E@\\bbbReRd[hBBjj@B\ngJ\\@AbeMK@XKGdP\ngJ\\@ABe[LbQpfyhb\ndaz`@@bfyJUfZYBHX\ndmM@PBx@c@aJYg\\jeZdHB@B\nfoQh@@@XdhrTsMlkSdeFluMTsUP@P\ndk}@@@YJUUURkatp@j@@@CCdqiWSyD@\nfnkA`@@X[dRdtbRLrTfVsIZMxIZmUUUUUUUT@D\nflm@@@DiUem^yIRVkNBejjjjjjj@B\nfhyA@@@YEHhheDecKQoNCU@DP@P@A@\nffs@`@@VrQSRIQSJJpqBt[pXykUUUUUUUU@A@\nfhyI@@DDlDBSJkrmmFF]xKUM@DMD@D\ndk]H@LdDie[Wz]N``@@@B\nfbmAP@@\\}GNRJJJJIEJIN`cA\\dBB@@Hb@@CBSNBdkpXyxbs`\nfakAp@@\\}EIVyHhhhhdTheETjBLEvPHH@@bbj@@B\ndk]L@LxDMIe]eRkSZjjjh@`\ndcNDPBePbNBDfYWia``aX@LFCBimy@`\nfnsHJ@CASVBLDxjsP^FRRXjIQYSQIYRuEIZmUUUU@`U@@XFpRcARUjwlm@\ngGX`DJdvsTA`a^YX`\ngNy`HLtemfjDc@\nfdy`a@BRlBHcDYEEDehXhlfB|FBBFB@`@B\ndg}D@DXIrJJIQIH|ivuTB`P@P\ndk]@PAdH`paIe[UZY]`@iiH@`\ndaxB@@QnRUeZj`CBlJf{dP\ndk]H`LiPBDigm[rivfPBJ@B\nfoQAB@C@BDifYU^gIVtz`B@DH@@`\ndmtH@@RVYWeVhH@@LNRfxYWbPP\ndknL@HALRYyyWSZj`@@B\nfoAPb@ARLxDPdrmjktXkT@EMLd@D\ndg|@@DjU_eZx{BAH@@BJlIaBjUt{yfMp\ndifL@NAJR[Y^Ejfd@`\ndk^D@JADfV[W[mMjdHB@B\ndmOH@FyPRf_eriVjjeh@pkBhYxdH\nflmA@@@ILkZvmsQdeV\\EL@EUUUQR@FC`HqS`iJtZwhiy@H\ndkn@`ECDRYWUZf`@fj@cj\ndmvH`BTHaIf]un``J`@`\nflea`@A@bgHhhhhdmL]EVMyh@`@bX@@puQgAJtZsoI@\ndcLHPBCD{DrJJKQFLLDDU@A@\ngJPdLQDHHRViPH\ndg|@@DjU_eZx{BAH@@BJ\\IaBiiWSyf]X\nfleA`@@HcdTtbLRTrVVc^BuU@@@T@@P\ndaEH@LHDimVz`@@CAD{bTp\ndeWD`LjXP@cIHUDdLkP@@A`fMs@xP\ndigH@LxPRfuVz`@`@pQBxeB\nfhiHb@LB|FB@AFRREQQII[Z][ru@@@D@@P\nfhiHb@LBdFB@AFRREQQII[Z][ru@@@D@@X\\psbm^CqAk@\ndigH@LhPRfuVz`@`@`\ndeUD@LhARfuunh@J@B\ndkoH@DgPRYYe]SZ`hH@C@TJfxUOdZ\ndkoH@DEPRYYUfSZ``h@C@TJfz]OdJ\nf`qq@@IZLAJ[WUeV\\]z`@j@@@@`\nfbmP@@@IrRJJIQJIHdjmhKhu@DPQAT@@X^qS`iJtZsoAbgH\ngOt@ATiVKjj`LFHlWrT\ndid@P@bNbDfYYa`H`@LJBfx^Q`\nfhiAP@@XyKRTrlovmA^CUUUP@P@FAhDipTmFl{p^HPp\ndcM@pItIAICICHiCDeLJuPAB@D\ndg_H@FzpRYeUyEZ``bh@H\ndmtH`EBHRYWUih@Jh@LAALJnE^QH\ndcOH@NGPrJJQVIKmUURpAapXUMJ|b@\ndg_H@AVprJQRIVYG]UUUK@D\ndeWL@DpPzTfY[ifjfX@`\ndaF@@@RYe[hB@@LJCBknPp\nfhyq@@DZ|AIe[yVvcCV|EjVffej@B\ndmuH@DTDfYUQUjjj`CClJfxYyB`\nfbuQ@@DJAdTTRRQRRbRDiNVjjjf@B@PMP\ndknD@HALbfbRadxV`@j`@`\nfoAAB@A@bLbbbRebRYrshBB`@@@LM@pQgAJtZsnPh\ngJXHD@aIUj@pHVOI@\ngOq@@dsI[UTA`Ub~R`\nfoAA@@@ILs|kiFZLuU@AT@A@\ndeTD`FdICHhdhUWPAD`A`RYS\\`P\ngOp@DjukZj`LJlZ~R@\nf`iA@@@YEEHdcLeB\\djsjjjjjjP@`\nf`iAB@K@BDifYYWyjSc^h@`HP`@CBPBLEIVcNyCp\nfdeAB@K@BLdTTTRbRsWMR\\[u@DABEP@A@\ndcoH@DGPRUe[^e]Z@HX`CBdJnwbPh\nfb}P@@@NrRJJIQJKEKB\\hvoQsTEQ@PDT@@XNQbgARUjw`qSd\ndeU@@@{IEEEKP`QP`A@\ndevH`Bp@cIEEBdUCMR@D@D\ndmMH`Ad`bDfYuVzU``JR@H\ndcm@PNDHaPaIeU]iaf@Bfb@LFCBE]yB@\nfluQA@N^bBH\\DILrsmlnrUoNCA@qMTlT@D\ndcn`@@rawIEDhiUTkhPUCD@XDc\\oHt\ndeVH@JAJ[e^f``P@LJPfz^PH\nf`iQB@C^X@HrQQJVIJYDijsoUJpACQ@A@\ndeTL@@zTif[rjjjh@`\ndeTL@@SdfUUifiZh@`\ndcLD@@QIe[]ifiZY``Z\ndaE@`BhHaIfUn`H@@ppL{bTp\ndmv@HBBHFPfPVPRYUzih@Jh@H\ndmuD`FFUBHrJIJERn`BI`@`\ndknD@D@tfUe_WViB@`HJpEL[aeSyE@\ndo~D@DA|bbRbbRqvviB`R@`f\ndid@@LdfbQ[fji`B\nfakA@@@YEDeLlhheHmXjL}DNZjefjjjij@aeJprBBLTxJVcN|FJ\\ejwdN`\nf`qI`@DXUh@oYEEEELTlfRtYjjZfi`@piSakNyCp\nfdyHP@DXUh@oQrJJJJXiYILehsUTuMTl@D\ndiDL@@RdfVejj`CCB[nIP`\ndmtHPIBHVHRYfUXXBHX@H\ndieH@JxLbTTQkfej`CAFGbPP\ndeUD@FxJRVYmnYjZ`B\nf`qa@@M@RZYU_tVeFj`hHj`@LM@pRcNBTZsnHex\nflma@@@`rJIJYRIIIFcIF\\GtX@Jjjjbh@LG@Qb`iJtZsoQR\ndcl@@LdbbRRkCtaDQTPA`JXU\\LkrM@\ndid@p@bFbAbDfUfn`BH@H\ndeTL@@PdfzuFVjfd@`\nf`qA@@@ILroljJSoMA@P@@@FBlDipVcV]{dF@\nfhi@p@@XyHpTieY[wzB]zjjhHB`@LCPIS`iJtZs`|``\ndig@@@pldTTqkiZjPB\ndaE@@@qJYfn@b@@ppj[d\\\ndigH@LhPRfuvz`@`@`\nfhiHb@LBlFB@AFRREQQII[Z][ru@@@D@@P\ndeWD`LjXP@cIHUDdLkP@@AafMwD@P\ngJT@ADiZhCCBGbV@\ndaFH`Lx@aJY_JjZX@ppD[dD\nfhiPb@KN|D@PeLrj~lKRcT@@@Tp@A@\ndifD`Na@BLddJT[ejj`B\ndaEH@DpDeYVyjj`B\ndiD`@@iarQQHijVPPJj\ndk}@@@qJYWm\\katvid@J@B\ndknL`JaLCprRRiQIKSZjjj`B\ndet@`@bDfUUiaf@Bh`CB`pagbIp\ndclH@@RYfmj[iZZjj`B\nfoQA`@@\\ldsKKnlyKUgM@pQSD@FALJL{bJB@\nfgAa`@N@t[HhheDTdsdeFltC@UQ@A@\ndmMD@DhNRYYWIiUjA@`@`\ndieD@HXDR[eVyiih@`\ndeU@@@qJYejxBHh@LJJfF^Qp\ndmuH@DXDfUgjZ@Bj@B\ndg}H@NTDefV]qT{Zi``H@H\ndcNH@DCHheEBdnmU@@@FGIeMpkqIt\nf`a``@L@PdwJrkIoMUPPT@@P\ndazD@DAdeYvjh@pKBknIB@\ndefD`BpPbDemgijj@H\ndo~D@D@|bTTTTRqvvhJHb@B\ndmvD`La@|Dj~Uaej@B@B\ndaE@@@yJeVnBB@@`\ndmwH@DHPRYe~[fjVj@H\ndazL@BANR[UZj`CBdrf{dD\nfHgPAa@\nfle@`@@^rJJJIRYqQY`hi`HbjB@@@H\ndaF@@@Ri][jjj@LNaLJfx\ndif@@@rRQHkajjj@H\ndet@P@bBBDfYVX^fBBHPCA`pfx^QH\ndmL@P@bBBLbbbRaZ^FBBbD@`\nfoQa@@A@RYfYWvBUXsf`B@@`@CCeNRUhsnHEX\nfhy``@A@|dsLro~pRkF\\t@P@EP@A@\ngJY@HDeYhRVFFOH`\nfoAAA@F@bGQBSJwroSakPAD@D@@P\nfle@P@@HBeIeUUYVsN}EjjZZjj`HxjX\ndeT@`@dDfYWFZP`@HR`\ndid@`@bDf[Wai@@@LJ@j[nI``\ndmtH`IBHRYm]xZP@h@H\nf`qPB@E^ADILkjlkQcoP@SUUDBGJ\nflua@@E@rQSISIQJEIgEFbf`@jj@@`@H\ndeu@`DhHaIeURhYiZeh@`\nfb}a@@E@RfuUe]UYqQg^Sf`@jjh@H@@pT`eARtZpT|qbNP\nfa{a`@C@hwIEMEDdbdeLeeqQkAbVmAAQUT@EE@@XFPpTeZlxJ\\}y@h\nffs``@C@heMrklkjoIF\\FIZtDDTD@@D@@P\ngFx@@eLzuU@XFHwbF@\nfdyqB@BZ|hDQdTTRRLrbbXKtXHHfjjH@H\nfnsQB@IVDBHrJIJZEQQHjIJgK^jv@HZjj`@H@B\ndcm@@@uJfUWyYvjjjj@LISBinFUxdZ\nfoAq@@DDlAInfUWUXsfjjjjh@H\ndg]D@DDKR[e]UxVjjjf@H\nfoAQB@ARlBHRYVueZLTZ@Bfib@B\ndg}H@DHLbbbQTRS\\]mTl@D@FERng_Lrf@\nf`qP`@DD@iIfUumV\\]yjei@B@@`\ndmuL@DHIWHhhdcFyjef`B\nfhi@P@@HD[Hhdihdibj\\UYjP`hf`DGL\ndiD@@Dj}Yjj`CCdpj[ayD@\nfdy@`@@FrQQRJKZDjTdjuATQQMH@D\nfhi@@@LdbbRRNbRxkpXFBb@@@Ppp\ndmt@@DjU_ZxHHZ@cgChSBjUyc\\H\nfle@@@LdbbRbVQfRyjJXFBhh@@ACE@\ndaE@@@qJYVnBB@@pHj[nHf@\ndidH`D@HRUe^Eh@@@phBkaxdL\ndmuH`LY@BDfymYUj`@@B\ndcMH`DjPBDefulUZ`BH@H\ngOt@AdiWqZY`LCDWrT\ndg}H@NLLbbbTVaSR]pPRTi@D\nfhiAB@A@bLbbRaRbbRhqwh@J`HD@@`\nfhy`@@@YIEEDdXllQbk^CTCP@@P@A`kENRUhsoAxae`\nflu`@@@ILksLjoQchaSUUP@@A@@D\nfbu`c@@drBlEVQkLbbbRbTJRTkI^SAAQAAQ@@FF`XEIVc^CGOHV@\ndcLL@@WTfZYWijjjj@H\nfle`b@LPP@HrRPjIIKQIYQhiVhHHB@@@LCXYpTeV]xLT|aP\ngNq`@fdwKUPFAQkyL\nfhiA`@@HBdrsJrziuoMP@A@H@A`JcARUjwnHLx\nfdya`@H`PEIefUewTzwfh@@`F@@H\nflep`@OQRABSKLjo{JlYsT@@@Tp@AajcARUhsoQSrG@\ndifH@DAIfU[fjV`CBlJf{dB\nfjc@`@@ERYeu[VyV\\Uiwhy`HJjjjhj@B\nfb}A@@@ILk[Kk\\tyKSoQruSUUUUUP@P\nfb}@`@@YRfum[VwYqVg^bf`@jjjjJ`@`\nfhyh@@@XisVRJIJYIPiTDkW`aAQL@A@@XRQabcV]xOHZ@\ngCi@DDfj@ppfyD\ndeT@P@qIdDeYWxY`@`Ha`\nfdeIB@BTuEpIAIfUeUeYrt_A`HJjfhd@LNXEHu`qxcW`\ndg}H`BFPdLbbRRTTmLnp@TuP`FAYiwqDT\nfbmIB@BTtepICHhhdhddhhfsed~C@PUUMUD`A@\ndk}@@@YJUUURkatp@j@@@C@dZUxTYi`\nfhyP`@LRAyIYUVuugIJly`@h@JH@B\nfhyQ@@M^@eMk\\lzpRmN}PA@QAD@A@\nfhyQ@@NVAdbfRfRRTKARUYu@DT@T@@D\nfhyP`@EAAQJ[eWUWdmF|F``bh@@@B\nf`yP@@@FRifUV|cAVTxwj`YBhjH@LITxJRmV]{bLF@\ndk\\H`D@HRUe[Watv`@jb@LA@jzUt~Q@\ndaDHPNBHPHrJIPeUMT`FE@aTwHx\ndeTHPNBHPHrJIPiEUMUR@P\ndclD`HP@cIHXdiepkjp@UD@XLU]J{r@@\ndk^D`La@BLddlRTrF]MZ@Bh`B\ndcl``Ae]BHRYWYZY]`@fhPB\ndg~@PNBHTHRYUueicn@BjZD@pdLKaWSobHp\nfdyPc@IZxHDPPH\\DYEEDiDfeDfJCFBAXjfa@B\ndaF@@@RiUkjjj@LFaBinyF@\ndg|H@@rJJIHqIMqw@PP@@@XKaTwRng_H@\ndidH@@RVe~Fjjh@pzLJfx^P@\ngJT`LPdfvhCAX|b@\ndcLH@@RVYVnffjZh@`\ndeTH@@rJJIFMsSUT@XUeLL|``\ngOt@ADiYqfjPLMB~R`\nfhia@@I@RYeU{UDkpV``bjh`@`\ndcnH@DAIfYwXUuj`PH@LFJne]y@`\ndk^D@DCTfYgUXUMj`Pb@B\ngCi@HDff@pPwH`\ndknDpItpdDdLdLbdLRTtEZh@a`@`\ndmuD@HXDR[fUEV```@LLRexS\\L`\ndk\\L@@STfUm]iiUjP@j@CBlkaOdR\ndieD@DpFRYUrijfh@pILx^QP\ndcnL@LAFRYV]Zy]Zi`@@B\ndmL@@DjYUVGi@@@`@LNpjxYWdH\ndet`@@iiRfYunFVifi@LLpayG@\ndidh@HJfAIfYxZie`B\neMbDBDfp`\ngJPXHlQLQzlA@\ngC`DADZHRVhB\ngC`DAbZHRVhB\ngCahHlNbNlA@\ngJQhHl@cIHUhCBGd@\ngKP`@Ti\\Zj@pRwI@',xr='daD@@DiYZYji`@\ndaD@@DjUZxHD@@\ndaD@@DjUZxHH@@\ndaD@@DjWjXHB@@\ndaD@@DjWzXHB@@\ndaD@@DjYvxH`@@\ndaD@@DkeVyjj`@\ndaD@P@bBbDfYvzB@@@\ndaDD@@IIf]nZZh@@\ndaDD@@IIf]n``@@@\ndaDD@@YJZUnjjh@@\ndaDD@@aJVdnjjh@@\ndaDD@@yIe^f`@`@@\ndaDH@@RVU[j@@@@\ndaDH@@RYVih@H@@\ndaDH@@RYe[hB@@@\ndaDH`BCDRYg[hH@@@\ndaDH`NBPRYWih@H@@\ndaDH`NCDRYWih@H@@\ndaE@@@YIeZn`B@@@\ndaE@@@aJyUnh@@@@\ndaED@DpFRYVkfjY@@\ndaF@@@RYe[hB@@@\ndaFD`L[`BDi]lJjf`@\ndaFH@BAIf]n``@@@\ndaFH@DAIYUnZjh@@\ndaFH@DAIeUnZjh@@\ndaFH@FAIeZn`B@@@\ndaFH@LAIVUnjjh@@\ndaFH@NAIe^fZVh@@\ndaFH@NAIe^f`@`@@\ndaFH`LP@aIe\\jZjX@@\ndax@H@SHbDbLbLddjUUT@@\ndax@P@SHqDjmZjh@@\ndaxB@@rnRV{Zj`@\ndaxD@@QIgUjj@@\ndaxD@@YIgYjf@@\ndaxD@@iJU^jj@@\ndaxD@@yIUVjj@@\ndaxHpJBPRPrPrJPiUUH@@\ndaxL@@SDfUVjh@@\ndaxL@@idiUZjh@@\ndaxL`HS@BLddNRuT@@\ndaxL`HS@BLddNbuT@@\ndax``HJn@JRgmjZp@\nday@@@yIUVjj@@\nday@@@yIUWjk@@\nday@PDh@c`aIUUZe@@\nday@`Dp@aIfYjj@@\ndayD@HPNRVUZj`@\ndayD@LHNRUUZZPcH\ndayH@DpDfYfjh@@\ndazB@BAJyImmji@@\ndazD@LADf]Vjh@@\ndazD@LADf^fjh@@\ndazD@LCdeYzjh@@\ndazD@NADf{Vfl@@\ndazH@DAIeYjZ@@\nda{D@HQ`iIYejZ@@\nda{H`Dpn@HRYeZjP@\ndcL@@LdbRbceBDEEP@@\ndcL@X@bBbFbAbEbMbDfYn\x7Fijjjj@@\ndcL@X@bBdFdAdEdMdDfYn\x7Fi`bHh@@\ndcLB@@imReUUUvjjjh@@\ndcLB@@riRfY~Qfjjjh@@\ndcLD@@IIf]^xViZjP@\ndcLD@@uIfUk[hBBj@@\ndcLDPDtHaXaInUvxY`@i@@\ndcLDPEt@b@cIDhTdiaUUUM@@\ndcLF@@Rag\\bbTVTILuSUT@@\ndcLH@@RYeUqVhHH`@@\ndcLJ@@PUuInUgzV`BJ@@\ndcLL@@STfue^UZX@HBL`\ndcLL@@STfyWWaZ@Bh@@\ndcL`@@qaRfU~ZxHDj`Hj@\ndcM@@@aJufYgZhBH@@\ndcM@PEtH`haIf]u[hHBj@@\ndcM@PEtHchcHhheETppDQT@@\ndcMD`LE]@HRV[]nEjiih@@\ndcMH`BuPBDf[U{aj@BX@@\ndcN@@@Ri]mUvjl@@@@\ndcNB@BAEuInVVFV`HF@@\ndcNBAHAEvISdfyV{iZ@HX@@\ndcNBAHAEvISdfyW[aZ@BX@@\ndcND@BADf{YU]Zj@@@@\ndcND@E@\\bbRafUM@AUP@@\ndcND@E@dfYwYn``Jh@@\ndcND@MBldTtRROSPPQP@@\ndcNH@EAJ[WU[j@Bj@@\ndcNH@FAIfYWgZ`hH@@\ndcNH`Bp@aJY{UWZZjj`@\ndcNL@FA]rJJJJJlLADU@@@\ndcNL@LB]RVV]vE`BFP@@\ndcNL@M@iRYg^vzB@j`@@\ndcNLaIQ]BHf]yInUvxY`@f@@\ndcOD@DgPGHheDhkrmUSU@@\ndcOH@NFPrQISQHrmTAA@@@\ndcOLAHHPSXeNrJZJIHlKTuUH@@\ndclD@@GIEEHhfUKmAU@P@@\ndclD@@UIfV][iuhFAH@@\ndclD@@iJYW]rnF``JX@@\ndcll@DpYAmRYV]zzUZije`@\ndcll@Dsm@iRYgeVE]ZjeZ`@\ndcm@@@YJYYwhUtH@@@@@\ndcm@@@{IDeCDdUKh@UUD@@\ndcm@@@{IDeCEDUSh@UUD@@\ndcmD@DHERYYUZz]Z``R@@\ndcmD@DpFRYV]Zy]Zi`@@@\ndcnD@D@TfYg\\fWVjYjh@@\ndcnDPN[PBABLdTRbauCtuTuSP@@\ndcnL@LAFRYV]Zy]Zi`@@@\ndcnL@LAMRYUUrhYZh@h@@\ndcnL`LaA@HrRPjIKTrzmPHD@@\ndcndADkaTMz]yIefU[iUjeji@@\ndco@@@bdigyWJWYj`@P@@\ndctB@@RURY]VvjjZ@@\ndctB@@ieReUWZjjj@@\ndctF@@rngTen{mjjj`@\ndctFPHSNePBABLddNRTbuUK@@\ndctH@@RYuUVjjj@@\ndctHxJBPRPrPFPfPVPvPrJPqJQUUUT@@\ndcu@`Dp@aIeUUZjjh@@\ndcuFPBvDsiT@`PcIICdeHmURp@@\ndcwD@HQ`iIYgmZfjh@@\ndeL@@Di[ernDYZjij@@\ndeL@@DjYeIjGijjjj@@\ndeLD@@EJUWhRfFZjjj`@\ndeT@@DjWvifjih@@\ndeT@@LdbTRoBuUM@@\ndeTD@@EIe]jZ@Bh@@\ndeTD@@QImeQej@@@@\ndeTD@@eIfu~Eh@H@@\ndeTD@@gHhhhjppDQ@@@\ndeTD`AdHaIe]jZ@BX@@\ndeTD`NDHaIfVVfBA`@@\ndeTH@@RUYTYY`@@aH\ndeTH@@RUYTYi`@@aH\ndeTH@@RV[TYjP@@@\ndeTH@@RYVZfZZj`@\ndeTH`IBHrJJJJlLADP@@\ndeTL@@PTfyVzV`B@@@\ndeTL@@QdfygFV``@@@\ndeTd@HRi@TefUzVjih@@\ndeU@@@aJWeQfj@@@@\ndeU@@@aJueQfj@@@@\ndeU@`Dp@aIgeQej@@@@\ndeUD@DdARYgxfZjf`@\ndeUH@HPDefuFVh@@@@\ndeUH@JdDin_xZB@`@@\ndeV@@@RgYTYj`@@@\ndeVD@BADf{YxVjjX@@\ndeVD@D@TfVgJfjih@@\ndeVD@DAdfygFV``@@@\ndeVD@FADfygFV``@@@\ndeVD@IADfyWxV`@`@@\ndeVDAHAHeNR[e[aZ@B@@\ndeVDAHAHeNR[e_aZ@B@@\ndeVDAHAHeNR[fTYZ@`@@\ndeVDPJJPqFqDfYokjVjX@@\ndeVDaBxPbBd^RYeei``X@@\ndeVDaNFPbNf^RYWZf`@f@@\ndeVH@IAIe]ZZ@Bh@@\ndeVH@LAIUeQfjjj@@\ndeVHpDxHbhbXcHheEJptuMH@@\ndeW@@@RTfyWxV`@`@@\ndeWH@DZPR[e_aZ@B@@\nded@@DiUUjjj@@\nded@@Dj_VfZZ@@\ndedB@@RiR[UUijhHr@\ndedB@@iiReUvjjh@@\ndedD@@QIkWZjj`@\ndedD@@QInUVfj`cH\ndedD@@QInUVjj`@\ndedD@@aJVfjjj`@\ndedH@@RUUVjjh@@\ndedHXDBHjPZPzPFPfPRYZZjjh@@\ndedHXJBPRPrPzPFPfPrJPsRUSU@@\ndedH`HALRkUUjjh@@\ndedJ@@rneI[nvjj`@\nded`@@iiReUvjjh@@\ndedd@BXYADfyvZZfBL`\ndee@@@gHeHiCuUV@@\ndeeD@BdDR[mUjjh@@\ndeeL@HdBEIVUfji`@\ndefD@LADf^]Zjj@@\ndefD`FFPBDiWnjjf@@\ndefH@DAIfWvjj`@\ndefH@DAIfuVjj`@\ndefL@IAAR[UYjjX@@\ndefL`F`Y@HRkvyjjX@@\ndefL`JHY@HrJJEJUMS@@\ndeflAHrfxDfISdfvyZfi@@\ndegD@HZPEIUUfji`@\ndet@@DjYUX^d@@@@@\ndet``Dki@HRYYUnFVjVi@@\ndet``DkiBHRYYUnFXBBa@@\ndeth@DkiAIeeVxYZiZd@@\ndeth@DxYAIeeZxYZfYh@@\ndeu@@@kIEEDceCLaPD@@\ndeu@`Dp@aIeURhYfh@@@@\ndev@@@RYyULFZh@H@@\ndev`@@rfeJY{ZxYBBJD@@\ndew@@@pldTTJVTLmP@P@@\ndg\\B@@Q[R[VUmgVf@HhBL`\ndg\\D@@eIfU_Un`HJj`@@\ndg\\H@@RYWY^ih@Jmh@@\ndg\\H@@RYvYiVvfZjjBL`\ndg\\d`LF[a@BLddJbbQvfmPLA@@@\ndg\\h@Fd{AIfUWxUZABI`Hj@\ndg\\h`LJfd@aJ[Ywkaijejh@@\ndg]B@NTBNtfY}[fyjVjf`@\ndg]D`NV]BHRYWVyih@JZh@@\ndg]HPAuPbBbDfYw[fzB@ij@@\ndg]H`AuPbDfY_[fz@`ij@@\ndg]L`LnDD@cIIBhhd]ikTC@P@@\ndg^@@@RigvuNzjk@@@@\ndg^B@BAEoHiihdhUNmT@QP@@\ndg^B@BAMoHiieDeBimU@DP@@\ndg^DPNI`BDBDfumeSmZf`@@@\ndg^D`INpbLbdTJTv`kU@DS@@@\ndg^D`La@BLddLTRRIvmTE@@@@\ndg^H@DCHhhhddYimTE@P@@\ndg^L@EACR[YWVFVh@JX@@\ndg^L`Iia@HrIQPjZIG]TtuU@@\ndg^LpDx{BHjHVHrJIQPiZLLADUL@@\ndg_@pNfpqDBCBDfUyWbjfijfPad\ndg_BAHJ`QSbT{HiheBidwMMUUR@@\ndg_L`LfxPPBLddJbbQvfmPLA@@@\ndgl@P@SHbDjmUUZjjjh@@\ndglB@@Q]RYUumZjjZ`@\ndglFPHSItpBEBLddNRRTbuUTl@@\ndglP@@anESoIDhhd\\iMSMS@dWP\ndgll@DrSAmRYV^uZiik``X\ndgmFPBnDr]L@aPcIICddeHmUUK@@\ndgmL`DVCl@cIICDmihmUUS@@\ndgnNPKaLXYTOBoCIIKHiMTuUMU@@\ndgoL`LD~gPBLdTtTjTuMSTt@@\ndg|@@DjU_eZx{BAH@@BJ`\ndg|@P@bEbLbbbTVbKR]pP@P@@@\ndg|D@@MIfV]UivviP`R@@\ndg|H@@RVUvU[cm`@`@@@@\ndg|H@@RVUvU[cn`@`@@@@\ndg|L@@t|bbbbbJcBmm@tCD@@\ndg|d@Dq]@\\bbbbfJSSimUSTs@@\ndg|laLJce]@HjUyJYn[gFNzZZYj`@\ndg}DPEtYBHXHrJIJZQGUvg@DKUB@@\ndg}H@IlLdTrTraS]Jt@EMQ@@\ndg}L@hdDNISid~R[fV]F]mh@@H@@@\ndg}L`JXiTIAIf]VunNzVjZj`@\ndg~D@D@\\bbTbTjQL]mUR@D@@\ndg~D@IB|dTrTraS]Jt@EMQ@@\ndg~D`LS`BDfUueRh{Zjh@H@@\ndg~L`EF[BHRYVyukev@HZiH@@\ndg\x7F@PBWPbAbLbbbRfaSR]pPTMQ@@\ndg\x7FH@DjprJIQEQIMqvuRp@P@@\ndiD@X@dDdLdJdNdAdLbdLtjjh@@\ndiD@`@RdjeVjj`@\ndiDB`HSB@HrRPiIZj`@\ndiDD@@QImVZjh@@\ndiDD@@QImZZjh@@\ndiDD@@QIn]Zjh@@\ndiDH@@RVUjjj@@\ndiDH@@RYWZjj@@\ndiDH@@RYuVjj@@\ndiDL@@Pdf]ijj`@\ndiDL@@RdfUUjj`@\ndiDL@@idiUVjj`@\ndiDL@@xTiUVjj`@\ndiDLB@PTyInuZZh@@\ndiE@@@aJuUjjh@@\ndiEL@HPJyIYvZjX@@\ndiEL@HhNEIgVZjX@@\ndiFD@AADfuUjj`@\ndiFD@BADf{Yjj`@\ndiFD@FADfumjjP@\ndiFD`JxPBDivzji`@\ndiFD`JxPBLbdTljjX@@\ndiFD`JxPQDivzji`@\ndiFHPF`@`PaJoUZjT@@\ndiFJAHALXXgNRYvvjj@@\ndiF`@@SNGHhhcFjf@@\ndiG@@@HTeUWjjp@\ndiGD@HQ`kHeECFij@@\ndiGD@HhPyIUVZjX@@\ndiGL@HQ`h\\bTTQZfh@@\ndiT@@DjV]nxVjihHB@\ndiTH@@ReUxRfjjf`@\ndiTH@@RgeXSaj@B@@\ndiV@@@RfU|kadHB@@\ndid@@DjYUaBHP@@\ndid@@LdbRQk``b@@\ndid@`@bDfUff`@h@@\ndidD@@EIfU[ffiP@\ndidD@@EIfU[hBB@@\ndidD@@GHhdhZZ@B`@@\ndidD`BD@aIf][hHB@@\ndidD`BDHaIf][hHB@@\ndidD`BDHaIf_[hHB@@\ndidD`BDLQIf][hHB@@\ndidH@@RUe^Fh@@@@\ndidH@@RYVZZ@B`@@\ndidH@@RYWZZ@BP@@\ndidH@@RYm^Eh@@@@\ndidHPNBHPHRYWbjfid@@\ndidL@@IdfYoa`b@@@\ndidL@@XTfUfn`BH@@\ndie@@@EIfW[hBB@@\ndie@`BDHaIf][hHB@@\ndie@`Dh@aIefkfif`@\ndieD@DpFRYVZyjfd@@\ndieD`JXaBPRYgvzejX@@\ndieD`LIN@HRZufFZid@@\ndieH`DpPBDfYeaZjj@@\ndif@@@rQQIFfZjj@@\ndif@@@rQQIFfjjj@@\ndif@`D@HRUe^EX@@@@\ndifDAHAHeNR[e^Eh@@@@\ndifDPJHPqFqLbbbekjVi`@\ndig@@@xTjU^njjj@@\ndigDaLHVx@cI{dieljjUj@@\ndigH@DK`R[e^Eh@@@@\ndkL@`@SDjUUUjjjj@@\ndkLD@@QIe[WVijj`@\ndkLFPHSAWPBIBLddNRRdVjjV@@\ndkLF`DkaTpBLbdtVafjjji@@\ndkLH@@RUUUVjnzl@@\ndkLJ@@imMJUUUZjjj`@\ndkLP@@anF]OIDhhjeIjYi`RKh\ndkLP@@bfF]OIDeDTeIiii`RKh\ndkMFPBNDpUt@bPcIICddiEjje`@\ndkNLPFi]@HLHrJQRjJJjZih@@\ndkNLpFjUBPRPrPrJPsISJjZfd@@\ndk\\@`@bDfYYwZ]NB@@@@@\ndk\\D@@wHhhhhbfESZAhD`@@\ndk\\D`ELLSHhdidhZZ]`@iYH@@\ndk\\H@@RYeg]itxH@@@@@\ndk\\``LyS@HRfUeTUtzBHba@@\ndk\\d@Dq]@\\bbbbfJZ]MjjZe`@\ndk\\d@DrUCdfY[uXUujijY`@\ndk]@@@uJYU_lkihDHj`@@\ndk]D@DxJRYY{Tjtvfh@H@@\ndk]DAHDMF]yIYeg^ESh@@H@@@\ndk]H@ALLbbRfTJiaf@Bfh`@\ndk]H@DHDfYyWImMjhHA@@\ndk^@@@RfYU\\]Tz@@@@@@\ndk^@@@Ri_YVftzjX@H@@\ndk^@PDCDNHRVf]}aWZjB@h@@\ndk^D@A@|bbRfTJiaf@Bfh`@\ndk^D@IADfvYWz]MjdHB@@\ndk^FAHALzSb\\{HhmEDdQe]Zjjjh@@\ndk^HPNHJrXaIf^UvGS``B@@@@\ndk^L@LANrJIQQEJatvjf@@@@\ndklB@@PcR[me]]Zj@B@@\ndklB@@QSrJYJIJF]ZX@b@cH\ndklB@@QmR[fUxUZBBF@@\ndklD@@QInUvnEh@Jh@@\ndklD@@eJ[Vvfz`@jh@@\ndklDpBhJqJs@cHiiCDeeviX@H@@\ndklH@@RYfVya`Hbj@@\ndklH@@rJJJQJy]ZBhB@@\ndkl`@@SFRYvUWSZjjj`@\ndkl`@@kaRe[vTf@HZj@ah\ndkm@`ATHaIe[ujZ@BfhBA`\ndkm@`MLHcHhhdcDfz@`Z|@@\ndkmB@hHD[heNJ^{HihhhTmMjf@@@@\ndkmD@DpJRY{YWSZf`@@@\ndkmDBLdDf\\bbTTJTWVj`@`@@\ndkmDpDgSBHjHVHRYYmYn`HJf@@\ndkmH`NVPbDfUunih@JZ`@@\ndknD@DATf^UuFVh@J`@@\ndknD@E@\\bbRafRih@Jj`@@\ndknD@LALbbRbaRtvjh@@@@\ndknD`J``BDjy{Utvfjjh@@\ndknL@BACR[me]]Zj@B@@\ndknL@BAMR[meYSZj@H@@\ndknL@M@iRYg^un``Jj@@\ndknLBLANSlbfbTaRtvjzjh@@\ndknh@HF]LDee]V[iiYihDbz@\ndko@@@aLdRbbRQtvjB`@HB@\ndkoH@Dp`RYuYWSZj`@@@\ndk}@@@iJUmUR[atpBJ@@@@\ndmLB@@RURYUVJaejVjh@@\ndmLD@@QIe[VfeVi@B@@\ndmLH@@RYiYKnUjjjh@@\ndmLH@@RffeZVVjjjh@@\ndmLH@@rJJIQEneX@@@@@\ndmLL@@SdfVUrjUZ`PH@@\ndmM@@@[IEDhhZFU@B@@@@\ndmM@@@aJUe^neYhDB@@\ndmMD@DdNRYYWJiUjA@`@@\ndmMD@DhNRYYWIiUjA@`@@\ndmMh@DkaePRYYe[iUifjd@@\ndmN@@@RYVuiiVj`@`@@\ndmN@pN@H`HPHrRPqIZneUhDB@@\ndmND@BA\\bbbReInFjZjd@@\ndmND@DBdfV]RZUZf@@@@\ndmND@DCdfVUrjUZ`PH@@\ndmND@DCdfVUrjUZfZj@@\ndmND@DCdfVUrjUZjZj@@\ndmNDPNYPBABLdTRbch^fjfih@@\ndmNH@NAIYe^neZdHB@@\ndmN`@@raeJY{VfFP`JX`@\ndmN``DkaT@aIefUneVjVjP@\ndmNh@HqaTDeee^FUhBBa@@\ndmOD@DiPyIee\\feVhDB@@\ndmOD@DjPyIee\\feVhDB@@\ndmOH@DK`RYYWkiUiB@`@@\ndmT@p@SHbDbLddJRRjjj`@\ndmTB@@ieReUWjjj`@\ndmTB`HSBCpRjuUZjj`@\ndmTBpHin@JspDJrQIRGJjZj@@\ndmTFPHSFFPBNBLddNRdVje`@\ndmTH@@RUUUjjj`@\ndmTJ@@IaUIf[~jjj@@\ndmTL@@xTiUUZjjh@@\ndmTLPDp`|HdLddJTTfjj`@\ndmTl@HQeBiRVY~Zfi`@\ndmU@HLT@a@c`bPaIggYjjf@@\ndmU@pLD@a@c`cHheEKFjfh@@\ndmUD@DXARYW[ZffP@\ndmUH@JXDiUYjjjh@@\ndmULAFDDIiGdf{evfYh@@\ndmUL`DzIT@cIICeMEjjX@@\ndmVB`NiiT@cIDeEKJijX@@\ndmVH@DAIYUUjjj@@\ndmVL`JFU@HReYyjjf`@\ndmWH`DphCpRjyfZjj`@\ndmtB@@QeR[f]FV``H@@\ndmtB@@QeR[f_FV``H@@\ndmtD@@UIfU|YZB@`@@\ndmtD@@WHhhhiVF@bJ@@\ndmtD@@iJ[g_ahHBP@@\ndmtD@@kIEEHeYV`j@@@\ndmtH@@RYeY[hBBh@@\ndmtH@@Rfuu[j@BXBA`\ndmtL@@SdfVyyUjB@@@\ndmtL@@YTf[gqehHB@@\ndmtL@@yTee[VE`BJ@@\ndmt`@@kaRe[vI`BFhBF`\ndmu@@@aJueXYj`@`@@\ndmu@@@aJue\\Yj`@`@@\ndmu@@@aJufVUj`H@@@\ndmu@`ITICHhhdbfz@`j@@\ndmu@`ITLSHhhdbfz@`j@@\ndmuD`LVD@HrRRqIXYV`@`@@\ndmuDaBWaBHJQ{HhheEVfBAb@@\ndmuH@HPDefUyUjB@@@\ndmuL@DTAeIf]XfZjih@@\ndmuL@DpFUIeY~nZijd@@\ndmv@@@Rf~UeZj@@@@\ndmvD@DATf^Uqej@B@@\ndmvD@E@dfYwVzB@j@@\ndmvD@EADfyW^Ejjj`@\ndmvD@NADfVyyUjB@@@\ndmvDPDePbAbDfUmjZ@Bf@@\ndmvD`EJPqDfY}VzB@j@@\ndmvD`La@BLddlTReUhB@@@\ndmvD`NePBDig{ljfZf`@\ndmvH@FCHhhhdYUhJ@@@\ndmvL@FAIR[f^EV```@@\ndmvLaFFUCDZYyIe[fn`BF`@@\ndmw@@@aDiUmYUj`@@`H\ndmw@@@aLdRbaReVj@@B@`\ndmwDAHEPRISlbfbRazV`BH@@\ndmwDAHYPRISdfygQehHB@@\ndo\\@T@dDdLdJdFdAdEdCdKdGdLbdLaffdjjjjh@@\ndo\\J@@imMJUUUUjjjjh@@\ndo\\L@@idiUUUVjjjj`@\ndo\\NPHQevw@DHDrRYJKJHqjfii`@\ndo]B@L\\Dv|bbtTTUTZjjjX@@\ndo^J`CaLKP|LddqbbTlZijfhHi@\ndo^bAHs[\\DxXeNrJYQQEIQjiji`@\ndo|D@@QIn[WVeVj@Bj@@\ndo|D@@uJYU]]zZBBJj@@\ndo|H@@RV^UviUj`@j`@@\ndo|H@@rJIKJQFRf`@jjh@@\ndo|H@@rJJIHiIIn`HJjh@@\ndo|J@@S[_HheDdeDYMjBBb`@@\ndo|L@@iTinU]_ihHHjXBC`\ndo|L`BmpbDfYU]Ya``biX@@\ndo|hHLJkL@bYAYCYCIEEMMHi|jfZjfh@@\ndo|h`LInT@aJYV}zFZZjVj`@\ndo}B`K^DxpBLddLRRVbgUhHHZ@@\ndo}DPAuSBHJHRYg]nVzB@ij`@@\ndo}DPAuSCDJHRYgunVzB@ij`@@\ndo}H@DpLbbbLRVTWVj`@j@@\ndo}`@@pjX|dTTRfb\\k`Hbjj@@\ndo~B@BAC_HiiMhdh]mjj@H`@@\ndo~B@BAK]InVuf[fjjif`@\ndo~D@DAdfuke^wZjhH@@@\ndo~J@BAFM|bfffbRavvjh@b@@\ndo~L@CB]RfyV~^F`HJj`@@\ndo~L@GBnrQSQQIGHUhHbJh@@\ndo~L@LANRYye[iujBBJ`@@\ndo~L@M@iRYg^ufzB@jj`@@\ndo\x7FBAHXpSAb\\yIgUnUmvji`@@@\ndo\x7FD@Ds`gHhhcDliIUjiijh@@\ndo\x7FD@HPpEIYunUmvji`@@@\neFA@lbrJ@\neFA@lhbL@\neFAADdRJ@\neFABHhbL@\neFABljrL@\neFACDlRL@\neFB@Jc@@\neFBBHc@@\neFBBPc@@\neFBCDc@@\neFDBb`@\neFHBJ@\neFHBL@\neFJHbHh@\neFPBc@@\neFhXNic@@\neMA@HPaIT@\neMA@JXaIh@\neMABPYAIh@\neMBBHRZ@\neMCALhabHz@\neMDARU@\neMDARZ@\neMFI@bMP@\neMFIBrMP@\neMHAIX@\neMHAIh@\neMHBN`@\neMIHdFPRZ@\neMPAR^@\neMPBch@\neM`AIx@\neMdXZWde`@\neMhDRV@\neOBBHcfh@\neOHBNZ`@\nfH@@\nfH`P@@\nfH`T@@\nfH`X@@\nfHap@@\nfHbd@@\nfHbh@@\nfHcP@@\nfHcd@@\nfHdH@@\nfHdP@@\nfHe@@@\nfHep@@\nfHf@@@\nfI@@\nf`aA@@@ILsKWRpTADUUP@@\nf`aA@@@YEEDdTddf\\`HJjj@@@\nf`aA`D@HdclbfdQTtRSoMUTp@@@@\nf`aI`@BJ]xBAIMrlvkYsUTuRt@@\nf`aPP@B\\@bwlbfdRLRTIgMUT@Q@@@\nf`aPP`M^djs`QAHa`PXHrJJJYRZr\\EADBtl@@@\nf`aPRDL^`cQ`AAnrRPjIIQUJlmPPLT@@@\nf`aP`@DJA{HdiEDXhkKRuSUTl@@\nf`aP`@LV@cHhmEDidYISTAAUP@@\nf`aQB@NJdBHRYWVyncH@JZjp@@\nf`a`C@C@dDRFICHiCDeBhlJUT@EUP@@\nf`a`P@B@TZvQQQIIRsHTfiZfZd@@\nf`a``@M@PdwMkjteMT@ES@@@\nf`aa`@D@IiIeyWUYJZh@Jj@@@\nf`aa`@M@D[IEDdhbeiqUAAQUP@@\nf`apRBNJMACo@BES{lddJVbbbfcKUURsP@@\nf`aq@@DV\\CHheEDcddkSTE@UP@@\nf`i@P@@HD[HhdihdhUSbkN|uHPTUB@@\nf`i@P@@HTYIe[VUZLeiwfi@HjhP@@\nf`i@a@FRAD^bDfUm[WirRkN`BJ@BH@@\nf`iP@@@TRfY]{WEAJ]zPhH@B@@@\nf`iQA@B\\|@HpDISLzsnRdcN}TaAQUD@@\nf`ia`@D@M{HhhhddYdJVkN|uPTDUD@@\nf`q@@@DjYU[oxjQh@@BJ`@@\nf`q@@`@QAHbtQzHrJJKKQIPlxYtDA@DP@@@\nf`q@A`@XaLQfHKDMb^qDfYn}gyJshHb@``@@\nf`q@`@@HR[YWYTTg^Z`@`@@@@\nf`qA`@@HddrsLk~gV|u@D@@@@@\nf`qHA@DBMxDQhHRYWVY~cMV`@jikHDMH\nf`qHP@DXxHDg^rJIQSPiITyhsSUUUS@@@\nf`qI`@DXUh@oYEEEELTlfRtYjjZfi`@@\nf`qI`BHDDhBOPeGIMsOljpSoMSUUUL@@\nf`qPA@B^ADVbLbbbrtRTKNF]A@PAD@@@\nf`qPHAHV@cGIF]zDxzt~{HhmEDdThJRmMUUUST@@\nf`qPP@LT@cfdfV^V]IRwfjhJBD@@\nf`qP`@DV@YIfYmYZLuyj`hFb@@@\nf`qP`@DXAqIfWnUrL]yjihHB@@@\nf`qPaABLEh@Q@HIKIEvnrQJJJIQXj][uPAA@@@@@\nf`qQA@CVHBHEDYEEDeMCLfR]zBBbfh`@@\nf`qQB@G^`@HRkfUWvQmVZ@@@J@@@\nf`qQ`@BF@abS\\oLkjL{sUUHPD@@@\nf`qQ`@BZ@crS]lrnruYsUTa@T@@@\nf`qQa@LL`bp@b`QddebRRRrxKQejZ@J`@@\nf`qQb@FBt{p@aJYUW]lTEJfZjZZ`@@\nf`qQb@LD``P@cIICDhhlUrSoKUST@@@@\nf`q`P@L@PZvQQISQIPiVg^ZhBBjH@@\nf`q`a@APX@H}HIUwOJ~JUgMRtDAP@@\nf`q`a@IN|BHDDILklnmQbmP@TuSB@@\nf`q`b@ILD@HrQQJJMQITX{uMTt@D@@@\nf`qa@@E@rQQIZYQF\\EjuA@TuQ@@@\nf`qaB@AFADYEEDeHUDV\\]z@`jfh`@@\nf`qaB@BXAHYDihiheD]F]zfh@@@@@@\nf`qa`@D@x{HhheKDeeQakMUL@EP@@\nf`qa`@L@QqIgfUnyZTYjBBJh`@@\nf`qi`@DTxIPC^rJIQQJiILyISUKMUU@@@\nf`qp@@@Hpds\\rj~gV|uP@@@@@@\nf`qpP@DXxBSoYEDhihTdjBtYijjji`@@\nf`qpa@LR}A@@`PQddaTTRRUtxuejBPha@@\nf`qqaBLDhJR`AA`bdr{IEELiiXeacoTtsMMR@@\nf`~@P@@HtYIeU]mVjjij`@@\nf`~@`@@^rIRHiIJQUUUUU@@@\nf`~@p@@HYHsdf]UUVZjjjf@@\nf`~@p@@TYhwdiUUU]jjjjj@@\nf`~@q@HHpjs`AA`cIIChlhmHmUUTl@@\nf`~A@@@ILjjjjuUUUT@@\nf`~PA@F\\@DPBDiUVYUjjjjj@@\nf`~`J@NPQafcN|CprRRjYQQFMTuSS@@@\nf`~a@@D@rJIIJHiIMSUMU@PRe@\nf`~hPBHXhsPDV]BT\\dvvjw[TuUSP@@\nfbc@@@LdbbbbbbQQsEBMKuhir@@@@@@@@@@\nfbc@@@LdbbbbbbcJwEB]Hu`ir@@@@@@@@@@\nfbca`@D@BeIfYeUuu`iJMytTyZh@P@bjB@@\nfbca`DK@iftiSJzljlxipVk^bEMA@@@DU@P@@\nfbe@@@LdbbTbsbrTWESMUSSML@dESY|`\nfbe@P@@LU[HhhhehcBdeHsPTEEUT@@@\nfbe`p@L@PkPTiLjlr{{V|uU@pQS@@@\nfbei`@LTDjpDIRYUyWYVtYjj@Bjj@@@\nfbepb@BZ}IPHaIf]V_VUgHHBfjjh@@\nfbepb@BZ}IPLQIf]V_VUgHHBfjjh@@\nfbexc@LDXXJ\\pP@HdD^BLddNfRRbRrcoKTuUKTt@@\nfbm@A@@IdHaJkfYUU|tWICfj@@@@@@@@\nfbm@P@@BSgHhhhheEl\\hHrgV|t@PDASP@@@\nfbmAB@H@SDjnYeUWsQ\\dNZh@@@@@@@@\nfbmAB@H@SDjnYeUWsQ\\dNZjjjjjjh@@\nfbmAP@@BLENQQQQQQQYG[bm^]Eh@bHAJ`@@\nfbmAP@@HeENQQJJJIKZIUgMNmyj@H@Bj`@@\nfbmA`@@ZMdRbbTVTJRRxIwdyXBBjZ@@@@@\nfbmHR@LLDhwdy@DYHieDdUDhlnBdipZ@`Zjjhh@@\nfbmIR@AZ|fBKNb@HrRPrJI[QQETEHr\\kUUUMRmP@@\nfbmIR@LLDiAoIr@HrJSJIHjIQY\\EIS`uUJuUUUP@@\nfbmP@@@FRieYgUWxYrPyjj`B@HH@@@\nfbmP@@@IrRJJIQJIHdjmhKhu@DPQAT@@@\nfbmPB@AIADILklsJktYyL\\p@UTEAA@@@\nfbmP`@DJ@{HhhhhhdhbRqUhaRuP@pPAP@@@\nfbmP`@DJAgHhhhhhdhcjqUhaRuP@pDAP@@@\nfbmPb@AJ|dDPdrmrljoSfgQs@DMPTBD@@@\nfbmQ`@DX@sJSJmsJkyJNbEKUM@@@E@@@\nfbm`B@I@bDfYYu^yV\\uYNXB@P`B@@DAP\nfbma@@I@rQSQIYQQIH|ExJ\\tAAUAPA@@@\nfbmaB@KDADILsjlmklxZr\\pPEUPPA@@@\nfbmhR@DXXJQoIrBHrJIJKJFIQYTyIS`pAEUUUPp@@\nfbmiP@DTxIPC^SgHheEDjheEdsdeNBuRsUUUU@@@\nfbmiP@LF]EHIJugIEEEDdhjllRegAcUUUPHET@@@\nfbmpC@KQRBHDDZBLbbbRaRtTRSNJtgLAAUMUjTBFh\nfbmp`@DXHBRSL|lvj}F^SGKUUH@@A@@@\nfbmp`@LFbAFQQISISJQIFRcVbej`@jjjJ@@\nfbmq@@ARLAJ[eg_fWbmFSf``Xj@`D@@\nfbmq@@DBBAIeeU{e^VgASejBBIB@H@@\nfbmq@@IJLAJ[V{WeY`mFbf`BFj@BD@@\nfbmq@@IJLAJ[V{WfU`mFSf`BFj@`D@@\nfbu@P`HHdhCaapXxZ\\LdTbdQLblRRmIsUUUUP@P@@\nfbuA@@@ILsOsJk~SGKUUP@@@@@@\nfbuAb@KIrBHrJJIJKIQGJLx[tAAUSULP@@\nfbuHa@LRlFB@A@`cIIBhhddmeIiqkKTDaQUP`@@\nfbuI`@DXtX@dyEEEEDbddUFRLyjjZjZfX@@\nfbuPP@DD@xL\\bbTRTRVReUNRLu@aQTuP@@\nfbuPb@GQxDDPdrnlkk]QakP@T@EMP@@@\nfbuPc@IFSdD`bPqHYEHXdimDheAJCFj@H`HF@@@\nfbuPr@NBYhwdyAbIJsNk[NbdxLtmTuUUPHP`\nfbuQP@DA@JR\\yEEEDhdUmMBLLyj`VBJf`@@\nfbuQP@DTAqTTyEDhhkMEDhfBCejii``X`@@\nfbuQP@DV@JR\\yEEEDhdXceBLMyj`VBbf`@@\nfbuQ`@DX@ZvQQZQQQQIH{rXyZj`A`@@@@\nfbuQa@EVEHpHc`QdTRVTaTrbRhqNX@IZZjh`@@\nfbu`Q@LJMxH@cHQdbbRbTTRfuqQrZj`f`ZJ@@@\nfbu`R@DFmzH@aIfYU^]^QmNZhJBbjh@@\nfbu`c@IQRBPQHXdLbdLRTvbbTPeAsU@DPPL@@@\nfbuaP@D@M[tTfYeUyuyFtyj`hJJj`@@\nfbuaPBH@PrQhRclbfbbtQfbRpeQRtDDS@A@@@\nfby@A@@IdHaJkUUUUVjjjjjj@@\nfby@`@@HR[UUUUUZjjffj`HTvP\nfby@`@@YRUUUUUUjknknj`@@\nfbyPH@BZ@bR`qSgHieDeDXdhhuUSUTs@@@\nfbyPq@BY`cGhi@DABLddNRRRRRTbuUUUTl@@\nfbyQ@@DX@dsLjjjjuUUUUU@@@\nfb}@@@DjYee\x7F]^RD[S`q@@@@@B`@@@\nfb}@@@LdbbbbbTqvwEBlXJ\\`@A@D@@@@@\nfb}@`@@YRYVumUWhrRkNbf@@@@@B@@@@\nfb}@`@@YRYVum[ehrRkNBf@BjjjjJ`@@\nfb}@`D@HQvQSRJIJUJYHRiZ]yNVjjjjjjj@@\nfb}AB@L`BLbbdRQfRfRqNRUYtTuUUUP@UP@@\nfb}A`@@JsdbbTTRrLrVqPVkNbfjjjj@Bj@@@\nfb}A`@@\\sdTTbRLrTrVIrRkNbejjjj@Bj@@@\nfb}P@@@NrRJJIQJKEKB\\hvoQsTEQ@PDT@@@\nfb}P@@@PRfYVVwWppQoIcfZj``@@X@@@\nfb}P@@@XrQQQJJYIKXxXHshaRuS@D@AT@@@\nfb}PB@NZADILkljlktXkS`is@ATu@`E@@@\nfb}Q@@AJ@drmvjroSbmNBgL@PttD@T@@@\nfb}Q@@EI@drmrsvoSdeV\\gL@PDPD@P@@@\nfb}Q@@IZ@eMk]jmjpVcN|gM@DMM@@T@@@\nfb}QB@I^DBHrJIKJSQQIHtYjw`is@AUTC@E@@@\nfb}``@H`YdTTTTTLQbJxkUg^bfBH@bBjH`@@\nfb}a@@H`rQSISJQIIHlxjwhaSP@UUUUEP@@\nfb}pB@ARTBHRYWYUVuhqVg^Sf@BZZP@J@@@\nfb}pB@ARTBPRYWYUVuhqVg^Sf@BZZP@J@@@\nfb}q@@DDtAIf[eUo\\cMNlENVjdJ@@A`@@\nfb}q@@IJtAJ[V{UUU`mF]yNZ@HZZ`@`@@\nfde@``ARAbDq@xd\\QIf]UUUYqVg^``Jh@h@@@\nfdeH@@@XH[IEEEeddhUSdeV\\ADUUUQP@@\nfdeIB@LLxxH@aJWYUWVpPTcViYj@JZ@@@\nfdeP@@@PReenUe|TLGtYj`@B@P@@\nfdeP@@@RRi^VV}z\\txLZjB`@@`@@\nfdeQ@@DXAdTTtTTRbqUXp_QZh@``A@@@\nfdeQ`@DT@hvQQJIPqSYIgMVCEjjif@H@@@\nfdeQ`@DTAsVQQJJJVKII`cVCEjijZ@H@@@\nfde`a@AZlBHYDYEDeDXhiij\\Lywh@bifjJ@@\nfde`b@H\\d@HRfYfWwQJMxLZjfZ``H@@\nfdeaB@OBADILk\\}vmNJLFL@PuP@D@@@\nfdehB@L\\tYp@cIEDeEEDdfKUgAcPQ@EP@`@@\nfdei`@LZlFHIJrQQQQYQEYDhZw`uUUPHEP@@\nfdi@Q@ARUh@Q`HRf^yoYlTjVfZjj@@\nfdi@`@@FrJJIJQIFPly@PUUUP@@\nfdiA`@@HedTtbJRbbV|Ejjj@``@@\nfdiHbBDBuxLPQGicvQQIYJJIHrcH@Jjjf@@@\nfdi``@D@TdrrvokFluUA@UP@@\nfdiqb@JLtRR`RFQQQYIPiIIgJVjVjj`@@\nfdiqb@LR}A@`AFRREQQKKI[UejA`bj@@@\nfdq@P@@HMYIeUU{UZjjijh@@\nfdq@P@@HM[HhddhbidhuUUSUP@@\nfdqPP@LQ@`p\\bbRTTaVRcUUUUS@@@\nfduP@@@PRfYVuU\\LxIt_Afjh@@A@@@\nfduP@@@PRfYemurLyJp_QfjB@@A`@@\nfduP@@@XrQQQJJEIKXYpU`~buS@@@E@@@\nfduQ@@DVAdTTRbLRrRYrVcVCEjejjjjh@@\nfdup@@@PheLr|jjxipSh~CMUP@@B@@@\nfdy@A`@QAHadPzHCDQbLbbbfJbRbwAV}ADD@QP@@@\nfdy@`@@HRYUm]eUZCEjh@H@@@@\nfdy@`@@HrJZJIPiSIBdFKUUUP@H@@\nfdy@`@@QRYWYnuzL|F@Bj`@`@@\nfdy@a@CVADQbLbbRrbbbQuF^C@ATC@P@@@\nfdy@b@@qAHILrrkssIF}A@AAPp@@@\nfdyA@@@IMLrroioNcU@DPA@@@@\nfdyAP@@BUhNQQQQQQDqIdgAZYjZZj`@@\nfdyA`@@DMdTTTtRRQtXKSfiB`XZ`@@\nfdyA`@@HedTtbabRrRMXLVjjfh@@@@\nfdyAa@OAbBPUHYEEDhddYeFRMZB@B@i`@@\nfdyAb@FAb@HrQQJVIKJJDihuRl@ESP@@\nfdyAb@NV\\@HrQQQPsQSHdhFMRsTC@P@@\nfdyH`@DXxHDlbbTTRbTrmNAbtuSUUU@@@\nfdyHb@LBeFB@AFRREQQIIZ[Sk^Vh@@@h@@@\nfdyP`@DR@IIf_mfYHstVjihBH`@@\nfdyP`@DZ@GHhleEEDbmKSoMURE@U@@@\nfdyP`@MNAKIEDheEDZhHvkTDQTMTP@@\nfdyPb@INHDD`dsJnnkLDkTDDUUSB@@\nfdyPb@NJCDDQdTTRatRbTXIwhBH`HF@@@\nfdyQ@@DQAdTRbbRbbuUzpVh@@bB@@@\nfdyQ`@BN@`VQSQIQPqIXs`qZjfdHB@@@\nfdyQ`@DLAHrSKjrmjZpXmUUU@A@@@\nfdyQ`@DZAxJSNlrnkKUgMURDAU@@@\nfdy``@F@PdwLkwKBUxKPPPAA@@@\nfdy```LHx@H}HAdHrFQQIYJIJFPeCVZjh@Jj@@@\nfdy`b@LHx@HrJIKIQIPrDhZsUU@AUP@@\nfdy`b@N^BBHrJJIPzJIQLDzLADPPL@@@\nfdyppBDDDCbkAbR^]dTtRaTRbrXHsfiZjjjh@@\nfdyqb@LFcA@`AFRREQQIJH{WcVVhIBhhP@@\nfgAAB@A@bDfUmmZLEHuh@J@@`@@\nfgAQ@@BT@dsJ}kQ`iFmTuP@T@@@\nfgApB@LLx@HRevUUpPTcViYj@H@@@\nfha@B@@IbURjjjmUUUUT@@\nfha@R@HHehBYddbRRbbSUUULuT@@\nfha@R@HHpPG`eUjjjjuUUUU@@@\nfha@b@HR@fYIHddhdbeUUSUU@@@\nfhaPq@BA`cAg^@DVBLddNbbbjdVjjje`@@\nfha`@@@IJjjjjuUUUUP@@\nfheA@@@YEEDhmEhbpTmFmxKPI@TAB@@@\nfhe`@@@YHhhhdeEbRdcZ|xM@@@@A@@@@\nfhi@B@@QFQQQJGQSILyxLAAU@@@@@\nfhi@B`@QAHadPzHCDYEEELUDeCpUoPQA@DP@@@\nfhi@`@@ArJIKJQPiZcG^`@j`@`@@\nfhi@`@@HR[fyYwU[pVjB@@@@@@\nfhi@`@@^RYvUm]djsfj@@@h@@@\nfhiA`@@H|dwMkZ{IUgMT@@AP@@@\nfhiAc@HHDApHxT\\DjUgf{zBuZj`bHj`@@\nfhiIP@DDhpDc^BdwJ|lzsfkMMMUUU@@@\nfhiIP@DXxHDc^CdTRbfaTVUNZltuUUUL@@\nfhiP`@DZAyIgVYW^VkNZjdHBh@@\nfhiPb@OA``@QddabbRRvRkF\\m@@@E@@@\nfhiPp@DX@IQoARYeYv}YsUfjffjj`@@\nfhiQ@@AJAdTTTTTJtPeVBtuTttt@@\nfhiQ@@INAdTTTbRarrk^BtEP@@@@@\nfhiQB@BJd@HrJJIKPjII`oA``ah@@@@\nfhiQP@DX@IW`yEEDeDdbdsakMUMMUU@@@\nfhiQR@IV`Sa``dLbRbTQbbvXIwjjjjYf`@@\nfhiQR@JLIIW``kDfYu[UV\\MZejfjjh@@\nfhiQR@LVXhw``BLdTVbRbbqqRVjYjjZj`@@\nfhiQ`@EZ@JVQQQQQIEYLTYsT`tDU@@@\nfhiQ`@HHAIvQJJQJIHqBdYsUUUUUP@@\nfhi`P@D@ExJSLrkoqFZluPLDSP@@\nfhi`Q@@pP{p@`pQddabTVrTgIJtmADEKP@@\nfhi``@B@PdwWLjn[s`mU@@@@@@@\nfhi``@N@PdrkLjn[s`mUTEAD@@@\nfhia`@D@HkHheDdhiTiF|EjBA`@@@@\nfhia`@F@ykIEDdUEDejLmzjj``b`@@\nfhiab@LRMx@PeLwN}obfkUU@aET@@@\nfhihB@NJtXHHcHhdlhhiDzLMz@BijjD@@\nfhihbBDBtYw``bGRGlbbRrTTRLhpuh@JijX`PT`\nfhipR@BTYIW``dDfY][UV\\MZejfjjh@@\nfhipS@IZCpSo@bBAA`cHhheHeTiFJlFBAXiVH@@\nfhipS@IZCpSo@bBAA`cHhheHeTiFJlFBAXjVH@@\nfhip`@DDh@VQQJIIFIJBd{sTuL@E@@@\nfhipp@DXH@Rc^BdsJsmzsfkMUMMUU@@@\nfhiqP@DXxBQoArJIQSPjKJ`mVZZjjjf@@\nfhiq`@DDTA`TfYg]m^B|EjiZjjh@@\nfhq@R@HHehBYddbRRbbSRcUUTsUR@@\nfhqAb@AV\\BHRYV}Umhr@Bjij@@@\nfhqQ@@DT@drlsLjXKUAQEP@@@\nfhqQa@EVEHpHc`QdTRVTaTrUFP@RtuP@@\nfhqQa@EVEHpHc`QdTRVTaTreFP@RtuP@@\nfhqXB@J\\dZpPAFRIJIJJqIBeUSMMUpHJ`\nfhq`P@L@PkRSJkLn}oMUPLDH@@\nfhq`R@LPQhp@cIIBhdeDTeVVhHFJP@@\nfhq`c@BN|BlEVJkLbbbfbUbbYJBBbjZ@@@\nfhqa`@J@QqIenvyepVjj`H`@@\nfhqa`@M@DYIfUoWigHBBjjh@@\nfhyA@`A@qBXglPNHdsNjjjsdeV]A@U@E@@@@\nfhyA`@@H}dTRbTTTUQFJ]xKTuUMST@@\nfhyH@@@XxkIEDeDehTjBYspP`Xj@@`@@\nfhyHB@L\\uX@QdbbRbbRRhmFmxMAD@T@H@@\nfhy``@D@TdsLrj\x7FQaoNBuP@`@P@@@\nfhyh@@@XdhvRJJJYQIWTyIQkMSULuUP@@\nfhyh@@@XhrRTsvzrmNBexHPPu@@P@@\nfhyq@@DTtAIemU[TTmF|Ej@B`@H@@\nfle@`@@HrJZQEJIJYJshiZjj@BjH@@\nfle@`@@VRfYU_uTVeFh@@@jk@@@\nfleA@@@ILr{LjnzHTmUT@@@@@@\nfleA@@@YEEMDleHiJJQoM@PUUUD@@\nfleAC@N@bERBYCHhheDlUDefRCFBAbX@H@PU@\nfleAP@@HMEJSKLjt\x7FJ|xKTCAUBq@@@\nfleA`@@HXdvmrnrncQRuS@A@@@@@\nfleA`@@QSdTTTRRTqfdcZ\\t@@AEL@@@\nfleAp@@XDkSdyHhheDeLUmRPXuUUTDAP@@\nfleH@@@XIsIEEDbeMMDjBbfVjfhBA@HPbP\nfleHP@DTuDC@irJIJHqZIJJgOQZijjjYh@@\nfleHb@LBdfB@AFRREQQIIZIZ][ru@@@EP@@@\nfleI`BHDihBEPeGYEMDhULeDdsdTmMUMP@H@@\nfleIb@LBLFBH`BLddJbbRRvVtzwej@@@J`@@\nfleIb@LB\\fBK@BLddJbbRTVVuypUj@@HB`@@\nfleIb@LB}FB@`BLddJbbRRrVtzwej@@@J`@@\nfleP@@@PReevYU]tPijjh@@@@@@\nflePB@K^AbILklrj}Qc`p@TaAE@B@h\nfleP`@DA@eIVUue]^B]yX@J@BT@@@\nfleQ@@DLAdTTTTtRbTI`~RuUATQQ@@@\nfleQ@@DR@dsK[JsioARuUTEDQ@@@\nfleQA@CQDBHUDILrl{ljsdTpDEUUJd@@\nfle``@G@edbbTRbbNv`mV}PPE@QT@@@\nfle`a@BQRBHEDYEEDeMCDdXrSoPPT@PS@@@\nflea@@E@RfVYUV\\tWIjh@`B`@@@\nfleaR@LPQYw`AFRRFJJYIQW\\dXJuPLDqT@@@\nflehPBDX}EHAJCFT}dTTRTRRJRsNFluTtuUKP@@\nflepa@LRmA@@`PQddaTTRRVLfgFlmPREETH@@\nflepb@BZSIPHaIf]V_eV\\bfB@ijjh`@@\nfleqa@EV\\JQ`QG@cHhdliBieDjLbf@BVfjh`@@\nfli@q@HHpxLPAG`cIICdddddiEjjjje`@@\nfli`@@@IJjjjjkUUTuUTBDd\nflmA@@@ILkZvmsQdeV\\EL@EUUUQT@@\nflmP@@@PRfYV{U_CAZ]DJYji@@@F@@@\nflmP@@@PRfYV{U_CAZ]DJYjj@@@F@@@\nflmP@@@PRfYen]|cIF]DJYj```@E@@@\nflmP@@@PrQQQQJZKIDcIV]DJYj``H@F@@@\nflmP@@@TRfYmUo\\eEVMzJYf`h@@J@@@\nflmP@@@XRfYYmU\x7FCAF]DJVjX@`@J@@@\nflma@@@`rJIJYRIIIFcIF\\GtX@Jjjjbh@@\nflma@@I@rJJIQZEJYI`iJlzJV`b@@@H@@@\nflmp@@@PheLr|vj~JBtzHTsUR@@@L@@@\nflmpB@ARTBHRYWYUUVcEZlzJX@Iij@B@@@\nflu@b@HiADILrljm|sfoVC@PUUULT@@\nfluA@@@IRlkjtrRdeFmUA@UUUD@@\nfluAP@@HeEJSKLrorlyiuoMPA@@UP@@@\nfluAP@@\\dZJSLlsr{lxjtTm@qEETq@@@\nfluHR@DTyKShi@DILlk|lzs`iV}@PUUUTL@@\nfluHR@IV|fANJ@DIJrsmrnpSoQSUUUTBAP@@\nfluH`@DXTDAdfYfYu_Yit_AZj`eAbb@@\nfluHb@LLxxLPABTnrjkmxHJQkTlu@EMP@@@\nfluPB@AIADYEEDdUEDhlsc`qS@PL@@@@BGH\nfluPB@AJADYEDeMDeELcSfgQS@DMPT@P@@\nfluPP@DTAsUlbbTTTlTvRXHshiZjZfZjf@@\nfluPP@DVApt\\bbTTtabbJhJs`iZfZiifi@@\nfluPQ@N^YirPA@`cIEDhh\\ihmjByHLZjZiijZ`@@\nfluP`@DX@qIeVyeUrT]DJVjZ@@@H@@@\nfluP`@NQ@EIfVVWV~Je[rV`h@`FH@@@\nfluQ@@DJAdTTTTTRTQsEVbEKU@C@PD@@@\nfluQ@@LT@eLw\\jmvJF|zMLp@@DT@@@\nfluQ@@LT@eLw\\jonJF|xMLp@@AT@@@\nfluQ@@LTAdbbffbbTRNJVbEMLp@PPD@@@\nfluQP@BBAIWhyEEEDhdbddpQgQRtpSAEUD@@\nfluQ`@DQ@KrSLrkssDYiwhmTC@qSQ@@@\nfluQ`@DTAjvQQJQJVJ[ILDYtTmUUSL@P@@@\nflu``@O@HdsNkKN{NF}ELDAUPPA@@@\nflu`a@NZlBHHDILro\\wjpQgQSUUULpA@@@\nflu`b@AQRBHRYVvuvZcARMZ@B`@jX`@@\nflu`b@LQR@HRf[eU\x7F[EEVLzf@@@JZ@@@\nflu`p@E@EJwhyEEEEDdTddqQgQRuHMAEUD@@\nflua`@@`PYIn[VuUYJlzJVj@Bj@@@@@\nfluhP@LF]EHIJudbbbbRTUVQJV\\FMUUU@`U@@@\nfluib@DXXJQhiADYEDeEeCDdeSdeN}@DUUUTL@@\nflup@@@JLeLlj||}AZ]EHP@PTUPP@@\nflup@@@PIdbTVbbbRQNBVCzLuP@P@R@@@\nflup@@@PIdbTVbbbRQfBVCzLuP@P@R@@@\nflup@@@PIdbTVbbbTRNBVbELuP@PPB@@@\nflupB@ARtBHRYV{WfVgEZbf@HZhB@P@@\nflupB@ARtBHRYWYWfVcEZbf@BZhB@P@@\nflupB@ARtBPRYWYWfVcEZbf@BZhB@P@@\nflupB@NBtBHRYeg_fUdeZbfBAbhB@P@@\nfly@R@HHpPG`eUjrjkm`mUPTEE@@@\nflyIPAHDTXBMV]BT\\jW]dTtTVRbfaSAMSUSMUH@@\nflyQP@BI@`uhyEMDeEEDkhkSUUUMLt@@\nflyQ`@D^@jrSOJzmkBdu@AUUT@@@\nflyQ`@D^@jrS[JzmkBdu@AUUT@@@\nflyaP@B@QjJTfvUfW^\\Ejj`XHX@@\nflya`@M@EGIEDdhbdeD^JhHJJjj@@@\nflyaa@KRtX@PkprQSQHiRYIS`j@`ijj`@@\nflypqBE^CAFNBdCpixRyTyIIXiEXdhX{sUST@EP@@\nflyqP@DDTA`XiRYf]vug`fjejjfh@@\nflyqP@DDTAchiRYf]wU[`fjejjih@@\nflyyB@J\\dZwhi@DYHdhdhkDhdJUUMUMUjBFd\nfoA@C@@IdHaDQddabbRRrkF]U@@@@@@@\nfoA@P@@HtYIe[UUhrRfi@Bj`@@\nfoA@`@@HR[e]e^Blyh@H@@@@\nfoA@`@@HR[fV]qZlyhH@@@@@\nfoA@`@@\\RVUoeVBly`BH@@@@\nfoAHB@L\\TX@QdbbRbRRheZMPQDUP`@@\nfoAIB@HXHK`@aJV~vUqRsjYf`@`@@\nfoAPP@DTAsUlbbTTTlTXHsfjfifh@@\nfoAP`@BZ@aInvYWejsfjiB@`@@\nfoAP`@DX@qIeVyWIRsfjZB@`@@\nfoAP`@DXAsHhhddXdbLlyjih@H@@\nfoAPa@LDlx@P`HRYYeUuVLyjjjjj@@\nfoAQPBHF@aVgPeGIMrms\x7FIFlt@PuI@@@\nfoA`P@D@DZrSLrkrQfgMTC@q@@@\nfoA``@D@edTTTbtjQNV\\uUR@D@@@\nfoA``@L@QdTVbbbblmV\\u@A@@@@@\nfoA`a@NRTBH]DYEEDhid\\pQkPD@pD@@@\nfoAh@@@TYIVRJJKIFILxJSTsUUR@@\nfoAh`@JBUYpBILoLkleFmUU@`T@@@\nfoAi@@HDhrPLbbbbjbRxJsjiejjh@@\nfoAq@@DD\\AIeUyWhpufjZ@B`@@\nfoAq@DLTtCDiS\\kN\x7FAV]PD@P@@@@\nfoAqB@JLDPDQdTTTtlRWAV]RuT@B@@@\nfoAqB@JLtPFHdsM|klEYuKTa@P@@\nfoAq`@DXxBSlbbTTtJVhKQffjjjX@@\nfoAqb@NZ]ab`ABTsoL\x7FbakUUULmP@@\nfoQ`@@@ILkZjmFRUYt@@@@@@@@\nfoQa@@N@rQQQQJKGbiVLz`BB@D@@@\ngBQ@@eLUT@@\ngC`@Die@@\ngC`HAbIMT@@\ngC`LADJPt`duP@\ngC`LAbJPt`duP@\ngC`LAbKDvHduP@\ngC``@dfZ@@\ngC``Adej@@\ngCa@@dkH@\ngCa@@dmP@\ngCa@@dsP@\ngCa@@duP@\ngCa@@eMH@\ngCaHH@bNt@@\ngCahHlHRNj@@\ngCb@AEdij@@\ngCd@ADij@@\ngCd@ADkZ@@\ngCd@Adej@@\ngCd@Adez@@\ngCdDI`BHDRZh@\ngCe@h`NdiKLIH\ngCh@@doH@\ngCh@@doP@\ngCh@AGj@@\ngChHD@aIU`@\ngChHL@aIZ`@\ngCh`DLdkP@\ngCi@DDeV@@\ngCi@DDeZ@@\ngCi@DDfZ@@\ngCi@LDej@@\ngFp@DiTt@@@\ngFp`@dfTujX@\ngFp`@dfTujh@\ngFp`ATiTvjh@\ngFq`AbeJfuU@@\ngFr@ACTi[FZd@\ngFt@ADiTt@@@\ngFt@ADi[FZd@\ngFtHE`DILikUP@\ngFu@E`drfmU@@\ngFx@@eJfuU@@\ngFx`DBdwFmU@@\ngFy@DDfTujh@\ngF|HLZ@aJYuif@@\ngGP@DiVj`@\ngGPBAHJPLaYAInih@\ngGPBAHJPtaYCHiCUP@\ngGPHAbIL}U@@\ngGPP@cTfyi`@\ngGP`@TfYj`@\ngGP`@dfUjP@\ngGP`@df]jP@\ngGP`ATeVn`@\ngGP`ATefj`@\ngGP`ATiVj`@\ngGP`Adinj`@\ngGPhMPDIK]U@@\ngGQ@@eMUT@@\ngGQDB@jQBUkUP@\ngGQDL@aAFQRFj`@\ngGQHHGCIHcUP@\ngGQLJIARFdLbdMU@@\ngGQXHlZHROjj@@\ngGQ`@ZdruT@@\ngGQ`@bdvmT@@\ngGQ`@bdwMT@@\ngGQdLZ@j^BTuSP@\ngGQhHl@cIIBmP@\ngGT@ADiVj`@\ngGT@ATeVj`@\ngGT@ATeWjp@\ngGTHE`DILluBR@\ngGTHE`DIL{U@@\ngGU@CPdrm^@@\ngGU@E`drmT@@\ngGU@E`dsmT@@\ngGXHD@aIUVd@\ngGX`DBdsMT@@\ngGX`LDdsmT@@\ngGX`hEIWIMsU@@\ngGY@DDfUjP@\ngGY@DDfYj`@\ngGY@HDfVj`@\ngGYHI`xISkTbB@\ngGp`@TizHvjj@@\ngJPB@fRHTQhbOj`@\ngJPBAbJHt`YAIjj@@\ngJPD@eRHczh@\ngJPD@fRHczh@\ngJPH@DIJuP@\ngJPH@EIRuP@\ngJPH@eQ}T@@\ngJPHADILth@\ngJPLADJPt`duU@@\ngJPLAHJPt`duU@@\ngJPXHlPDQzt@@\ngJP`@TeVh@\ngJP`@TeZh@\ngJP`@TfZh@\ngJP`@dfvd@\ngJPhLQVIKTp@\ngJPlLPDRPTaGth@\ngJQ@@djsBJ@\ngJQ@@dkU@@\ngJQ@@dlu@@\ngJQ@@dru@@\ngJQ@@dsU@@\ngJQ@@duU@@\ngJQ`@bdvu@@\ngJT@@TeZh@\ngJT@@Te^h@\ngJTHE`DILmP@\ngJT`E`TfVh@\ngJU@H`dlu@@\ngJX@@dkU@@\ngJX@@dkt`@\ngJX@@dku@@\ngJX@@dms@@\ngJXDBLQQBS]V@@\ngJXDBLQXbS]V@@\ngJX`DBdru@@\ngJY@BDeZh@\ngJY@BDfZh@\ngJY@DDefh@\ngJY@DDfVh@\ngJY@DDfvd@\ngJYHC`DIKTp@\ngKP`@Tixjj@@\ngKP`Adi\\Zj@@\ngKQ@@eKcRp@\ngKQ@@eKcUP@\ngKQ@@eOEUP@\ngKT@ADi\\Yi@@\ngKT@Adi\\Vf@@\ngKX@@eKcUP@\ngKY@HDi\\ZV@@\ngNpJAbJHLaYArBS]UU@@\ngNpP`jusyImfi`@\ngNpXHlPDYIHTmT@@\ngNp`@dfUZf@@\ngNp`@dfuZj@@\ngNp`ATf^Zf@@\ngNp`ATiUjj@@\ngNplJqHJPtadTaeTp@\ngNq@@dskUP@\ngNq@@dssUP@\ngNq@@eLuUP@\ngNq@@eM]UP@\ngNqTHmVDPhbU_MS@@\ngNq`@bdvkUP@\ngNq`AVeJmUP@\ngNqhHl@cIICej`@\ngNt@@Te[zj@@\ngNtDLpDDHRevnl@\ngNu@HPdjkUH@\ngNu@H`dlkUP@\ngNu@H`dl{UP@\ngNxHD@aIUUfaM@\ngNx`LDdskUP@\ngNx`LDdssUP@\ngNx`LFdjmUP@\ngNxhMV@aI[ji`@\ngNy@FDfWj[@@\ngNy@LDeVjj@@\ngNyhGE`DYIITmT@@\ngN|@ADeJkUP``\ngN|`HfJdlsTp@\ngOp@DjWkB@@@\ngOpH@DILkW@@@@\ngOpHADILkW@@@@\ngOp`@tigujj`@\ngOp`AdeekZZP@\ngOq@@drm[UT@@\ngOq@@drm\\@@@@\ngOq@@drm]UT@@\ngOqHL@aIYZzfd@\ngOq`@fdrikTl@@\ngOq`@fdrikUL@@\ngOq`AVeL~mUT@@\ngOqhHl@cIIBjujh@\ngOrHEcPDILl[MT`@\ngOt@AdigkB@@@\ngOtHE`DILjZuU@@\ngOtHE`DILl[MT`@\ngOt`E`tfUMZi`@\ngOx@@drm\\@@@@\ngOx@@drm]UT@@\ngOxHHHaIeZzjh@\ngOx`BDdwM[UT@@\ngOx`DFdrikTl@@\ngOx`FDdwM[UT@@\ngOy@DDfYKZj`@\ngOy@JDiWMjj`@',yr,zr=false,Ar,Br,Cr='eOHBNZ`pge@\neFDBcA@\neFhHbayP\ngFy@DDfXujhCAF|f@\nfHcpAa@\neMPBchLDnR\neMBBHRZCAKd`\neFJHbHpXI@\ngCa@@dkHFBbyL\neMJDbDf``\neMHAIdLF^P\ngJXHD@aIUj@pHVOI@\ngGY@BDeVj`LJHm^P`\neMPBcTH\ngCd@ADkj@pTWDL\ndeTH`ABHRVUunh@J@B\ndidL@@SdfU{aZjj@H\ndiDD@@QIeuZjh@pkJ[ayA@\ngOy@HDfUk`@@H\ngJ\\@ADe\\u@XKGd`\ndeV@@@Rffeijjj`CClJfxYy@@\ndeVH`NdLQIe]ZZ@Bd@LFALJny@`\ngOx@@drm\\@@A`Qb~IT\ngF|@AbeJfuU@P\ndmN@@@rJJIQEneX@@@@B\ndifH@BAIfuxV`@@C@j[ayF@\ngOx@@drm\\@@A`PZ~IX\ndaF@@@Rfu[j@@@LJSBinHG@\ndeU@@@yJUuRh@Jh@LNaLIagd\\\ngNxLL@aAABDfVZj@`\ngGPB@DHHpQPaIUZdB\ngGY@BDf^j`LBHmqF`\ndazH@LAIUUjj@LJPj[nIF@\neMBCDRZCAKd`\ngGQHJLQIUjdB\ndefD@B@TfUvZjf@H\neFA@HoBJFD\\h\ndayD@DpNRYWZj`C@lInxbT\ngFt@AdiTvjhC@qF|Pp\ngOtHLPDYHhckSM@XXI|a@\ngNqBLIAREdGHIMmUTA@\neMXIDfP`\ngJT@ADiVhPT\ngGY@JDeVj`LJHl^R`\ngCi@DDeZ@pTwH`\ngNx@@eJmUPFCDVKyJ\ngNxDLHaqBRjuU@P\ngGP@DjVj`LKEc^P@\ngNx`LFdjmUPFCDQkyL\nfHbpAa@\ndidHPBBHFHRYgVzB@`@`\ndaD@P@bNbDfUzZ@B@B\ndaD@`@bDfUjZ@B@CB`SJ{dL\ngCe@E`dsPFBV@\ngOy@FDiguie`LMc^IL\ndaDh@DInAIf]nZiX@`\ndigH`LH^@HRf_ljfYh@ppBkbHH\ndaD@`@QDeeVz`@@B\ngCahHlHRNtA@\ngOxhMDOAJmZvjhC@xu|`@\ndaED`LJDCpRjw[fjj@LLinxfD\ndcMDPLzfBHKpRUZvYvjZjh@`\ndeT@`@bLbdTJPsU@@@D\ndcNH@DAIee^eVhHB@CCbine]yB@\ngJX`DBdru@XKGdP\ndif``DqnDHaIeYih@J@B\ngOx@@drm\\@@A`Pm^Hl\ngCa`@ldsPFBV@\ngNqhHl@cIICej`LD[rL\ngO|HLV@aJY}ZYhB\ngF}@LZDigVfXB\ndaE@@@aJyUnh@@@pXLJf{dP\ndmN@@@RYVuiiV@@@@@`\ngFx@@eJfuT`XEXwbD@\ngFt@ADiWFZdCCPwdP\ngGPhMQDIJmU@P\ngNqHLHaIYzj`H\ngNx`JBdr}UPFCDVKyJ\ndaF@`LBHRVU[j@@@H\ngGX`HJeZuTA`Uc^R@\nfHfpA@\ngOy@FDfUkZj`LBl[rL\ngGQ@@dluTA`Xm^HD\ndaz@@@Revjj`CAdpj[nHD@\ndiTD@@yJ]VaNFjjj@H\ndmLL@@iTie]|kahHBh@LJPfE^QH\ngOu@DPdrykURA`l~Q@\ndiT`@@rnRfUjEnBA``B\nfHgHA@\ndid@@DjU^nBBD@LFaLiaxa\\\neFACr`bLD\ndcl`@@`nReeWZY]@``@@B\ndid@`@bDfYUn`HD@LFCBiny@`\ndmv@`EBHrJJIHin`HFpHy`\ngOq@@eL~mLlAal[qI`\ndeUH@DpDf^UFVh@@@pYLinGdR\ndeVH@IAJYW~F``H@LFSBinyD`\ndeV`@@rfyJWUlIifjBJh\ndig@@@aDiyWaZ@@B@h\ndeWH@DJPRY[TYZ`@@B\neMBBHRZCAGe@\ngNy@FDfUZk@pRwIP\ndiFL@LANRYufjf@H\ngGU@E`dkMTAad[rP\ndayH`Dr@|Djyfjh@`\ngNtDLpDHHR[UjhB\ngJXDL@aABS[TA``nKD\nfHe`Aa@\ngJQ@@drt`XI[dH\ndid@@DjU^nBBD@LNaLJfGd\\\ndifH@FAIYU[fZj`CBlJnGdP\ngJ]@HbDfZdB\ndie@@@EJf[XZjj`CChSBiny@`\ndk^@@@RYWYVftx@H@@@H\neFA@H`bLFE\\`\ndeTH@@RYWZf`@j@CC`SBhYyG@\ngOu@JpeJymUTA@\ndcN`@@pjYJYenk`Hbj@B\ndmu@@@QIUYVUZh@@@pdDpfxYWdP\ndmvH@NAIfUTUZBB@@p[BiaWdR\ndkmH@NtDfYU_EZ``b`@`\ndkmH@JTDeVVutvjh@@@`\ndieH@DHLbbbaIjZjPB\nfHaXA@\nfHbHAa@\nfHdXA@\nfoA@R@HHpx@QddebRfRpiFlm@@@P@A@\nf`i@@@LdbbRRlRSI\\D{qAHT@D@@P\ngNq`@VdsMUPFCDQkyL\nflmA@@@YEEHdcLdddSdmV]EKUUSU@E@@D\nffsA`@@YkdTTbRLrTrVRIrRkNbejjjj@Bfh@B\ndaE@@@yIe^f`@`@pILJnHG@\nfeg@`@@SrJIJYYQQJQZqYTYzH\\uUKMUUUUUPDLiVEPPQbgARtYw`qSdmV}gr@p\ndcMH@HdDf[W[ai@Bh@H\nfc\x7F@H@@JbdoU{RYfYU_uyYubc^\\D\\vi@H@BjjjhH@H\nfb}A@@@YEDeMDhTihjLUiwhyZZjjjjjh@LKHqPTeZMYpTyxcdP\nfnk@P@@FbuIefYZWz^`mA|gMVfjjjjjjj@B\ndmLH@@rJJIQEneX@@@@CA`iae^Ig@\nfleA@@@YDddhiiDdYipTtsUUUSTABHe@\ndk|@@LdbbbRQKauS`@`@`@H\nfjc@`@@ERYYefUez\\UyvPiZZjjjjjj@CCrLTXJVcV]zJ\\ey@H\nfjc@`@@JrJIJZJJUJZJcMF|EIVfjjjjjj`@`\nffsA`@@VkdTRTtRabrTRhqQoARUijjijjjj@B\ndie@@@aJyW[f@B@CBlJfGdP\ndeT`@@`YRnUunX@I@B\ndmL@@DjYeVdU@@`@@H\nfgA`@@@YIEDeDUfJxHujjhHB`@LNPQbgIZxQbcV@\nf`ia@@E@Rfume]gEF]z`@jjhh@H\nfoQ`@@@YIEDeDTdpWEF]UUAAE@@P\ndcnH@EAJ[UU[ev`@jb@LFPje]xfB\ndcnH@MAJ[UU[ev`@jb@LFPjE]xfR\nfjc@`@@ErJIJZIPiSQJcEZ]zNVfjjjjjj`@p\\cENBdkQkNBgODQJ\nfb}A@@@ILk[Kk\\tyKSoQsUSUMUUUP@XN`cEFBdhugASgb@Q@\nfb}@@@LdbbTbrNTtWEBt{t\\sMUUUUUT@D\ndg\\L@@{\\dTrTRtKCPAET`A@\ngOtHLPDISKWSU@XDJodH\ndknH@ECHhheLcFz@`jh@H\ngJP@DknhCCSGdP\ndcLh@LKaCIELeBhwT@ET@D\ndmv@@@RfUYyZBB`@LAALInF^IR`\nfgA@@@DjYU_VByHu`@@@@@@LIXISdeZM[dD@\ndidD@@yIfVXXBH@C@`[axfT\ngCa@@dmHFBVxa@\ndaxL`HS@\\DjeZjh@`\ngNphH`xITkUTA@\ndaGH@Dp`RYeifjf@H\ndg\x7FH`LKU@HrQQSIJHyTgSA@qP@P\ndev@@@RfU\x7FJxZA@h@LFAB[iyE@\ngOqHJ@aJUcZZhB\ndaF@@@Rfu[j@@@LFALJfyG@\ndieH@NDDfUvf`@d@H\ngFx`LDdrfmU@XHwdp\ngNuhJxl@cIIJej`H\ndifD@JAdiWTjjjj@H\ngGT`DQTfuiaMXIWdp\nffcAp@@DEiNZyEEEMDihbdiVBMzIViBb@@hh@@pTQVcV]ENZ`\ndo^H@DAIeV}YZfifdLIFU`\ndg\x7FH@LiPRUYYWESnj@@@@@`\nfoAQ`@DD@irSLwN~QakMUPHE@@XLpJVcNx`g@\ndg}D@DHERYfywIcmjjA@`@p[AgSobEp\ndieD@DHNRY[Rijih@pSFybDH\ndg}D`Ad{BHRYVuUiev@BffH@pXDrmob\\H\nfoAPb@ARlxDPdrmkKtXht@EMSD@D\ndclD@@[HhheBeSKkTp@P@P\ndcNH@MAJ[WY[j@Bg@B\nf`qA@@@ISZzljscoT@Dp@@B@kARLDhsQkN}q@i@\nfbmpB@NV|@HRfYe]WnirQmN@@@@bj`@@pt@cAJLxLTy@\ndg}L@LhDWHheDbhdSG[UTtuHQu@\ndmLH@@rJJIQEneX@@@@CC`rfFUyG@\nfbmPb@FRTX@QdbdTjRtrbRps`dyjjjYh@J@@pLAAJ\\e[pXisrF@\ngJ]@EbDeVdCBKba@\ndcl@@DjYU_egX@@@@@pELJae]xc\\\ngJP@Di[xCBGdp\nffsA`@@IkdbfbTTTTRtwxkW`ecfjjBjHjJb@B\ngJYhMDPDYIBm@P\ndmM@@@iJYWWJxYB@j@CBbiiWdH\ndaD@@DjYvxH`@CCLJnXc\\\ndg^@@@rQQQIIRcmAPTT@D\ndiV@`J@HRfU|kahDB@CB`PfGd\\\ndmL``LXU@HRfvUxYV`HFH@pHDj^Ph\ngC`DADJHRZhCCBKdp\ndmtH@@RYWYih@Jh@LAALJnE^QH\ndmtH@@RYWUih@Jh@LNALJiWb\\H\ndeUD@DhFrJIJHusUMT@XDf]OHD\ndg}@@@aJVYU^Svv`@@@@`K@Z[ae]ObEX\ndmwH@DePRUe]xV`@d@H\ndcO@@@b\\dtTRJgBpDEP@P\ndaD@@DjYvxH`@C@linxbD\ngJX`BDdru@XS\\a@\ndie@@@aJyW[f@B@C@lJfxdB\ndid@`@bDfYUn`HH@LFCBiayG@\nfoAPB@NBADILkjrmFV]@AL@@@ar`\ndeUH@BxLbbbRKCA@d@D\ndk}@@@iJUmUR[atpBJ@@@CChPiWSyE@\ndeUD`LjD@HrREQICJt@@@XUc\\L|`@\ndmuD`IVD@HrRFIKKaV@BP@`\ndmtD`ATIAIe]Vf`@jP@pILJnIt`\ngGP`@deUjpLI^JX\ndmvD@LADfvUYUjjj`B\ndcND`MEPdDfUuZf`@jX@H\nfjc@`@@HRUe[Vun^Bt[pTeZ@Bjjjhj@CBqJ\\dkQkN}GI^H`d\nfnk@`@@HRYVum[VydjshiJuj`@jjjjJ`@`\nfa{@P@@HkwHdhdididihdUpVc^BdkP@UUUUTeP@P\nfjcAB@C@bLbbbRdRbLJbXJUoQRVejjfjjjh@LG@pQ`iJuYpXyKrBP\nfb}A@@@ILk[Kk\\tyKSoQruSUUUUUP@P\nfjcP@@@FrQQQQII[FIJgIVt{IP@@@``@@@@`\ndaD@@DjUZxHH@CAL[ePaUp\ndcNH`BpHaI[fuWZZ`@@B\ndcND@DCdefV]]Z`b@@H\ngJQDD@b^BRkTA@\ndg|@P@bEbLbbbTRRKR]pP@P@@D\nfoA@A@@QChaIe]YWhpuh@J@B@@LE@Q`eIJtYwH\\@\nfoA@@@DjYUgWfiF`XJbh`@`\ndeTL`HS@BLddlRPrm@@@FETwCOHp\ngOx@@eLmXD@A`Uc^Q`\ndclD@@EJY}erevfVfiBJX\ndcNH@DAIge]FVh@I@B\nfoA`@@@ILkjrmFV]@AL@@@arptcAJ\\DkQkNy@@\nf`qqa@FF}Sf`RBICHiMEMCEmPUgUUUSKT@D\ndg}@@@aJVYU^Svv`@@@@`K@Rine]obBX\ndg}@@@aJyeg_eNvB@@@@B\ndmND@LAdige\\jUifZi@H\ngKP@H~Jj`LEcqQ@\ndidD@@QIenifjj`B\ndklD@@QIVVU}MjlH@@H\nf`q@`@@HRUfYU_Sk^Zh@@@@@H\ndeVD@BADfVuFVh@@@`\ndmwH@HePRYm]xZ`@d@H\nf`qP@@@^RYWUe^cKN`@f@B@DNT\nffsA`@@VkdTRTtRabrTRhqQoARUiZjijjjj@CArLTxJRcN}GIZ|`d\ngNy`DBtf]Zi@`\ndeV@pJBPRPrPrJPqICMT@@@^DwCH\nfaw@@@LdbbbbbbeeRRwMB]Jq`y[Wh@@@@@@@@@@A@\ndmN@@@rQQJJFfEP@@`@B\ndmN@@@RfV_kad@@B@@`\ndco@@@g\\dTRbtM\\J`@AB@A@\nfdep@@@PheL}sJkxiXOhsUP@@@`@D\nfhiP@@@ARVUue]Yrsn@B`@l@@`\ndcn@@@RfV]zXU@@BD@CCdJnFUyF`\nfbmP@@@IRfV]}e]hpR`q@@BF@B`@PUP\ndeWH@DJ`RYYTfZij`B\nfb}@`@@YRYVum[ehrRkNBejfjjjjj`@`\ndk~H@NAJUmmRkatzVd@J@B\ndklD@@IIf]vVzB@jh@LICBkagSyB`\nfbuA@@@ISZ{Ll{lxgM@AMTD@@HBh\ndaF@@@RYe[hB@@LBpj[bAp\ndco@@@bdigyWJWYj`@P@pYLKawbRh\ndaGD@Bi`QInUnZZX@`\ndkmD@DpJRY{e]]Zf@B@B\ndaDH@@RZW[jii@H\ndazL`FaL@HrRRiKUPA`VEW\\a`\ndaG@@@[diWRh@I@C@hSByG@\ndigH`LJn@HRf_ljfYh@ppBGdH\ndmL@`@bLbbbTQ[iV@@@@@`\ndeVD@DCdfV[hVjfh@piJXYyF@\ndaDH@@RYe[hB@@LJCBinQp\nfoAPR@JLIIS`UbSLzmnsakTmTuUP@X\\Ab`mV]rA`\ndcmH@NDLbbbTVKCJm@dE@A@\ndg~H@FAIfU{TYNz``@@@B\ndklF@@sittieY_hZjjjh@pfBinF]ObHh\ndcLH@@RfUWnf``R`@pyBinW^Id`\ndo|H@@rQQIIZHkihHDjd@H\ndo~L`MaL@HrRPjIIKISVhHHh@H\ndg]LPElYLHc`cHhdliBiSP@Rtp@XLBXUKrK@\ndcNH`LdHaIUe[EZh@b@B\ndk|H@@RfYU_JGUN`@@B@@pxfzUt~PH\ndklH`I@HRYeuin`HJj@B\nfdyQR@FJtZwh`BLdTbbJTRlvF\\eUUULsU@AaHBLDiqQ`|aD\ndmu@pNTIAICICHiCDeafj@B@CAJ[bBh\ndkmHpNTpdDdLdLbdLRRrFZh@JP@`\ndkoL`LhXPpBLdaTRbQeUhBBP@`\nfdy`a@BRlBHcDYEEDehXhlfB|FBBFB@`@B\nfb}A@@@YEDeMDhTihjLUiwhyZZjjjjjd@H\ndco@@@rldTRTJU\\naA@@@A`Prn|qLX\nf`qA@@@IMKMjoiuoUV@@@@@D\nflm`@@@YHhhhhdhb]RRkFCzH@@@@@P@@D\ndg\\L`AWPbDfUv{ZZ@Bij@B\ndg|H`KBHRYWYWimN@B@B@@`\ndaF@@@RYVih@H@LBSJ{b@p\ndeTD@@QIVYQehB@@LBinGbQH\ndeTD`NDHaIfVVfBA`@LJCJX^QH\neMhDRZCAKd`\ndeU@@@cIMDeBwL@E@A@\ndaG@`D[`bDfUZZ@B@CA@sbEp\ndcMDPDy]BHXHRYV}jz@Hi`@`\ndmt@@DjYZVTHbh@CBdxYWfES@\ndev@@@Re[TjFP@@@@LFaFxYyA@\ngOpHADILkW@@@XHWaVK@\ndmv@HBBHFPfPVPRYUzih@Jh@H\nfhy@`@@\\RYee~uYrVoAZA``@H@@pI`uo\\YPTmNB\ndk\\L@@{\\bbbTQr[iUhF@j@CALOaTpr\nfoA@P@@\\ekHhheECEf\\TYhFHbh@B\nfoA@P@@\\d[HhheELiVRUYhFHhh@CCFMNyabk@\nfoA@P@@\\T[HhheDXef\\eihFBJh@B\nfj}@P@@\\tEIfVWnU]YrQdeZA`hB`b@@H\nfj}@P@@\\ueIfVWn]}YrQhiZA`hB@j@@H\nfj}@P@@\\MeIfVWVu}YrVhiZA`bB@j@@H\ndmL@@DjYUVGi@@@`@LFrnFUxbD\ndclH@@RfumVy]h@@@@CCdpfE]yD`\ndmMH@HxLbbbTQ[iV@@@@@`\ndeVH@HCHiEBdLuP@@A@\nfoA@b@HH@DYIHXeEhbkUgKPP@@@@P\ngJU@LPdjt`XQ\\TH\ndeUH@JDDinUzZBA@@`\ndclD@@IJ]YWaIVj`@h@H\ngNpXHlQxIUZuTAaGqF`\ndiDB`HSBCpRjuVji@H\nf`a`R@LPP{p@cIIBhddbhhruAADp@F@jLxJRm^yC@\ndk]@`FD@aJY}e\\kSif`@`@`\nfoA@B@@QBRsLjnjqgSP@@@@@P\ndmtH`IBHRUe]xY`@hBH\\F@j[exdH\nfhiAB@O@bDfYUg_QZlzdH@@J@DDL\nfhi@`@@HRYyWVUEKpVh@J@@@@pebcNBMYwnHTD\nfjm@P@@HceIge]YWVEKpVh@J@Bf@@H\ndmt@@DkYV~Gh@J@B\nfjm@h@@XDkSoQRWIEEDhdicDXZRcfjjjjjjj@CBLDDhs`iJtYw`irWdK@\nfleab@OPQD@QddabbRRvrbkF\\m@@@EL@@XJhs`iJt[r^P\\\nfbuQb@OA`aH@cIICEDdelehjqgKP@@ATp@A@\ndkld`LWSa@BLddlRVRFUh@JP@`\ndg}H`AfpbDfUmYZYS`@ijR@LJALh~Iv`\neFJHSHp^I@\ngOpH@fILkW@@@P\ngJPhI`fIKTpD\ndaE@@@aJyUnX@@@ppj{fQc@\ndmvDPLa@BNdLddlTVeUhH@@LBqagdJ\ndcnH@LCIEDUDeeKmLuUT@P\ndaFD@LADfyVyjj`C@binyB@\ndcnD@BCTfYVuiEX@@B@@`\ngC`LADJPt`duPFDGI@\neMACDXaIhH\neMACD\\QIhH\neMBBlRZCAKd`\neFJHAHhP\neM`AIdLF^P\nfHbXAa@\neMBCDRZCAGe@\ngJQdEbOBRD_M@P\ngChHHDQIj`H',Dr='fHbTA@\nfH`pA@\ngFp`@dfTujXCAZ|a@\ngFx@@eJftu@XVKF|`@\neO`BNZ``\nfH`XA@\nfHdpAa@\ngNxHLHaIVjj`H\neFJHbHpP\neMABHXaIhH\ngJXHD@aIYj@ppqyH\ngCi@HDej@pRwDH\ngCi@LDeZ@pTWI`\ngCd@ADiZDE@\ngOx@@drm\\@@A`plZp\ngGX`LDdsmTA`m^P`\ngCiHLaDIMLA@\nfHapA@\ndeTH@@RY[TYjp@@B\ngCa@@dkHFBVyH\ndeTD@@eIYWVy`@h@LFpjXYyD@\ndeT@`@qDeVUFZX@@HR`\ngJQhHl@cIHUhCBGd@\ndifH@DAInUxV`@@CBdinGdD\ndeV@@@Rge[aj@B@CChPjxYy@@\ndeV@@@RgfTYj@`@CChRfxYy@@\ndeVD@AADfVuFVijh@phj[iy@`\ndeVD@ICDiieZZjjh@`\ndaGH@DK`R[e[fiZ@LLQnyE@\ngOr@Ajti]qZY`H\ngGPhIPDIU{T`XXK\\a@\ndid@`@qDeYWaf@@BH\\NABinGdP\nfHa@A@\ngNq`@jdvkSPf\\Ll~P`\ndedB`LkiCDRV{njjh@`\ndiGH@Dr`RY{fjj@H\ngJY@BDfZhC@bK\\a@\ngJY@BDfVhCAK\\a@\ngGY@JDf]j`LLl^R`\ngGY@BDfUj`LLm^P`\ngJPH@DISUPFABqyH\ngJX@@dlu@XZX|PP\ngNxHF@aJZzjPH\ndazD@LADeUffhHr`\ngGT`EaTf]jPLDmrD\ngCh`LDdsPFDWI`\ngGX`JDdsmTA`l^R`\ndmv@@@Rf~UeZj@@@LEBDpfxYT\ngOx@@drm]UTAaqEcV\ngOx@@drm\\@@A`Qc^IL\ndmvL`BaL@HrRRjIJUVjjh@`\neFA@HoBJD\ndiFB@BAFEInuZjd@pILJnQp\ndayH@DpDf]Vjh@pKBinHg@\ngNuHLzHaIUji`H\ngNt`E`tf]Zj@pJM_I`\neMJD|Df`pYy@\ngJPhLQxIRuPD\ndaDL@@KdfYvyjV`CCLJnPp\neMBBlRZCAGe@\ngOq`AVeL~mUTA`Yb~Q@\neMPBchLD^T\ndaF@@@ReYJjjj@LNaLJf{d@\ndaE@@@aJyUnX@@@`\ngCe@E`dkPFBbyL\ngCahHlGBNtA@\ngC`@Die@ptVy@\ngC`DAb[DRVhB\ngCaHLLQIZ`LDEqS@\ngGPBADZPLaYAIZjhB\neMABHYAIhH\ngJX@@dkT`XFKGd@\ngJY@DDeZhCCSGbB@\ngGT`CPdfuj`LLl^R`\ngGX`DJdsmRA`enP`\ngFq@@eMqUW@P\ndkNF@BAIWSR[YVYjjfX@`\ndeVDPL[`bB|DeYgFZjZh@`\ndeVL`LxY@HRf][JjZV`cJ\ngO|HEfHaIeZx@@B\ndaxD@@QInuij@LBRf{dD\ndaxD@@QImUijBLlBRf{bXP\ndedB@@PYR[fyijXHqpQIxe\\\nfH`TA@\ndaxL`HS@BLddNRuR@P\neFJHqHpP\ndaxL`Lk`qDenzjh@pXDpj{bPp\neFPBca@\ngG]@EjDfUj`LEcqJ`\ndedd@DpaCdfU{ZjZ@H\ndmOH`LJQ@HRf^yriVfZZh@`\ndaE@@@yIe^f`@`@piLJny@@\ndevH`LX@aJWY\\HYiZZd@`\ndaEH@DHDfURijZ`CCL[nP`\ndaFH@HAIYUnh@@@pXHpj[d\\\ngFt`CQdidviXB\ngJPXHlPDQztAxlP\ngJPDAbGDRUj`H\ngNx@@eJmThFCbqky@\neMA@HPaIXLD^T\ngGYHLQDIJuU@P\ngGP`ATf]j`LLl^R`\ngFp`AdeoEjhCCHwd`\ngOp`AdeekZZPLMB~R`\ngF|@@ZeJxru@XYF|d@\ngOy@FDiekjj`LKEc^Q`\ngOx@@eJqmUTA`xlZ~P@\ngOx@@eLvmUTA`xlZ~P@\ngOxHBHaIeZzjhB\ngKP@Di\\YZ@phbq@\ndiDB`HSB@HrRPyIZj`CCBknHp`\ngNq@@djmUPFEfM_DD\ndcLL`HS@BLddjbRtjmP@P@P\ngJPJAHR`Tai@rBSUTA@\neMCArhabHzCCI@\ngNy@BDf[Zj@pruxbp\ngJY@DDfzhCCSGbB@\ngNx`JDdskUPFDwLZp\ndmVD@JADf^Uvjjh@`\ngChHL@aIVPH\ngNy`LETeUZZDs@\ngNt`LPdfUZi@pexlp\ndiEH@DpDfYUjj`C@bkaxfL\ndidD@@EJ[W[j@B@CBdJfGdX\ndmtH@@rJIJFRf`@j`@pxDrae^Pp\ndaG@@@kdiVrX@a@B\neMhDRUB\ngOx`FDdrikUTA@\ngJXHD@aIUZ@`\ndcnL`LaA@HrRPjIKTrzmPHD@FEYtkh\ngCi@LDeZ@pTwH`\ngFq@@eNqUU@XZX|Rh\ngKP@Di\\Vi@pLVOH@\ndiVH@BAIfUInFjZi@H\ngNqhHl@cIHUEj`LLZ~P@\ndaxD@@QIe]ji@LBpf{dT\ndiFL@J@aRY]Zjj@LABDpfx^QP\ngNx@@eLmUPFEfM_DD\ngNy@LDeUji@phQkxi`\ngGX`BDdjmTA`m^JD\ndazD@FCdfUVjx@`\ngCd@AH}PFBVyH\ngChHHGBOTA@\ngC`DADZHRVhB\ndeVB`BaLd@cIIBeDwKULpA@\ngJT@@deVhCCCGbb@\ngNu@E`drkUPFFM_Dl\ngGXHJGAJijhC@qX|e@\ndidH@@RYeVz@``@pXLJf{dB\ndaEH`Dq`BDfUjyjfPC@`SNyE@\ndieH`Dq`BDfUfnZii@H\ngJPDADFHRYfaHp\ndmuL@DpFEIeY~nZifh@pILe^Qp\ndklL@@STfue]eVj@B`@pyL[ad~PP\ndifH@HAIVUxY`@@bGA`Pjx^Pp\ndid@p@bBbFbDfYoa`b@@H\ndid`@@pjRfUjXBB`@pSaxbL\ndcNH@DCHheEDbnmPT@@F@hUMproHt\ndaz`@@SFyIeYjf@LJAL[nQP\ndaG@`LK`BDimVz`@@B\ndeT`@@pjrQQIFTpDEP@P\ndid`@@pjrQQIFf@`h@LLKaxbL\ngNy@JDeUjj@phVKxiP\ndigD@DpP[HhdhZyjfd@pqLkdB\ndmuH@DpDfWeYUj`@@CAlInF^Hb`\nfH`PAa@\nfHdHA@\nfHchA@\neFHBJFE@\ndmLH@@RYVuiiV@@@@@phJxYybXh\ndid@@DjY}nBHH@LJSBh^Qp\nf`i@@@LdbbbTRVHeZ][uHAD@D@@XRhs`iJtZwLX]x\nfhyA@@@ILklrstXYw`p@TaDA@@P\nfdeA@@@ISZvmvkNJLFM@AUH@D@A@\ngOu@HpeK^MKTAaKqY`\nffsA`@@LudTTTeRdVTtLIps`ySeijjjZjjj@B\ndklF@@XUttief_kjjjjh@`\nfi{@h@@LDipTmzOHhhhhhbXdiidnBu[IV`fHbjjjh`@pmIVc^CENRmzObNU@\ndayL@DpFyIgYjf@LLPnyF@\nfb}A@@@ISZvmk\\lxkSoQsP@UUUUEP@XNQ`cARUhugASgdH`\nffs``@L@QdTVbdRQfRfRxhu`qKUjjjjj@Bh@B\nfnkA`@@HkdRTTbRLrTrVSIZMxNRmUUUU@AUP@D\nfa{A@@@YEDeMDhTihdXjLUiwhyZZjjjjjjj@B\ndaxH@@RYWjZPcKA`SBinIG@\ndet@@DjYUX^d@@@@CAlJnF^Hc@\ngF|LHjOC^A|DiTt@@B\nfnk@`@@UrJIJZIPiSQHrcEZ]zNVfjjjjjZj@CCrLTxJRmFlxJ\\myBH\nfc\x7F@P@@E{OHhdiheBeMDhUEKQbmN}GKSUUUUUTsUT@D\nfnk@@@LdbTTRbTRQNfiKak^cejjfjjjjj`@`\ndmtL@@QTfyeQehBA@C@jXYxb\\\ndklL@@PtfVV]WVhH`P@`\ndeTD@@eJ[WVz`@h@LBRfgfXP`\ndcLL@@{TimY]ah@bh@LJPaW^Id`\ndcLH@@RYeZvz@`j`@pxBXYW^Q`\nfoAPB@LD@DYHhdcEEEQagTuPDQ@@P\ndeVH@DAIgeQej@@@LJSJX^It`\ndeVH@IAJYW~F``H@LJPj[nId`\ndk^@@@RfYU\\]Tzjjjj@LKBDpj[ae]L\ndid@@DjYmaBH`@LBrnGbDp\ngJX@@dmu@XKGdP\ndg^L@D@[rJIJJIGZ[UAPD@D\ndeVh@LKadDimY[j@B`@paNHL`\neMPBcXLIyP\ndcMH@ITDee]UnX@Jh@H\ndg]D@DpCRYVuveVj@BX@H\nfgA@@@DjYU_VByHu`@@@@@@H\ndclL@@{TivY~DeZhHB`@`\ndid@@LdbRQk``b@CAhPjX^Q`\neMJH\\Df`pgd@\ndeTD@@YIfUqehH@@LFJfxYyF@\ndclH@@rQQRJJuJ{PUDB@FCES\\L|Q]@\ndif@@@RYWZZ@BP@pXDpj{dB\ndaF`@@pjYJYfn@b@@pPfyG@\ndeV@@@RYV~f`@i@B\ndeV@`BBHRYg]n``I@B\ndmNH@NCHhheDVzU`@@@@LJCJe^Hp`\ndcnD`HI`BDfYoVnWZfX@@@`\ndmND@DCdfVUrjUZjZi@LFrfFUyB@\ndeVH@HAIYWVz`@d@H\ndaG@@@rdifvxH`@C@linyA@\ndieDPLZD@HhHrREQKaVii@LBrnGd@\ndk]L@LhDeIeoYR[SZjZZdHZ`\ndmTJ`HSNd@cIICeMEjjh@`\ndaxB@@rnRV{jj`CAhSBinHG@\ndeeD@DHFR[eyiihHr`\ndaxD@@QIgUjfBJlBpj{dL\nfoQPB@F\\@DYHheBeLdRdeV]Th@@D@@P\ndk^@@@RfYU\\]Tz@@@@@LECBinFUOdZ\ndclD@@kHheCDdUKkSP@P@P\ndeV@@@RV[TYzP@@C@j[axaR\ndklHPBBPzPrJJKQEIa``bZ@bV\ngGP@DiUjaAXEXwbD@\ndmtH@@RYWUih@IhBN\\NALJiWb\\H\ndk]L@LxDMIe]eRkSZjjjh@`\ngN}@DVDfUZi@`\nfb}@`@@YRYVum[ehrRkNBf@BjjjjJ`@p\\AFJ\\EIQk^bgODZB\nffs@`@@URYVumfv^cIJmyIX@Jjjjjbh@H\nfjc@`@@ErJJQIFYJSKXgIJlyNVjjjjjjj`@pC`eF\\EIVkN|FJ\\|`T\ndg|@@DjU_eZx{BAH@@BJ\\MaBine]N~Q`\neFJHSHpP\ndiV@`J@HRfU|kahDB@CB`QnGdD\nfhy`B@J@BDifW_e\\TDkpZA`R@B@DAVF`DYpTeFl{wHA@\nfhy`B@N@BLdTTTRRVqirUmNh@`BBh@@pt@cARUhugAyCp\ngNx`DJdssTpFBsyD\nfgA`@@@ISLrotyHvk@@@@@@@P\nfdy@@@LdbbRbVbJwMAc@pU@P@@ab`\nf`q@`@@^RYWUe^cKN`@f@B@DNVB`HpRbmFm{bNB@\ngGP@DiVV`iJpJqoDH\ndeTH@@RYWVf`@j@CC`SBhYyG@\nf`qAA@A@bOQBSJ{\\ktYYt@EP@P@A@\ndif@@@RfU~F``@@pYLJf{b@H\ngJQ@@dsU`XKGbD@\ndeVD@LADfvUFVjjh@p{BinF^P`\ndmtD@@QIV[VUZh@@@pZfxYWbQ`\ndeT@`@bDfUuih@Jp@`\ndid@@DkYWaz@@@LF`j[ayB@\ngNx`LDdskUXD\nfoA@@@DkfYU]UcNz`@@@@@`\ngJX`DBdru@XS\\RH\ndeVH@DAIgeQej@@@LJrfx^Hd`\ndg~@@@RYfUWd}mh@@@@@pdBinFUwbGX\ndid@@DjYmaBH`@LJpj[nPH\ndmvD@EBdin]~F``I@CAdJfF^Ph\ndetD@@eIYe~DYZjjh@`\nfmoA`@@HWdTrTTtbRLrTfVrk^CdhymUUUUUUUUU@AauFBTYrRmFl{pXyKUoQsV\nf`qAA@A@dORBSJ{\\ktYYt@EP@P@A`IFBTUhunHxH\nfb}@`@@YRYVum[ehrRkNBf@BjjjjJ`@p\\cENBdkQk^CEOD@r\nfb}A@@@YEDeMDhTihjLUiwhyjjjjjjih@L@``cAJ\\EIQkNBgOHQ@\ndknL`LaE@HrRPzIJZ]Vh@b@CAlInd~Qh\ndeUH@JdDin]xZB@`@pIBX^IT`\ndg]L`LnDT@cIIChdieNkT@QP@P\nfgAAB@H@BDjyeUrLd[Uf`@@B@@H\nfgA@@@LdbbbTVKIBMjp@@@@@@D\ndieD`JXaCDRYgvzejX@pHLi`\ndmUL`LZDh@cIHULdeijh@p[FxYWd@\ndeV@@@RfyWahBB@CBj[agf@a@\ndcNH@DAIVYeEZ`Hb@B\ndaF@@@Rfu[j@@@LJABinIg@\ndo}D@LlMrIJJIIHiSjhHHh@H\ndid@p@qBqAqDfYun``H@H\ndcn@@@RieU~V]jB`b@C@\\JfxYWbIh\nfoA``@I@PdwJ{J|EYsP@UUD@D\ndeUH@AdDim][j@B`@pYLJfGdR\ndid@@DjUZnBAH@LFaLkayC@\nfoA@@@DjU][VgKNBAJ@@@PiXZ`cAJLdkQk\\`x\ndid@@DjYUaBHP@LFSBiayG@\nfoA@B@@QBSJzlkQegP@S@@@H\\lM@Q`eNBUhunP\\\ndif@@@RYWZZ@BP@piLJnx`B\nfoA`@@@ILkjrmFV]@AL@@@ar`\ndeUD@DXIRYvTYZjV`B\nfdyAb@HHpCpRkVYU_]Nmyj`@@B`@B\nfhiA`@@Hddjrm|jIW`mPAD@@@A@\nfhi``@L@PdrkLjn[s`mUTEAD@A@\ndeVD@LADeVUFVh@@@`\ngJX`LDdju@XP|Tp\ndifH@HAIfuxZ`@@B\ndif@PBBPRPR[e^Fh@@@pbNES\\H\ndcNHpJtIAICICHiCDedLuP@R@D\ndkn@hJBPRPrPvPNPrJPqIPpYj`@j@B\ndeV@@@Re]Xj@Bj@C@fxYxTIa@\ndmvHPBTIAIAInV_ij@HP@`\ndcNH@NCHeEDdYplAAT@D\ndkn@PBBPRPR[eW[aj@Bj@B\nfHbhA@\nf`q`@@@YIEBedhdnB]zh@J@@@@`\ndeVD@D@dfVuFVh@@@pXj[agdH\nfoAP@@@NRYWVUzLMZ@B`@`@B\nfde`@@@ISKN~rmFBTFH@@Pp@@@`j`\nfoQHA@FJuXFH`HRYUYYbTT[UjZjefZ@B\ndid@P@BJdDef_ahH@@LJ`fx^P@\ndeT@@DjY]zXFB@@pYLinGbEH\ndaF@@@RYWih@H@LBCB{bIP\ndcl@@DjYU_egX@@@@@pYLJngaLJz\ndknL`LaM@HrRRqIYPYV`@f@B\ndeTh@DiiAIgeQej@@@H\ndg^@@@rIRJEJFRoU@AT@D\nfoAp@@@PidbbvbRafJJuMT@ER@A@\ndk_@PBxpbEbDfYYUZ]NBBbT`B\ndcvB@FAEuIm[VZijX@`\ndknL@JABR[mfWSZZ@`@B\ngOq@@drm]SRA@\nfoA@`@@BRYfYWuVLyh@`@@@CBUF\\EIVcNyBp\ndaG@@@[diWRh@I@B\ndeT`@@pjrQQQUMpEAP@XDUCOHX\ndaDh@DqnAIeZfZZd@`\nfoAP`@DNAsHheEEJefBMYji`@h@B\nfoAQ`@DX@pRSJs|kSegMTs@A@@X\\QaVcV]rG@\ndg|@@DjU_eZx{BAH@@BJ\\MaLJfe]N~Qp\ndk\\H@@RYm[Watz`@@@@H\ndmvH@JAJ[g_ahHBP@`\ndmvH`BdIAIfUya``a`@pkBhUyC@\ngOy@HDfUkjj`LJlZ~P@\ndifD@LADeYWaZjj@H\ndif@@@RfU~F``@@pxDpj[nPH\ndmtH@@rJJIJEn`HJ`@pxBiae^Ig@\ndeVH@NAJ[VvF`BH@LBPfGfYt`\nfoQH`@LBUXCldTRabRrIRRcVjj`PJ`@LFPISfg\\``\ndmM@PBx@c@aJYg\\jeZdHB@B\ndaF@`H@HRVU[jjj@LNaLJf{d@\nfgA`B@K@BDifUW|TEiQj@@@J@@H\nflmAP@@LUyNQQQQEJQJI|Eish~BtuUUUUU@A@\nfnkA`@@U[dTRTrTrTtRJeFRUYpTmMUUUUTuT@D\ndaDH@@RYUih@H@LBCB{bHp\nfoAQ@@DZ@drsJkjlYsUPTDP@D\nfoQAB@C@BDifYU^gIVtz`B@DH@@`\nf`ip@@@F}dbbTRRRQhpVkN@@@BB@@B\ndklD@@QIe]e]MjZ@@@LApfFUt~QP\ndg|H@@rIQQJQZ}NfuUUTt@P\ndmtD`ATHaIe]nf`@jP@pXDpjGb]H\nfbmPB@NA@DYHhhhddmcEJ\\e[Sj@H@`jj@@H\ndg~H@HAIYeg_eNzB@@@@B\ndmvD`La@BLdabRbxUjjj@H\ngGQ@@djutA`c^HP\ndaD@@DjUZxHH@CBdpj[bQp\nf`qpB@DLxBHRYUvYZcKN`@hBB@@H\ndigDPLXXP@b`cIHUDnEZfd@`\ndaE@@@aJmUnjjh@`\nf`iA@@@YHhhhheEZBdxwj@BHHH@@`\nfluA`@@HRdrvmkZxiFlFKUUUP@U@@P\ndev@@@Re[TjFP@@@@LFaB[iy@`\ndif`@@pjGIEEEVxB``@ppjGdL\ndaE@`BhHaIfUn`H@@ppL{bTp\ndg~L@BAER[e[gzSmh@B@@@`\nfj}@P@@\\teIfVWn]{YrQhyZA`hBBJ@@H\nfj}@P@@\\LeIfVWVu{YrVhyZA`bBBJ@@H\ndmvH@DAIVUVUZjjh@peLJfxYWdP\ngNp`@dfzZj@pJMX\ndk\\D`HP@cIHXheDQgSV@@@@@pZnE]ObAH\ndeVD@FADfygFV``@@pjfxYyB@\nf`qa@@H@RVUuYUgG^h@J`@@@H\ndaD@`@qDfYVz@`@CB`pj[d\\\ndif@@@rRJEKaj@@@LJSJ[nHP`\ndifD`Na@BLddJT[ejj`B\nfhiQ`@DX@pRSJswJ}N^BuSMA@P@D\nfgAa`@N@t[HhheDTdsdeFltC@UQ@A@\neMBBHRYCAKd`\ngGPdMQDGpRUYiDe@\ngGPXHlQxIU[U@XR|VH\ndeU@@@qJYejxBHh@LJJfF^Qp\ndmuH@DXDfUgjZ@Bj@B\ndcNH@DCHheEBdnmU@@@FGIeMpkqIt\nfnk@`@@UrJIJZIPiSQHrcEZ]zNVfjjjjjZj@CCrLTxJRmFlxLTyyAh\neMJDBDe`pQyP\ndeTH`ICDRUe_af@B@bGB`Jf{fPd`\nf`qAB@O@qDfYUg_EjsjP`@@`AAC@\ndcLH`ICDRUe]^FX@J`Ha`\ndid@`@bDf[Wai@@@LJ@j[nI``\nfhi``@C@PdsrnljJW`mP@T@@@A@\nfiwpP@DVz@wliLsLj{[klrPeFCEKQmTtuAPHDQ@@FDj\\d{qV}GrF`\nfhiPb@OA``@QddabbRRvRkF\\m@@@E@@F@jLxJRmFxcpP\ndeVH`IDIAIe[ZZ@Bd@LBSJGb]H\ndmvH`IDIAIe[^f`@i`HF`\ndmv@`ABHRYWUih@IhBN\\FALJixgJ\ndaE@`FxLQIfVfifx@`\ndaFH`BxLQIe\\jffh@`\ndig@@@aDkYWaZ@@@LJPj[nI@`\neMBBHR[B\ndmtD@@QIn[VUZd@@@pYFxYWdT\nfhi@`@@HR[YfUWMypVf`@@@@@ptc`iJtZsoAyC@\ndk^H`MDIAIe[mZy]`BIjD@`\ndaF@@@RYWifef@H\ngOx@@drm[RtA`Uc^HL\ndidL@@QdfU\\jZff@LBpf{dB\ndcmH@HDLbTTRbOBnt@@@@A@\ndaF@@@RZW[jii@H\ndaFH@NAIe^f`@`@piLJny@@\nfHgPAa@\ngC`DAbZHRVhB\neMBBHRYCAGe@\neFJH\\HpXQr`\neMPBchLF^P\neMbDBDfp`',Er='daD@@DiYZYji`@\ndaD@@DjUZxHD@@\ndaD@@DjUZxHH@@\ndaD@@DjWjXHB@@\ndaD@@DjWzXHB@@\ndaD@@DjYvxH`@@\ndaD@P@bBbDfYvzB@@@\ndaD@P@bFbDfUjz@H@@\ndaD@P@bNBDfUzZ@B@@\ndaD@`@BDeeVz`@@@\ndaDB@@InRYgrfiZ@@\ndaDD@@IIf]n``@@@\ndaDD@@QIeZfZfh@@\ndaDD@@QIe\\jZehHj@\ndaDD@@QIe\\jZfh@@\ndaDD@@QIe\\jZihHj@\ndaDD@@YIeZn`B@@@\ndaDD@@iIeenjZd@@\ndaDD@@yIe^fZVX@@\ndaDD@@yIe^f`@`@@\ndaDH@@RVU[f@@@@\ndaDH@@RVU[j@@@@\ndaDH@@RYVih@H@@\ndaDH@@RYWih@H@@\ndaDH@@RYe[hB@@@\ndaDH`NBPRYWih@H@@\ndaDH`NBlRYWih@H@@\ndaDH`NCDRYWih@H@@\ndaDL@@SdfURijZ`@\ndaDL`HS@BLddJS\\mUP@@\ndaE@@@YIeZn`B@@@\ndaE@@@yIe^f`@`@@\ndaED@DHNRYWifif@@\ndaED@DpFRYVkfjY@@\ndaEH@DXDf[Vyje`@\ndaF@@@RYe[hB@@@\ndaF@`BBHRYg[hH@@@\ndaF@`FBHRYVkh@`@@\ndaF@`NBHRYWih@H@@\ndaFD`HI`bDfYjzif`@\ndaFD`JK`BLbbbMMTtp@@\ndaFH@DAIeUnZjh@@\ndaFH@HAIYUnfjh@@\ndaGD@Dp`yIeVfZiX@@\ndadL`HS`BLddJULwKUU@@\ndax@X@bDbLbJbFbNbLbdLeUT@@\ndax@X@bDbLbJdFdNdLbdLeUT@@\ndax@X@bDbLdJbFbNdLbdLeUT@@\ndaxB@@QnR[VZY`cH\ndaxB`HSBCpRjuZj`@\ndaxD@@IIeujj@@\ndaxD@@QImUifALj`\ndaxD@@iJU^jj@@\ndaxL@@SDfUVjh@@\ndaxL`HS@BLddNbuT@@\nday@`Dp@aIfYjj@@\ndazD@LADf]Vjh@@\ndazD@LADf^Vjh@@\ndazD@LADf^fjh@@\ndazH@DAIfujj@@\ndazH@DAImUjj@@\ndazH`LPHaInVZj@@\ndcL@@DjYn}aBHbh@@\ndcL@X@bBbFbAbEbMbDfYn\x7Fijjjj@@\ndcL@X@bDbJbAbEbMbDfn^_ijjjj@@\ndcLB@@RURYYejyjieh@@\ndcLB@@RiRYyVQejjjh@@\ndcLD@@IIf]z[hHBj@@\ndcLD@@eJ[W[[j@Bk@@\ndcLD@@iJ[g]xZB@f@bX\ndcLD@@uIfUk[hBBj@@\ndcLD@@uIfU}FV`PJ@@\ndcLDHFDH`haXcXaIf[ozYjYjP@\ndcLF@@IaWTfYn\x7Fijjjj@@\ndcLF@@Rag\\bbTVTILuSUT@@\ndcLH@@RYWUZZ@Bj`@@\ndcLH@@RYWYzZ@Bj`@@\ndcLH@@RYeZvz@`j`@@\ndcLH@@rJJIJGMtAAU@@@\ndcLJB@PUuNR[eY~eijjh@@\ndcLL@@QTfvUtYZ`@h@@\ndcLL`HS@BLddJfRtjmP@P@@\ndcM@@@WIDeBddU@AMTACP\ndcMD@DTIR[fVQuhHF@@@\ndcMH`BuPBDf[U{aj@BX@@\ndcMh@DKaePR[eoVEjVfhHF@\ndcNB`BaLtOCIILeBdnmUUU@@\ndcND@DATfyeXYZ@`h@@\ndcND@LADfU[U]Zj@@@@\ndcNH@ICHhdhdYSP@UT@@\ndcO@@@aDiUm^UZh@HB@`\ndcl@@DjYU_egX@@@@@@\ndcl@@DjYn}BXVjjjd@@\ndclD@@UIfV][iuhFAH@@\ndclD@@iJYW]rnF``IhBI`\ndclD@@iJYW]rnF``Jh@@\ndcll@Dsm@iRYgeVE]ZjeZ`@\ndcllADqe@]R]{HhdhdcWRkURmT@@\ndcm@@@YJYYwhUtH@@@@@\ndcmH@DpLbbbLRQTnmU@A@@@\ndcmH@DpLbbbLRQTnmUUUP@@\ndcnL`LaA@HrRPjIKTrzmPHD@@\ndcndADkatIjYyIefY[eujeji@@\ndcnl@DsetBeIf^UXUujjUj@@\ndct@@DiUUVjjj`@\ndctB@@I]rJJJIVMRuLDE@\ndctB@@PYRYU{ViijBBP\ndctB@@RURY]VvjjZ@@\ndctBHFxYBHRHrHkprJPqREUUMT@@\ndctF@@IaWTfYn~jjj`@\ndctF@@rngTen{mjjj`@\ndctd@DrmATf^VYjji`@\ndcuD`FWi@HrQRXiSUTttDU@\ndcvB`JFUt@aJUgfjjfX@@\ndcvD@LADf^eujjj`@\ndcvD@LADf^fYjjj`@\ndcvHPF`G@WCIIEXmIUSUPQR@\ndeL@@DjYeIjGijjjj@@\ndeT@@DjWvifjih@@\ndeT@@DjYUXPbDP@@\ndeT@p@bDbLbLbdLRPsU@@@@\ndeTB@@KiRYg]nZej`@\ndeTD@@SHheDYaMUMP@@\ndeTD@@eIff\\Ijjf@@\ndeTDB@YnRYe\\YZB@@@\ndeTD`AdHaIe[jz@HX@@\ndeTD`NDHaIfVVfBA`@@\ndeTH@@RYVZfZZj`@\ndeTH@@RYe\\YZA@@@\ndeTH@@rJJIHmtA@pD]@\ndeTH@@rJJIHmtAAH@@\ndeTL@@JTfYoXXHH`@@\ndeTL`BjPkDf[W[jjjh@@\ndeU@@@EIYe^g``p@@\ndeU@@@aJWeQfj@@@@\ndeU@PBdHchaIf^VFBBH@@\ndeU@`Dp@aIgeQej@@@@\ndeUD@HDIRVUunfef`RKh\ndeV@@@RVUenh@J@@\ndeV@@@RYeun`HJ@@\ndeV@PNBHFHRYeYi``x@@\ndeV@pBBHzHfHRYgea``b@@\ndeVD@FADfygFV``@@@\ndeVD@IADfyWxV`@`@@\ndeVH@BAIf]VzB@h@@\ndeVH@FAIfUqehH@@@\ndeVH@HAIYf^f`H`@@\ndeVH@IAJ[Vvz`@h@@\ndeVH`Ax@aIfVVfBA`@@\nded@@DiUUjjj@@\nded@@Dj_VfZZ@@\nded@X@bDbBbFbAbIbDf{nijZ@@\ndedD@@QIeVVjjP@\ndeeD@DdAR[UYjjX@@\ndefD@LADf^]Zjj@@\ndefD`FFPBDiWnjjf@@\ndefD`FFPBDi]nijf@@\ndefJ`JaLFP|LddjRcUTp@@\ndet@@DjYUX^d@@@@@\ndet@@DjYUX^dHbH`@\ndetL@@jTie]rnF``J@@\ndet``Dki@HRYYUnFVjVi@@\ndev@@@rQQJHtpr@@@@@@\ndev@PL@HPHRYUTjFVj@@@@\ndevh@DJndDfVU[af@`hP@\ndevhADIadFf^R[fUnxVijY@@\ndg\\B@@Q[R[VUmgVf@HhBL`\ndg\\B@@SSRY[W[FVh@Ih@@\ndg\\D@@eIfU_Un`HJj`@@\ndg\\H`ABHRYVwUih@Jjh@@\ndg]HPAuPbBbDfYw[fzB@ij@@\ndg^B@BAMoHiieDeBimU@DP@@\ndg^L`LxY@HrQQYJEIYUSRuUAFP\ndgl@@DiUUUZjjjh@@\ndglBA@RUSe{HihheDbtuSUAFH\ndglBPHRU@HhHrRPrIRIkUTmP@@\ndglD@@QIgV]YjfjZBJ`\ndglD@@QImUUUjjjj@@\ndglFPHkivpqLqDen{nzjjjh@@\ndgmB@LxDWTfU[{Vjjfh@@\ndgnD@KADfuUUVjjjh@@\ndgnD`H[`BLdTRbJRUUMUT@@\ndg|D@@OIEEHhfmPkmAU@T`@@\ndg|DPFDH`haIf[oWiNyjY`@@@\ndg|H@@RVUvU[cn`@`@@@@\ndg|H@@RYfUWd}mh@@@@@@\ndg|L@@ildTRbrJQTJtEAEL@@\ndg|d@Dq]@\\bbbbfJSSimUSTs@@\ndg|l@Dq]@[rJJJJXiMNfuUMSL@@\ndg}@@@aJVYU^Svv`@@@@`H\ndg}@@@mJYeU|]Tz@@@H@@\ndg}D@AlBRYgU][iVB@jjD@@\ndg}D@DpCrJJHqIYERzuT@EP@@\ndg}D`LHU@HrQQYJJEYQwSMMMR@@\ndg}H@DHDfYV]rX{Zi``H@@\ndg}HPAuPbBbDfYw[fx{``JZb@@\ndg}L`FWSl@cIEHhbeEc]MUUTsP@@\ndg}L`JXiTIAIf]VunNzVjZj`@\ndg~D@EADfufUqT{ZZP`HBL`\ndg~L@BAER[e[gzSmh@B@@@@\ndg~L@IAKR[Ye]z]MjdHB`@@\ndiD@`@RdjeVjj`@\ndiDB`HSB@HrRPiIZj`@\ndiDD@@GIEHjjjj@@\ndiDJHDpnDAbHbaahcIIJiIZe@@\ndiDL@@xTiUVjj`@\ndiDLPBhPbFbLbbbeiZdHQ@\ndiDNPHSB[a@XhXrRPzQZe`@\ndiE@@@sIDhcFZj@@\ndiF@PHApiprRQVRjj`@\ndiFD@AADfuUjj`@\ndiFD@LADf^Yjj`@\ndiFD@LADf^]jj`@\ndiFD`JxPBLbdTljjX@@\ndiFDpAk`bDbLbLbdJTjjX@@\ndiTH@@RfU|kahDB@@\ndiTL@@X\\dRRaaJzjZj@@\ndiV@@@RfU|kahDB@@\ndid@@DjUZnBAH@@\ndid@@DjUfaBB`@@\ndid@@DjYUaBHP@@\ndid@@LdbRQk``R@@\ndid@@LdbbQxXF@@@\ndidD@@IIf][hHB@@\ndidH@@RYVZZ@B`@@\ndidH@@RYVzZ@B`@@\ndidH@@RYeVz@``@@\ndidH@@RYevz@``@@\ndidH@@RYfVF@b@@@\ndidH@@RYm^Fh@@@@\ndidHHFBHJHzHFHRYgljZfh@@\ndidH`DBHR[e^FX@@@@\ndidL@@IdfYoa`b@@@\ndidL@@RdfV^fZjj@@\ndidL@@SdfVTjZfZ@@\ndidL@@pTee^fZZi@@\ndidh@DKaAInV[fiZ`@\ndie@`HxGCIIEJnFjiX@@\ndieD@DpFRYVZyjfd@@\ndieD`JXaBPRYgvzejX@@\ndieD`LIN@HRZufFZid@@\ndieH`Dq`BDfUfnZii@@\ndie`@@pjX\\dTTUk`Hb@@\ndif@@@rJJIEn`HH@@\ndif@@@rRJEKaj@@@@\ndifH@AAJ[W[j@B@@\ndifH@BAIfuxV`@@@\ndifH@JAJ[gxZB@@@\ndigH@DK`R[e^Eh@@@@\ndigL@Ds`XTfUfn`BH@@\ndkLB`HSB@HrRPiIIIZjjh@@\ndkLH@@RUUUVjjjh@@\ndkMB@LxDeTfU]mZjij@@\ndkNF@BAIWSR[YVYjjfX@@\ndk\\@`@bDfYYwZ]NB@@@@@\ndk\\B@@SSRYVuVfeVi@Bh@@\ndk\\D@@QIee}RkaZfjjh@@\ndk\\D@@wHhhhhbfESZAhD`@@\ndk\\D@@wHhhhhbfESZBhD`@@\ndk\\H@@RYWYVftx@H@@@@\ndk\\H@@RYeg]itxH@@@@@\ndk\\L@@x|bbbTTJZUuhFHF@@\ndk\\b@Dsm@iMIf^UvE]Zjeih@@\ndk\\d@Dq]@\\bbbbfJZ]MjjZe`@\ndk\\d@DsmB\\bbbTrQXUujjUj`@\ndk]D@JxCRe]YTjtzjjjj@@\ndk]D`LHY@HRf]VwJtzYifi@@\ndk]H@DpLbbbLRVJeujh@J@@\ndk]H`FVPbDfUonkmN@Hfh`@\ndk^@@@RfYU\\]Tzjjjj@@\ndk^@@@rQQRJJjaTzBjBD@@\ndk^D@IADfvYWz]MjdHB@@\ndk^d@DXYtCRYf[WaWVjfji@@\ndk^d@DkaTMRYYe]neVjZji@@\ndk^d@DkatCRYYfUngVjZji@@\ndk_D@DHPuIeeevySZ`hD`@@\ndklB@@PcR[me]]ZZ@B@@\ndklB@@PcR[me]]Zj@B@@\ndklB@@QSrJYJIJF]ZX@b@cH\ndklB@@QmR[fUxUZBBF@@\ndklD@@MJ[eZ~F`HJh@@\ndklD@@eJ[Vvfz`@jh@@\ndklH@@RYfWua`Hbe@@\ndklL`HS@BLddJbRvWUjB@`@@\ndkl`@@kaRe[vTf@HZj@ah\ndkm@@@GHhhhhdvf@bbh@@\ndkmD@DHCRYvUvUZh@J@@\ndkmD@DTCRUfWtYV@`e@@\ndkmD@DdCrIJJIPxUV@bE@@\ndkmDpDgSBHjHVHRYYmYn`HJf@@\ndkmH`NVPbDfUunih@JZ`@@\ndkn@`D@HRUUYWSVj`@@@\ndknD@LALbbRbaRtvjh@@@@\ndknH@DCHhmEEEYuj@bH@@\ndknL`IaMADRge][aj@Bf@@\ndk~@@@RfYU_JGUN`@@B@@@\ndmL@@DjYUVGi@@@`@@\ndmL@`@VDifU^FUifje@@\ndmL@`@ZDifU^FUifje@@\ndmLB@@RURYUVJaejVjh@@\ndmLD@@QIe[VfeVi@B@@\ndmLD@@QIe[VfeVj@B@@\ndmLH@@RYVuiiV@BjH@@\ndmLH@@RYe~Ifyjjjh@@\ndmLH@@RYiYKnUjjjh@@\ndmLL@@SdfVUrjUZ`PH@@\ndmLd@DpYBdfV]VzUZZjV@@\ndmLd@Dqe@TfUeZzUZZeZ@@\ndmM@@@yJUntfePBIhP@\ndmN@pN@H`HPHrRPqIZneUhDB@@\ndmND@BA\\bbbReInFjZjd@@\ndmNH@BAIfUmiEX@@@@@\ndmNH@NAIYe^neZdHB@@\ndmNh@DkaTDfVYVzUZiZi@@\ndmO@@@SdfVUrjUZ`PH@@\ndmTB`HSB@HrRPiQQZjj@@\ndmTH@@RUUUjjj`@\ndmU@pLD@a@c`cHheEKFjfh@@\ndmV@HLBHQpYpVHrIRHrJjjj@@\ndmt@H@bAdIdEdDfUvjZ@Bj@@\ndmt@X@bBbFbAbIbEbDfYojzfZj`@\ndmtD@@QIgYVUZh@@@@\ndmtH@@RYWUih@Jh@@\ndmtH@@RYe[[hBBh@@\ndmtH@@RYeeZVfjj@@\ndmtH@@RYeeZZjjj@@\ndmtH@@RYe~[ffjZ@@\ndmtH@@Rfuu[j@BXBA`\ndmtH@@rJJIHin`HJ`@@\ndmuD`LVD@HrRRqIXYV`@`@@\ndmuH`Dq`BLbbRbJkfjZi@@\ndmvD@DATf^Uqej@B@@\ndmvD`La@BLddlTReUhB@@@\ndmvHPEHJsjsHhhmDVFBBK@@\ndmvHPEHLSlSHhhmDVFBBK@@\ndmvH`ITICHhdhdZZ@Bj@@\ndmvL`BaL@HrRRjIJUVjjh@@\ndnDH@@ReVDijiZ@@\ndnDH@@ReVDijjj@@\ndo\\H@@RUUUUZjjjj@@\ndo^HpAxH`hb`aIevyffjZjhHa@\ndo|J@@S[_HheDdeDYMjBBb`@@\ndo|L@@RtfUVuwSZjp@h@@\ndo|L@@RtfvYWwSZjA@h@@\ndo|L@@iTinU]_ihHHjXBCP\ndo|L@@iTinU]_ihHHjXBC`\ndo~L@MAER[e]mnEh@Ij`@@\ndo~``LKad@aJ[V]Y[j@Bjj@@\neF@Hh@\neFAAD`bJ@\neFAADdRJ@\neFABD`bJ@\neFABHhbL@\neFACDlRL@\neFBBHc@@\neFBBlc@@\neFBCDc@@\neFHBJ@\neFPBc@@\neFbHbHp@\neFhXNic@@\neM@Hv@\neMA@JXaIh@\neMABHXaIh@\neMABHYAIh@\neMB@Jch@\neMBBHRZ@\neMBBPRY@\neMCALhabHz@\neMDARV@\neMFI@bMP@\neMFIGBMP@\neMFiDqzN`@\neMHAIX@\neMHAId@\neMHAIh@\neMIdEJHIcd@\neMJDBDeP@\neMPBch@\neM`AIx@\neMbDbDfp@\neMhDRV@\neO@Hyj@\neOB@Hcfh@\neOBBHcfh@\neOBCDcfh@\neOHBNZ`@\neOPBcfX@\neO`BNZ`@\nfH`D@@\nfH`T@@\nfH`X@@\nfH`p@@\nfHa@@@\nfHap@@\nfHbT@@\nfHcD@@\nfHcP@@\nfHcT@@\nfHcd@@\nfHdH@@\nfHdP@@\nfHdd@@\nfHdp@@\nfHep@@\nfHfX@@\nfHgP@@\nfHgd@@\nfHgh@@\nfHpXT@\nfHpp\\@\nfI@@\nfJ@@\nf`a@P@@Ht[HheDhmD\\jsTE@qP@@\nf`a@`@@FrJJIJQJrLy@PUUT@@@\nf`aA@@@ILsKWRpTADUUP@@\nf`aAb@NFlBHrJIKIRJUTY@AUST@@@\nf`aQC@IVLBPQHXdLbdLRTvf`eUPADu@@@\nf`ahB@LDxJP@aJ[V]Yf\\h@Jjj@@@\nf`ahB@LDxJP@aJ[V]ZV\\h@Jjj@@@\nf`aq@@DV\\CHheEDcddkSTE@UP@@\nf`i@P@@HD[HhdihdhUSbkN|uHPTUB@@\nf`i@P@@HTYIe[VUZLeiwfi@HjhP@@\nf`i@`@@DRYfyU]`mNmyi`@@B@@@\nf`i@`@@HrJSQQQIH|UiuoMP@P@P@@@\nf`i@`@@VRYfYU]`eNMyh@`AB@@@\nf`i@a@ARADDbDfYuUUYqVg^``Jh@@@@\nf`i@a@BBADNbLbbbRfaRcIBU[tDE@AA@@@\nf`i@a@FRAD^bDfUm[UirRkN`BJ@BH@@\nf`i@a@FRAD^bDfUm[WirRkN`BJ@BH@@\nf`iA@@@YHhhheLUfBdYwjBb@@H@@@\nf`iA`@@HldrlkZuFJMYsTaADtP@@\nf`iA`@@HmdTRTRTrQhqQkNZdHHfb@@\nf`iQA@B\\|@HpDISLzsnRdcN}TaAQUD@@\nf`ih@@@\\eYvRJJJJUKJgEZMX@HHFhH@@\nf`ip@@@XTeLwOvmNJt{pPQT@A@@@\nf`q@@@DjUgm_hJs``hB@`@@\nf`q@`@@LRYfWg^Qg^ZB`@@@@@\nf`qA`@@FmdbbdTUrRiIVjBh`jd@@\nf`qA`@@Hpdrlrj~gV|uP@@@@@@\nf`qHC@DXxHDPrHMDYEDeDUEEj\\]z@HhH@@@@\nf`qP@@@PrQJJJIIFJlYsP@P@P@`B@\nf`qPB@DX@DILwLjoiuoMUUUUT@@\nf`qP`@DBAKHheHdhbmPSoMUTa@P@@\nf`q`@@@YEEDbdhdf\\]z@`f@@@PE@\nf`q`B@B@bDfYwVUYqwhHBX@@A@T@\nf`q`B@O@dDfUuYWhrsh@I`@`ACd@\nf`q```JBTBHQDXbBAFQREQQSYJVg^jjfX@@@@\nf`q```JBTBHQDXbBAFQREQQSYJVg^jjfZjd@@\nf`q`b@LPP@HrRPjJIIKZ][ru@@@@@@@\nf`qa@@D@RYyV{TRg^Z`B@@@@@\nf`qa@@D@RYyeg^Qg^Z``@@@@@\nf`qh@@@XirVRJJZGJII`g^BHa`@@DAP\nf`qi`@DTxIPC^rJIQQJiILyISUKMUU@@@\nf`qp@@@Hpds\\rj~gV|uP@@@@@@\nf`qpa@LR}A@@`PQddaTTRRUtxuejBPha@@\nf`y@@@LdbbbbbfkEBMIuo@@@@@@@@@\nf`~`b`KLLBHHDTBNA@`aIneUYYjjjZ`@@\nfbc@@@LdbbbTRLRqWEBMjsoIs@AA@UUPT@@\nfbc@@@LdbbbbbbQQsEBMKuhir@@@@@@@@@@\nfbc@@@LdbbbbbbcJwEB]Hu`ir@@@@@@@@@@\nfbc`@@@ISLrj}{dirVgVBgLmUTrB@m@@@\nfbc`@@@YHheEMDXlijREhuoQSd@@@@@@@@@@\nfbe@P@@HM[HheDhdhmbdisTEALUT@@@\nfbe@`@@HRYWUUUUIQjjjjjj`@@\nfbe`P@N@P[vQQJJKQRzZIUfjijjZi@@\nfbm@@@DjYVWV}~ZlENXI@H@@@@@@\nfbmAP@@BLENQQQQQQQYG[bm^]Eh@bHAJ`@@\nfbmAP@@BUGNQQQQQQPeIG`mNBehIb@@b`@@\nfbmH`@EVBdGlbbbbbbTRacAZb{KPADDLQ@@@\nfbmI@@DTdhFQQIQIQHqIY`iJSejfYjB@h@@\nfbmPB@NA@DYHhhhddmcEJ\\e[Sj@H@`jj@@@\nfbmPb@AJ|dDPdrmrljoSfgQs@DMPTBD@@@\nfbmQB@AJRBHRYVyV[WisShy`BFhJAB@@@\nfbmp@@@V|eLsJzo]SdcZ\\@@@AEU@@@@\nfbu@@@LdbbRbVbrQwMQS@pU@TA@BFH\nfbu@@@LdbbRbbtRJOCIs@pUPE@@BFH\nfbu@`@@YRYWYeg_hrJX@Ij``H@Py@\nfbu@`@@YRYWYeg_hrJX@JY``H@HDj`\nfbua@@D@rJJJPjJYIK^SGKUUX@@@@@@\nfbupb@LVcA@@cIIBmDeLhThkUgKU@ASUQ@@@\nfby@`@@HR[UUUUUZjjfjj`PT`\nfby@`@@HR[UUUUUZjjjjj`@@\nfbya@@D@R[UUUUUZjjjjj`@@\nfb}@@@DjYee\x7F]^RD[S`q@@@@@B`@@@\nfb}@P@@H]gHheDheEeD\\jugQRgKUUUUUUU@@@\nfb}@`@@LrJJJJHyISI\\dkSoIsTED@@@H@@@\nfb}@`@@LrJJJJHyJIK\\dkS`isTED@@@H@@@\nfb}@`@@LrJJJJKIIIH|Djw`isTEP@@@@@@@\nfb}@`@@YRYVum[ehrRkNBf@BjjjjJ`@@\nfb}@`@@YrJJQIFYJYKDyIUgQRuUUU@AU@@@\nfb}@`D@HQvQSRJIJUJYHRiZ]yNVjjjjjjj@@\nfb}A@@@IS\\lj{j|DjsoIsP@@@@@@@@@\nfb}A@@@IS\\l~kZ|dkSoIsP@@@@@@@@@\nfb}A@@@YHihhhdeCenJtzpTyh@@@@@@@@@\nfb}P@@@RRVYfU{wyKSkASg`@@@@@@@@@\nfb}`@@@YHhhhhdhecjRUXt_I@@@@@``@@@\nfb}`B@A@dDfUmeumZLeiwdy`@@`@@@@@@\nfb}`B@A@dDfUmevUzLeipTy`@@`@@@@@@\nfb}`B@B@dLbbbRfbtVbKIBuxJ\\p@@A@@@@@@\nfb}a@@I@RVYfU{wyKSkASe`@@@@@@@@@\nfde@@P@QAHadQJHuDFb@qDXcHhhiMMEciS`eN}MUUUUUP@@\nfde@@P@QAHadQJHuDFbOQDXcHhhiMMEcCS`eNCMUUUUUP@@\nfde@P@@BLGHhhhhhhlcqVoNbt@QD@d@@@\nfde@``ARADDb@qDXaIf]UUUYqVg^``Jh@h@@@\nfde@``BRADLb@qDXcHhhheCBdeqTmN}ADT@AQ@@@\nfdeQ@@DFAdTRbRRTJbIQVg^ZiBBZhDDJP\nfde``@A@BdsLsKslUiuhm@DPAI@@@\nfde`b@H\\d@HRfYfWwQJMxLZjfZ``H@@\nfdi@P@@HM[HheDhdhkdisTE@lT`@@\nfdiA`@@HedTtbJRbbV|Ejjj@``@@\nfdiQb@LR``P@cIIBhheedmjru@pQU@@@\nfdq@`@@HR[UUUUVjjjjj@@\nfdqA`@@LdeJl{jjtuSSLtBbGbiLnP\nfdqPP@LQ@`p\\bbRTTaVRcUUUUS@@@\nfdqaQ@JDT{pPQEoCHhhihldYMRuUUMPHHP\nfdu@@@DjYee]}daZlGtP@@@@@@@@@\nfdu@@@DjYee]}faRlGtP@@@@@@@@@\nfdu@@@DjYee\x7F_daFtxLP@@@@@@@@@\nfdu@@@LdbbbbbTUHeRlXOh`@@@@@@@@@\nfdu@A`@QAHadQJHCDQbLbbbdtqTVeA\\TYuoSUUUUUT`@@\nfduAC`H`bBQCHbTQjHMD^bLbbbdttVLUNBTxHXsUUUUUU@@@\nfdu`@@@YHheEhTddj\\EHu`q@@@@@@@@@\nfdu`@@@YHhhhdeCejBd[S`q@@@@@@@@@\nfdu`@@@YHhhhhdhbZRUXp_Q@@@@@@@@@\nfdy@A`@XaLPVH[DCbQqDfYuygUgG^``JB@h@@@\nfdy@A`@XaLQfHKDUbNqDfYn\x7Ff_d`q`bHhH@@@@\nfdyAP@@BUhNQQQQQQDqIdgAZYjZZj`@@\nfdyAa@MAbBHQDIM_JztvBRUUP@UTt@@@\nfdyP`@AR@EJ[WUe]Yqwj@Bh@J@@@\nfdyhP@DTxIPCAcdTRbbURTRYrRfjVZjjh@@\nfdyi`@DTxIP@qrJIQQJiJILyISUKMUUT@@\nfdyqb@LFcA@`AFRREQQIJH{WcVVhIBhhP@@\nfgA@@@DjYU_VByHu`@@@@@@@\nfgA@@@LdbbbTVKIBMjp@@@@@@@\nfgA@P@@HEkHheHeEBRdmFluUMUU@@@\nfgA@`@@\\RfYe_irQmVh@`@H@@@\nfgAA`@@HLdrmlkQdmFluHADq@@@\nfgAH@@@XhiJYmg]gAJMXH`jeF@@\nfgAP@@@\\RfYe_irQmV@@@@@@@@\nfgAp@@@XheLvnjs`iFlDPT@@@@@\nfgApB@LLx@HRevUUpPTcViYj@H@@@\nfha@R@HHpPG`eUjjjjuUUUU@@@\nfhaH@@@\\DyJUUUWVjjjjj@@\nfhep`@BLT@NQQQQQQRq\\tJQkN|uLuUTuP@@\nfhi@B`@QAHadPzHCDYEEELUDeCpUoPQA@DP@@@\nfhi@`@@RrJJIIQFYHVoAZBA`@@@@\nfhi@c@ARAD\\B@qFQQIYRFIKTX{t@Dl@D@@@\nfhiA`@@B|dsLro~jqgM@D@AP@@@\nfhiHB@EZLDDQdTRVTTTQUFF]@A@QE@@@\nfhiHa@LTdFB@A@`cIIBhhddmmNMYZ`hJJD@@\nfhiIP@DXxHDc^CdTRbfaTVUNZltuUUUL@@\nfhiP@@@ArJJIEJIJYgKN`HJ@B`@@\nfhiPA@BAADNbLbbbrrbRaYrwhHB`BH@@@\nfhiP`@DZAyIgVYW^VkNZjdHBh@@\nfhiPb@OA``@QddabbRRvRkF\\m@@@E@@@\nfhiQA@BADBH]DYEEEeeDeBseoPPE@DP@@@\nfhiQ`@DX@pRSJswJ}N^BuSMA@P@@\nfhia@@E@rQQQHyJIHToAhJ@h@@@@\nfhia@@J@RfywVUxKpZB@f@@@Pe@\nfhipS@IZCpSo@bBAA`cHhheHeTiFJlFBAXjVH@@\nfhiq@@DZBCHheEDeDceNmyj@@`B@@@\nfhiqB@IF]hDadTTTbfLVWE^CMUTmRt@@\nfhiqP@DXxBQoArJIQSPjKJ`mVZZjjjf@@\nfhiqb@LJMAC`AFRRVIKIQKBd{rt@EMLP@@\nfhq@`@@NrQQJIJYHxRjBHbjh@@\nfhqXB@J\\dZpPAFRIJIJJqIBeUSMMUpHJ`\nfhy@C`@QAHadQJHuDFbOQFQQQRZZKFTxIS`sUUUUMP@@\nfhy@`@@HRY[fUWpPwgAZj@@@H@@@\nfhy@c@ARADDb@qBSLzjjkNJt{tDAU@D@@@\nfhyA@`A@bBQGh`LPdsNjjjsdeV]A@U@E@@@@\nfhyA`@@BMdTTTTTTVoEZ|xL@A@P@@@@\nfhyA`@@B|dsLsKnqVgVBt@Q@BP@@@\nfhyA`@@Hldrlk[oQbcN|uHPQUP`@@\nfhyH@@@XxkIEDeDehTjBYspP`Xj@@`@@\nfhyI`@LJMxD`yHhhhUEedRfcN}UUTBAT@@@\nfhyPA@B\\@DXBDif]WmRTekpZdHHjjH@@\nfhy``@A@|dsLsKnqVgVBt@Q@BP@@@\nfhyaB@K^@DISLjo{XhKRcT@@@Tt@@@\nfhyh@@@\\e[vRJJJJUIITxkQk@AA@uPP@@\nfkAA`@@TTeJwsLDDXkVcUUUUUP@@\nfle@B`@QAhbtPzHSDYEEDeCEHe\\s`XpDEATA@@@\nfle@Q`OAbdDPRHYDRbMQAhcHhhiMMEcEJ\\DjZjjjfZ`@@\nfleHb@LBdfB@AFRREQQIIZIZ][ru@@@EP@@@\nfleI@BHTDh@NaNQJJIIKQPi\\eEMA@eT@@@ar@\nfleP`@DA@eIVUue]^B]yX@J@BT@@@\nfle`@@@YIEDeDThll[tTuSPP@@@BAH\nfle``@A@Pdrrr\x7FrjcQRuAPI@@@HJ`\nfle``@D`TeMrnkZ\x7FAAcPDET@D@@@\nflehPBDX}EHAJCFT}dTTRTRRJRsNFluTtuUKP@@\nfli@@@LdbVRRbbjTjjjjjj@@\nfliA@@@IJjjjjkUUUUUT@@\nfliAq@LDhkSo@BH^FRJQSIQUQ[TuUMSU@@@\nflm@@@DjYee]\x7FYhTkA}D@@@@@H@@@\nflm@@@DjYee\x7F]yHQmNCD@@@@@H@@@\nflm@@@DjYee\x7F_yHQmNCD@@@@@H@@@\nflm@@@LdbbbTRrJRxhQmNBd@@@@@`@@@\nflm@@@LdbbbTRvRQyHQmNbd@@@@H@@@@\nflm@@@LdbbbTVRcRXhQmNbd@@@B@@@@@\nflm@@@LdbbbbbTQnEjUcA}D@@@@@H@@@\nflm@@@LdbbbbbTUVDjUcA|d@@@@@`@@@\nflm@B@@AFQQQQQIJGKLdjqoQS@@@@@@@@@@\nflm@B@@RFQQQJKPiIILEIUgQS@@@@@@@@@@\nflm@B@@XfQQQQQIJGKLdjqoQS@@@@@@@@@@\nflmA@@@ILrrknjsdcV]EL@@@@@@@@@\nflm`@@@YHhhhdeElcPTcZ}EH@@@A@@@@@\nflm`@@@YHhhhhdhecRRkFcyH@@@@D@@@@\nflmaA@KQ@DPdLdtTRbtJfRyIVkNbfifZiZej@@\nfluAP@@B\\FJSLsLoJlUkudm@DPDLP@@@\nfluAP@@HdkrSKLvzjlxYtTmT`pQUP`@@\nfluAc`OARBHIDLbIQFh`tQDHrJJJSSQXiZgAJCFZjjjjfh@@\nfluPP@DTAsUlbbTTTlTvRXHshiZjZfX@`@@\nfluP`@DX@qIeVyeUrT]DJVjZ@@@H@@@\nfluQB@DXX@HRYUnYU\\eGQBejf`@@B@@@\nflu`a@BJ|CDebYEEEheDXdlpQkQSAADtB@P@@\nfluaP@E@EKt\\bbbbbRJRRXhshiZdF`bjb@@\nflua`@O@QGHheEDdebeJ\\UXsfh@@@ih@@@\nfluib@DTxIQhi@DYEDhheUDddsdeN|uRsUUUT@@\nflux@@@XIRRmYHhhldiUDdsdcQRA@AQ@@@@@\nflyAP@@HLxJSJkZrkzluT`DUT@@@\nfl}A@@@IRlrjkoAENJl[tTuP@@@@T@@@\nfl}A@@@YEEDhih]DdpTmZlxLTmSSTuJsT@@\nfl}A@@@YHdhheDddcAENJ]ZHTt@@@@@@@@@\nfl}AA`D`bBQCHbTPFHcDYEEEIibheEPWEFl{wdsUUUUUUT@@\nfl}aA@HF@DIdLdRbbRRtJR``cIFuXLZjjZjeif@@\nfoA@`@@VRfUYu^JLz``@B@@@\nfoAAB@A@bDfUmyVcKN`@j@@@@@\nfoAA`@@HXdrkkJdiYsTtp@PBGH\nfoAP@@@NRYWVUzLMZ@B`@`@@\nfoAP@@@XReeV]qZlyfjjjj@@\nfoAPB@KN@DISLjohmJMP@@AP@@@\nfoAPQ@LF`aV`AD`cIICDTiCJLlyZjiZj@@\nfoAP`@BZ@aInvYWejsfjiB@`@@\nfoA`@@@IKLrjzkF]u@@@@@@@\nfoA`@@@ILkjrmFV]@AL@@@ar@\nfoA`@@@IML|{wEFmUSA@R@@@\nfoA``@L@QdTVbbbblmV\\u@A@@@@@\nfoA`a@AZlBHYDYEDeDXhiSagPAESLP@@\nfoAaB@G\\ADILkkJ}FFm@AP@P@@@\nfoAa`@J@PIImeeWyJsfjZb@@@@\nfoAp@@@P\\eKLjorMjsP@@A@B@H\nfoAq`@DXxBSlbbTTtJVhKQffjjjX@@\nfoIA@@@IRlkZ|DTyKUgUSUUJs@@@\nfoIA@@@IRlrj|DTxjqgUP@@AP@@@\nfoQ@b@BBADYEEDeMBdrPeV]AAP@A@@@\nfoQ@b@FRADILkZvmNRUYt@QP@D@@@\nfoQA`@@HldrmlrtYKUgMR@QSD@@\nfoQH@@@RM[IEDhmBdj\\DkQ`@@ajB@@\nfoQH@@@XhiJYmg^YpRcVBHJiXX@@\nfoQP@@@FRfYeUz\\e[S`@@@`@@@\nfoQP@@@FRfYeUz\\e[S`@`JbB@@\nfoQa@@N@rQQQQJKGbiVLz`BB@D@@@\nfoQp@@@XdeLv{ZtyIUgAAE@@P@@\nfoQp@@@XidbbfbQRSNRUYpQAT@@@@@\ngBQ@@eJuT@@\ngBX@@eLUT@@\ngC`@Die@@\ngC`@H{P@\ngC`DADJHRZd@\ngC`DADZHRVXRP\ngC`DADZHRVx@\ngC`DAHJPRZd@\ngC`HADIKLIH\ngC`HAVIMT@@\ngC`HAbIKJ@@\ngC`LADJHtPduP@\ngC`LADJPt`duP@\ngC`LAVJluXduP@\ngC``Adej@@\ngCa@@dkH@\ngCa@@dmH@\ngCa@@dmP@\ngCa@@dmX@\ngCa@@dsP@\ngCa@@duP@\ngCaA@NRVd@\ngCaHH@bNt@@\ngCah@mJAIj`@\ngCahHl@bNj@@\ngCahHlGBNt@@\ngCahHlHRNj@@\ngCahhlAa]ncm@@\ngCaihlLr\\nwQz`@\ngCd@ADij@@\ngCd@ADkZ@@\ngCdDI`BHDRZh@\ngCh@@doH@\ngCh@@duP@\ngCi@DDfZ@@\ngFp@DiTt@@@\ngFp`@dfTujh@\ngFp`@df_Ejh@\ngFp`ATiTvjh@\ngFq@@eOKUU@@\ngFq`@ldrfmT`@\ngFr@ACTi[FZd@\ngFr@ACTi_FVh@\ngFt@ATigVVh@\ngFt@AdigUjX@\ngFtHE`DILikUP@\ngFu@E`drfmU@@\ngFx@@eJf`@@@\ngFx`LDdrfmU@@\ngFy@DDfXujh@\ngFy@JDiTvjh@\ngFy@LDeXvjh@\ngFy@LDi^Jnh@\ngGP@DiVj`@\ngGPBADJHLQXaInih@\ngGPBADJHtQXcHiCUp@\ngGPBAHJPLaYAInih@\ngGPBAHJPtaYCHiCUP@\ngGP`@TfYi`@\ngGP`ATeVj`@\ngGP`ATeVn`@\ngGP`ATiVj`@\ngGQ@@dkUT@@\ngGQ@@eMUT@@\ngGQLJHaQFbLbdMT`@\ngGQXHlZHROjj@@\ngGQ`@bdwMT@@\ngGQhHl@cIIBmP@\ngGQhHlLSIHTmP@\ngGQhHlOAJmZh@\ngGT@ADiVj`@\ngGU@E`dmmT@@\ngGXHD@aIUVd@\ngGXLJHaQFbLbdMU`@\ngGX`LDdsmT@@\ngGY@HDeVZaI@\ngGY@HDefZaH`\ngGYHLaDIMtu@@\ngG]HHjPDIJuS@@\ngJP@DjYd@\ngJPBADJHtPXaIjj@@\ngJPBADJHtPYAIjj@@\ngJPDADQpRZj`@\ngJPHADIKSP@\ngJPHADILth@\ngJPHAVILuP@\ngJPLADJHLPdwS@@\ngJPXHlPDQzt@@\ngJPXHlPLQzt@@\ngJP`@TeVd@\ngJP`@TeZh@\ngJP`@TfVd@\ngJP`@deVh@\ngJP`@dfvd@\ngJPlLQDPHTPduR`@\ngJQ@@dlu@@\ngJQ@@dmU@@\ngJQ@@duU@@\ngJQ@@eKU@@\ngJQDHG@nBUMT@@\ngJQHBHaIfe@@\ngJQHBLQIfe@@\ngJQ`@bdvu@@\ngJT@ADiYhRP\ngJT`E`TfVh@\ngJX@@dkU@@\ngJX@@dms@@\ngJX@@eKU@@\ngJX`LDdru@@\ngJY@DDfvd@\ngJYHC`DIKTp@\ngKP`@df\\Vj@@\ngKQ@@eKcRp@\ngKQ@@eKcUP@\ngKX@@eKcUP@\ngK\\@ADeKbuH@\ngNpXHlPDYIHTmT@@\ngNp`@dfVZf@@\ngNp`@df]Zi@@\ngNp`@dfzZj@@\ngNp`@teUZi@@\ngNplJqDJHtQdTaeUP@\ngNpmJqDJHtP~rJPrjX@\ngNq@@dssUP@\ngNq`AVeJmUP@\ngNqhHl@cIICej`@\ngNqhHlOAJkVj`@\ngNtDLpDDHRevnl@\ngNtHE`DILruT@@\ngNx@@eRmUP@\ngNx`LDdskUH@\ngNx`LDdskUP@\ngNx`LDdssUP@\ngNx`LFdjmUP@\ngNy`LDtf]Zj@@\ngN|@ADeJkUP``\ngN}HEbpDILzuR@@\ngOp@DjWkB@@@\ngOpHADILkW@@@@\ngOpXHlPDYIHUVmU@@\ngOp`@dfUMZf`@\ngOp`@dfVqZj`@\ngOp`@tiguif`@\ngOp`AdeekZZP@\ngOphH`DYIHUVmT`@\ngOq@@drm[UT@@\ngOq@@drm\\@@@@\ngOq`@fdrikTl@@\ngOq`@fdrikUL@@\ngOqhHl@cIIBjujh@\ngOtHE`DILl[MT`@\ngOx@@drm\\@@@@\ngOx@@drm]UT@@\ngOx@@eJqh@P@@\ngOxHDHaIeZx@@@\ngOy@DDfYKZj`@\ngOz@ACVeKNLuR@@\ngO|HDVHaIeZx@@@';
	var NE=KI(136);nH(172,1,{},Lr);var OE=KI(172);nH(173,1,{},Qr);_.assessDruglikeness=function Rr(a){var b;return Rq(this.a,(b=a.a,MA(Or),b))};_.getDetail=function Sr(){return PA(this.a.a)};_.getDruglikenessString=function Tr(a){return Sq(a.a)};var Nr=-999,Or;var PE=KI(173);nH(39,1,{39:1},av,bv);_.addAtom=function cv(a){return Yg(this.a,a)};_.addBond=function dv(a,b,c){return Zg(this.a,a,b,c)};_.addFragment=function ev(a,b,c){Wj(this.a,a.a,b,c)};_.ib=function fv(){_o(this.a)};_.jb=function gv(a){ap(this.a,a)};_.addImplicitHydrogens=function hv(a){a===undefined?this.ib():this.jb(a)};_.addMissingChirality=function iv(){Jo(this.a)};_.addMolecule=function jv(a){return $g(this.a,a.a)};_.addOrChangeAtom=function kv(a,b,c,d,e,f){return _g(this.a,a,b,c,d,e,f)};_.addOrChangeBond=function lv(a,b,c){return ah(this.a,a,b,c)};_.addRing=function mv(a,b,c,d){return bh(this.a,a,b,c,d)};_.addRingToAtom=function nv(a,b,c){return dh(this.a,a,b,c)};_.addRingToBond=function ov(a,b,c){return eh(this.a,a,b,c)};_.addSubstituent=function pv(a,b){return fh(this.a,a.a,b)};_.canonizeCharge=function qv(a){return Yj(this.a,a)};_.changeAtom=function rv(a,b,c,d,e){return gh(this.a,a,b,c,d,e)};_.changeAtomCharge=function sv(a,b){return hh(this.a,a,b)};_.changeBond=function tv(a,b){return ih(this.a,a,b)};_.convertStereoBondsToSingleBonds=function uv(a){Zj(this.a,a)};_.copyAtom=function vv(a,b,c,d){return kh(this.a,a.a,b,c,d)};_.copyBond=function wv(a,b,c,d,e,f){return lh(this.a,a.a,b,c,d,e,f)};_.copyMolecule=function xv(a){mh(this.a,a.a)};_.copyMoleculeByAtoms=function yv(a,b,c,d){$j(this.a,a.a,b,c,d)};_.copyMoleculeByBonds=function zv(a,b,c,d){return _j(this.a,a.a,b,c,d)};_.copyMoleculeProperties=function Av(a){mo(this.a,a.a)};_.deleteAtom=function Bv(a){oh(this.a,a)};_.deleteAtomOrBond=function Cv(a,b){return ph(this.a,a,b)};_.deleteAtoms=function Dv(a){return qh(this.a,a)};_.deleteBond=function Ev(a){rh(this.a,a)};_.deleteBondAndSurrounding=function Fv(a){sh(this.a,a)};_.deleteMarkedAtomsAndBonds=function Gv(){return th(this.a)};_.deleteMolecule=function Hv(){uh(this.a)};_.deleteSelectedAtoms=function Iv(){return vh(this.a)};_.ensureHelperArrays=function Jv(a){no(this.a,a)};_.findAlleneCenterAtom=function Kv(a){return bk(this.a,a)};_.findAtom=function Lv(a,b){return wh(this.a,a,b)};_.findBINAPChiralityBond=function Mv(a){return ck(this.a,a)};_.findBond=function Nv(a,b){return xh(this.a,a,b)};_.findRingSystem=function Ov(a,b,c,d){dk(this.a,a,b,c,d)};_.getAbsoluteAtomParity=function Sv(a){return oo(this.a,a)};_.getAbsoluteBondParity=function Tv(a){return po(this.a,a)};_.getAllAtoms=function Uv(){return this.a.o};_.getAllBonds=function Vv(){return this.a.p};_.getAllConnAtoms=function Wv(a){return gk(this.a,a)};_.getAllHydrogens=function Xv(a){return ik(this.a,a)};_.getAromaticRingCount=function $v(){return jk(this.a)};_.getAtomAbnormalValence=function _v(a){return yh(this.a,a)};_.getAtomCIPParity=function aw(a){return zh(this.a,a)};_.getAtomCharge=function bw(a){return Ah(this.a,a)};_.getAtomColor=function cw(a){return Bh(this.a,a)};_.getAtomCustomLabel=function dw(a){return Ch(this.a,a)};_.getAtomESRGroup=function ew(a){return Eh(this.a,a)};_.getAtomESRType=function fw(a){return Fh(this.a,a)};_.getAtomLabel=function gw(a){return Gh(this.a,a)};_.getAtomList=function hw(a){return Hh(this.a,a)};_.getAtomListString=function iw(a){return Ih(this.a,a)};_.getAtomMapNo=function jw(a){return Jh(this.a,a)};_.getAtomMass=function kw(a){return Kh(this.a,a)};_.getAtomParity=function lw(a){return Lh(this.a,a)};_.getAtomPi=function mw(a){return kk(this.a,a)};_.getAtomPreferredStereoBond=function nw(a){return lk(this.a,a)};_.getAtomQueryFeatures=function ow(a){return Mh(this.a,a)};_.getAtomRadical=function pw(a){return Nh(this.a,a)};_.getAtomRingBondCount=function qw(a){return mk(this.a,a)};_.getAtomRingCount=function rw(a,b){return nk(this.a,a,b)};_.getAtomRingSize=function sw(a){return ok(this.a,a)};_.getAtomX=function tw(a){return Oh(this.a,a)};_.getAtomY=function uw(a){return Ph(this.a,a)};_.getAtomZ=function vw(a){return Qh(this.a,a)};_.getAtomicNo=function ww(a){return Rh(this.a,a)};_.getAtoms=function yw(){return this.a.d};_.getAverageBondLength=function zw(a){return pk(this.a,a)};_.getAverageTopologicalAtomDistance=function Aw(){return qk(this.a)};_.getBond=function Bw(a,b){return rk(this.a,a,b)};_.getBondAngle=function Cw(a,b){return Uh(this.a,a,b)};_.getBondAtom=function Dw(a,b){return Vh(this.a,a,b)};_.getBondBridgeMaxSize=function Ew(a){return Wh(this.a,a)};_.getBondBridgeMinSize=function Fw(a){return Xh(this.a,a)};_.getBondCIPParity=function Gw(a){return Yh(this.a,a)};_.getBondESRGroup=function Hw(a){return Zh(this.a,a)};_.getBondESRType=function Iw(a){return $h(this.a,a)};_.getBondLength=function Jw(a){return _h(this.a,a)};_.getBondOrder=function Kw(a){return bi(this.a,a)};_.getBondParity=function Lw(a){return ci(this.a,a)};_.getBondPreferredStereoBond=function Mw(a){return jl(this.a,a)};_.getBondQueryFeatures=function Nw(a){return di(this.a,a)};_.getBondRingSize=function Ow(a){return sk(this.a,a)};_.getBondType=function Pw(a){return ei(this.a,a)};_.getBondTypeSimple=function Qw(a){return fi(this.a,a)};_.getBonds=function Rw(){return this.a.e};_.getChiralText=function Sw(){return qo(this.a)};_.getChirality=function Tw(){return this.a.G};_.getCompactCopy=function Uw(){return new bv(ro(this.a))};_.getConnAtom=function Vw(a,b){return tk(this.a,a,b)};_.getConnAtoms=function Ww(a){return uk(this.a,a)};_.getConnBond=function Xw(a,b){return vk(this.a,a,b)};_.getConnBondOrder=function Yw(a,b){return wk(this.a,a,b)};_.getDefaultMaxValenceUncharged=function Zw(a){return gi(this.a,a)};_.getDiastereotopicAtomIDs=function $w(){return Ko(this.a)};_.getElectronValenceCorrection=function _w(a,b){return hi(this.a,a,b)};_.getFisherProjectionParity=function ax(a,b,c,d){return yk(this.a,a,b,c,d)};_.getFragmentAtoms=function bx(a){return zk(this.a,a)};_.getFragmentNumbers=function cx(a,b,c){return Ak(this.a,a,b,c)};_.getFragments=function dx(){var a,b,c;a=so(this.a);c=JC(QE,OR,39,a.length,0,1);for(b=0;b<a.length;b++){c[b]=new bv(a[b])}return c};_.getFreeValence=function ex(a){return Bk(this.a,a)};_.getHandleHydrogenMap=function fx(){return Ck(this.a)};_.getHoseCodes=function gx(a){a=a||{};var b=(typeof a.maxSphereSize===BU?5:a.maxSphereSize)|0;var c=(typeof a.type===BU?0:a.type)|0;return Mo(this.a,b,c)};_.getIDCode=function hx(){return uo(this.a)};_.getIDCodeAndCoordinates=function ix(){return {idCode:this.getIDCode(),coordinates:this.getIDCoordinates()}};_.getIDCoordinates=function jx(){return vo(this.a)};_.getImplicitHigherValence=function kx(a,b){return Dk(this.a,a,b)};_.getImplicitHydrogens=function lx(a){return Ek(this.a,a)};_.getIndex=function mx(){return sn(JA(Zu),this.a)};_.getMaxAtoms=function nx(){return this.a.K};_.getMaxBonds=function ox(){return this.a.L};_.getMaxValence=function px(a){return ii(this.a,a)};_.getMaxValenceUncharged=function qx(a){return ji(this.a,a)};_.getMolecularFormula=function rx(){return new qA(this.a)};_.getMolweight=function sx(){return Gk(this.a)};_.getName=function tx(){return this.a.M};_.getNumberOfHydrogens=function ux(){return bp(this.a)};_.getOccupiedValence=function vx(a){return Hk(this.a,a)};_.getPath=function wx(a,b,c,d,e){return Ik(this.a,a,b,c,d,e)};_.getPathBonds=function xx(a,b,c){Jk(this.a,a,b,c)};_.getPathLength=function yx(a,b){return Kk(this.a,a,b)};_.getProperties=function zx(){return new uA(this.a)};_.getRotatableBondCount=function Ax(){return Nk(this.a)};_.kb=function Bx(a,b,c,d){var e,f;f=QA(d);e=new Qn(this.a,f,c);Ed(e,new YH(0,0,a,b));yd(e);return On(e)};_.getStereoBond=function Cx(a){return Pk(this.a,a)};_.getStereoCenterCount=function Dx(){return wo(this.a)};_.getStereoProblem=function Ex(a){return li(this.a,a)};_.getSubstituent=function Fx(a,b,c,d,e){return Rk(this.a,a,b,c,d.a,e)};_.getSubstituentSize=function Gx(a,b){return Sk(this.a,a,b)};_.getSymmetryRank=function Hx(a){return xo(this.a,a)};_.invalidateHelperArrays=function Ix(a){oi(this.a,a)};_.inventCoordinates=function Jx(){_u(this)};_.isAllylicAtom=function Kx(a){return Wk(this.a,a)};_.isAromaticAtom=function Lx(a){return Xk(this.a,a)};_.isAromaticBond=function Mx(a){return Yk(this.a,a)};_.isAtomConfigurationUnknown=function Nx(a){return pi(this.a,a)};_.isAtomMarkedForDeletion=function Ox(a){return qi(this.a,a)};_.isAtomParityPseudo=function Px(a){return ri(this.a,a)};_.isAtomStereoCenter=function Qx(a){return si(this.a,a)};_.isAutoMappedAtom=function Tx(a){return ti(this.a,a)};_.isBINAPChiralityBond=function Ux(a){return Zk(this.a,a)};_.isBondBackgroundHilited=function Vx(a){return ui(this.a,a)};_.isBondBridge=function Wx(a){return vi(this.a,a)};_.isBondForegroundHilited=function Xx(a){return wi(this.a,a)};_.isBondMarkedForDeletion=function Yx(a){return xi(this.a,a)};_.isBondParityPseudo=function Zx(a){return yi(this.a,a)};_.isBondParityUnknownOrNone=function $x(a){return zi(this.a,a)};_.isDelocalizedBond=function _x(a){return $k(this.a,a)};_.isElectronegative=function ay(a){return Ai(this.a,a)};_.isElectropositive=function by(a){return Bi(this.a,a)};_.isFlatNitrogen=function cy(a){return _k(this.a,a)};_.isFragment=function dy(){return this.a.I};_.isMarkedAtom=function ey(a){return Ci(this.a,a)};_.isMetalAtom=function fy(a){return Di(this.a,a)};_.isNaturalAbundance=function gy(a){return Ei(this.a,a)};_.isOrganicAtom=function hy(a){return Fi(this.a,a)};_.isPurelyOrganic=function iy(){return Gi(this.a)};_.isRingAtom=function jy(a){return bl(this.a,a)};_.isRingBond=function ky(a){return cl(this.a,a)};_.isSelectedAtom=function ly(a){return Hi(this.a,a)};_.isSelectedBond=function my(a){return Ii(this.a,a)};_.isSimpleHydrogen=function ny(a){return dl(this.a,a)};_.isSmallRingAtom=function oy(a){return el(this.a,a)};_.isSmallRingBond=function py(a){return fl(this.a,a)};_.isStabilizedAtom=function qy(a){return gl(this.a,a)};_.isStereoBond=function ry(a){return Ji(this.a,a)};_.markAtomForDeletion=function sy(a){Li(this.a,a)};_.markBondForDeletion=function ty(a){Mi(this.a,a)};_.normalizeAmbiguousBonds=function uy(){return hl(this.a)};_.removeAtomColors=function vy(){Pi(this.a)};_.removeAtomCustomLabels=function wy(){this.a.r=null};_.removeAtomMarkers=function xy(){Qi(this.a)};_.removeAtomSelection=function yy(){Ri(this.a)};_.removeBondHiliting=function zy(){Si(this.a)};_.removeExplicitHydrogens=function Ay(){ll(this.a)};_.renumberESRGroups=function By(a){return Ui(this.a,a)};_.scaleCoords=function Cy(a){Vi(this.a,a)};_.setAllAtoms=function Dy(a){Wi(this.a,a)};_.setAllBonds=function Ey(a){Xi(this.a,a)};_.setAssignParitiesToNitrogen=function Fy(a){yo(this.a,a)};_.setAtomAbnormalValence=function Gy(a,b){Yi(this.a,a,b)};_.setAtomCIPParity=function Hy(a,b){Zi(this.a,a,b)};_.setAtomCharge=function Iy(a,b){$i(this.a,a,b)};_.setAtomColor=function Jy(a,b){_i(this.a,a,b)};_.setAtomConfigurationUnknown=function Ky(a,b){aj(this.a,a,b)};_.setAtomCustomLabel=function Ly(a,b){bj(this.a,a,b)};_.setAtomESR=function My(a,b,c){dj(this.a,a,b,c)};_.setAtomList=function Ny(a,b,c){fj(this.a,a,b,c)};_.setAtomMapNo=function Oy(a,b,c){gj(this.a,a,b,c)};_.setAtomMarker=function Py(a,b){hj(this.a,a,b)};_.setAtomMass=function Qy(a,b){ij(this.a,a,b)};_.setAtomParity=function Ry(a,b,c){jj(this.a,a,b,c)};_.setAtomQueryFeature=function Sy(a,b,c){kj(this.a,a,b,c)};_.setAtomRadical=function Ty(a,b){lj(this.a,a,b)};_.setAtomSelection=function Uy(a,b){mj(this.a,a,b)};_.setAtomX=function Vy(a,b){oj(this.a,a,b)};_.setAtomY=function Wy(a,b){pj(this.a,a,b)};_.setAtomZ=function Xy(a,b){qj(this.a,a,b)};_.setAtomicNo=function Yy(a,b){rj(this.a,a,b)};_.setBondAtom=function Zy(a,b,c){sj(this.a,a,b,c)};_.setBondBackgroundHiliting=function $y(a,b){tj(this.a,a,b)};_.setBondCIPParity=function _y(a,b){uj(this.a,a,b)};_.setBondESR=function az(a,b,c){vj(this.a,a,b,c)};_.setBondForegroundHiliting=function bz(a,b){wj(this.a,a,b)};_.setBondParity=function cz(a,b,c){xj(this.a,a,b,c)};_.setBondParityUnknownOrNone=function dz(a){yj(this.a,a)};_.setBondQueryFeature=function ez(a,b,c){zj(this.a,a,b,c)};_.setBondType=function fz(a,b){Aj(this.a,a,b)};_.setChirality=function gz(a){Bj(this.a,a)};_.setFragment=function hz(a){Cj(this.a,a)};_.setHydrogenProtection=function iz(a){Dj(this.a,a)};_.setMaxAtoms=function jz(a){Ej(this.a,a)};_.setMaxBonds=function kz(a){Fj(this.a,a)};_.setName=function lz(a){Gj(this.a,a)};_.setParitiesValid=function mz(a){ol(this.a,a)};_.setStereoBondFromAtomParity=function nz(a){pl(this.a,a)};_.setStereoBondFromBondParity=function oz(a){ql(this.a,a)};_.setStereoBondsFromParity=function pz(){rl(this.a)};_.setToRacemate=function qz(){this.a.J=true};_.setUnknownParitiesToExplicitlyUnknown=function rz(){zo(this.a)};_.shareSameFragment=function sz(a,b){return Kk(this.a,a,b)!=-1};_.stripIsotopInfo=function tz(){return Jj(this.a)};_.stripSmallFragments=function uz(){return sl(this.a,false)};_.stripStereoInformation=function vz(){Kj(this.a)};_.supportsImplicitHydrogen=function wz(a){return tl(this.a,a)};_.toMolfile=function xz(){var a;a=new Wl(this.a);return a.b.a};_.toSVG=function yz(a,b,c,d){if(!$doc.createElement){throw new Error("Molecule#toSVG cannot be used outside of a browser's Window environment")}return this.kb(a,b,c,d)};_.toSmiles=function zz(){return Sn(KA(Zu),this.a)};_.translateCoords=function Az(a,b){Mj(this.a,a,b)};_.validate=function Bz(){Ao(this.a)};_.zoomAndRotate=function Cz(a,b,c){Oj(this.a,a,b,c)};_.zoomAndRotateInit=function Dz(a,b){Pj(this.a,a,b)};var Ur=CU,Vr=CU,Wr,Xr=zS,Yr=yS,Zr=AU,$r=0,_r=3,as=1,bs=2,cs=0,ds=64,es=384,fs=448,gs=192,hs=256,is=320,js=128,ks,ls=1,ms=2,ns=4,os=0,ps=3,qs=1,rs=6,ss=2,ts=1,us=2,vs=xR,ws=3,xs=25,ys=FR,zs=vR,As=4,Bs=7,Cs=TR,Ds=cR,Es=vS,Fs=5,Gs=17,Hs=BR,Is=uR,Js=29,Ks=128,Ls=_R,Ms=dR,Ns=256,Os=QR,Ps=32768,Qs=512,Rs=_Q,Ss=eR,Ts=16,Us=wR,Vs=1048576,Ws=32,Xs=CR,Ys=64,Zs=4,$s=8,_s=jS,at=33554432,bt=kS,ct=3,dt=14,et=AR,ft=ER,gt=3,ht=22,it=120,jt=4,kt=3,lt=vS,mt=48,nt=32,ot=0,pt=16,qt=4,rt=48,st=1,tt=0,ut=3,vt=2,wt=1,xt=0,yt=3,zt=2,At=DU,Bt=PR,Ct=2,Dt=18,Et=QR,Ft=15,Gt=4,Ht=0,It=16320,Jt=8,Kt=960,Lt=4,Mt=6,Nt=6,Ot=15360,Pt=4,Qt=10,Rt=8,St=2,Tt=_R,Ut=786480,Vt=20,Wt=_Q,Xt=16,Yt=32,Zt=AR,$t=3,_t=14,au=48,bu=2,cu=4,du=786495,eu=1,fu=4,gu=26,hu=128,iu=64,ju=2,ku=9,lu=127,mu=32,nu=1,ou=4,pu=17,qu=458752,ru=DR,su=fR,tu=QR,uu=_R,vu=eR,wu=196608,xu=0,yu=327680,zu=6,Au=5,Bu=32,Cu=0,Du=1,Eu=2,Fu=8,Gu=128,Hu=1,Iu=4,Ju=2,Ku=32,Lu=64,Mu=16,Nu=252,Ou=15,Pu=1,Qu=0,Ru=7,Su=3,Tu=47,Uu=79,Vu=31,Wu=190,Xu=16,Yu,Zu;var QE=KI(39);nH(174,1,{},Ez);_.getField=function Fz(a){var b,c;c=Cq(this.a);for(b=0;b<c.length;b++){if(gK(c[b],a)){return Bq(this.a,b)}}return null};_.getFieldData=function Gz(a){return Bq(this.a,a)};_.getFieldNames=function Hz(a){return Dq(this.a,a)};_.getMolecule=function Iz(){return new bv(Eq(this.a))};_.getNextFieldData=function Jz(){var a;return a=this.a.a.a,a};_.getNextMolFile=function Kz(){var a;return a=this.a.f.a,a};_.next=function Lz(){return yq(this.a)};var RE=KI(174);nH(176,1,{},Mz);_.isFragmentInMolecule=function Nz(){return _m(this.a)};_.setFragment=function Oz(a){en(this.a,a.a)};_.setMol=function Pz(a,b){fn(this.a,b.a);en(this.a,a.a)};_.setMolecule=function Qz(a){fn(this.a,a.a)};var TE=KI(176);nH(177,1,{},Rz);_.createIndex=function Tz(a){return sn(this.a,a.a)};_.isFragmentInMolecule=function Zz(){return un(this.a)};_.setFragment=function $z(a,b){wn(this.a,a.a,b)};_.setMolecule=function _z(a,b){xn(this.a,a.a,b)};var SE=KI(177);nH(178,1,{},lA);_.assessRisk=function mA(a,b){return Gr(a.a,(MA(jA),b))};_.getDetail=function nA(a,b){return PA(Hr(a.a,b))};var aA=3,bA=2,cA,dA=1,eA=0,fA=2,gA=0,hA=3,iA=1,jA;var UE=KI(178);nH(179,1,{},oA);var VE=KI(179);nH(126,128,{},qA);oH(_,{absoluteWeight:{'get':function rA(){return Ql(this)}}});oH(_,{formula:{'get':function sA(){return Rl(this)}}});oH(_,{relativeWeight:{'get':function tA(){return Sl(this)}}});var WE=KI(126);nH(127,129,{},uA);oH(_,{acceptorCount:{'get':function vA(){return rm(this)}}});oH(_,{donorCount:{'get':function wA(){return sm(this)}}});oH(_,{logP:{'get':function xA(){return tm(this)}}});oH(_,{logPString:{'get':function yA(){return PA(Lq((new Mq,this.a)))}}});oH(_,{logS:{'get':function zA(){return lr((kr(),this.a))}}});oH(_,{logSString:{'get':function AA(){return PA(mr((kr(),this.a)))}}});oH(_,{polarSurfaceArea:{'get':function BA(){return dr((br(),this.a))}}});oH(_,{polarSurfaceAreaString:{'get':function CA(){return PA(er((br(),this.a)))}}});oH(_,{rotatableBondCount:{'get':function DA(){return Nk(this.a)}}});oH(_,{stereoCenterCount:{'get':function EA(){return wo(this.a)}}});var XE=KI(127);nH(84,1,{},NA);_.a=null;_.b=null;_.c=null;_.d=null;_.e=null;_.f=null;_.g=null;_.i=null;var FA=null;var ZE=KI(84);nH(132,1,{},OA);var YE=KI(132);var TA;nH(74,1,{4:1},ZA);_.eb=function $A(a,b){return YA(a,b)};_.ab=function _A(a){return this===a};var $E=KI(74);nH(120,1,{},cB);var _E=KI(120);nH(146,62,bR);var dF=KI(146);nH(78,146,{78:1,4:1,13:1,15:1},wB);_.mb=function xB(){vB(this);return this.c};_.ob=function yB(){return ED(this.b)===ED(tB)?null:this.b};var tB;var aF=KI(78);nH(169,1,{});var cF=KI(169);var AB=0,BB=0,CB=-1;nH(163,169,{},QB);var MB;var eF=KI(163);nH(165,1,{},kC);var hC;var jF=KI(165);nH(121,1,{},BC);_.b=0;_.c=false;_.d=0;_.e=0;_.f=3;_.g=false;_.i=3;_.j=40;_.k=0;_.n=0;_.o=1;_.p=1;_.q='-';_.r='';_.t='';_.u='';_.v=false;var kF=KI(121);nH(167,1,{},DC);var lF=KI(167);var OC;var oD,pD,qD,rD;nH(22,1,{},DH,EH,FH);_.a=0;_.b=null;_.c=0;var wH,xH,yH,zH;var mF=KI(22);nH(119,1,{},KH);_.b=0;var IH=null;var nF=KI(119);nH(107,1,{107:1});_.ab=function LH(a){var b;if(this===a)return true;if(yD(a,40)){b=a;return this.a==b.a&&this.b==b.b}return this===a};_.cb=function MH(){var a;a=this.a+this.b;return FD(a)*37};var pF=KI(107);nH(40,107,{107:1,40:1,4:1},NH,OH);_.a=0;_.b=0;var oF=KI(40);nH(191,1,{});var sF=KI(191);nH(108,191,{108:1});_.ab=function TH(a){var b;if(a===this){return true}if(yD(a,18)){b=a;return this.c==b.c&&this.d==b.d&&this.b==b.b&&this.a==b.a}return false};_.cb=function UH(){var a;a=eJ(this.c);a=RG(a,ZG(eJ(this.d),37));a=RG(a,ZG(eJ(this.b),43));a=RG(a,ZG(eJ(this.a),47));return eH(a)^eH(bH(a,32))};var rF=KI(108);nH(18,108,{108:1,18:1},XH,YH);_.a=0;_.b=0;_.c=0;_.d=0;var qF=KI(18);nH(192,1,{});var xF=KI(192);nH(56,192,{},aI);_.a=0;var tF=KI(56);nH(171,1,{});var vF=KI(171);nH(170,171,{});var uF=KI(170);nH(123,170,{},bI);var wF=KI(123);nH(55,192,{},dI);_.a=0;var yF=KI(55);nH(71,1,{98:1});_.db=function jI(){return this.a};var zF=KI(71);nH(157,29,bR,kI);var AF=KI(157);nH(46,29,bR,lI,mI);var JF=KI(46);nH(122,46,bR,nI,oI);var BF=KI(122);var fJ,gJ;nH(54,1,{4:1,31:1,54:1});_.fb=function jJ(a){return this.b-a.b};_.compareTo=function iJ(a){return this.b-a.b};_.equals=function kJ(a){return this===a};_.ab=function(a){return this.equals(a)};_.hashCode=function lJ(){return EQ(this)};_.cb=function(){return this.hashCode()};_.name=function mJ(){return this.a!=null?this.a:''+this.b};_.ordinal=function nJ(){return this.b};_.toString=function oJ(){return this.a!=null?this.a:''+this.b};_.db=function(){return this.toString()};_.b=0;var FF=KI(54);nH(21,29,bR,qJ,rJ);var HF=KI(21);nH(147,29,bR,sJ);var IF=KI(147);var CJ;nH(45,77,{4:1,31:1,45:1,77:1},FJ);_.fb=function HJ(a){return GJ(this.a,a.a)};_.ab=function IJ(a){return yD(a,45)&&VG(a.a,this.a)};_.cb=function JJ(){return eH(this.a)};_.db=function LJ(){return ''+fH(this.a)};_.a=0;var MF=KI(45);var NJ;nH(164,29,bR,TJ);var NF=KI(164);nH(66,21,bR,YJ);var PF=KI(66);nH(44,1,{4:1,44:1},ZJ);_.ab=function $J(a){var b;if(yD(a,44)){b=a;return this.c==b.c&&nO(this.d,b.d)&&nO(this.a,b.a)&&nO(this.b,b.b)}return false};_.cb=function _J(){return XN(MC(FC(RF,1),OR,1,5,[BJ(this.c),this.a,this.d,this.b]))};_.db=function aK(){return this.a+'.'+this.d+'('+(this.b!=null?this.b:'Unknown Source')+(this.c>=0?':'+this.c:'')+')'};_.c=0;var TF=KI(44);nH(99,71,{98:1},vK);var UF=KI(99);nH(38,71,{98:1},CK,DK,EK);var VF=KI(38);nH(148,46,bR,FK);var WF=KI(148);nH(217,1,{});var GK;nH(51,29,bR,JK,KK);var ZF=KI(51);nH(52,1,LU);_.fb=function LK(a){return dK(this.a,a.a)};_.ab=function MK(a){var b;if(a===this){return true}if(!yD(a,52)){return false}b=a;return gK(this.a,b.a)};_.cb=function NK(){return KQ(this.a)};_.db=function OK(){return this.a};var $F=KI(52);nH(196,1,{});var aG=KI(196);nH(69,196,{},RK,SK);var _F=KI(69);nH(35,1,MU);_.add=function XK(a){throw QG(new KK('Add not supported on this collection'))};_.addAll=function YK(a){var b,c,d;uQ(a);b=false;for(d=a.yb();d.Bb();){c=d.Cb();b=b|this.add(c)}return b};_.clear=function ZK(){var a;for(a=this.yb();a.Bb();){a.Cb();a.Db()}};_.contains=function $K(a){return TK(this,a,false)};_.containsAll=function _K(a){return UK(this,a)};_.isEmpty=function aL(){return this.size()==0};_.remove=function bL(a){return TK(this,a,true)};_.removeAll=function cL(a){return VK(this,a)};_.retainAll=function dL(a){var b,c,d;uQ(a);b=false;for(c=this.yb();c.Bb();){d=c.Cb();if(!a.contains(d)){c.Db();b=true}}return b};_.toArray=function eL(){return this.zb(JC(RF,OR,1,this.size(),5,1))};_.zb=function fL(a){var b,c,d,e;e=this.size();a.length<e&&(a=(d=new Array(e),NC(d,a)));c=this.yb();for(b=0;b<e;++b){a[b]=c.Cb()}a.length>e&&(a[e]=null);return a};_.db=function gL(){return WK(this)};var bG=KI(35);nH(76,35,NU);_.addAtIndex=function hL(a,b){throw QG(new KK('Add not supported on this list'))};_.add=function iL(a){this.addAtIndex(this.size(),a);return true};_.addAllAtIndex=function jL(a,b){var c,d,e;uQ(b);c=false;for(e=b.yb();e.Bb();){d=e.Cb();this.addAtIndex(a++,d);c=true}return c};_.clear=function kL(){this.Ab(0,this.size())};_.ab=function lL(a){var b,c,d,e,f;if(a===this){return true}if(!yD(a,96)){return false}f=a;if(this.size()!=f.size()){return false}e=f.yb();for(c=this.yb();c.Bb();){b=c.Cb();d=e.Cb();if(!(ED(b)===ED(d)||b!=null&&rc(b,d))){return false}}return true};_.cb=function mL(){return gO(this)};_.indexOf=function nL(a){var b,c;for(b=0,c=this.size();b<c;++b){if(nO(a,this.getAtIndex(b))){return b}}return -1};_.yb=function oL(){return new xL(this)};_.lastIndexOf=function pL(a){var b;for(b=this.size()-1;b>-1;--b){if(nO(a,this.getAtIndex(b))){return b}}return -1};_.removeAtIndex=function qL(a){throw QG(new KK('Remove not supported on this list'))};_.Ab=function rL(a,b){var c,d;d=new BL(this,a);for(c=a;c<b;++c){sQ(d.a<d.c.size());d.c.getAtIndex(d.b=d.a++);wL(d)}};_.setAtIndex=function sL(a,b){throw QG(new KK('Set not supported on this list'))};_.subList=function tL(a,b){return new DL(this,a,b)};var fG=KI(76);nH(111,1,{},xL);_.Bb=function yL(){return uL(this)};_.Cb=function zL(){return vL(this)};_.Db=function AL(){wL(this)};_.a=0;_.b=-1;var cG=KI(111);nH(112,111,{},BL);_.Db=function CL(){wL(this)};var dG=KI(112);nH(113,76,NU,DL);_.addAtIndex=function EL(a,b){wQ(a,this.b);this.c.addAtIndex(this.a+a,b);++this.b};_.getAtIndex=function FL(a){tQ(a,this.b);return this.c.getAtIndex(this.a+a)};_.removeAtIndex=function GL(a){var b;tQ(a,this.b);b=this.c.removeAtIndex(this.a+a);--this.b;return b};_.setAtIndex=function HL(a,b){tQ(a,this.b);return this.c.setAtIndex(this.a+a,b)};_.size=function IL(){return this.b};_.a=0;_.b=0;var eG=KI(113);nH(193,1,{168:1});_.getOrDefault=function SL(a,b){var c;return c=this.get(a),c==null&&!this.containsKey(a)?b:c};_.putIfAbsent=function YL(a,b){var c;return c=this.get(a),c!=null?c:this.put(a,b)};_.replace=function $L(a,b){return this.containsKey(a)?this.put(a,b):null};_.clear=function ML(){this.Eb().clear()};_.containsKey=function NL(a){return !!KL(this,a,false)};_.containsValue=function OL(a){return JL(this,a)};_.ab=function PL(a){var b,c,d;if(a===this){return true}if(!yD(a,47)){return false}d=a;if(this.c!=d.c){return false}for(c=new XO((new aP(d)).b);uL(c.a);){b=c.b=vL(c.a);if(!GM(this,b)){return false}}return true};_.get=function QL(a){return RL(KL(this,a,false))};_.cb=function TL(){return fO(this.Eb())};_.isEmpty=function UL(){return this.c==0};_.keySet=function VL(){return new fM(this)};_.put=function WL(a,b){throw QG(new KK('Put not supported on this map'))};_.putAll=function XL(a){var b,c;uQ(a);for(c=new XO(a.Eb().b);uL(c.a);){b=c.b=vL(c.a);HO(this,b.Fb(),b.Gb())}};_.remove=function ZL(a){return RL(KL(this,a,true))};_.size=function _L(){return this.Eb().b.c};_.db=function aM(){var a,b,c;c=new zO('{','}');for(b=new XO(this.Eb().b);uL(b.a);){a=b.b=vL(b.a);yO(c,LL(this,a.Fb())+'='+LL(this,a.Gb()))}return !c.a?c.c:c.e.length==0?c.a.a:c.a.a+(''+c.e)};_.values=function bM(){return new pM(this)};var mG=KI(193);nH(195,35,OU);_.ab=function cM(a){var b;if(a===this){return true}if(!yD(a,70)){return false}b=a;if(b.size()!=this.size()){return false}return UK(this,b)};_.cb=function dM(){return fO(this)};_.removeAll=function eM(a){var b,c,d,e;uQ(a);e=this.size();if(e<a.size()){for(b=this.yb();b.Bb();){c=b.Cb();a.contains(c)&&b.Db()}}else{for(d=a.yb();d.Bb();){c=d.Cb();this.remove(c)}}return e!=this.size()};var rG=KI(195);nH(154,195,OU,fM);_.clear=function gM(){BO(this.a)};_.contains=function hM(a){return HM(this.a,a)};_.yb=function iM(){var a;a=new XO((new aP(this.a)).b);return new lM(a)};_.remove=function jM(a){if(HM(this.a,a)){IO(this.a,a);return true}return false};_.size=function kM(){return this.a.c};var hG=KI(154);nH(155,1,{},lM);_.Bb=function mM(){return uL(this.a.a)};_.Cb=function nM(){var a;a=VO(this.a);return a.Fb()};_.Db=function oM(){WO(this.a)};var gG=KI(155);nH(116,35,MU,pM);_.clear=function qM(){BO(this.a)};_.contains=function rM(a){return JL(this.a,a)};_.yb=function sM(){var a;return a=new XO((new aP(this.a)).b),new vM(a)};_.size=function uM(){return this.a.c};var jG=KI(116);nH(117,1,{},vM);_.Bb=function wM(){return uL(this.a.a)};_.Cb=function xM(){var a;return a=VO(this.a),a.Gb()};_.Db=function yM(){WO(this.a)};var iG=KI(117);nH(79,1,{79:1,81:1});_.ab=function AM(a){var b;if(!yD(a,81)){return false}b=a;return nO(this.c,b.Fb())&&nO(this.d,b.Gb())};_.Fb=function BM(){return this.c};_.Gb=function CM(){return this.d};_.cb=function DM(){return oO(this.c)^oO(this.d)};_.db=function EM(){return this.c+'='+this.d};var kG=KI(79);nH(80,79,{79:1,80:1,81:1},FM);var lG=KI(80);nH(194,193,{168:1});_.containsKey=function JM(a){return HM(this,a)};_.Eb=function KM(){return new NM(this)};_.get=function LM(a){return IM(this,a)};_.keySet=function MM(){return new SM(this)};var qG=KI(194);nH(115,195,OU,NM);_.contains=function OM(a){return yD(a,81)&&GM(this.b,a)};_.yb=function PM(){return new XO(this.b)};_.remove=function QM(a){var b;if(yD(a,81)){b=a;return JO(this.b,b)}return false};_.size=function RM(){return this.b.c};var nG=KI(115);nH(93,195,OU,SM);_.clear=function TM(){BO(this.a)};_.contains=function UM(a){return HM(this.a,a)};_.yb=function VM(){var a;return a=new XO((new aP(this.a)).b),new YM(a)};_.remove=function WM(a){if(HM(this.a,a)){IO(this.a,a);return true}return false};_.size=function XM(){return this.a.c};var pG=KI(93);nH(94,1,{},YM);_.Bb=function ZM(){return uL(this.a.a)};_.Cb=function $M(){var a;return a=VO(this.a),a.Fb()};_.Db=function _M(){WO(this.a)};var oG=KI(94);nH(16,76,{4:1,5:1,37:1,35:1,76:1,16:1,42:1,96:1,198:1},pN);_.addAtIndex=function qN(a,b){aN(this,a,b)};_.add=function rN(a){return bN(this,a)};_.addAllAtIndex=function sN(a,b){return cN(this,a,b)};_.addAll=function tN(a){return dN(this,a)};_.clear=function uN(){this.a=JC(RF,OR,1,0,5,1)};_.contains=function vN(a){return fN(this,a,0)!=-1};_.getAtIndex=function wN(a){return eN(this,a)};_.indexOf=function xN(a){return fN(this,a,0)};_.isEmpty=function yN(){return this.a.length==0};_.yb=function zN(){return new JN(this)};_.lastIndexOf=function AN(a){return gN(this,a)};_.removeAtIndex=function BN(a){return iN(this,a)};_.remove=function CN(a){return jN(this,a)};_.Ab=function DN(a,b){kN(this,a,b)};_.setAtIndex=function EN(a,b){return lN(this,a,b)};_.size=function FN(){return this.a.length};_.toArray=function GN(){return nN(this)};_.zb=function HN(a){return oN(this,a)};var tG=KI(16);nH(23,1,{},JN);_.Bb=function KN(){return this.a<this.c.a.length};_.Cb=function LN(){return IN(this)};_.Db=function MN(){yQ(this.b!=-1);iN(this.c,this.a=this.b);this.b=-1};_.a=0;_.b=-1;var sG=KI(23);var hO;nH(162,1,{4:1},jO);_.eb=function kO(a,b){return uQ(a),tI(a,(uQ(b),b))};_.ab=function lO(a){return this===a};var uG=KI(162);nH(166,29,bR,mO);var vG=KI(166);nH(86,1,{},wO,xO);_.a=0;_.b=0;var pO,qO,rO=0;var wG=KI(86);nH(104,1,{},zO);_.db=function AO(){return !this.a?this.c:this.e.length==0?this.a.a:this.a.a+(''+this.e)};var xG=KI(104);nH(47,194,{4:1,168:1,47:1},OO,PO);_.clear=function QO(){BO(this)};_.Eb=function RO(){return new aP(this)};_.put=function SO(a,b){return HO(this,a,b)};_.remove=function TO(a){return IO(this,a)};_.size=function UO(){return this.c};_.c=0;var GG=KI(47);nH(33,1,{},XO);_.Cb=function $O(){return VO(this)};_.Bb=function ZO(){return uL(this.a)};_.Db=function _O(){WO(this)};var yG=KI(33);nH(41,115,OU,aP);_.clear=function bP(){BO(this.a)};var zG=KI(41);nH(61,80,{79:1,80:1,81:1,61:1},cP);_.b=false;var AG=KI(61);nH(92,1,{},dP);_.db=function eP(){return 'State: mv='+this.c+' value='+this.d+' done='+this.a+' found='+this.b};_.a=false;_.b=false;_.c=false;var BG=KI(92);nH(43,54,RU,kP);_.Hb=function lP(){return false};_.Ib=function mP(){return false};var fP,gP,hP,iP;var FG=LI(43,nP);nH(151,43,RU,oP);_.Ib=function pP(){return true};var CG=LI(151,null);nH(152,43,RU,qP);_.Hb=function rP(){return true};_.Ib=function sP(){return true};var DG=LI(152,null);nH(153,43,RU,tP);_.Hb=function uP(){return true};var EG=LI(153,null);nH(75,195,{4:1,37:1,35:1,42:1,70:1},xP);_.add=function yP(a){return vP(this,a)};_.clear=function zP(){BO(this.a)};_.contains=function AP(a){return wP(this,a)};_.yb=function BP(){var a;return a=new XO((new aP((new SM(this.a)).a)).b),new YM(a)};_.remove=function CP(a){return IO(this.a,a)!=null};_.size=function DP(){return this.a.c};var HG=KI(75);nH(156,76,{4:1,5:1,37:1,35:1,76:1,42:1,96:1,198:1},GP);_.addAtIndex=function HP(a,b){LP(a,this.a.a.length+1);aN(this.a,a,b)};_.add=function IP(a){return EP(this,a)};_.addAllAtIndex=function JP(a,b){LP(a,this.a.a.length+1);return cN(this.a,a,b)};_.addAll=function KP(a){return dN(this.a,a)};_.clear=function MP(){this.a.a=JC(RF,OR,1,0,5,1)};_.contains=function NP(a){return fN(this.a,a,0)!=-1};
	_.containsAll=function OP(a){return UK(this.a,a)};_.getAtIndex=function PP(a){LP(a,this.a.a.length);return eN(this.a,a)};_.indexOf=function QP(a){return fN(this.a,a,0)};_.isEmpty=function RP(){return this.a.a.length==0};_.yb=function SP(){return new JN(this.a)};_.lastIndexOf=function TP(a){return gN(this.a,a)};_.removeAtIndex=function UP(a){LP(a,this.a.a.length);return iN(this.a,a)};_.removeAll=function VP(a){return VK(this.a,a)};_.Ab=function WP(a,b){kN(this.a,a,b)};_.setAtIndex=function XP(a,b){LP(a,this.a.a.length);return lN(this.a,a,b)};_.size=function YP(){return this.a.a.length};_.subList=function ZP(a,b){return new DL(this.a,a,b)};_.toArray=function $P(){return nN(this.a)};_.zb=function _P(a){return FP(this,a)};_.db=function aQ(){return WK(this.a)};var IG=KI(156);nH(105,52,LU);var LG=KI(105);nH(106,105,LU,kQ);var JG=KI(106);nH(139,105,LU,oQ);var KG=KI(139);var HD=MI('C');var MG=MI('S');var KD=MI('I');var NG=MI('Z');var ID=MI('D');var JD=MI('F');var GD=MI('B');var LD=MI('J');_=rH('OCL.DrugScoreCalculator',Lr);_.calculate=Mr;Pr();_=rH('OCL.DruglikenessPredictor',Qr);_.DRUGLIKENESS_UNKNOWN=Nr;$u();_=rH('OCL.Molecule',bv);_.FISCHER_PROJECTION_LIMIT=Ur;_.STEREO_ANGLE_LIMIT=Vr;_.VALIDATION_ERRORS_STEREO=Wr;_.VALIDATION_ERROR_AMBIGUOUS_CONFIGURATION=Xr;_.VALIDATION_ERROR_ESR_CENTER_UNKNOWN=Yr;_.VALIDATION_ERROR_OVER_UNDER_SPECIFIED=Zr;_.cAtomCIPParityNone=$r;_.cAtomCIPParityProblem=_r;_.cAtomCIPParityRorM=as;_.cAtomCIPParitySorP=bs;_.cAtomColorBlack=cs;_.cAtomColorBlue=ds;_.cAtomColorDarkGreen=es;_.cAtomColorDarkRed=fs;_.cAtomColorGreen=gs;_.cAtomColorMagenta=hs;_.cAtomColorOrange=is;_.cAtomColorRed=js;_.cAtomLabel=ks;_.cAtomParity1=ls;_.cAtomParity2=ms;_.cAtomParityIsPseudo=ns;_.cAtomParityNone=os;_.cAtomParityUnknown=ps;_.cAtomQFAny=qs;_.cAtomQFAromState=rs;_.cAtomQFAromStateBits=ss;_.cAtomQFAromStateShift=ts;_.cAtomQFAromatic=us;_.cAtomQFCharge=vs;_.cAtomQFChargeBits=ws;_.cAtomQFChargeShift=xs;_.cAtomQFFlatNitrogen=ys;_.cAtomQFHydrogen=zs;_.cAtomQFHydrogenBits=As;_.cAtomQFHydrogenShift=Bs;_.cAtomQFMatchStereo=Cs;_.cAtomQFMoreNeighbours=Ds;_.cAtomQFNarrowing=Es;_.cAtomQFNeighbourBits=Fs;_.cAtomQFNeighbourShift=Gs;_.cAtomQFNeighbours=Hs;_.cAtomQFNoMoreNeighbours=Is;_.cAtomQFNoOfBits=Js;_.cAtomQFNot0Hydrogen=Ks;_.cAtomQFNot0Neighbours=Ls;_.cAtomQFNot0PiElectrons=Ms;_.cAtomQFNot1Hydrogen=Ns;_.cAtomQFNot1Neighbour=Os;_.cAtomQFNot1PiElectron=Ps;_.cAtomQFNot2Hydrogen=Qs;_.cAtomQFNot2Neighbours=Rs;_.cAtomQFNot2PiElectrons=Ss;_.cAtomQFNot2RingBonds=Ts;_.cAtomQFNot3Hydrogen=Us;_.cAtomQFNot3Neighbours=Vs;_.cAtomQFNot3RingBonds=Ws;_.cAtomQFNot4Neighbours=Xs;_.cAtomQFNot4RingBonds=Ys;_.cAtomQFNotAromatic=Zs;_.cAtomQFNotChain=$s;_.cAtomQFNotCharge0=_s;_.cAtomQFNotChargeNeg=at;_.cAtomQFNotChargePos=bt;_.cAtomQFPiElectronBits=ct;_.cAtomQFPiElectronShift=dt;_.cAtomQFPiElectrons=et;_.cAtomQFRingSize=ft;_.cAtomQFRingSizeBits=gt;_.cAtomQFRingSizeShift=ht;_.cAtomQFRingState=it;_.cAtomQFRingStateBits=jt;_.cAtomQFRingStateShift=kt;_.cAtomQFSimpleFeatures=lt;_.cAtomRadicalState=mt;_.cAtomRadicalStateD=nt;_.cAtomRadicalStateNone=ot;_.cAtomRadicalStateS=pt;_.cAtomRadicalStateShift=qt;_.cAtomRadicalStateT=rt;_.cBondCIPParityEorP=st;_.cBondCIPParityNone=tt;_.cBondCIPParityProblem=ut;_.cBondCIPParityZorM=vt;_.cBondParityEor1=wt;_.cBondParityNone=xt;_.cBondParityUnknown=yt;_.cBondParityZor2=zt;_.cBondQFAllFeatures=At;_.cBondQFAromState=Bt;_.cBondQFAromStateBits=Ct;_.cBondQFAromStateShift=Dt;_.cBondQFAromatic=Et;_.cBondQFBondTypes=Ft;_.cBondQFBondTypesBits=Gt;_.cBondQFBondTypesShift=Ht;_.cBondQFBridge=It;_.cBondQFBridgeBits=Jt;_.cBondQFBridgeMin=Kt;_.cBondQFBridgeMinBits=Lt;_.cBondQFBridgeMinShift=Mt;_.cBondQFBridgeShift=Nt;_.cBondQFBridgeSpan=Ot;_.cBondQFBridgeSpanBits=Pt;_.cBondQFBridgeSpanShift=Qt;_.cBondQFDelocalized=Rt;_.cBondQFDouble=St;_.cBondQFMatchStereo=Tt;_.cBondQFNarrowing=Ut;_.cBondQFNoOfBits=Vt;_.cBondQFNotAromatic=Wt;_.cBondQFNotRing=Xt;_.cBondQFRing=Yt;_.cBondQFRingSize=Zt;_.cBondQFRingSizeBits=$t;_.cBondQFRingSizeShift=_t;_.cBondQFRingState=au;_.cBondQFRingStateBits=bu;_.cBondQFRingStateShift=cu;_.cBondQFSimpleFeatures=du;_.cBondQFSingle=eu;_.cBondQFTriple=fu;_.cBondTypeCross=gu;_.cBondTypeDeleted=hu;_.cBondTypeDelocalized=iu;_.cBondTypeDouble=ju;_.cBondTypeDown=ku;_.cBondTypeIncreaseOrder=lu;_.cBondTypeMetalLigand=mu;_.cBondTypeSingle=nu;_.cBondTypeTriple=ou;_.cBondTypeUp=pu;_.cChiralityDiastereomers=qu;_.cChiralityEpimers=ru;_.cChiralityIsomerCountMask=su;_.cChiralityKnownEnantiomer=tu;_.cChiralityMeso=uu;_.cChiralityNotChiral=vu;_.cChiralityRacemic=wu;_.cChiralityUnknown=xu;_.cChiralityUnknownEnantiomer=yu;_.cDefaultAtomValence=zu;_.cESRGroupBits=Au;_.cESRMaxGroups=Bu;_.cESRTypeAbs=Cu;_.cESRTypeAnd=Du;_.cESRTypeOr=Eu;_.cHelperBitCIP=Fu;_.cHelperBitIncludeNitrogenParities=Gu;_.cHelperBitNeighbours=Hu;_.cHelperBitParities=Iu;_.cHelperBitRings=Ju;_.cHelperBitSymmetryDiastereotopic=Ku;_.cHelperBitSymmetryEnantiotopic=Lu;_.cHelperBitSymmetrySimple=Mu;_.cHelperBitsStereo=Nu;_.cHelperCIP=Ou;_.cHelperNeighbours=Pu;_.cHelperNone=Qu;_.cHelperParities=Ru;_.cHelperRings=Su;_.cHelperSymmetryDiastereotopic=Tu;_.cHelperSymmetryEnantiotopic=Uu;_.cHelperSymmetrySimple=Vu;_.cMaxAtomicNo=Wu;_.cMaxConnAtoms=Xu;_.cRoundedMass=Yu;_.fromIDCode=Pv;_.fromMolfile=Qv;_.fromSmiles=Rv;_.getAngle=Yv;_.getAngleDif=Zv;_.getAtomicNoFromLabel=xw;_.isAtomicNoElectronegative=Rx;_.isAtomicNoElectropositive=Sx;_=rH('OCL.SDFileParser',Ez);_=rH('OCL.SSSearcher',Mz);_=rH('OCL.SSSearcherWithIndex',Rz);_.bitCount=Sz;_.getHexStringFromIndex=Uz;_.getIndexFromHexString=Vz;_.getKeyIDCode=Wz;_.getSimilarityAngleCosine=Xz;_.getSimilarityTanimoto=Yz;kA();_=rH('OCL.ToxicityPredictor',lA);_.RISK_HIGH=aA;_.RISK_LOW=bA;_.RISK_NAMES=cA;_.RISK_NO=dA;_.RISK_UNKNOWN=eA;_.TYPE_IRRITANT=fA;_.TYPE_MUTAGENIC=gA;_.TYPE_REPRODUCTIVE_EFFECTIVE=hA;_.TYPE_TUMORIGENIC=iA;_=rH('OCL.Util',oA);_.getHoseCodesFromDiastereotopicID=pA;qI();_=rH('java.lang.Boolean');_.$isInstance=rI;_=rH('java.lang.CharSequence');_.$isInstance=uI;_=rH('java.lang.Comparable');_.$isInstance=ZI;_=rH('java.lang.Double');_.$isInstance=cJ;_=rH('java.lang.Number');_.$isInstance=_I;_=rH('java.lang.String');_.$isInstance=kK;_=rH('java.lang.Throwable');_.of=nB;var MQ=(DB(),GB);var gwtOnLoad=gwtOnLoad=jH;hH(uH);kH('permProps',[[[TU,UU],[VU,'gecko1_8']],[[TU,UU],[VU,'ie10']],[[TU,UU],[VU,'ie8']],[[TU,UU],[VU,'ie9']],[[TU,UU],[VU,'safari']]]);$sendStats('moduleStartup', 'moduleEvalEnd');gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);$sendStats('moduleStartup', 'end');$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);


	        // End GWT code

	        var toReturn = $wnd["OCL"];

	        toReturn.version = '4.6.2';

	        return toReturn;
	    }

	    var isBrowser, globalEnv, document;

	    if (typeof window !== 'undefined') { // usual browser window
	        isBrowser = true;
	        globalEnv = window;
	        document = window.document;
	    } else if (typeof self !== 'undefined') { // Web Worker
	        isBrowser = true;
	        globalEnv = self;
	        document = {};
	    } else if (typeof global !== 'undefined') { // Node.js
	        isBrowser = false;
	        globalEnv = global;
	        document = {};
	    } else { // Other environment (example: CouchDB)
	        isBrowser = false;
	        globalEnv = root;
	        document = {};
	    }

	    var fakeWindow;
	    if (isBrowser && !true) {
	        fakeWindow = globalEnv;
	    } else {
	        fakeWindow = {};
	        fakeWindow.setTimeout = globalEnv.setTimeout ? globalEnv.setTimeout.bind(globalEnv) : noop;
	        fakeWindow.clearTimeout = globalEnv.clearTimeout ? globalEnv.clearTimeout.bind(globalEnv) : noop;
	        fakeWindow.setInterval = globalEnv.setInterval ? globalEnv.setInterval.bind(globalEnv) : noop;
	        fakeWindow.clearInterval = globalEnv.clearInterval ? globalEnv.clearInterval.bind(globalEnv) : noop;
	        // required since GWT 2.8.0
	        fakeWindow.Error = globalEnv.Error;
	        fakeWindow.Math = globalEnv.Math;
	        fakeWindow.RegExp = globalEnv.RegExp;
	        fakeWindow.TypeError = globalEnv.TypeError;
	    }

	    if (!fakeWindow.document) {
	        fakeWindow.document = document;
	    }

	    var exportedApi = getExports(fakeWindow);

	    if (true) { // NodeJS
	        fillExports(exportedApi, exports);
	    } else if (typeof define === 'function' && define.amd) { // AMD
	        define(function () {
	            var exportsObj = {};
	            fillExports(exportedApi, exportsObj);
	            return exportsObj;
	        });
	    } else { // Global
	        var path = ["OCL"];
	        var l = path.length - 1;
	        var obj = globalEnv;
	        for (var i = 0; i < l; i++) {
	            obj = obj[path[i]] || (obj[path[i]] = {});
	        }
	        obj[path[l]] = {};
	        fillExports(exportedApi, obj[path[l]]);
	    }

	    function fillExports(obj, exports) {
	        var keys = Object.keys(obj);
	        for (var i = 0; i < keys.length; i++) {
	            exports[keys[i]] = obj[keys[i]];
	        }
	    }

	    function noop() {}

	})(this);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate) {'use strict';

	var OCL = __webpack_require__(4);
	var Molecule = OCL.Molecule;
	var parseSDF = __webpack_require__(7);
	var Papa = __webpack_require__(8);
	var extend = __webpack_require__(9);

	var moleculeCreator = __webpack_require__(10);

	var defaultDBOptions = {
	    length: 0,
	    computeProperties: false
	};

	function DB(options) {
	    options = extend({}, defaultDBOptions, options);
	    this.data = new Array(options.length);
	    this.molecules = new Array(options.length);
	    this.statistics = null;
	    this.length = 0;
	    this.computeProperties = !!options.computeProperties;
	    this.searcher = null;
	}

	var defaultSDFOptions = {
	    onStep: function (current, total) {}
	};

	DB.parseSDF = function (sdf, options) {
	    if (typeof sdf !== 'string') {
	        throw new TypeError('sdf must be a string');
	    }
	    options = extend({}, defaultSDFOptions, options);
	    return new Promise(function (resolve, reject) {
	        var parsed = parseSDF(sdf);
	        var molecules = parsed.molecules;
	        var db = new DB(options);
	        db.statistics = parsed.statistics;
	        var i = 0, l = molecules.length;
	        parseNext();
	        function parseNext() {
	            if (i === l) {
	                return resolve(db);
	            }
	            try {
	                db.push(Molecule.fromMolfile(molecules[i].molfile.value), molecules[i]);
	            } catch (e) {
	                return reject(e);
	            }
	            options.onStep(++i, l);
	            setImmediate(parseNext);
	        }
	    });
	};

	var defaultCSVOptions = {
	    header: true,
	    dynamicTyping: true,
	    skipEmptyLines: true,
	    onStep: function (current, total) {}
	};

	DB.parseCSV = function (csv, options) {
	    if (typeof csv !== 'string') {
	        throw new TypeError('csv must be a string');
	    }
	    options = extend({}, defaultCSVOptions, options);
	    return new Promise(function (resolve, reject) {
	        var parsed = Papa.parse(csv, options);
	        var fields = parsed.meta.fields;
	        var stats = new Array(fields.length);
	        var firstElement = parsed.data[0];
	        var datatype, datafield;
	        for (var i = 0; i < fields.length; i++) {
	            stats[i] = {
	                label: fields[i],
	                isNumeric: typeof firstElement[fields[i]] === 'number'
	            };
	            var lowerField = fields[i].toLowerCase();
	            if (moleculeCreator.has(lowerField)) {
	                datatype = moleculeCreator.get(lowerField);
	                datafield = fields[i];
	            }
	        }
	        if (!datatype) {
	            throw new Error('this document does not contain any molecule field');
	        }
	        var db = new DB(options);
	        db.statistics = stats;

	        var i = 0, l = parsed.data.length;
	        parseNext();
	        function parseNext() {
	            if (i === l) {
	                return resolve(db);
	            }
	            try {
	                db.push(datatype(parsed.data[i][datafield]), parsed.data[i]);
	            } catch (e) {
	                return reject(e);
	            }
	            options.onStep(++i, l);
	            setImmediate(parseNext);
	        }
	    });
	};

	DB.prototype.push = function (molecule, data) {
	    if (data === undefined) data = {};
	    this.molecules[this.length] = molecule;
	    var molecularFormula = molecule.getMolecularFormula();
	    if (!molecule.index) {
	        molecule.index = molecule.getIndex();
	        molecule.idcode = molecule.getIDCode();
	        molecule.mw = molecularFormula.relativeWeight;
	    }
	    this.data[this.length++] = data;
	    if (this.computeProperties) {
	        var properties = molecule.getProperties();
	        data.properties = {
	            absoluteWeight: molecularFormula.absoluteWeight,
	            relativeWeight: molecule.mw,
	            formula: molecularFormula.formula,
	            acceptorCount: properties.acceptorCount,
	            donorCount: properties.donorCount,
	            logP: properties.logP,
	            logS: properties.logS,
	            polarSurfaceArea: properties.polarSurfaceArea,
	            rotatableBondCount: properties.rotatableBondCount,
	            stereoCenterCount: properties.stereoCenterCount
	        };
	    }
	};

	var defaultSearchOptions = {
	    format: 'oclid',
	    mode: 'substructure',
	    limit: 0
	};

	DB.prototype.search = function (query, options) {
	    options = extend({}, defaultSearchOptions, options);

	    if (typeof query === 'string') {
	        query = moleculeCreator.get(options.format.toLowerCase())(query);
	    } else if (!(query instanceof Molecule)) {
	        throw new TypeError('toSearch must be a Molecule or string');
	    }

	    var result;
	    switch (options.mode.toLowerCase()) {
	        case 'exact':
	            result = this.exactSearch(query, options.limit);
	            break;
	        case 'substructure':
	            result = this.subStructureSearch(query, options.limit);
	            break;
	        case 'similarity':
	            result = this.similaritySearch(query, options.limit);
	            break;
	        default:
	            throw new Error('unknown search mode: ' + options.mode);
	    }
	    return result;
	};

	DB.prototype.exactSearch = function (query, limit) {
	    var queryIdcode = query.getIDCode();
	    var result = new DB();
	    limit = limit || Number.MAX_SAFE_INTEGER;
	    for (var i = 0; i < this.length; i++) {
	        if (this.molecules[i].idcode === queryIdcode) {
	            result.push(this.molecules[i], this.data[i]);
	            if (result.length >= limit) break;
	        }
	    }
	    return result;
	};

	DB.prototype.subStructureSearch = function (query, limit) {
	    var needReset = false;
	    if (!query.isFragment()) {
	        needReset = true;
	        query.setFragment(true);
	    }

	    var queryIndex = query.getIndex();
	    var queryMW = query.getMolecularFormula().relativeWeight;
	    var searcher = this.getSearcher();

	    searcher.setFragment(query, queryIndex);
	    var searchResult = [];
	    for (var i = 0; i < this.length; i++) {
	        searcher.setMolecule(this.molecules[i], this.molecules[i].index);
	        if (searcher.isFragmentInMolecule()) {
	            searchResult.push([this.molecules[i], i]);
	        }
	    }
	    searchResult.sort(function (a, b) {
	        return Math.abs(queryMW - a[0].mw) - Math.abs(queryMW - b[0].mw);
	    });

	    var length = limit || searchResult.length;
	    var result = new DB({length: length});
	    for (var i = 0; i < length; i++) {
	        result.push(this.molecules[searchResult[i][1]], this.data[searchResult[i][1]]);
	    }

	    if (needReset) {
	        query.setFragment(false);
	    }
	    return result;
	};

	DB.prototype.similaritySearch = function (query, limit) {
	    var queryIndex = query.getIndex();
	    var queryMW = query.getMolecularFormula().relativeWeight;
	    var queryIDCode = query.getIDCode();

	    var searchResult = new Array(this.length);
	    var similarity;
	    for (var i = 0; i < this.length; i++) {
	        if (this.molecules[i].idcode === queryIDCode) {
	            similarity = 1e10;
	        } else {
	            similarity = OCL.SSSearcherWithIndex.getSimilarityTanimoto(queryIndex, this.molecules[i].index)
	                * 100000 - Math.abs(queryMW - this.molecules[i].mw) / 1000;
	        }
	        searchResult[i] = [similarity, i];
	    }
	    searchResult.sort(function (a, b) {
	        return b[0] - a[0];
	    });

	    var length = limit || searchResult.length;
	    var result = new DB({length: length});
	    for (var i = 0; i < length; i++) {
	        result.push(this.molecules[searchResult[i][1]], this.data[searchResult[i][1]]);
	    }
	    return result;
	};

	DB.prototype.getSearcher = function () {
	    return this.searcher || (this.searcher = new OCL.SSSearcherWithIndex());
	};

	module.exports = DB;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).setImmediate))

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(3).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).setImmediate, __webpack_require__(6).clearImmediate))

/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';

	// options: an object

	function parse(sdf, options) {
	    // we will find the delimiter in order to be much faster and not use regular expression
	    var header = sdf.substr(0, 1000);
	    var crlf = '\n';
	    if (header.indexOf('\r\n') > -1) {
	        crlf = '\r\n';
	    } else if (header.indexOf('\r') > -1) {
	        crlf = '\r';
	    }

	    var sdfParts = sdf.split(crlf + '$$$$' + crlf);
	    var molecules = [];
	    var labels = {};

	    var start = Date.now();

	    var i = 0, ii = sdfParts.length,
	        sdfPart, parts, molecule, j, jj,
	        lines, from, to, label, k, kk;
	    for (; i < ii; i++) {
	        sdfPart = sdfParts[i];
	        parts = sdfPart.split(crlf + '>');
	        if (parts.length > 0 && parts[0].length > 5) {
	            molecule = {};
	            molecules.push(molecule);
	            molecule.molfile = {type: 'mol2d', value: parts[0] + crlf};
	            jj = parts.length;
	            for (j = 1; j < jj; j++) {
	                lines = parts[j].split(crlf);
	                from = lines[0].indexOf('<');
	                to = lines[0].indexOf('>');
	                label = lines[0].substring(from + 1, to);
	                if (labels[label]) {
	                    labels[label].counter++;
	                } else {
	                    labels[label] = {counter: 1, isNumeric: true};
	                }
	                kk = lines.length - 1;
	                for (k = 1; k < kk; k++) {
	                    if (molecule[label]) {
	                        molecule[label] += crlf + lines[k];
	                    } else {
	                        molecule[label] = lines[k];
	                    }
	                }
	                if (labels[label].isNumeric) {
	                    if (!isFinite(molecule[label])) {
	                        labels[label].isNumeric = false;
	                    }
	                }
	            }
	        }
	    }

	    // all numeric fields should be converted to numbers
	    var numericFields=[];
	    for (var label in labels) {
	        var currentLabel=labels[label];
	        if (currentLabel.isNumeric) {
	            currentLabel.minValue=Number.MAX_VALUE;
	            currentLabel.maxValue=Number.MIN_VALUE;
	            for (var j=0; j < molecules.length; j++) {
	                if (molecules[j][label]) {
	                    var value=parseFloat(molecules[j][label]);
	                    molecules[j][label]=value;
	                    if (value>currentLabel.maxValue) currentLabel.maxValue=value;
	                    if (value<currentLabel.minValue) currentLabel.minValue=value;
	                }
	            }
	        }
	    }

	    // we check that a label is in all the records
	    for (var key in labels) {
	        if (labels[key].counter==molecules.length) {
	            labels[key].always=true;
	        } else {
	            labels[key].always=false;
	        }
	    }

	    var statistics = [];
	    for (var key in labels) {
	        var statistic=labels[key];
	        statistic.label=key;
	        statistics.push(statistic);
	    }

	    return {
	        time: Date.now() - start,
	        molecules: molecules,
	        labels: Object.keys(labels),
	        statistics: statistics
	    };

	}

	module.exports = parse;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
		Papa Parse
		v4.1.2
		https://github.com/mholt/PapaParse
	*/
	(function(global)
	{
		"use strict";

		var IS_WORKER = !global.document && !!global.postMessage,
			IS_PAPA_WORKER = IS_WORKER && /(\?|&)papaworker(=|&|$)/.test(global.location.search),
			LOADED_SYNC = false, AUTO_SCRIPT_PATH;
		var workers = {}, workerIdCounter = 0;

		var Papa = {};

		Papa.parse = CsvToJson;
		Papa.unparse = JsonToCsv;

		Papa.RECORD_SEP = String.fromCharCode(30);
		Papa.UNIT_SEP = String.fromCharCode(31);
		Papa.BYTE_ORDER_MARK = "\ufeff";
		Papa.BAD_DELIMITERS = ["\r", "\n", "\"", Papa.BYTE_ORDER_MARK];
		Papa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;
		Papa.SCRIPT_PATH = null;	// Must be set by your code if you use workers and this lib is loaded asynchronously

		// Configurable chunk sizes for local and remote files, respectively
		Papa.LocalChunkSize = 1024 * 1024 * 10;	// 10 MB
		Papa.RemoteChunkSize = 1024 * 1024 * 5;	// 5 MB
		Papa.DefaultDelimiter = ",";			// Used if not specified and detection fails

		// Exposed for testing and development only
		Papa.Parser = Parser;
		Papa.ParserHandle = ParserHandle;
		Papa.NetworkStreamer = NetworkStreamer;
		Papa.FileStreamer = FileStreamer;
		Papa.StringStreamer = StringStreamer;

		if (typeof module !== 'undefined' && module.exports)
		{
			// Export to Node...
			module.exports = Papa;
		}
		else if (isFunction(global.define) && global.define.amd)
		{
			// Wireup with RequireJS
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return Papa; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		}
		else
		{
			// ...or as browser global
			global.Papa = Papa;
		}

		if (global.jQuery)
		{
			var $ = global.jQuery;
			$.fn.parse = function(options)
			{
				var config = options.config || {};
				var queue = [];

				this.each(function(idx)
				{
					var supported = $(this).prop('tagName').toUpperCase() == "INPUT"
									&& $(this).attr('type').toLowerCase() == "file"
									&& global.FileReader;

					if (!supported || !this.files || this.files.length == 0)
						return true;	// continue to next input element

					for (var i = 0; i < this.files.length; i++)
					{
						queue.push({
							file: this.files[i],
							inputElem: this,
							instanceConfig: $.extend({}, config)
						});
					}
				});

				parseNextFile();	// begin parsing
				return this;		// maintains chainability


				function parseNextFile()
				{
					if (queue.length == 0)
					{
						if (isFunction(options.complete))
							options.complete();
						return;
					}

					var f = queue[0];

					if (isFunction(options.before))
					{
						var returned = options.before(f.file, f.inputElem);

						if (typeof returned === 'object')
						{
							if (returned.action == "abort")
							{
								error("AbortError", f.file, f.inputElem, returned.reason);
								return;	// Aborts all queued files immediately
							}
							else if (returned.action == "skip")
							{
								fileComplete();	// parse the next file in the queue, if any
								return;
							}
							else if (typeof returned.config === 'object')
								f.instanceConfig = $.extend(f.instanceConfig, returned.config);
						}
						else if (returned == "skip")
						{
							fileComplete();	// parse the next file in the queue, if any
							return;
						}
					}

					// Wrap up the user's complete callback, if any, so that ours also gets executed
					var userCompleteFunc = f.instanceConfig.complete;
					f.instanceConfig.complete = function(results)
					{
						if (isFunction(userCompleteFunc))
							userCompleteFunc(results, f.file, f.inputElem);
						fileComplete();
					};

					Papa.parse(f.file, f.instanceConfig);
				}

				function error(name, file, elem, reason)
				{
					if (isFunction(options.error))
						options.error({name: name}, file, elem, reason);
				}

				function fileComplete()
				{
					queue.splice(0, 1);
					parseNextFile();
				}
			}
		}


		if (IS_PAPA_WORKER)
		{
			global.onmessage = workerThreadReceivedMessage;
		}
		else if (Papa.WORKERS_SUPPORTED)
		{
			AUTO_SCRIPT_PATH = getScriptPath();

			// Check if the script was loaded synchronously
			if (!document.body)
			{
				// Body doesn't exist yet, must be synchronous
				LOADED_SYNC = true;
			}
			else
			{
				document.addEventListener('DOMContentLoaded', function () {
					LOADED_SYNC = true;
				}, true);
			}
		}




		function CsvToJson(_input, _config)
		{
			_config = _config || {};

			if (_config.worker && Papa.WORKERS_SUPPORTED)
			{
				var w = newWorker();

				w.userStep = _config.step;
				w.userChunk = _config.chunk;
				w.userComplete = _config.complete;
				w.userError = _config.error;

				_config.step = isFunction(_config.step);
				_config.chunk = isFunction(_config.chunk);
				_config.complete = isFunction(_config.complete);
				_config.error = isFunction(_config.error);
				delete _config.worker;	// prevent infinite loop

				w.postMessage({
					input: _input,
					config: _config,
					workerId: w.id
				});

				return;
			}

			var streamer = null;
			if (typeof _input === 'string')
			{
				if (_config.download)
					streamer = new NetworkStreamer(_config);
				else
					streamer = new StringStreamer(_config);
			}
			else if ((global.File && _input instanceof File) || _input instanceof Object)	// ...Safari. (see issue #106)
				streamer = new FileStreamer(_config);

			return streamer.stream(_input);
		}






		function JsonToCsv(_input, _config)
		{
			var _output = "";
			var _fields = [];

			// Default configuration

			/** whether to surround every datum with quotes */
			var _quotes = false;

			/** delimiting character */
			var _delimiter = ",";

			/** newline character(s) */
			var _newline = "\r\n";

			unpackConfig();

			if (typeof _input === 'string')
				_input = JSON.parse(_input);

			if (_input instanceof Array)
			{
				if (!_input.length || _input[0] instanceof Array)
					return serialize(null, _input);
				else if (typeof _input[0] === 'object')
					return serialize(objectKeys(_input[0]), _input);
			}
			else if (typeof _input === 'object')
			{
				if (typeof _input.data === 'string')
					_input.data = JSON.parse(_input.data);

				if (_input.data instanceof Array)
				{
					if (!_input.fields)
						_input.fields = _input.data[0] instanceof Array
										? _input.fields
										: objectKeys(_input.data[0]);

					if (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')
						_input.data = [_input.data];	// handles input like [1,2,3] or ["asdf"]
				}

				return serialize(_input.fields || [], _input.data || []);
			}

			// Default (any valid paths should return before this)
			throw "exception: Unable to serialize unrecognized input";


			function unpackConfig()
			{
				if (typeof _config !== 'object')
					return;

				if (typeof _config.delimiter === 'string'
					&& _config.delimiter.length == 1
					&& Papa.BAD_DELIMITERS.indexOf(_config.delimiter) == -1)
				{
					_delimiter = _config.delimiter;
				}

				if (typeof _config.quotes === 'boolean'
					|| _config.quotes instanceof Array)
					_quotes = _config.quotes;

				if (typeof _config.newline === 'string')
					_newline = _config.newline;
			}


			/** Turns an object's keys into an array */
			function objectKeys(obj)
			{
				if (typeof obj !== 'object')
					return [];
				var keys = [];
				for (var key in obj)
					keys.push(key);
				return keys;
			}

			/** The double for loop that iterates the data and writes out a CSV string including header row */
			function serialize(fields, data)
			{
				var csv = "";

				if (typeof fields === 'string')
					fields = JSON.parse(fields);
				if (typeof data === 'string')
					data = JSON.parse(data);

				var hasHeader = fields instanceof Array && fields.length > 0;
				var dataKeyedByField = !(data[0] instanceof Array);

				// If there a header row, write it first
				if (hasHeader)
				{
					for (var i = 0; i < fields.length; i++)
					{
						if (i > 0)
							csv += _delimiter;
						csv += safe(fields[i], i);
					}
					if (data.length > 0)
						csv += _newline;
				}

				// Then write out the data
				for (var row = 0; row < data.length; row++)
				{
					var maxCol = hasHeader ? fields.length : data[row].length;

					for (var col = 0; col < maxCol; col++)
					{
						if (col > 0)
							csv += _delimiter;
						var colIdx = hasHeader && dataKeyedByField ? fields[col] : col;
						csv += safe(data[row][colIdx], col);
					}

					if (row < data.length - 1)
						csv += _newline;
				}

				return csv;
			}

			/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */
			function safe(str, col)
			{
				if (typeof str === "undefined" || str === null)
					return "";

				str = str.toString().replace(/"/g, '""');

				var needsQuotes = (typeof _quotes === 'boolean' && _quotes)
								|| (_quotes instanceof Array && _quotes[col])
								|| hasAny(str, Papa.BAD_DELIMITERS)
								|| str.indexOf(_delimiter) > -1
								|| str.charAt(0) == ' '
								|| str.charAt(str.length - 1) == ' ';

				return needsQuotes ? '"' + str + '"' : str;
			}

			function hasAny(str, substrings)
			{
				for (var i = 0; i < substrings.length; i++)
					if (str.indexOf(substrings[i]) > -1)
						return true;
				return false;
			}
		}

		/** ChunkStreamer is the base prototype for various streamer implementations. */
		function ChunkStreamer(config)
		{
			this._handle = null;
			this._paused = false;
			this._finished = false;
			this._input = null;
			this._baseIndex = 0;
			this._partialLine = "";
			this._rowCount = 0;
			this._start = 0;
			this._nextChunk = null;
			this.isFirstChunk = true;
			this._completeResults = {
				data: [],
				errors: [],
				meta: {}
			};
			replaceConfig.call(this, config);

			this.parseChunk = function(chunk)
			{
				// First chunk pre-processing
				if (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))
				{
					var modifiedChunk = this._config.beforeFirstChunk(chunk);
					if (modifiedChunk !== undefined)
						chunk = modifiedChunk;
				}
				this.isFirstChunk = false;

				// Rejoin the line we likely just split in two by chunking the file
				var aggregate = this._partialLine + chunk;
				this._partialLine = "";

				var results = this._handle.parse(aggregate, this._baseIndex, !this._finished);
				
				if (this._handle.paused() || this._handle.aborted())
					return;
				
				var lastIndex = results.meta.cursor;
				
				if (!this._finished)
				{
					this._partialLine = aggregate.substring(lastIndex - this._baseIndex);
					this._baseIndex = lastIndex;
				}

				if (results && results.data)
					this._rowCount += results.data.length;

				var finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);

				if (IS_PAPA_WORKER)
				{
					global.postMessage({
						results: results,
						workerId: Papa.WORKER_ID,
						finished: finishedIncludingPreview
					});
				}
				else if (isFunction(this._config.chunk))
				{
					this._config.chunk(results, this._handle);
					if (this._paused)
						return;
					results = undefined;
					this._completeResults = undefined;
				}

				if (!this._config.step && !this._config.chunk) {
					this._completeResults.data = this._completeResults.data.concat(results.data);
					this._completeResults.errors = this._completeResults.errors.concat(results.errors);
					this._completeResults.meta = results.meta;
				}

				if (finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted))
					this._config.complete(this._completeResults);

				if (!finishedIncludingPreview && (!results || !results.meta.paused))
					this._nextChunk();

				return results;
			};

			this._sendError = function(error)
			{
				if (isFunction(this._config.error))
					this._config.error(error);
				else if (IS_PAPA_WORKER && this._config.error)
				{
					global.postMessage({
						workerId: Papa.WORKER_ID,
						error: error,
						finished: false
					});
				}
			};

			function replaceConfig(config)
			{
				// Deep-copy the config so we can edit it
				var configCopy = copy(config);
				configCopy.chunkSize = parseInt(configCopy.chunkSize);	// parseInt VERY important so we don't concatenate strings!
				if (!config.step && !config.chunk)
					configCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196
				this._handle = new ParserHandle(configCopy);
				this._handle.streamer = this;
				this._config = configCopy;	// persist the copy to the caller
			}
		}


		function NetworkStreamer(config)
		{
			config = config || {};
			if (!config.chunkSize)
				config.chunkSize = Papa.RemoteChunkSize;
			ChunkStreamer.call(this, config);

			var xhr;

			if (IS_WORKER)
			{
				this._nextChunk = function()
				{
					this._readChunk();
					this._chunkLoaded();
				};
			}
			else
			{
				this._nextChunk = function()
				{
					this._readChunk();
				};
			}

			this.stream = function(url)
			{
				this._input = url;
				this._nextChunk();	// Starts streaming
			};

			this._readChunk = function()
			{
				if (this._finished)
				{
					this._chunkLoaded();
					return;
				}

				xhr = new XMLHttpRequest();
				
				if (!IS_WORKER)
				{
					xhr.onload = bindFunction(this._chunkLoaded, this);
					xhr.onerror = bindFunction(this._chunkError, this);
				}

				xhr.open("GET", this._input, !IS_WORKER);
				
				if (this._config.chunkSize)
				{
					var end = this._start + this._config.chunkSize - 1;	// minus one because byte range is inclusive
					xhr.setRequestHeader("Range", "bytes="+this._start+"-"+end);
					xhr.setRequestHeader("If-None-Match", "webkit-no-cache"); // https://bugs.webkit.org/show_bug.cgi?id=82672
				}

				try {
					xhr.send();
				}
				catch (err) {
					this._chunkError(err.message);
				}

				if (IS_WORKER && xhr.status == 0)
					this._chunkError();
				else
					this._start += this._config.chunkSize;
			}

			this._chunkLoaded = function()
			{
				if (xhr.readyState != 4)
					return;

				if (xhr.status < 200 || xhr.status >= 400)
				{
					this._chunkError();
					return;
				}

				this._finished = !this._config.chunkSize || this._start > getFileSize(xhr);
				this.parseChunk(xhr.responseText);
			}

			this._chunkError = function(errorMessage)
			{
				var errorText = xhr.statusText || errorMessage;
				this._sendError(errorText);
			}

			function getFileSize(xhr)
			{
				var contentRange = xhr.getResponseHeader("Content-Range");
				return parseInt(contentRange.substr(contentRange.lastIndexOf("/") + 1));
			}
		}
		NetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);
		NetworkStreamer.prototype.constructor = NetworkStreamer;


		function FileStreamer(config)
		{
			config = config || {};
			if (!config.chunkSize)
				config.chunkSize = Papa.LocalChunkSize;
			ChunkStreamer.call(this, config);

			var reader, slice;

			// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862
			// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76
			var usingAsyncReader = typeof FileReader !== 'undefined';	// Safari doesn't consider it a function - see issue #105

			this.stream = function(file)
			{
				this._input = file;
				slice = file.slice || file.webkitSlice || file.mozSlice;

				if (usingAsyncReader)
				{
					reader = new FileReader();		// Preferred method of reading files, even in workers
					reader.onload = bindFunction(this._chunkLoaded, this);
					reader.onerror = bindFunction(this._chunkError, this);
				}
				else
					reader = new FileReaderSync();	// Hack for running in a web worker in Firefox

				this._nextChunk();	// Starts streaming
			};

			this._nextChunk = function()
			{
				if (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))
					this._readChunk();
			}

			this._readChunk = function()
			{
				var input = this._input;
				if (this._config.chunkSize)
				{
					var end = Math.min(this._start + this._config.chunkSize, this._input.size);
					input = slice.call(input, this._start, end);
				}
				var txt = reader.readAsText(input, this._config.encoding);
				if (!usingAsyncReader)
					this._chunkLoaded({ target: { result: txt } });	// mimic the async signature
			}

			this._chunkLoaded = function(event)
			{
				// Very important to increment start each time before handling results
				this._start += this._config.chunkSize;
				this._finished = !this._config.chunkSize || this._start >= this._input.size;
				this.parseChunk(event.target.result);
			}

			this._chunkError = function()
			{
				this._sendError(reader.error);
			}

		}
		FileStreamer.prototype = Object.create(ChunkStreamer.prototype);
		FileStreamer.prototype.constructor = FileStreamer;


		function StringStreamer(config)
		{
			config = config || {};
			ChunkStreamer.call(this, config);

			var string;
			var remaining;
			this.stream = function(s)
			{
				string = s;
				remaining = s;
				return this._nextChunk();
			}
			this._nextChunk = function()
			{
				if (this._finished) return;
				var size = this._config.chunkSize;
				var chunk = size ? remaining.substr(0, size) : remaining;
				remaining = size ? remaining.substr(size) : '';
				this._finished = !remaining;
				return this.parseChunk(chunk);
			}
		}
		StringStreamer.prototype = Object.create(StringStreamer.prototype);
		StringStreamer.prototype.constructor = StringStreamer;



		// Use one ParserHandle per entire CSV file or string
		function ParserHandle(_config)
		{
			// One goal is to minimize the use of regular expressions...
			var FLOAT = /^\s*-?(\d*\.?\d+|\d+\.?\d*)(e[-+]?\d+)?\s*$/i;

			var self = this;
			var _stepCounter = 0;	// Number of times step was called (number of rows parsed)
			var _input;				// The input being parsed
			var _parser;			// The core parser being used
			var _paused = false;	// Whether we are paused or not
			var _aborted = false;   // Whether the parser has aborted or not
			var _delimiterError;	// Temporary state between delimiter detection and processing results
			var _fields = [];		// Fields are from the header row of the input, if there is one
			var _results = {		// The last results returned from the parser
				data: [],
				errors: [],
				meta: {}
			};

			if (isFunction(_config.step))
			{
				var userStep = _config.step;
				_config.step = function(results)
				{
					_results = results;

					if (needsHeaderRow())
						processResults();
					else	// only call user's step function after header row
					{
						processResults();

						// It's possbile that this line was empty and there's no row here after all
						if (_results.data.length == 0)
							return;

						_stepCounter += results.data.length;
						if (_config.preview && _stepCounter > _config.preview)
							_parser.abort();
						else
							userStep(_results, self);
					}
				};
			}

			/**
			 * Parses input. Most users won't need, and shouldn't mess with, the baseIndex
			 * and ignoreLastRow parameters. They are used by streamers (wrapper functions)
			 * when an input comes in multiple chunks, like from a file.
			 */
			this.parse = function(input, baseIndex, ignoreLastRow)
			{
				if (!_config.newline)
					_config.newline = guessLineEndings(input);

				_delimiterError = false;
				if (!_config.delimiter)
				{
					var delimGuess = guessDelimiter(input);
					if (delimGuess.successful)
						_config.delimiter = delimGuess.bestDelimiter;
					else
					{
						_delimiterError = true;	// add error after parsing (otherwise it would be overwritten)
						_config.delimiter = Papa.DefaultDelimiter;
					}
					_results.meta.delimiter = _config.delimiter;
				}

				var parserConfig = copy(_config);
				if (_config.preview && _config.header)
					parserConfig.preview++;	// to compensate for header row

				_input = input;
				_parser = new Parser(parserConfig);
				_results = _parser.parse(_input, baseIndex, ignoreLastRow);
				processResults();
				return _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });
			};

			this.paused = function()
			{
				return _paused;
			};

			this.pause = function()
			{
				_paused = true;
				_parser.abort();
				_input = _input.substr(_parser.getCharIndex());
			};

			this.resume = function()
			{
				_paused = false;
				self.streamer.parseChunk(_input);
			};

			this.aborted = function () {
				return _aborted;
			}

			this.abort = function()
			{
				_aborted = true;
				_parser.abort();
				_results.meta.aborted = true;
				if (isFunction(_config.complete))
					_config.complete(_results);
				_input = "";
			};

			function processResults()
			{
				if (_results && _delimiterError)
				{
					addError("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '"+Papa.DefaultDelimiter+"'");
					_delimiterError = false;
				}

				if (_config.skipEmptyLines)
				{
					for (var i = 0; i < _results.data.length; i++)
						if (_results.data[i].length == 1 && _results.data[i][0] == "")
							_results.data.splice(i--, 1);
				}

				if (needsHeaderRow())
					fillHeaderFields();

				return applyHeaderAndDynamicTyping();
			}

			function needsHeaderRow()
			{
				return _config.header && _fields.length == 0;
			}

			function fillHeaderFields()
			{
				if (!_results)
					return;
				for (var i = 0; needsHeaderRow() && i < _results.data.length; i++)
					for (var j = 0; j < _results.data[i].length; j++)
						_fields.push(_results.data[i][j]);
				_results.data.splice(0, 1);
			}

			function applyHeaderAndDynamicTyping()
			{
				if (!_results || (!_config.header && !_config.dynamicTyping))
					return _results;

				for (var i = 0; i < _results.data.length; i++)
				{
					var row = {};

					for (var j = 0; j < _results.data[i].length; j++)
					{
						if (_config.dynamicTyping)
						{
							var value = _results.data[i][j];
							if (value == "true" || value == "TRUE")
								_results.data[i][j] = true;
							else if (value == "false" || value == "FALSE")
								_results.data[i][j] = false;
							else
								_results.data[i][j] = tryParseFloat(value);
						}

						if (_config.header)
						{
							if (j >= _fields.length)
							{
								if (!row["__parsed_extra"])
									row["__parsed_extra"] = [];
								row["__parsed_extra"].push(_results.data[i][j]);
							}
							else
								row[_fields[j]] = _results.data[i][j];
						}
					}

					if (_config.header)
					{
						_results.data[i] = row;
						if (j > _fields.length)
							addError("FieldMismatch", "TooManyFields", "Too many fields: expected " + _fields.length + " fields but parsed " + j, i);
						else if (j < _fields.length)
							addError("FieldMismatch", "TooFewFields", "Too few fields: expected " + _fields.length + " fields but parsed " + j, i);
					}
				}

				if (_config.header && _results.meta)
					_results.meta.fields = _fields;
				return _results;
			}

			function guessDelimiter(input)
			{
				var delimChoices = [",", "\t", "|", ";", Papa.RECORD_SEP, Papa.UNIT_SEP];
				var bestDelim, bestDelta, fieldCountPrevRow;

				for (var i = 0; i < delimChoices.length; i++)
				{
					var delim = delimChoices[i];
					var delta = 0, avgFieldCount = 0;
					fieldCountPrevRow = undefined;

					var preview = new Parser({
						delimiter: delim,
						preview: 10
					}).parse(input);

					for (var j = 0; j < preview.data.length; j++)
					{
						var fieldCount = preview.data[j].length;
						avgFieldCount += fieldCount;

						if (typeof fieldCountPrevRow === 'undefined')
						{
							fieldCountPrevRow = fieldCount;
							continue;
						}
						else if (fieldCount > 1)
						{
							delta += Math.abs(fieldCount - fieldCountPrevRow);
							fieldCountPrevRow = fieldCount;
						}
					}

					if (preview.data.length > 0)
						avgFieldCount /= preview.data.length;

					if ((typeof bestDelta === 'undefined' || delta < bestDelta)
						&& avgFieldCount > 1.99)
					{
						bestDelta = delta;
						bestDelim = delim;
					}
				}

				_config.delimiter = bestDelim;

				return {
					successful: !!bestDelim,
					bestDelimiter: bestDelim
				}
			}

			function guessLineEndings(input)
			{
				input = input.substr(0, 1024*1024);	// max length 1 MB

				var r = input.split('\r');

				if (r.length == 1)
					return '\n';

				var numWithN = 0;
				for (var i = 0; i < r.length; i++)
				{
					if (r[i][0] == '\n')
						numWithN++;
				}

				return numWithN >= r.length / 2 ? '\r\n' : '\r';
			}

			function tryParseFloat(val)
			{
				var isNumber = FLOAT.test(val);
				return isNumber ? parseFloat(val) : val;
			}

			function addError(type, code, msg, row)
			{
				_results.errors.push({
					type: type,
					code: code,
					message: msg,
					row: row
				});
			}
		}





		/** The core parser implements speedy and correct CSV parsing */
		function Parser(config)
		{
			// Unpack the config object
			config = config || {};
			var delim = config.delimiter;
			var newline = config.newline;
			var comments = config.comments;
			var step = config.step;
			var preview = config.preview;
			var fastMode = config.fastMode;

			// Delimiter must be valid
			if (typeof delim !== 'string'
				|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)
				delim = ",";

			// Comment character must be valid
			if (comments === delim)
				throw "Comment character same as delimiter";
			else if (comments === true)
				comments = "#";
			else if (typeof comments !== 'string'
				|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)
				comments = false;

			// Newline must be valid: \r, \n, or \r\n
			if (newline != '\n' && newline != '\r' && newline != '\r\n')
				newline = '\n';

			// We're gonna need these at the Parser scope
			var cursor = 0;
			var aborted = false;

			this.parse = function(input, baseIndex, ignoreLastRow)
			{
				// For some reason, in Chrome, this speeds things up (!?)
				if (typeof input !== 'string')
					throw "Input must be a string";

				// We don't need to compute some of these every time parse() is called,
				// but having them in a more local scope seems to perform better
				var inputLen = input.length,
					delimLen = delim.length,
					newlineLen = newline.length,
					commentsLen = comments.length;
				var stepIsFunction = typeof step === 'function';

				// Establish starting state
				cursor = 0;
				var data = [], errors = [], row = [], lastCursor = 0;

				if (!input)
					return returnable();

				if (fastMode || (fastMode !== false && input.indexOf('"') === -1))
				{
					var rows = input.split(newline);
					for (var i = 0; i < rows.length; i++)
					{
						var row = rows[i];
						cursor += row.length;
						if (i !== rows.length - 1)
							cursor += newline.length;
						else if (ignoreLastRow)
							return returnable();
						if (comments && row.substr(0, commentsLen) == comments)
							continue;
						if (stepIsFunction)
						{
							data = [];
							pushRow(row.split(delim));
							doStep();
							if (aborted)
								return returnable();
						}
						else
							pushRow(row.split(delim));
						if (preview && i >= preview)
						{
							data = data.slice(0, preview);
							return returnable(true);
						}
					}
					return returnable();
				}

				var nextDelim = input.indexOf(delim, cursor);
				var nextNewline = input.indexOf(newline, cursor);

				// Parser loop
				for (;;)
				{
					// Field has opening quote
					if (input[cursor] == '"')
					{
						// Start our search for the closing quote where the cursor is
						var quoteSearch = cursor;

						// Skip the opening quote
						cursor++;

						for (;;)
						{
							// Find closing quote
							var quoteSearch = input.indexOf('"', quoteSearch+1);

							if (quoteSearch === -1)
							{
								if (!ignoreLastRow) {
									// No closing quote... what a pity
									errors.push({
										type: "Quotes",
										code: "MissingQuotes",
										message: "Quoted field unterminated",
										row: data.length,	// row has yet to be inserted
										index: cursor
									});
								}
								return finish();
							}

							if (quoteSearch === inputLen-1)
							{
								// Closing quote at EOF
								var value = input.substring(cursor, quoteSearch).replace(/""/g, '"');
								return finish(value);
							}

							// If this quote is escaped, it's part of the data; skip it
							if (input[quoteSearch+1] == '"')
							{
								quoteSearch++;
								continue;
							}

							if (input[quoteSearch+1] == delim)
							{
								// Closing quote followed by delimiter
								row.push(input.substring(cursor, quoteSearch).replace(/""/g, '"'));
								cursor = quoteSearch + 1 + delimLen;
								nextDelim = input.indexOf(delim, cursor);
								nextNewline = input.indexOf(newline, cursor);
								break;
							}

							if (input.substr(quoteSearch+1, newlineLen) === newline)
							{
								// Closing quote followed by newline
								row.push(input.substring(cursor, quoteSearch).replace(/""/g, '"'));
								saveRow(quoteSearch + 1 + newlineLen);
								nextDelim = input.indexOf(delim, cursor);	// because we may have skipped the nextDelim in the quoted field

								if (stepIsFunction)
								{
									doStep();
									if (aborted)
										return returnable();
								}
								
								if (preview && data.length >= preview)
									return returnable(true);

								break;
							}
						}

						continue;
					}

					// Comment found at start of new line
					if (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)
					{
						if (nextNewline == -1)	// Comment ends at EOF
							return returnable();
						cursor = nextNewline + newlineLen;
						nextNewline = input.indexOf(newline, cursor);
						nextDelim = input.indexOf(delim, cursor);
						continue;
					}

					// Next delimiter comes before next newline, so we've reached end of field
					if (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))
					{
						row.push(input.substring(cursor, nextDelim));
						cursor = nextDelim + delimLen;
						nextDelim = input.indexOf(delim, cursor);
						continue;
					}

					// End of row
					if (nextNewline !== -1)
					{
						row.push(input.substring(cursor, nextNewline));
						saveRow(nextNewline + newlineLen);

						if (stepIsFunction)
						{
							doStep();
							if (aborted)
								return returnable();
						}

						if (preview && data.length >= preview)
							return returnable(true);

						continue;
					}

					break;
				}


				return finish();


				function pushRow(row)
				{
					data.push(row);
					lastCursor = cursor;
				}

				/**
				 * Appends the remaining input from cursor to the end into
				 * row, saves the row, calls step, and returns the results.
				 */
				function finish(value)
				{
					if (ignoreLastRow)
						return returnable();
					if (typeof value === 'undefined')
						value = input.substr(cursor);
					row.push(value);
					cursor = inputLen;	// important in case parsing is paused
					pushRow(row);
					if (stepIsFunction)
						doStep();
					return returnable();
				}

				/**
				 * Appends the current row to the results. It sets the cursor
				 * to newCursor and finds the nextNewline. The caller should
				 * take care to execute user's step function and check for
				 * preview and end parsing if necessary.
				 */
				function saveRow(newCursor)
				{
					cursor = newCursor;
					pushRow(row);
					row = [];
					nextNewline = input.indexOf(newline, cursor);
				}

				/** Returns an object with the results, errors, and meta. */
				function returnable(stopped)
				{
					return {
						data: data,
						errors: errors,
						meta: {
							delimiter: delim,
							linebreak: newline,
							aborted: aborted,
							truncated: !!stopped,
							cursor: lastCursor + (baseIndex || 0)
						}
					};
				}

				/** Executes the user's step function and resets data & errors. */
				function doStep()
				{
					step(returnable());
					data = [], errors = [];
				}
			};

			/** Sets the abort flag */
			this.abort = function()
			{
				aborted = true;
			};

			/** Gets the cursor position */
			this.getCharIndex = function()
			{
				return cursor;
			};
		}


		// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code
		// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358
		function getScriptPath()
		{
			var scripts = document.getElementsByTagName('script');
			return scripts.length ? scripts[scripts.length - 1].src : '';
		}

		function newWorker()
		{
			if (!Papa.WORKERS_SUPPORTED)
				return false;
			if (!LOADED_SYNC && Papa.SCRIPT_PATH === null)
				throw new Error(
					'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +
					'You need to set Papa.SCRIPT_PATH manually.'
				);
			var workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;
			// Append "papaworker" to the search string to tell papaparse that this is our worker.
			workerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';
			var w = new global.Worker(workerUrl);
			w.onmessage = mainThreadReceivedMessage;
			w.id = workerIdCounter++;
			workers[w.id] = w;
			return w;
		}

		/** Callback when main thread receives a message */
		function mainThreadReceivedMessage(e)
		{
			var msg = e.data;
			var worker = workers[msg.workerId];
			var aborted = false;

			if (msg.error)
				worker.userError(msg.error, msg.file);
			else if (msg.results && msg.results.data)
			{
				var abort = function() {
					aborted = true;
					completeWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });
				};

				var handle = {
					abort: abort,
					pause: notImplemented,
					resume: notImplemented
				};

				if (isFunction(worker.userStep))
				{
					for (var i = 0; i < msg.results.data.length; i++)
					{
						worker.userStep({
							data: [msg.results.data[i]],
							errors: msg.results.errors,
							meta: msg.results.meta
						}, handle);
						if (aborted)
							break;
					}
					delete msg.results;	// free memory ASAP
				}
				else if (isFunction(worker.userChunk))
				{
					worker.userChunk(msg.results, handle, msg.file);
					delete msg.results;
				}
			}

			if (msg.finished && !aborted)
				completeWorker(msg.workerId, msg.results);
		}

		function completeWorker(workerId, results) {
			var worker = workers[workerId];
			if (isFunction(worker.userComplete))
				worker.userComplete(results);
			worker.terminate();
			delete workers[workerId];
		}

		function notImplemented() {
			throw "Not implemented.";
		}

		/** Callback when worker thread receives a message */
		function workerThreadReceivedMessage(e)
		{
			var msg = e.data;

			if (typeof Papa.WORKER_ID === 'undefined' && msg)
				Papa.WORKER_ID = msg.workerId;

			if (typeof msg.input === 'string')
			{
				global.postMessage({
					workerId: Papa.WORKER_ID,
					results: Papa.parse(msg.input, msg.config),
					finished: true
				});
			}
			else if ((global.File && msg.input instanceof File) || msg.input instanceof Object)	// thank you, Safari (see issue #106)
			{
				var results = Papa.parse(msg.input, msg.config);
				if (results)
					global.postMessage({
						workerId: Papa.WORKER_ID,
						results: results,
						finished: true
					});
			}
		}

		/** Makes a deep copy of an array or object (mostly) */
		function copy(obj)
		{
			if (typeof obj !== 'object')
				return obj;
			var cpy = obj instanceof Array ? [] : {};
			for (var key in obj)
				cpy[key] = copy(obj[key]);
			return cpy;
		}

		function bindFunction(f, self)
		{
			return function() { f.apply(self, arguments); };
		}

		function isFunction(func)
		{
			return typeof func === 'function';
		}
	})(typeof window !== 'undefined' ? window : this);


/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';

	var hasOwn = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;

	var isArray = function isArray(arr) {
		if (typeof Array.isArray === 'function') {
			return Array.isArray(arr);
		}

		return toStr.call(arr) === '[object Array]';
	};

	var isPlainObject = function isPlainObject(obj) {
		if (!obj || toStr.call(obj) !== '[object Object]') {
			return false;
		}

		var hasOwnConstructor = hasOwn.call(obj, 'constructor');
		var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
		// Not own constructor property must be Object
		if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key;
		for (key in obj) {/**/}

		return typeof key === 'undefined' || hasOwn.call(obj, key);
	};

	module.exports = function extend() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0],
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {
			target = {};
		}

		for (; i < length; ++i) {
			options = arguments[i];
			// Only deal with non-null/undefined values
			if (options != null) {
				// Extend the base object
				for (name in options) {
					src = target[name];
					copy = options[name];

					// Prevent never-ending loop
					if (target !== copy) {
						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
							if (copyIsArray) {
								copyIsArray = false;
								clone = src && isArray(src) ? src : [];
							} else {
								clone = src && isPlainObject(src) ? src : {};
							}

							// Never move original objects, clone them
							target[name] = extend(deep, clone, copy);

						// Don't bring in undefined values
						} else if (typeof copy !== 'undefined') {
							target[name] = copy;
						}
					}
				}
			}
		}

		// Return the modified object
		return target;
	};



/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Molecule = __webpack_require__(4).Molecule;

	var fields = new Map();
	module.exports = fields;

	fields.set('oclid', Molecule.fromIDCode);
	fields.set('idcode', Molecule.fromIDCode);
	fields.set('smiles', Molecule.fromSmiles);
	fields.set('molfile', Molecule.fromMolfile);


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var OCL = __webpack_require__(4);
	var parseRXN = __webpack_require__(12);

	function RXN(rxn, options) {
	    if (! rxn) {
	        this.reagents=[];
	        this.products=[];
	    } else {
	        var parsed=parseRXN(rxn);
	        this.reagents=generateInfo(parsed.reagents);
	        this.products=generateInfo(parsed.products);
	    }
	}

	RXN.prototype.addReagent=function (molfile) {
	    this.reagents.push(getMolfileInfo(molfile));
	}

	RXN.prototype.addProduct=function (molfile) {
	    this.products.push(getMolfileInfo(molfile));
	}

	RXN.prototype.toRXN = function() {
	    var result=[];
	    result.push("$RXN");
	    result.push("");
	    result.push("");
	    result.push("Openchemlib");
	    result.push(format3(this.reagents.length)+format3(this.products.length))
	    for (var i=0; i<this.reagents.length; i++) {
	        result.push("$MOL");
	        result.push(getMolfile(this.reagents[i].molfile));
	    }
	    for (var i=0; i<this.products.length; i++) {
	        result.push("$MOL");
	        result.push(getMolfile(this.products[i].molfile));
	    }
	    return result.join("\n");
	}


	function getMolfile(molfile) {
	    var lines = (~ molfile.indexOf("\r\n")) ? molfile.split("\r\n") : molfile.split(/[\r\n]/);
	    return lines.join("\n");
	}

	function format3(number) {
	    var length=(number+"").length;
	    return "   ".substring(0,3-length)+number;
	}

	function generateInfo(molecules) {
	    for (var i=0; i<molecules.length; i++) {
	        molecules[i]=getMolfileInfo(molecules[i]);
	    }
	    return molecules;
	}

	function getMolfileInfo(molfile) {
	    var ocl=OCL.Molecule.fromMolfile(molfile);
	    return {
	        molfile: molfile,
	        smiles: ocl.toSmiles(),
	        mf: ocl.getMolecularFormula().formula,
	        mw: ocl.getMolecularFormula().relativeWeight,
	        idCode: ocl.getIDCode
	    }
	}

	module.exports = RXN;


/***/ },
/* 12 */
/***/ function(module, exports) {

	'use strict';

	function parse(rxn) {
	    if (typeof rxn !== 'string') {
	        throw new TypeError('Parameter "rxn" must be a string');
	    }
	    // we will find the delimiter in order to be much faster and not use regular expression
	    var header = rxn.substr(0, 1000);
	    var crlf = '\n';
	    if (header.indexOf('\r\n') > -1) {
	        crlf = '\r\n';
	    } else if (header.indexOf('\r') > -1) {
	        crlf = '\r';
	    }

	    var rxnParts = rxn.split(crlf + '$MOL' + crlf);

	    var reagents=[];
	    var products=[];

	    var result={};
	    result.reagents=reagents;
	    result.products=products;


	    // the first part is expected to contain the number of reagents and products

	    // First part should start with $RXN
	    // and the fifth line should contain the number of reagents and products
	    if (rxnParts.length===0) throw new Error('file looks empty');

	    var header=rxnParts[0];
	    if (header.indexOf("$RXN")!=0) throw new Error('file does not start with $RXN');

	    var lines=header.split(crlf);
	    if (lines.length<5) throw new Error('incorrect number of lines in header');

	    var numberReagents=lines[4].substring(0,3) >> 0;
	    var numberProducts=lines[4].substring(3,6) >> 0;

	    if (numberReagents+numberProducts!=rxnParts.length-1) throw new Error('not the correct number of molecules');

	    for (var i=1; i<rxnParts.length; i++) {
	        if (i<=numberReagents) {
	            reagents.push(rxnParts[i]);
	        } else {
	            products.push(rxnParts[i]);
	        }
	    }
	    return result;

	}

	module.exports = parse;


/***/ },
/* 13 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function getGroupedDiastereotopicAtomIDs(options) {
	    var options=options || {};
	    var label=options.atomLabel;

	    var diaIDs=this.getDiastereotopicAtomIDs(options);
	    var diaIDsObject={};

	    for (var i=0; i<diaIDs.length; i++) {
	        if (! label || this.getAtomLabel(i)===label) {
	            var diaID=diaIDs[i];
	            if (! diaIDsObject[diaID]) {
	                diaIDsObject[diaID]={
	                    counter:1,
	                    atoms: [i],
	                    oclID: diaID,
	                    atomLabel: this.getAtomLabel(i),
	                    _highlight: [diaID]
	                }
	            } else {
	                diaIDsObject[diaID].counter++;
	                diaIDsObject[diaID].atoms.push(i);
	            }
	        }
	    }

	    var diaIDsTable=[];
	    for (var key of Object.keys(diaIDsObject)) {
	        diaIDsTable.push(diaIDsObject[key]);
	    }
	    return diaIDsTable;
	}


/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function getExtendedDiastereotopicAtomIDs() {
	    var molecule=this.getCompactCopy();
	    molecule.addImplicitHydrogens();
	    var diaIDs=molecule.getDiastereotopicAtomIDs();
	    
	    var newDiaIDs=[];

	    for (var i=0; i<diaIDs.length; i++) {
	        var diaID=diaIDs[i];
	        var newDiaID={
	            oclID: diaID,
	            hydrogenOCLIDs: [],
	            nbHydrogens: 0
	        };
	        for (var j=0; j<molecule.getAllConnAtoms(i); j++) {
	            var atom=molecule.getConnAtom(i,j);
	            if (molecule.getAtomicNo(atom)===1) {
	                newDiaID.nbHydrogens++;
	                if (newDiaID.hydrogenOCLIDs.indexOf(diaIDs[atom])===-1) {
	                    newDiaID.hydrogenOCLIDs.push(diaIDs[atom]);
	                }
	            }
	        }

	        newDiaIDs.push(newDiaID);
	    }

	    return newDiaIDs;
	}


/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function toVisualizerMolfile() {
	    var diaIDs=this.getGroupedDiastereotopicAtomIDs();

	    var highlight=[];
	    var atoms={};
	    diaIDs.forEach(function(diaID) {
	        atoms[diaID.oclID]=diaID.atoms;
	        highlight.push(diaID.oclID);
	    })

	    var molfile={
	        type:'mol2d',
	        value:this.toMolfile(),
	        _highlight:highlight,
	        _atoms:atoms
	    }

	    return molfile;
	}


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Util = __webpack_require__(4).Util;

	module.exports = function getGroupedHOSECodes(options) {
	    var options=options || {};
	    var diaIDs=this.getGroupedDiastereotopicAtomIDs(options);
	    diaIDs.forEach(function(diaID) {
	        var hoses=Util.getHoseCodesFromDiastereotopicID(diaID.oclID, options);

	        diaID.hoses=[];
	        var level=1;
	        for (var hose of hoses) {
	            diaID.hoses.push(
	                {
	                    level: level++,
	                    oclID: hose
	                })
	        }
	    });

	    return diaIDs;
	};


/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function getNumberOfAtoms(options) {
	    var options=options || {};
	    var label=options.atomLabel;
	    var mf = this.getMolecularFormula().formula;
	    var parts = mf.split(/(?=[A-Z])/);
	    for (var part of parts) {
	        var atom=part.replace(/[0-9]/g,'');
	        if (atom==label) {
	            return part.replace(/[^0-9]/g,'') * 1 || 1;
	        }
	    }
	    
	    return 0;
	}


/***/ },
/* 18 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function toDiastereotopicSVG(options) {
	    var options=options || {};
	    var width=options.width||300;
	    var height=options.width||200;
	    var prefix=options.width||"ocl";
	    var svg=options.svg;
	    var diaIDs = this.getDiastereotopicAtomIDs();
	    if (!svg) svg=this.toSVG(width, height, prefix);

	    svg=svg.replace(/Atom:[0-9]+\"/g,function(value) {
	        var atom=value.replace(/[^0-9]/g,'');
	        return value+' data-atomid="'+diaIDs[atom]+'"';
	    });

	    return svg;
	}


/***/ },
/* 19 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function getAtomsInfo() {
	    var diaIDs=this.getDiastereotopicAtomIDs();

	    var results=[];
	    for (var i=0; i<diaIDs.length; i++) {
	        var result = {
	            oclID: diaIDs[i],
	            extra: {
	                singleBonds: 0,
	                doubleBonds: 0,
	                tripleBonds: 0,
	                aromaticBonds: 0,
	                cnoHybridation: 0 // should be 1 (sp), 2 (sp2) or 3 (sp3)
	            }
	        };
	        var extra = result.extra;
	        results.push(result);
	        result.abnormalValence = this.getAtomAbnormalValence(i); // -1 is normal otherwise specified
	        result.charge = this.getAtomCharge(i);
	        result.cipParity = this.getAtomCIPParity(i);
	        result.color = this.getAtomColor(i);
	        result.customLabel = this.getAtomCustomLabel(i);
	//        result.esrGroup=this.getAtomESRGroup(i);
	//        result.esrType=this.getAtomESRType(i);
	        result.atomicNo = this.getAtomicNo(i);
	        result.label = this.getAtomLabel(i);
	//        result.list=this.getAtomList(i);
	//        result.listString=this.getAtomListString(i);
	//        result.mapNo=this.getAtomMapNo(i);
	        result.mass = this.getAtomMass(i);
	//        result.parity=this.getAtomParity(i);
	//        result.pi=this.getAtomPi(i);
	//        result.preferredStereoBond=this.getAtomPreferredStereoBond(i);
	//        result.queryFeatures=this.getAtomQueryFeatures(i);
	        result.radical = this.getAtomRadical(i);
	        result.ringBondCount = this.getAtomRingBondCount(i);
	//        result.ringCount=this.getAtomRingCount(i);
	        result.ringSize = this.getAtomRingSize(i);
	        result.x = this.getAtomX(i);
	        result.y = this.getAtomY(i);
	        result.z = this.getAtomZ(i);
	        result.allHydrogens = this.getAllHydrogens(i);
	        result.connAtoms = this.getConnAtoms(i);
	        result.allConnAtoms = this.getAllConnAtoms(i);

	        result.isAromatic = this.isAromaticAtom(i);
	        result.isAllylic = this.isAllylicAtom(i);
	        result.isStereoCenter = this.isAtomStereoCenter(i);
	        result.isRing = this.isRingAtom(i);
	        result.isSmallRing = this.isSmallRingAtom(i);
	        result.isStabilized = this.isStabilizedAtom(i);

	        result.extra.singleBonds = result.allHydrogens;
	        for (var j = 0; j < this.getAllConnAtoms(i); j++) {
	            var bond = this.getConnBond(i, j);
	            var bondOrder = this.getBondOrder(bond);
	            if (this.isAromaticBond(bond)) {
	                extra.aromaticBonds++;
	            } else if (bondOrder === 1) {
	                extra.singleBonds++;
	            } else if (bondOrder === 2) {
	                extra.doubleBonds++;
	            } else if (bondOrder === 3) {
	                extra.tripleBonds++;
	            }
	        }
	        result.extra.totalBonds = result.extra.singleBonds + result.extra.doubleBonds +
	            result.extra.tripleBonds + result.extra.aromaticBonds;

	        if (result.atomicNo === 6) {
	            result.extra.cnoHybridation = result.extra.totalBonds - 1;
	        } else if (result.atomicNo === 7) {
	            result.extra.cnoHybridation = result.extra.totalBonds;
	        } else if (result.atomicNo === 8) {
	            result.extra.cnoHybridation = result.extra.totalBonds + 1;
	        }
	    }
	    return results;
	};


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var floydWarshall=__webpack_require__(21);
	var Matrix=__webpack_require__(49);

	module.exports = function getAllPaths(options) {
	    var options=options || [];
	    var fromLabel = options.fromLabel || '';
	    var toLabel = options.toLabel || '';
	    var minLength = (options.minLength===undefined) ? 1 : options.minLength;
	    var maxLength = (options.maxLength===undefined) ? 4 : options.maxLength;

	    
	    // we need to find all the atoms 'fromLabel' and 'toLabel'
	    var results={};
	    var diaIDs=this.getDiastereotopicAtomIDs();
	  
	    var connectivityMatrix=this.getConnectivityMatrix();
	    // TODO have a package that allows to convert the connectivityMatrix to a distanceMatrix
	    var pathLengthMatrix=floydWarshall(new Matrix(connectivityMatrix));
	    
	    for (var from=0; from<this.getAllAtoms(); from++) {
	        for (var to=0; to<this.getAllAtoms(); to++) {
	            if (! fromLabel || this.getAtomLabel(from)===fromLabel) {
	                if (! toLabel || this.getAtomLabel(to)===toLabel) {
	                    var key=diaIDs[from]+"_"+diaIDs[to];
	                    var pathLength=pathLengthMatrix[from][to];
	                    if (pathLength>=minLength && pathLength<=maxLength) {
	                        if (! results[key]) {
	                            results[key]={
	                                fromDiaID:diaIDs[from],
	                                toDiaID:diaIDs[to],
	                                fromAtoms: [],
	                                toAtoms: [],
	                                fromLabel: this.getAtomLabel(from),
	                                toLabel: this.getAtomLabel(to),
	                                pathLength: pathLength
	                            }
	                        }
	                        if (results[key].fromAtoms.indexOf(from)===-1) results[key].fromAtoms.push(from);
	                        if (results[key].toAtoms.indexOf(to)===-1) results[key].toAtoms.push(to);
	                    }
	                }
	            }
	        }
	    }
	    
	    var finalResults=[];
	    for (var key in results) {
	        finalResults.push(results[key]);
	    }
	    return finalResults;
	}


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Matrix = __webpack_require__(22);

	/**
	 * Algorithm that finds the shortest distance from one node to the other
	 * @param {Matrix} adjMatrix - A squared adjacency matrix
	 * @return {Matrix} - Distance from a node to the other, -1 if the node is unreachable
	 */
	function floydWarshall(adjMatrix) {
	    if (Matrix.isMatrix(adjMatrix) && (adjMatrix.columns !== adjMatrix.rows))
	        throw new TypeError('The adjacency matrix should be squared');
	    const numVertices = adjMatrix.columns;
	    let distMatrix = new Matrix(numVertices, numVertices);
	    distMatrix.apply((row, column) => {
	        // principal diagonal is 0
	        if (row === column)
	            distMatrix.set(row, column, 0);
	        else {
	            let val = adjMatrix.get(row, column);
	            // edges values remain the same
	            if (val)
	                distMatrix.set(row, column, val);
	            // 0 values become infinity
	            else
	                distMatrix.set(row, column, Number.POSITIVE_INFINITY);
	        }
	    });

	    for (let k = 0; k < numVertices; ++k)
	        for (let i = 0; i < numVertices; ++i)
	            for (let j = 0; j < numVertices; ++j) {
	                let dist = distMatrix.get(i, k) + distMatrix.get(k, j);
	                if (distMatrix.get(i, j) > dist)
	                    distMatrix.set(i, j, dist);
	            }

	    // When there's no connection the value is -1
	    distMatrix.apply((row, column) => {
	        if (distMatrix.get(row, column) === Number.POSITIVE_INFINITY)
	            distMatrix.set(row, column, -1);
	    });
	    return distMatrix;
	}

	module.exports = floydWarshall;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(23);
	module.exports.Decompositions = module.exports.DC = __webpack_require__(42);


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(24);
	var abstractMatrix = __webpack_require__(25);
	var util = __webpack_require__(33);

	class Matrix extends abstractMatrix(Array) {
	    constructor(nRows, nColumns) {
	        if (arguments.length === 1 && typeof nRows === 'number') {
	            return new Array(nRows);
	        }
	        if (Matrix.isMatrix(nRows)) {
	            return nRows.clone();
	        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix
	            super(nRows);
	            if (Number.isInteger(nColumns) && nColumns > 0) {
	                for (var i = 0; i < nRows; i++) {
	                    this[i] = new Array(nColumns);
	                }
	            } else {
	                throw new TypeError('nColumns must be a positive integer');
	            }
	        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array
	            var matrix = nRows;
	            nRows = matrix.length;
	            nColumns = matrix[0].length;
	            if (typeof nColumns !== 'number' || nColumns === 0) {
	                throw new TypeError('Data must be a 2D array with at least one element');
	            }
	            super(nRows);
	            for (var i = 0; i < nRows; i++) {
	                if (matrix[i].length !== nColumns) {
	                    throw new RangeError('Inconsistent array dimensions');
	                }
	                this[i] = [].concat(matrix[i]);
	            }
	        } else {
	            throw new TypeError('First argument must be a positive number or an array');
	        }
	        this.rows = nRows;
	        this.columns = nColumns;
	    }

	    set(rowIndex, columnIndex, value) {
	        this[rowIndex][columnIndex] = value;
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this[rowIndex][columnIndex];
	    }

	    /**
	     * Creates an exact and independent copy of the matrix
	     * @returns {Matrix}
	     */
	    clone() {
	        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);
	        for (var row = 0; row < this.rows; row++) {
	            for (var column = 0; column < this.columns; column++) {
	                newMatrix.set(row, column, this.get(row, column));
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Removes a row from the given index
	     * @param {number} index - Row index
	     * @returns {Matrix} this
	     */
	    removeRow(index) {
	        util.checkRowIndex(this, index);
	        if (this.rows === 1)
	            throw new RangeError('A matrix cannot have less than one row');
	        this.splice(index, 1);
	        this.rows -= 1;
	        return this;
	    }

	    /**
	     * Adds a row at the given index
	     * @param {number} [index = this.rows] - Row index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    addRow(index, array) {
	        if (array === undefined) {
	            array = index;
	            index = this.rows;
	        }
	        util.checkRowIndex(this, index, true);
	        array = util.checkRowVector(this, array, true);
	        this.splice(index, 0, array);
	        this.rows += 1;
	        return this;
	    }

	    /**
	     * Removes a column from the given index
	     * @param {number} index - Column index
	     * @returns {Matrix} this
	     */
	    removeColumn(index) {
	        util.checkColumnIndex(this, index);
	        if (this.columns === 1)
	            throw new RangeError('A matrix cannot have less than one column');
	        for (var i = 0; i < this.rows; i++) {
	            this[i].splice(index, 1);
	        }
	        this.columns -= 1;
	        return this;
	    }

	    /**
	     * Adds a column at the given index
	     * @param {number} [index = this.columns] - Column index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    addColumn(index, array) {
	        if (typeof array === 'undefined') {
	            array = index;
	            index = this.columns;
	        }
	        util.checkColumnIndex(this, index, true);
	        array = util.checkColumnVector(this, array);
	        for (var i = 0; i < this.rows; i++) {
	            this[i].splice(index, 0, array[i]);
	        }
	        this.columns += 1;
	        return this;
	    }
	}

	module.exports = Matrix;
	Matrix.abstractMatrix = abstractMatrix;


/***/ },
/* 24 */
/***/ function(module, exports) {

	'use strict';

	if (!Symbol.species) {
	    Symbol.species = Symbol.for('@@species');
	}


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = abstractMatrix;

	var arrayUtils = __webpack_require__(26);
	var util = __webpack_require__(33);
	var MatrixTransposeView = __webpack_require__(34);
	var MatrixRowView = __webpack_require__(36);
	var MatrixSubView = __webpack_require__(37);
	var MatrixSelectionView = __webpack_require__(38);
	var MatrixColumnView = __webpack_require__(39);
	var MatrixFlipRowView = __webpack_require__(40);
	var MatrixFlipColumnView = __webpack_require__(41);

	function abstractMatrix(superCtor) {
	    if (superCtor === undefined) superCtor = Object;

	    /**
	     * Real matrix
	     * @class Matrix
	     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,
	     * 2D array containing the data or Matrix instance to clone
	     * @param {number} [nColumns] - Number of columns of the new matrix
	     */
	    class Matrix extends superCtor {
	        static get [Symbol.species]() {
	            return this;
	        }

	        /**
	         * Constructs a Matrix with the chosen dimensions from a 1D array
	         * @param {number} newRows - Number of rows
	         * @param {number} newColumns - Number of columns
	         * @param {Array} newData - A 1D array containing data for the matrix
	         * @returns {Matrix} - The new matrix
	         */
	        static from1DArray(newRows, newColumns, newData) {
	            var length = newRows * newColumns;
	            if (length !== newData.length) {
	                throw new RangeError('Data length does not match given dimensions');
	            }
	            var newMatrix = new this(newRows, newColumns);
	            for (var row = 0; row < newRows; row++) {
	                for (var column = 0; column < newColumns; column++) {
	                    newMatrix.set(row, column, newData[row * newColumns + column]);
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Creates a row vector, a matrix with only one row.
	         * @param {Array} newData - A 1D array containing data for the vector
	         * @returns {Matrix} - The new matrix
	         */
	        static rowVector(newData) {
	            var vector = new this(1, newData.length);
	            for (var i = 0; i < newData.length; i++) {
	                vector.set(0, i, newData[i]);
	            }
	            return vector;
	        }

	        /**
	         * Creates a column vector, a matrix with only one column.
	         * @param {Array} newData - A 1D array containing data for the vector
	         * @returns {Matrix} - The new matrix
	         */
	        static columnVector(newData) {
	            var vector = new this(newData.length, 1);
	            for (var i = 0; i < newData.length; i++) {
	                vector.set(i, 0, newData[i]);
	            }
	            return vector;
	        }

	        /**
	         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @returns {Matrix} - The new matrix
	         */
	        static empty(rows, columns) {
	            return new this(rows, columns);
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be set to zero.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @returns {Matrix} - The new matrix
	         */
	        static zeros(rows, columns) {
	            return this.empty(rows, columns).fill(0);
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be set to one.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @returns {Matrix} - The new matrix
	         */
	        static ones(rows, columns) {
	            return this.empty(rows, columns).fill(1);
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be randomly set.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @param {function} [rng=Math.random] - Random number generator
	         * @returns {Matrix} The new matrix
	         */
	        static rand(rows, columns, rng) {
	            if (rng === undefined) rng = Math.random;
	            var matrix = this.empty(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    matrix.set(i, j, rng());
	                }
	            }
	            return matrix;
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be random integers.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @param {number} [maxValue=1000] - Maximum value
	         * @param {function} [rng=Math.random] - Random number generator
	         * @returns {Matrix} The new matrix
	         */
	        static randInt(rows, columns, maxValue, rng) {
	            if (maxValue === undefined) maxValue = 1000;
	            if (rng === undefined) rng = Math.random;
	            var matrix = this.empty(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    var value = Math.floor(rng() * maxValue);
	                    matrix.set(i, j, value);
	                }
	            }
	            return matrix;
	        }

	        /**
	         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.
	         * @param {number} rows - Number of rows
	         * @param {number} [columns] - Number of columns (Default: rows)
	         * @returns {Matrix} - The new identity matrix
	         */
	        static eye(rows, columns, value) {
	            if (value === undefined) value = 1
	            if (columns === undefined) columns = rows;
	            var min = Math.min(rows, columns);
	            var matrix = this.zeros(rows, columns);
	            for (var i = 0; i < min; i++) {
	                matrix.set(i, i, value);
	            }
	            return matrix;
	        }

	        /**
	         * Creates a diagonal matrix based on the given array.
	         * @param {Array} data - Array containing the data for the diagonal
	         * @param {number} [rows] - Number of rows (Default: data.length)
	         * @param {number} [columns] - Number of columns (Default: rows)
	         * @returns {Matrix} - The new diagonal matrix
	         */
	        static diag(data, rows, columns) {
	            var l = data.length;
	            if (rows === undefined) rows = l;
	            if (columns === undefined) columns = rows;
	            var min = Math.min(l, rows, columns);
	            var matrix = this.zeros(rows, columns);
	            for (var i = 0; i < min; i++) {
	                matrix.set(i, i, data[i]);
	            }
	            return matrix;
	        }

	        /**
	         * Returns a matrix whose elements are the minimum between matrix1 and matrix2
	         * @param matrix1
	         * @param matrix2
	         * @returns {Matrix}
	         */
	        static min(matrix1, matrix2) {
	            matrix1 = this.checkMatrix(matrix1);
	            matrix2 = this.checkMatrix(matrix2);
	            var rows = matrix1.rows;
	            var columns = matrix1.columns;
	            var result = new this(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));
	                }
	            }
	            return result;
	        }

	        /**
	         * Returns a matrix whose elements are the maximum between matrix1 and matrix2
	         * @param matrix1
	         * @param matrix2
	         * @returns {Matrix}
	         */
	        static max(matrix1, matrix2) {
	            matrix1 = this.checkMatrix(matrix1);
	            matrix2 = this.checkMatrix(matrix2);
	            var rows = matrix1.rows;
	            var columns = matrix1.columns;
	            var result = new this(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));
	                }
	            }
	            return result;
	        }

	        /**
	         * Check that the provided value is a Matrix and tries to instantiate one if not
	         * @param value - The value to check
	         * @returns {Matrix}
	         */
	        static checkMatrix(value) {
	            return Matrix.isMatrix(value) ? value : new this(value);
	        }

	        /**
	         * Returns true if the argument is a Matrix, false otherwise
	         * @param value - The value to check
	         * @return {boolean}
	         */
	        static isMatrix(value) {
	            return (value != null) && (value.klass === 'Matrix');
	        }

	        /**
	         * @property {number} - The number of elements in the matrix.
	         */
	        get size() {
	            return this.rows * this.columns;
	        }

	        /**
	         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.
	         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)
	         * @returns {Matrix} this
	         */
	        apply(callback) {
	            if (typeof callback !== 'function') {
	                throw new TypeError('callback must be a function');
	            }
	            var ii = this.rows;
	            var jj = this.columns;
	            for (var i = 0; i < ii; i++) {
	                for (var j = 0; j < jj; j++) {
	                    callback.call(this, i, j);
	                }
	            }
	            return this;
	        }

	        /**
	         * Returns a new 1D array filled row by row with the matrix values
	         * @returns {Array}
	         */
	        to1DArray() {
	            var array = new Array(this.size);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    array[i * this.columns + j] = this.get(i, j);
	                }
	            }
	            return array;
	        }

	        /**
	         * Returns a 2D array containing a copy of the data
	         * @returns {Array}
	         */
	        to2DArray() {
	            var copy = new Array(this.rows);
	            for (var i = 0; i < this.rows; i++) {
	                copy[i] = new Array(this.columns);
	                for (var j = 0; j < this.columns; j++) {
	                    copy[i][j] = this.get(i, j);
	                }
	            }
	            return copy;
	        }

	        /**
	         * @returns {boolean} true if the matrix has one row
	         */
	        isRowVector() {
	            return this.rows === 1;
	        }

	        /**
	         * @returns {boolean} true if the matrix has one column
	         */
	        isColumnVector() {
	            return this.columns === 1;
	        }

	        /**
	         * @returns {boolean} true if the matrix has one row or one column
	         */
	        isVector() {
	            return (this.rows === 1) || (this.columns === 1);
	        }

	        /**
	         * @returns {boolean} true if the matrix has the same number of rows and columns
	         */
	        isSquare() {
	            return this.rows === this.columns;
	        }

	        /**
	         * @returns {boolean} true if the matrix is square and has the same values on both sides of the diagonal
	         */
	        isSymmetric() {
	            if (this.isSquare()) {
	                for (var i = 0; i < this.rows; i++) {
	                    for (var j = 0; j <= i; j++) {
	                        if (this.get(i, j) !== this.get(j, i)) {
	                            return false;
	                        }
	                    }
	                }
	                return true;
	            }
	            return false;
	        }

	        /**
	         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1
	         * @param {number} rowIndex - Index of the row
	         * @param {number} columnIndex - Index of the column
	         * @param {number} value - The new value for the element
	         * @returns {Matrix} this
	         */
	        set(rowIndex, columnIndex, value) {
	            throw new Error('set method is unimplemented');
	        }

	        /**
	         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]
	         * @param {number} rowIndex - Index of the row
	         * @param {number} columnIndex - Index of the column
	         * @returns {number}
	         */
	        get(rowIndex, columnIndex) {
	            throw new Error('get method is unimplemented');
	        }

	        /**
	         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of
	         * rows of the matrix, and colRep times the number of columns of the matrix
	         * @param {number} rowRep - Number of times the rows should be repeated
	         * @param {number} colRep - Number of times the columns should be re
	         * @example
	         * var matrix = new Matrix([[1,2]]);
	         * matrix.repeat(2); // [[1,2],[1,2]]
	         */
	        repeat(rowRep, colRep) {
	            rowRep = rowRep || 1;
	            colRep = colRep || 1;
	            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);
	            for (var i = 0; i < rowRep; i++) {
	                for (var j = 0; j < colRep; j++) {
	                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);
	                }
	            }
	            return matrix;
	        }

	        /**
	         * Fills the matrix with a given value. All elements will be set to this value.
	         * @param {number} value - New value
	         * @returns {Matrix} this
	         */
	        fill(value) {
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, value);
	                }
	            }
	            return this;
	        }

	        /**
	         * Negates the matrix. All elements will be multiplied by (-1)
	         * @returns {Matrix} this
	         */
	        neg() {
	            return this.mulS(-1);
	        }

	        /**
	         * Returns a new array from the given row index
	         * @param {number} index - Row index
	         * @returns {Array}
	         */
	        getRow(index) {
	            util.checkRowIndex(this, index);
	            var row = new Array(this.columns);
	            for (var i = 0; i < this.columns; i++) {
	                row[i] = this.get(index, i);
	            }
	            return row;
	        }

	        /**
	         * Returns a new row vector from the given row index
	         * @param {number} index - Row index
	         * @returns {Matrix}
	         */
	        getRowVector(index) {
	            return this.constructor.rowVector(this.getRow(index));
	        }

	        /**
	         * Sets a row at the given index
	         * @param {number} index - Row index
	         * @param {Array|Matrix} array - Array or vector
	         * @returns {Matrix} this
	         */
	        setRow(index, array) {
	            util.checkRowIndex(this, index);
	            array = util.checkRowVector(this, array);
	            for (var i = 0; i < this.columns; i++) {
	                this.set(index, i, array[i]);
	            }
	            return this;
	        }

	        /**
	         * Swaps two rows
	         * @param {number} row1 - First row index
	         * @param {number} row2 - Second row index
	         * @returns {Matrix} this
	         */
	        swapRows(row1, row2) {
	            util.checkRowIndex(this, row1);
	            util.checkRowIndex(this, row2);
	            for (var i = 0; i < this.columns; i++) {
	                var temp = this.get(row1, i);
	                this.set(row1, i, this.get(row2, i));
	                this.set(row2, i, temp);
	            }
	            return this;
	        }

	        /**
	         * Returns a new array from the given column index
	         * @param {number} index - Column index
	         * @returns {Array}
	         */
	        getColumn(index) {
	            util.checkColumnIndex(this, index);
	            var column = new Array(this.rows);
	            for (var i = 0; i < this.rows; i++) {
	                column[i] = this.get(i, index);
	            }
	            return column;
	        }

	        /**
	         * Returns a new column vector from the given column index
	         * @param {number} index - Column index
	         * @returns {Matrix}
	         */
	        getColumnVector(index) {
	            return this.constructor.columnVector(this.getColumn(index));
	        }

	        /**
	         * Sets a column at the given index
	         * @param {number} index - Column index
	         * @param {Array|Matrix} array - Array or vector
	         * @returns {Matrix} this
	         */
	        setColumn(index, array) {
	            util.checkColumnIndex(this, index);
	            array = util.checkColumnVector(this, array);
	            for (var i = 0; i < this.rows; i++) {
	                this.set(i, index, array[i]);
	            }
	            return this;
	        }

	        /**
	         * Swaps two columns
	         * @param {number} column1 - First column index
	         * @param {number} column2 - Second column index
	         * @returns {Matrix} this
	         */
	        swapColumns(column1, column2) {
	            util.checkColumnIndex(this, column1);
	            util.checkColumnIndex(this, column2);
	            for (var i = 0; i < this.rows; i++) {
	                var temp = this.get(i, column1);
	                this.set(i, column1, this.get(i, column2));
	                this.set(i, column2, temp);
	            }
	            return this;
	        }

	        /**
	         * Adds the values of a vector to each row
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        addRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) + vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Subtracts the values of a vector from each row
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        subRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) - vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a vector with each row
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        mulRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) * vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Divides the values of each row by those of a vector
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        divRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) / vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Adds the values of a vector to each column
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        addColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) + vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Subtracts the values of a vector from each column
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        subColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) - vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a vector with each column
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        mulColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) * vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Divides the values of each column by those of a vector
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        divColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) / vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a row with a scalar
	         * @param {number} index - Row index
	         * @param {number} value
	         * @returns {Matrix} this
	         */
	        mulRow(index, value) {
	            util.checkRowIndex(this, index);
	            for (var i = 0; i < this.columns; i++) {
	                this.set(index, i, this.get(index, i) * value);
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a column with a scalar
	         * @param {number} index - Column index
	         * @param {number} value
	         * @returns {Matrix} this
	         */
	        mulColumn(index, value) {
	            util.checkColumnIndex(this, index);
	            for (var i = 0; i < this.rows; i++) {
	                this.set(i, index, this.get(i, index) * value);
	            }
	        }

	        /**
	         * Returns the maximum value of the matrix
	         * @returns {number}
	         */
	        max() {
	            var v = this.get(0, 0);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) > v) {
	                        v = this.get(i, j);
	                    }
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value
	         * @returns {Array}
	         */
	        maxIndex() {
	            var v = this.get(0, 0);
	            var idx = [0, 0];
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) > v) {
	                        v = this.get(i, j);
	                        idx[0] = i;
	                        idx[1] = j;
	                    }
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the minimum value of the matrix
	         * @returns {number}
	         */
	        min() {
	            var v = this.get(0, 0);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) < v) {
	                        v = this.get(i, j);
	                    }
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the minimum value
	         * @returns {Array}
	         */
	        minIndex() {
	            var v = this.get(0, 0);
	            var idx = [0, 0];
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) < v) {
	                        v = this.get(i, j);
	                        idx[0] = i;
	                        idx[1] = j;
	                    }
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the maximum value of one row
	         * @param {number} row - Row index
	         * @returns {number}
	         */
	        maxRow(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) > v) {
	                    v = this.get(row, i);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value of one row
	         * @param {number} row - Row index
	         * @returns {Array}
	         */
	        maxRowIndex(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            var idx = [row, 0];
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) > v) {
	                    v = this.get(row, i);
	                    idx[1] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the minimum value of one row
	         * @param {number} row - Row index
	         * @returns {number}
	         */
	        minRow(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) < v) {
	                    v = this.get(row, i);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value of one row
	         * @param {number} row - Row index
	         * @returns {Array}
	         */
	        minRowIndex(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            var idx = [row, 0];
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) < v) {
	                    v = this.get(row, i);
	                    idx[1] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the maximum value of one column
	         * @param {number} column - Column index
	         * @returns {number}
	         */
	        maxColumn(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) > v) {
	                    v = this.get(i, column);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value of one column
	         * @param {number} column - Column index
	         * @returns {Array}
	         */
	        maxColumnIndex(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            var idx = [0, column];
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) > v) {
	                    v = this.get(i, column);
	                    idx[0] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the minimum value of one column
	         * @param {number} column - Column index
	         * @returns {number}
	         */
	        minColumn(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) < v) {
	                    v = this.get(i, column);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the minimum value of one column
	         * @param {number} column - Column index
	         * @returns {Array}
	         */
	        minColumnIndex(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            var idx = [0, column];
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) < v) {
	                    v = this.get(i, column);
	                    idx[0] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns an array containing the diagonal values of the matrix
	         * @returns {Array}
	         */
	        diag() {
	            var min = Math.min(this.rows, this.columns);
	            var diag = new Array(min);
	            for (var i = 0; i < min; i++) {
	                diag[i] = this.get(i, i);
	            }
	            return diag;
	        }

	        /**
	         * Returns the sum of all elements of the matrix
	         * @returns {number}
	         */
	        sum() {
	            var v = 0;
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    v += this.get(i, j);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the mean of all elements of the matrix
	         * @returns {number}
	         */
	        mean() {
	            return this.sum() / this.size;
	        }

	        /**
	         * Returns the product of all elements of the matrix
	         * @returns {number}
	         */
	        prod() {
	            var prod = 1;
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    prod *= this.get(i, j);
	                }
	            }
	            return prod;
	        }

	        /**
	         * Computes the cumulative sum of the matrix elements (in place, row by row)
	         * @returns {Matrix} this
	         */
	        cumulativeSum() {
	            var sum = 0;
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    sum += this.get(i, j);
	                    this.set(i, j, sum);
	                }
	            }
	            return this;
	        }

	        /**
	         * Computes the dot (scalar) product between the matrix and another
	         * @param {Matrix} vector2 vector
	         * @returns {number}
	         */
	        dot(vector2) {
	            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();
	            var vector1 = this.to1DArray();
	            if (vector1.length !== vector2.length) {
	                throw new RangeError('vectors do not have the same size');
	            }
	            var dot = 0;
	            for (var i = 0; i < vector1.length; i++) {
	                dot += vector1[i] * vector2[i];
	            }
	            return dot;
	        }

	        /**
	         * Returns the matrix product between this and other
	         * @param {Matrix} other
	         * @returns {Matrix}
	         */
	        mmul(other) {
	            other = this.constructor.checkMatrix(other);
	            if (this.columns !== other.rows)
	                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');

	            var m = this.rows;
	            var n = this.columns;
	            var p = other.columns;

	            var result = new this.constructor[Symbol.species](m, p);

	            var Bcolj = new Array(n);
	            for (var j = 0; j < p; j++) {
	                for (var k = 0; k < n; k++) {
	                    Bcolj[k] = other.get(k, j);
	                }

	                for (var i = 0; i < m; i++) {
	                    var s = 0;
	                    for (k = 0; k < n; k++) {
	                        s += this.get(i, k) * Bcolj[k];
	                    }

	                    result.set(i, j, s);
	                }
	            }
	            return result;
	        }

	        strassen_2x2(other){
	            var result = new this.constructor[Symbol.species](2, 2);
	            const a11 = this.get(0,0);
	            const b11 = other.get(0,0);
	            const a12 = this.get(0,1);
	            const b12 = other.get(0,1);
	            const a21 = this.get(1,0);
	            const b21 = other.get(1,0);
	            const a22 = this.get(1,1);
	            const b22 = other.get(1,1);

	            // Compute intermediate values.
	            const m1 = (a11+a22)*(b11+b22);
	            const m2 = (a21+a22)*b11;
	            const m3 = a11*(b12-b22);
	            const m4 = a22*(b21-b11);
	            const m5 = (a11+a12)*b22;
	            const m6 = (a21-a11)*(b11+b12);
	            const m7 = (a12-a22)*(b21+b22);

	            // Combine intermediate values into the output.
	            const c00 =m1+m4-m5+m7;
	            const c01 = m3+m5;
	            const c10 = m2+m4;
	            const c11 = m1-m2+m3+m6;

	            result.set(0,0,c00);
	            result.set(0,1,c01);
	            result.set(1,0,c10);
	            result.set(1,1,c11);
	            return result;
	        }

	        strassen_3x3(other){
	            var result = new this.constructor[Symbol.species](3, 3);

	            const a00 = this.get(0,0);
	            const a01 = this.get(0,1);
	            const a02 = this.get(0,2);
	            const a10 = this.get(1,0);
	            const a11 = this.get(1,1);
	            const a12 = this.get(1,2);
	            const a20 = this.get(2,0);
	            const a21 = this.get(2,1);
	            const a22 = this.get(2,2);

	            const b00 = other.get(0,0);
	            const b01 = other.get(0,1);
	            const b02 = other.get(0,2);
	            const b10 = other.get(1,0);
	            const b11 = other.get(1,1);
	            const b12 = other.get(1,2);
	            const b20 = other.get(2,0);
	            const b21 = other.get(2,1);
	            const b22 = other.get(2,2);

	            const m1 = (a00+a01+a02-a10-a11-a21-a22)*b11;
	            const m2 = (a00-a10)*(-b01+b11);
	            const m3 = a11*(-b00+b01+b10-b11-b12-b20+b22);
	            const m4 = (-a00+a10+a11)*(b00-b01+b11);
	            const m5 = (a10+a11)*(-b00+b01);
	            const m6 = a00*b00;
	            const m7 = (-a00+a20+a21)*(b00-b02+b12);
	            const m8 = (-a00+a20)*(b02-b12);
	            const m9 = (a20+a21)*(-b00+b02);
	            const m10 = (a00+a01+a02-a11-a12-a20-a21)*b12;
	            const m11 = a21*(-b00+b02+b10-b11-b12-b20+b21);
	            const m12 = (-a02+a21+a22)*(b11+b20-b21);
	            const m13 = (a02-a22)*(b11-b21);
	            const m14 = a02*b20;
	            const m15 = (a21+a22)*(-b20+b21);
	            const m16 = (-a02+a11+a12)*(b12+b20-b22);
	            const m17 = (a02-a12)*(b12-b22);
	            const m18 = (a11+a12)*(-b20+b22);
	            const m19= a01*b10;
	            const m20 = a12*b21;
	            const m21 = a10*b02;
	            const m22 = a20*b01;
	            const m23 = a22*b22;

	            const c00 = m6+m14+m19;
	            const c01 = m1+m4+m5+m6+m12+m14+m15;
	            const c02 = m6+m7+m9+m10+m14+m16+m18;
	            const c10 = m2+m3+m4+m6+m14+m16+m17;
	            const c11 = m2+m4+m5+m6+m20;
	            const c12 = m14+m16+m17+m18+m21;
	            const c20 = m6+m7+m8+m11+m12+m13+m14;
	            const c21 = m12+m13+m14+m15+m22;
	            const c22 = m6+m7+m8+m9+m23;

	            result.set(0,0,c00);
	            result.set(0,1,c01);
	            result.set(0,2,c02);
	            result.set(1,0,c10);
	            result.set(1,1,c11);
	            result.set(1,2,c12);
	            result.set(2,0,c20);
	            result.set(2,1,c21);
	            result.set(2,2,c22);
	            return result;
	        }


	        /**
	         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.
	         * @param {Matrix} x
	         * @param {Matrix} y
	         * @returns {Matrix}
	         */
	        mmul_strassen(y){
	            var x = this.clone();
	            var r1 = x.rows;
	            var c1 = x.columns;
	            var r2 = y.rows;
	            var c2 = y.columns;
	            if(c1 != r2){
	                console.log(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`)
	            }

	            // Put a matrix into the top left of a matrix of zeros.
	            // `rows` and `cols` are the dimensions of the output matrix.
	            function embed(mat, rows, cols){
	                var r = mat.rows;
	                var c = mat.columns;
	                if((r==rows) && (c==cols)){
	                    return mat;
	                }
	                else{
	                    var resultat = Matrix.zeros(rows, cols);
	                    resultat = resultat.setSubMatrix(mat, 0, 0);
	                    return resultat;
	                }
	            }


	            // Make sure both matrices are the same size.
	            // This is exclusively for simplicity:
	            // this algorithm can be implemented with matrices of different sizes.

	            var r = Math.max(r1, r2);
	            var c = Math.max(c1, c2);
	            var x = embed(x, r, c);
	            var y = embed(y, r, c);

	            // Our recursive multiplication function.
	            function block_mult(a, b, rows, cols){
	                // For small matrices, resort to naive multiplication.
	                if (rows <= 512 || cols <= 512){
	                    return a.mmul(b); // a is equivalent to this
	                }

	                // Apply dynamic padding.
	                if ((rows % 2 == 1) && (cols % 2 == 1)) {
	                    a = embed(a, rows + 1, cols + 1);
	                    b = embed(b, rows + 1, cols + 1);
	                }
	                else if (rows % 2 == 1){
	                    a = embed(a, rows + 1, cols);
	                    b = embed(b, rows + 1, cols);
	                }
	                else if (cols % 2 == 1){
	                    a = embed(a, rows, cols + 1);
	                    b = embed(b, rows, cols + 1);
	                }

	                var half_rows = parseInt(a.rows / 2);
	                var half_cols = parseInt(a.columns / 2);
	                // Subdivide input matrices.
	                var a11 = a.subMatrix(0, half_rows -1, 0, half_cols - 1);
	                var b11 = b.subMatrix(0, half_rows -1, 0, half_cols - 1);

	                var a12 = a.subMatrix(0, half_rows -1, half_cols, a.columns - 1);
	                var b12 = b.subMatrix(0, half_rows -1,  half_cols, b.columns - 1);

	                var a21 = a.subMatrix(half_rows, a.rows - 1,  0, half_cols - 1);
	                var b21 = b.subMatrix(half_rows, b.rows - 1,  0, half_cols - 1);

	                var a22 = a.subMatrix(half_rows, a.rows - 1, half_cols, a.columns - 1);
	                var b22 = b.subMatrix(half_rows, b.rows - 1, half_cols, b.columns - 1);

	                // Compute intermediate values.
	                var m1 = block_mult(Matrix.add(a11,a22), Matrix.add(b11,b22), half_rows, half_cols);
	                var m2 = block_mult(Matrix.add(a21,a22), b11, half_rows, half_cols);
	                var m3 = block_mult(a11, Matrix.sub(b12, b22), half_rows, half_cols);
	                var m4 = block_mult(a22, Matrix.sub(b21,b11), half_rows, half_cols);
	                var m5 = block_mult(Matrix.add(a11,a12), b22, half_rows, half_cols);
	                var m6 = block_mult(Matrix.sub(a21, a11), Matrix.add(b11, b12), half_rows, half_cols);
	                var m7 = block_mult(Matrix.sub(a12,a22), Matrix.add(b21,b22), half_rows, half_cols);

	                // Combine intermediate values into the output.
	                var c11 = Matrix.add(m1, m4);
	                c11.sub(m5);
	                c11.add(m7);
	                var c12 = Matrix.add(m3,m5);
	                var c21 = Matrix.add(m2,m4);
	                var c22 = Matrix.sub(m1,m2);
	                c22.add(m3);
	                c22.add(m6);

	                //Crop output to the desired size (undo dynamic padding).
	                var resultat = Matrix.zeros(2*c11.rows, 2*c11.columns);
	                resultat = resultat.setSubMatrix(c11, 0, 0);
	                resultat = resultat.setSubMatrix(c12, c11.rows, 0)
	                resultat = resultat.setSubMatrix(c21, 0, c11.columns);
	                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);
	                return resultat.subMatrix(0, rows - 1, 0, cols - 1);
	            }
	            var resultat_final =  block_mult(x, y, r, c);
	            return resultat_final;
	        };

	        /**
	         * Returns a row-by-row scaled matrix
	         * @param {Number} [min=0] - Minimum scaled value
	         * @param {Number} [max=1] - Maximum scaled value
	         * @returns {Matrix} - The scaled matrix
	         */
	        scaleRows(min, max) {
	            min = min === undefined ? 0 : min;
	            max = max === undefined ? 1 : max;
	            if (min >= max) {
	                throw new RangeError('min should be strictly smaller than max');
	            }
	            var newMatrix = this.constructor.empty(this.rows, this.columns);
	            for (var i = 0; i < this.rows; i++) {
	                var scaled = arrayUtils.scale(this.getRow(i), {min, max});
	                newMatrix.setRow(i, scaled);
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns a new column-by-column scaled matrix
	         * @param {Number} [min=0] - Minimum scaled value
	         * @param {Number} [max=1] - Maximum scaled value
	         * @returns {Matrix} - The new scaled matrix
	         * @example
	         * var matrix = new Matrix([[1,2],[-1,0]]);
	         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]
	         */
	        scaleColumns(min, max) {
	            min = min === undefined ? 0 : min;
	            max = max === undefined ? 1 : max;
	            if (min >= max) {
	                throw new RangeError('min should be strictly smaller than max');
	            }
	            var newMatrix = this.constructor.empty(this.rows, this.columns);
	            for (var i = 0; i < this.columns; i++) {
	                var scaled = arrayUtils.scale(this.getColumn(i), {
	                    min: min,
	                    max: max
	                });
	                newMatrix.setColumn(i, scaled);
	            }
	            return newMatrix;
	        }


	        /**
	         * Returns the Kronecker product (also known as tensor product) between this and other
	         * See https://en.wikipedia.org/wiki/Kronecker_product
	         * @param {Matrix} other
	         * @return {Matrix}
	         */
	        kroneckerProduct(other) {
	            other = this.constructor.checkMatrix(other);

	            var m = this.rows;
	            var n = this.columns;
	            var p = other.rows;
	            var q = other.columns;

	            var result = new this.constructor[Symbol.species](m * p, n * q);
	            for (var i = 0; i < m; i++) {
	                for (var j = 0; j < n; j++) {
	                    for (var k = 0; k < p; k++) {
	                        for (var l = 0; l < q; l++) {
	                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);
	                        }
	                    }
	                }
	            }
	            return result;
	        }

	        /**
	         * Transposes the matrix and returns a new one containing the result
	         * @returns {Matrix}
	         */
	        transpose() {
	            var result = new this.constructor[Symbol.species](this.columns, this.rows);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    result.set(j, i, this.get(i, j));
	                }
	            }
	            return result;
	        }

	        /**
	         * Sorts the rows (in place)
	         * @param {function} compareFunction - usual Array.prototype.sort comparison function
	         * @returns {Matrix} this
	         */
	        sortRows(compareFunction) {
	            if (compareFunction === undefined) compareFunction = compareNumbers;
	            for (var i = 0; i < this.rows; i++) {
	                this.setRow(i, this.getRow(i).sort(compareFunction));
	            }
	            return this;
	        }

	        /**
	         * Sorts the columns (in place)
	         * @param {function} compareFunction - usual Array.prototype.sort comparison function
	         * @returns {Matrix} this
	         */
	        sortColumns(compareFunction) {
	            if (compareFunction === undefined) compareFunction = compareNumbers;
	            for (var i = 0; i < this.columns; i++) {
	                this.setColumn(i, this.getColumn(i).sort(compareFunction));
	            }
	            return this;
	        }

	        /**
	         * Returns a subset of the matrix
	         * @param {number} startRow - First row index
	         * @param {number} endRow - Last row index
	         * @param {number} startColumn - First column index
	         * @param {number} endColumn - Last column index
	         * @returns {Matrix}
	         */
	        subMatrix(startRow, endRow, startColumn, endColumn) {
	            util.checkRange(this, startRow, endRow, startColumn, endColumn);
	            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);
	            for (var i = startRow; i <= endRow; i++) {
	                for (var j = startColumn; j <= endColumn; j++) {
	                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns a subset of the matrix based on an array of row indices
	         * @param {Array} indices - Array containing the row indices
	         * @param {number} [startColumn = 0] - First column index
	         * @param {number} [endColumn = this.columns-1] - Last column index
	         * @returns {Matrix}
	         */
	        subMatrixRow(indices, startColumn, endColumn) {
	            if (startColumn === undefined) startColumn = 0;
	            if (endColumn === undefined) endColumn = this.columns - 1;
	            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {
	                throw new RangeError('Argument out of range');
	            }

	            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);
	            for (var i = 0; i < indices.length; i++) {
	                for (var j = startColumn; j <= endColumn; j++) {
	                    if (indices[i] < 0 || indices[i] >= this.rows) {
	                        throw new RangeError('Row index out of range: ' + indices[i]);
	                    }
	                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns a subset of the matrix based on an array of column indices
	         * @param {Array} indices - Array containing the column indices
	         * @param {number} [startRow = 0] - First row index
	         * @param {number} [endRow = this.rows-1] - Last row index
	         * @returns {Matrix}
	         */
	        subMatrixColumn(indices, startRow, endRow) {
	            if (startRow === undefined) startRow = 0;
	            if (endRow === undefined) endRow = this.rows - 1;
	            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {
	                throw new RangeError('Argument out of range');
	            }

	            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);
	            for (var i = 0; i < indices.length; i++) {
	                for (var j = startRow; j <= endRow; j++) {
	                    if (indices[i] < 0 || indices[i] >= this.columns) {
	                        throw new RangeError('Column index out of range: ' + indices[i]);
	                    }
	                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Set a part of the matrix to the given sub-matrix
	         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.
	         * @param startRow - The index of the first row to set
	         * @param startColumn - The index of the first column to set
	         * @returns {Matrix}
	         */
	        setSubMatrix(matrix, startRow, startColumn) {
	            matrix = this.constructor.checkMatrix(matrix);
	            var endRow = startRow + matrix.rows - 1;
	            var endColumn = startColumn + matrix.columns - 1;
	            util.checkRange(this, startRow, endRow, startColumn, endColumn);
	            for (var i = 0; i < matrix.rows; i++) {
	                for (var j = 0; j < matrix.columns; j++) {
	                    this[startRow + i][startColumn + j] = matrix.get(i, j);
	                }
	            }
	            return this;
	        }

	        /**
	         * Return a new matrix based on a selection of rows and columns
	         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.
	         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.
	         * @returns {Matrix} The new matrix
	         */
	        selection(rowIndices, columnIndices) {
	            var indices = util.checkIndices(this, rowIndices, columnIndices);
	            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);
	            for (var i = 0; i < indices.row.length; i++) {
	                var rowIndex = indices.row[i];
	                for (var j = 0; j < indices.column.length; j++) {
	                    var columnIndex = indices.column[j];
	                    newMatrix[i][j] = this.get(rowIndex, columnIndex);
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns the trace of the matrix (sum of the diagonal elements)
	         * @returns {number}
	         */
	        trace() {
	            var min = Math.min(this.rows, this.columns);
	            var trace = 0;
	            for (var i = 0; i < min; i++) {
	                trace += this.get(i, i);
	            }
	            return trace;
	        }

	        /*
	         Matrix views
	         */

	        /**
	         * Returns a view of the transposition of the matrix
	         * @returns {MatrixTransposeView}
	         */
	        transposeView() {
	            return new MatrixTransposeView(this);
	        }

	        /**
	         * Returns a view of the row vector with the given index
	         * @param {number} row - row index of the vector
	         * @returns {MatrixRowView}
	         */
	        rowView(row) {
	            util.checkRowIndex(this, row);
	            return new MatrixRowView(this, row);
	        }

	        /**
	         * Returns a view of the column vector with the given index
	         * @param {number} column - column index of the vector
	         * @returns {MatrixColumnView}
	         */
	        columnView(column) {
	            util.checkColumnIndex(this, column);
	            return new MatrixColumnView(this, column);
	        }

	        /**
	         * Returns a view of the matrix flipped in the row axis
	         * @returns {MatrixFlipRowView}
	         */
	        flipRowView() {
	            return new MatrixFlipRowView(this);
	        }

	        /**
	         * Returns a view of the matrix flipped in the column axis
	         * @returns {MatrixFlipColumnView}
	         */
	        flipColumnView() {
	            return new MatrixFlipColumnView(this);
	        }

	        /**
	         * Returns a view of a submatrix giving the index boundaries
	         * @param {number} startRow - first row index of the submatrix
	         * @param {number} endRow - last row index of the submatrix
	         * @param {number} startColumn - first column index of the submatrix
	         * @param {number} endColumn - last column index of the submatrix
	         * @returns {MatrixSubView}
	         */
	        subMatrixView(startRow, endRow, startColumn, endColumn) {
	            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);
	        }

	        /**
	         * Returns a view of the cross of the row indices and the column indices
	         * @example
	         * // resulting vector is [[2], [2]]
	         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])
	         * @param {Array<number>} rowIndices
	         * @param {Array<number>} columnIndices
	         * @returns {MatrixSelectionView}
	         */
	        selectionView(rowIndices, columnIndices) {
	            return new MatrixSelectionView(this, rowIndices, columnIndices);
	        }
	    }

	    Matrix.prototype.klass = 'Matrix';

	    /**
	     * @private
	     * Check that two matrices have the same dimensions
	     * @param {Matrix} matrix
	     * @param {Matrix} otherMatrix
	     */
	    function checkDimensions(matrix, otherMatrix) {
	        if (matrix.rows !== otherMatrix.rows ||
	            matrix.columns !== otherMatrix.columns) {
	            throw new RangeError('Matrices dimensions must be equal');
	        }
	    }

	    function compareNumbers(a, b) {
	        return a - b;
	    }

	    /*
	     Synonyms
	     */

	    Matrix.random = Matrix.rand;
	    Matrix.diagonal = Matrix.diag;
	    Matrix.prototype.diagonal = Matrix.prototype.diag;
	    Matrix.identity = Matrix.eye;
	    Matrix.prototype.negate = Matrix.prototype.neg;
	    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;

	    /*
	     Add dynamically instance and static methods for mathematical operations
	     */

	    var inplaceOperator = `
	(function %name%(value) {
	    if (typeof value === 'number') return this.%name%S(value);
	    return this.%name%M(value);
	})
	`;

	    var inplaceOperatorScalar = `
	(function %name%S(value) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, this.get(i, j) %op% value);
	        }
	    }
	    return this;
	})
	`;

	    var inplaceOperatorMatrix = `
	(function %name%M(matrix) {
	    matrix = this.constructor.checkMatrix(matrix);
	    checkDimensions(this, matrix);
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));
	        }
	    }
	    return this;
	})
	`;

	    var staticOperator = `
	(function %name%(matrix, value) {
	    var newMatrix = new this[Symbol.species](matrix);
	    return newMatrix.%name%(value);
	})
	`;

	    var inplaceMethod = `
	(function %name%() {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j)));
	        }
	    }
	    return this;
	})
	`;

	    var staticMethod = `
	(function %name%(matrix) {
	    var newMatrix = new this[Symbol.species](matrix);
	    return newMatrix.%name%();
	})
	`;

	    var inplaceMethodWithArgs = `
	(function %name%(%args%) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j), %args%));
	        }
	    }
	    return this;
	})
	`;

	    var staticMethodWithArgs = `
	(function %name%(matrix, %args%) {
	    var newMatrix = new this[Symbol.species](matrix);
	    return newMatrix.%name%(%args%);
	})
	`;


	    var inplaceMethodWithOneArgScalar = `
	(function %name%S(value) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j), value));
	        }
	    }
	    return this;
	})
	`;
	    var inplaceMethodWithOneArgMatrix = `
	(function %name%M(matrix) {
	    matrix = this.constructor.checkMatrix(matrix);
	    checkDimensions(this, matrix);
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));
	        }
	    }
	    return this;
	})
	`;

	    var inplaceMethodWithOneArg = `
	(function %name%(value) {
	    if (typeof value === 'number') return this.%name%S(value);
	    return this.%name%M(value);
	})
	`;

	    var staticMethodWithOneArg = staticMethodWithArgs;

	    var operators = [
	        // Arithmetic operators
	        ['+', 'add'],
	        ['-', 'sub', 'subtract'],
	        ['*', 'mul', 'multiply'],
	        ['/', 'div', 'divide'],
	        ['%', 'mod', 'modulus'],
	        // Bitwise operators
	        ['&', 'and'],
	        ['|', 'or'],
	        ['^', 'xor'],
	        ['<<', 'leftShift'],
	        ['>>', 'signPropagatingRightShift'],
	        ['>>>', 'rightShift', 'zeroFillRightShift']
	    ];

	    for (var operator of operators) {
	        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));
	        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));
	        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));
	        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));
	        for (var i = 1; i < operator.length; i++) {
	            Matrix.prototype[operator[i]] = inplaceOp;
	            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;
	            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;
	            Matrix[operator[i]] = staticOp;
	        }
	    }

	    var methods = [
	        ['~', 'not']
	    ];

	    [
	        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',
	        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',
	        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'
	    ].forEach(function (mathMethod) {
	        methods.push(['Math.' + mathMethod, mathMethod]);
	    });

	    for (var method of methods) {
	        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));
	        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));
	        for (var i = 1; i < method.length; i++) {
	            Matrix.prototype[method[i]] = inplaceMeth;
	            Matrix[method[i]] = staticMeth;
	        }
	    }

	    var methodsWithArgs = [
	        ['Math.pow', 1, 'pow']
	    ];

	    for (var methodWithArg of methodsWithArgs) {
	        var args = 'arg0';
	        for (var i = 1; i < methodWithArg[1]; i++) {
	            args += `, arg${i}`;
	        }
	        if (methodWithArg[1] !== 1) {
	            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {
	                name: methodWithArg[2],
	                method: methodWithArg[0],
	                args: args
	            }));
	            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));
	            for (var i = 2; i < methodWithArg.length; i++) {
	                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;
	                Matrix[methodWithArg[i]] = staticMethWithArgs;
	            }
	        } else {
	            var tmplVar = {
	                name: methodWithArg[2],
	                args: args,
	                method: methodWithArg[0]
	            };
	            var inplaceMethod = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));
	            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));
	            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));
	            var staticMethod = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));
	            for (var i = 2; i < methodWithArg.length; i++) {
	                Matrix.prototype[methodWithArg[i]] = inplaceMethod;
	                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;
	                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;
	                Matrix[methodWithArg[i]] = staticMethod;
	            }
	        }
	    }

	    function fillTemplateFunction(template, values) {
	        for (var i in values) {
	            template = template.replace(new RegExp('%' + i + '%', 'g'), values[i]);
	        }
	        return template;
	    }

	    return Matrix;
	}


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = exports = __webpack_require__(27);


	exports.getEquallySpacedData = __webpack_require__(31).getEquallySpacedData;
	exports.SNV = __webpack_require__(32).SNV;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Stat = __webpack_require__(28).array;
	/**
	 * Function that returns an array of points given 1D array as follows:
	 *
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * And receive the number of dimensions of each point.
	 * @param array
	 * @param dimensions
	 * @returns {Array} - Array of points.
	 */
	function coordArrayToPoints(array, dimensions) {
	    if(array.length % dimensions !== 0) {
	        throw new RangeError('Dimensions number must be accordance with the size of the array.');
	    }

	    var length = array.length / dimensions;
	    var pointsArr = new Array(length);

	    var k = 0;
	    for(var i = 0; i < array.length; i += dimensions) {
	        var point = new Array(dimensions);
	        for(var j = 0; j < dimensions; ++j) {
	            point[j] = array[i + j];
	        }

	        pointsArr[k] = point;
	        k++;
	    }

	    return pointsArr;
	}


	/**
	 * Function that given an array as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * Returns an array as follows:
	 * [[x1, x2, ..], [y1, y2, ..], [ .. ]]
	 *
	 * And receives the number of dimensions of each coordinate.
	 * @param array
	 * @param dimensions
	 * @returns {Array} - Matrix of coordinates
	 */
	function coordArrayToCoordMatrix(array, dimensions) {
	    if(array.length % dimensions !== 0) {
	        throw new RangeError('Dimensions number must be accordance with the size of the array.');
	    }

	    var coordinatesArray = new Array(dimensions);
	    var points = array.length / dimensions;
	    for (var i = 0; i < coordinatesArray.length; i++) {
	        coordinatesArray[i] = new Array(points);
	    }

	    for(i = 0; i < array.length; i += dimensions) {
	        for(var j = 0; j < dimensions; ++j) {
	            var currentPoint = Math.floor(i / dimensions);
	            coordinatesArray[j][currentPoint] = array[i + j];
	        }
	    }

	    return coordinatesArray;
	}

	/**
	 * Function that receives a coordinate matrix as follows:
	 * [[x1, x2, ..], [y1, y2, ..], [ .. ]]
	 *
	 * Returns an array of coordinates as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * @param coordMatrix
	 * @returns {Array}
	 */
	function coordMatrixToCoordArray(coordMatrix) {
	    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);
	    var k = 0;
	    for(var i = 0; i < coordMatrix[0].length; ++i) {
	        for(var j = 0; j < coordMatrix.length; ++j) {
	            coodinatesArray[k] = coordMatrix[j][i];
	            ++k;
	        }
	    }

	    return coodinatesArray;
	}

	/**
	 * Tranpose a matrix, this method is for coordMatrixToPoints and
	 * pointsToCoordMatrix, that because only transposing the matrix
	 * you can change your representation.
	 *
	 * @param matrix
	 * @returns {Array}
	 */
	function transpose(matrix) {
	    var resultMatrix = new Array(matrix[0].length);
	    for(var i = 0; i < resultMatrix.length; ++i) {
	        resultMatrix[i] = new Array(matrix.length);
	    }

	    for (i = 0; i < matrix.length; ++i) {
	        for(var j = 0; j < matrix[0].length; ++j) {
	            resultMatrix[j][i] = matrix[i][j];
	        }
	    }

	    return resultMatrix;
	}

	/**
	 * Function that transform an array of points into a coordinates array
	 * as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * @param points
	 * @returns {Array}
	 */
	function pointsToCoordArray(points) {
	    var coodinatesArray = new Array(points.length * points[0].length);
	    var k = 0;
	    for(var i = 0; i < points.length; ++i) {
	        for(var j = 0; j < points[0].length; ++j) {
	            coodinatesArray[k] = points[i][j];
	            ++k;
	        }
	    }

	    return coodinatesArray;
	}

	/**
	 * Apply the dot product between the smaller vector and a subsets of the
	 * largest one.
	 *
	 * @param firstVector
	 * @param secondVector
	 * @returns {Array} each dot product of size of the difference between the
	 *                  larger and the smallest one.
	 */
	function applyDotProduct(firstVector, secondVector) {
	    var largestVector, smallestVector;
	    if(firstVector.length <= secondVector.length) {
	        smallestVector = firstVector;
	        largestVector = secondVector;
	    } else {
	        smallestVector = secondVector;
	        largestVector = firstVector;
	    }

	    var difference = largestVector.length - smallestVector.length + 1;
	    var dotProductApplied = new Array(difference);

	    for (var i = 0; i < difference; ++i) {
	        var sum = 0;
	        for (var j = 0; j < smallestVector.length; ++j) {
	            sum += smallestVector[j] * largestVector[i + j];
	        }
	        dotProductApplied[i] = sum;
	    }

	    return dotProductApplied;
	}
	/**
	 * To scale the input array between the specified min and max values. The operation is performed inplace
	 * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling
	 * will multiply the input array by min/min(input) or max/max(input)
	 * @param input
	 * @param options
	 * @returns {*}
	 */
	function scale(input, options){
	    var y;
	    if(options.inPlace){
	        y = input;
	    }
	    else{
	        y = new Array(input.length);
	    }
	    const max = options.max;
	    const min = options.min;
	    if(typeof max === "number"){
	        if(typeof min === "number"){
	            var minMax = Stat.minMax(input);
	            var factor = (max - min)/(minMax.max-minMax.min);
	            for(var i=0;i< y.length;i++){
	                y[i]=(input[i]-minMax.min)*factor+min;
	            }
	        }
	        else{
	            var currentMin = Stat.max(input);
	            var factor = max/currentMin;
	            for(var i=0;i< y.length;i++){
	                y[i] = input[i]*factor;
	            }
	        }
	    }
	    else{
	        if(typeof min === "number"){
	            var currentMin = Stat.min(input);
	            var factor = min/currentMin;
	            for(var i=0;i< y.length;i++){
	                y[i] = input[i]*factor;
	            }
	        }
	    }
	    return y;
	}

	module.exports = {
	    coordArrayToPoints: coordArrayToPoints,
	    coordArrayToCoordMatrix: coordArrayToCoordMatrix,
	    coordMatrixToCoordArray: coordMatrixToCoordArray,
	    coordMatrixToPoints: transpose,
	    pointsToCoordArray: pointsToCoordArray,
	    pointsToCoordMatrix: transpose,
	    applyDotProduct: applyDotProduct,
	    scale:scale
	};



/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.array = __webpack_require__(29);
	exports.matrix = __webpack_require__(30);


/***/ },
/* 29 */
/***/ function(module, exports) {

	'use strict';

	function compareNumbers(a, b) {
	    return a - b;
	}

	/**
	 * Computes the sum of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.sum = function sum(values) {
	    var sum = 0;
	    for (var i = 0; i < values.length; i++) {
	        sum += values[i];
	    }
	    return sum;
	};

	/**
	 * Computes the maximum of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.max = function max(values) {
	    var max = values[0];
	    var l = values.length;
	    for (var i = 1; i < l; i++) {
	        if (values[i] > max) max = values[i];
	    }
	    return max;
	};

	/**
	 * Computes the minimum of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.min = function min(values) {
	    var min = values[0];
	    var l = values.length;
	    for (var i = 1; i < l; i++) {
	        if (values[i] < min) min = values[i];
	    }
	    return min;
	};

	/**
	 * Computes the min and max of the given values
	 * @param {Array} values
	 * @returns {{min: number, max: number}}
	 */
	exports.minMax = function minMax(values) {
	    var min = values[0];
	    var max = values[0];
	    var l = values.length;
	    for (var i = 1; i < l; i++) {
	        if (values[i] < min) min = values[i];
	        if (values[i] > max) max = values[i];
	    }
	    return {
	        min: min,
	        max: max
	    };
	};

	/**
	 * Computes the arithmetic mean of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.arithmeticMean = function arithmeticMean(values) {
	    var sum = 0;
	    var l = values.length;
	    for (var i = 0; i < l; i++) {
	        sum += values[i];
	    }
	    return sum / l;
	};

	/**
	 * {@link arithmeticMean}
	 */
	exports.mean = exports.arithmeticMean;

	/**
	 * Computes the geometric mean of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.geometricMean = function geometricMean(values) {
	    var mul = 1;
	    var l = values.length;
	    for (var i = 0; i < l; i++) {
	        mul *= values[i];
	    }
	    return Math.pow(mul, 1 / l);
	};

	/**
	 * Computes the mean of the log of the given values
	 * If the return value is exponentiated, it gives the same result as the
	 * geometric mean.
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.logMean = function logMean(values) {
	    var lnsum = 0;
	    var l = values.length;
	    for (var i = 0; i < l; i++) {
	        lnsum += Math.log(values[i]);
	    }
	    return lnsum / l;
	};

	/**
	 * Computes the weighted grand mean for a list of means and sample sizes
	 * @param {Array} means - Mean values for each set of samples
	 * @param {Array} samples - Number of original values for each set of samples
	 * @returns {number}
	 */
	exports.grandMean = function grandMean(means, samples) {
	    var sum = 0;
	    var n = 0;
	    var l = means.length;
	    for (var i = 0; i < l; i++) {
	        sum += samples[i] * means[i];
	        n += samples[i];
	    }
	    return sum / n;
	};

	/**
	 * Computes the truncated mean of the given values using a given percentage
	 * @param {Array} values
	 * @param {number} percent - The percentage of values to keep (range: [0,1])
	 * @param {boolean} [alreadySorted=false]
	 * @returns {number}
	 */
	exports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {
	    if (alreadySorted === undefined) alreadySorted = false;
	    if (!alreadySorted) {
	        values = [].concat(values).sort(compareNumbers);
	    }
	    var l = values.length;
	    var k = Math.floor(l * percent);
	    var sum = 0;
	    for (var i = k; i < (l - k); i++) {
	        sum += values[i];
	    }
	    return sum / (l - 2 * k);
	};

	/**
	 * Computes the harmonic mean of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.harmonicMean = function harmonicMean(values) {
	    var sum = 0;
	    var l = values.length;
	    for (var i = 0; i < l; i++) {
	        if (values[i] === 0) {
	            throw new RangeError('value at index ' + i + 'is zero');
	        }
	        sum += 1 / values[i];
	    }
	    return l / sum;
	};

	/**
	 * Computes the contraharmonic mean of the given values
	 * @param {Array} values
	 * @returns {number}
	 */
	exports.contraHarmonicMean = function contraHarmonicMean(values) {
	    var r1 = 0;
	    var r2 = 0;
	    var l = values.length;
	    for (var i = 0; i < l; i++) {
	        r1 += values[i] * values[i];
	        r2 += values[i];
	    }
	    if (r2 < 0) {
	        throw new RangeError('sum of values is negative');
	    }
	    return r1 / r2;
	};

	/**
	 * Computes the median of the given values
	 * @param {Array} values
	 * @param {boolean} [alreadySorted=false]
	 * @returns {number}
	 */
	exports.median = function median(values, alreadySorted) {
	    if (alreadySorted === undefined) alreadySorted = false;
	    if (!alreadySorted) {
	        values = [].concat(values).sort(compareNumbers);
	    }
	    var l = values.length;
	    var half = Math.floor(l / 2);
	    if (l % 2 === 0) {
	        return (values[half - 1] + values[half]) * 0.5;
	    } else {
	        return values[half];
	    }
	};

	/**
	 * Computes the variance of the given values
	 * @param {Array} values
	 * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.
	 * @returns {number}
	 */
	exports.variance = function variance(values, unbiased) {
	    if (unbiased === undefined) unbiased = true;
	    var theMean = exports.mean(values);
	    var theVariance = 0;
	    var l = values.length;

	    for (var i = 0; i < l; i++) {
	        var x = values[i] - theMean;
	        theVariance += x * x;
	    }

	    if (unbiased) {
	        return theVariance / (l - 1);
	    } else {
	        return theVariance / l;
	    }
	};

	/**
	 * Computes the standard deviation of the given values
	 * @param {Array} values
	 * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.
	 * @returns {number}
	 */
	exports.standardDeviation = function standardDeviation(values, unbiased) {
	    return Math.sqrt(exports.variance(values, unbiased));
	};

	exports.standardError = function standardError(values) {
	    return exports.standardDeviation(values) / Math.sqrt(values.length);
	};

	/**
	 * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-
	 * Calculate the standard deviation via the Median of the absolute deviation
	 *  The formula for the standard deviation only holds for Gaussian random variables.
	 * @returns {{mean: number, stdev: number}}
	 */
	exports.robustMeanAndStdev = function robustMeanAndStdev(y) {
	    var mean = 0, stdev = 0;
	    var length = y.length, i = 0;
	    for (i = 0; i < length; i++) {
	        mean += y[i];
	    }
	    mean /= length;
	    var averageDeviations = new Array(length);
	    for (i = 0; i < length; i++)
	        averageDeviations[i] = Math.abs(y[i] - mean);
	    averageDeviations.sort(compareNumbers);
	    if (length % 2 === 1) {
	        stdev = averageDeviations[(length - 1) / 2] / 0.6745;
	    } else {
	        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;
	    }

	    return {
	        mean: mean,
	        stdev: stdev
	    };
	};

	exports.quartiles = function quartiles(values, alreadySorted) {
	    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;
	    if (!alreadySorted) {
	        values = [].concat(values).sort(compareNumbers);
	    }

	    var quart = values.length / 4;
	    var q1 = values[Math.ceil(quart) - 1];
	    var q2 = exports.median(values, true);
	    var q3 = values[Math.ceil(quart * 3) - 1];

	    return {q1: q1, q2: q2, q3: q3};
	};

	exports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {
	    return Math.sqrt(exports.pooledVariance(samples, unbiased));
	};

	exports.pooledVariance = function pooledVariance(samples, unbiased) {
	    if (typeof (unbiased) === 'undefined') unbiased = true;
	    var sum = 0;
	    var length = 0, l = samples.length;
	    for (var i = 0; i < l; i++) {
	        var values = samples[i];
	        var vari = exports.variance(values);

	        sum += (values.length - 1) * vari;

	        if (unbiased)
	            length += values.length - 1;
	        else
	            length += values.length;
	    }
	    return sum / length;
	};

	exports.mode = function mode(values) {
	    var l = values.length,
	        itemCount = new Array(l),
	        i;
	    for (i = 0; i < l; i++) {
	        itemCount[i] = 0;
	    }
	    var itemArray = new Array(l);
	    var count = 0;

	    for (i = 0; i < l; i++) {
	        var index = itemArray.indexOf(values[i]);
	        if (index >= 0)
	            itemCount[index]++;
	        else {
	            itemArray[count] = values[i];
	            itemCount[count] = 1;
	            count++;
	        }
	    }

	    var maxValue = 0, maxIndex = 0;
	    for (i = 0; i < count; i++) {
	        if (itemCount[i] > maxValue) {
	            maxValue = itemCount[i];
	            maxIndex = i;
	        }
	    }

	    return itemArray[maxIndex];
	};

	exports.covariance = function covariance(vector1, vector2, unbiased) {
	    if (typeof (unbiased) === 'undefined') unbiased = true;
	    var mean1 = exports.mean(vector1);
	    var mean2 = exports.mean(vector2);

	    if (vector1.length !== vector2.length)
	        throw 'Vectors do not have the same dimensions';

	    var cov = 0, l = vector1.length;
	    for (var i = 0; i < l; i++) {
	        var x = vector1[i] - mean1;
	        var y = vector2[i] - mean2;
	        cov += x * y;
	    }

	    if (unbiased)
	        return cov / (l - 1);
	    else
	        return cov / l;
	};

	exports.skewness = function skewness(values, unbiased) {
	    if (typeof (unbiased) === 'undefined') unbiased = true;
	    var theMean = exports.mean(values);

	    var s2 = 0, s3 = 0, l = values.length;
	    for (var i = 0; i < l; i++) {
	        var dev = values[i] - theMean;
	        s2 += dev * dev;
	        s3 += dev * dev * dev;
	    }
	    var m2 = s2 / l;
	    var m3 = s3 / l;

	    var g = m3 / (Math.pow(m2, 3 / 2.0));
	    if (unbiased) {
	        var a = Math.sqrt(l * (l - 1));
	        var b = l - 2;
	        return (a / b) * g;
	    } else {
	        return g;
	    }
	};

	exports.kurtosis = function kurtosis(values, unbiased) {
	    if (typeof (unbiased) === 'undefined') unbiased = true;
	    var theMean = exports.mean(values);
	    var n = values.length, s2 = 0, s4 = 0;

	    for (var i = 0; i < n; i++) {
	        var dev = values[i] - theMean;
	        s2 += dev * dev;
	        s4 += dev * dev * dev * dev;
	    }
	    var m2 = s2 / n;
	    var m4 = s4 / n;

	    if (unbiased) {
	        var v = s2 / (n - 1);
	        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));
	        var b = s4 / (v * v);
	        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));

	        return a * b - 3 * c;
	    } else {
	        return m4 / (m2 * m2) - 3;
	    }
	};

	exports.entropy = function entropy(values, eps) {
	    if (typeof (eps) === 'undefined') eps = 0;
	    var sum = 0, l = values.length;
	    for (var i = 0; i < l; i++)
	        sum += values[i] * Math.log(values[i] + eps);
	    return -sum;
	};

	exports.weightedMean = function weightedMean(values, weights) {
	    var sum = 0, l = values.length;
	    for (var i = 0; i < l; i++)
	        sum += values[i] * weights[i];
	    return sum;
	};

	exports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {
	    return Math.sqrt(exports.weightedVariance(values, weights));
	};

	exports.weightedVariance = function weightedVariance(values, weights) {
	    var theMean = exports.weightedMean(values, weights);
	    var vari = 0, l = values.length;
	    var a = 0, b = 0;

	    for (var i = 0; i < l; i++) {
	        var z = values[i] - theMean;
	        var w = weights[i];

	        vari += w * (z * z);
	        b += w;
	        a += w * w;
	    }

	    return vari * (b / (b * b - a));
	};

	exports.center = function center(values, inPlace) {
	    if (typeof (inPlace) === 'undefined') inPlace = false;

	    var result = values;
	    if (!inPlace)
	        result = [].concat(values);

	    var theMean = exports.mean(result), l = result.length;
	    for (var i = 0; i < l; i++)
	        result[i] -= theMean;
	};

	exports.standardize = function standardize(values, standardDev, inPlace) {
	    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);
	    if (typeof (inPlace) === 'undefined') inPlace = false;
	    var l = values.length;
	    var result = inPlace ? values : new Array(l);
	    for (var i = 0; i < l; i++)
	        result[i] = values[i] / standardDev;
	    return result;
	};

	exports.cumulativeSum = function cumulativeSum(array) {
	    var l = array.length;
	    var result = new Array(l);
	    result[0] = array[0];
	    for (var i = 1; i < l; i++)
	        result[i] = result[i - 1] + array[i];
	    return result;
	};


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var arrayStat = __webpack_require__(29);

	function compareNumbers(a, b) {
	    return a - b;
	}

	exports.max = function max(matrix) {
	    var max = -Infinity;
	    for (var i = 0; i < matrix.length; i++) {
	        for (var j = 0; j < matrix[i].length; j++) {
	            if (matrix[i][j] > max) max = matrix[i][j];
	        }
	    }
	    return max;
	};

	exports.min = function min(matrix) {
	    var min = Infinity;
	    for (var i = 0; i < matrix.length; i++) {
	        for (var j = 0; j < matrix[i].length; j++) {
	            if (matrix[i][j] < min) min = matrix[i][j];
	        }
	    }
	    return min;
	};

	exports.minMax = function minMax(matrix) {
	    var min = Infinity;
	    var max = -Infinity;
	    for (var i = 0; i < matrix.length; i++) {
	        for (var j = 0; j < matrix[i].length; j++) {
	            if (matrix[i][j] < min) min = matrix[i][j];
	            if (matrix[i][j] > max) max = matrix[i][j];
	        }
	    }
	    return {
	        min:min,
	        max:max
	    };
	};

	exports.entropy = function entropy(matrix, eps) {
	    if (typeof (eps) === 'undefined') {
	        eps = 0;
	    }
	    var sum = 0,
	        l1 = matrix.length,
	        l2 = matrix[0].length;
	    for (var i = 0; i < l1; i++) {
	        for (var j = 0; j < l2; j++) {
	            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);
	        }
	    }
	    return -sum;
	};

	exports.mean = function mean(matrix, dimension) {
	    if (typeof (dimension) === 'undefined') {
	        dimension = 0;
	    }
	    var rows = matrix.length,
	        cols = matrix[0].length,
	        theMean, N, i, j;

	    if (dimension === -1) {
	        theMean = [0];
	        N = rows * cols;
	        for (i = 0; i < rows; i++) {
	            for (j = 0; j < cols; j++) {
	                theMean[0] += matrix[i][j];
	            }
	        }
	        theMean[0] /= N;
	    } else if (dimension === 0) {
	        theMean = new Array(cols);
	        N = rows;
	        for (j = 0; j < cols; j++) {
	            theMean[j] = 0;
	            for (i = 0; i < rows; i++) {
	                theMean[j] += matrix[i][j];
	            }
	            theMean[j] /= N;
	        }
	    } else if (dimension === 1) {
	        theMean = new Array(rows);
	        N = cols;
	        for (j = 0; j < rows; j++) {
	            theMean[j] = 0;
	            for (i = 0; i < cols; i++) {
	                theMean[j] += matrix[j][i];
	            }
	            theMean[j] /= N;
	        }
	    } else {
	        throw new Error('Invalid dimension');
	    }
	    return theMean;
	};

	exports.sum = function sum(matrix, dimension) {
	    if (typeof (dimension) === 'undefined') {
	        dimension = 0;
	    }
	    var rows = matrix.length,
	        cols = matrix[0].length,
	        theSum, i, j;

	    if (dimension === -1) {
	        theSum = [0];
	        for (i = 0; i < rows; i++) {
	            for (j = 0; j < cols; j++) {
	                theSum[0] += matrix[i][j];
	            }
	        }
	    } else if (dimension === 0) {
	        theSum = new Array(cols);
	        for (j = 0; j < cols; j++) {
	            theSum[j] = 0;
	            for (i = 0; i < rows; i++) {
	                theSum[j] += matrix[i][j];
	            }
	        }
	    } else if (dimension === 1) {
	        theSum = new Array(rows);
	        for (j = 0; j < rows; j++) {
	            theSum[j] = 0;
	            for (i = 0; i < cols; i++) {
	                theSum[j] += matrix[j][i];
	            }
	        }
	    } else {
	        throw new Error('Invalid dimension');
	    }
	    return theSum;
	};

	exports.product = function product(matrix, dimension) {
	    if (typeof (dimension) === 'undefined') {
	        dimension = 0;
	    }
	    var rows = matrix.length,
	        cols = matrix[0].length,
	        theProduct, i, j;

	    if (dimension === -1) {
	        theProduct = [1];
	        for (i = 0; i < rows; i++) {
	            for (j = 0; j < cols; j++) {
	                theProduct[0] *= matrix[i][j];
	            }
	        }
	    } else if (dimension === 0) {
	        theProduct = new Array(cols);
	        for (j = 0; j < cols; j++) {
	            theProduct[j] = 1;
	            for (i = 0; i < rows; i++) {
	                theProduct[j] *= matrix[i][j];
	            }
	        }
	    } else if (dimension === 1) {
	        theProduct = new Array(rows);
	        for (j = 0; j < rows; j++) {
	            theProduct[j] = 1;
	            for (i = 0; i < cols; i++) {
	                theProduct[j] *= matrix[j][i];
	            }
	        }
	    } else {
	        throw new Error('Invalid dimension');
	    }
	    return theProduct;
	};

	exports.standardDeviation = function standardDeviation(matrix, means, unbiased) {
	    var vari = exports.variance(matrix, means, unbiased), l = vari.length;
	    for (var i = 0; i < l; i++) {
	        vari[i] = Math.sqrt(vari[i]);
	    }
	    return vari;
	};

	exports.variance = function variance(matrix, means, unbiased) {
	    if (typeof (unbiased) === 'undefined') {
	        unbiased = true;
	    }
	    means = means || exports.mean(matrix);
	    var rows = matrix.length;
	    if (rows === 0) return [];
	    var cols = matrix[0].length;
	    var vari = new Array(cols);

	    for (var j = 0; j < cols; j++) {
	        var sum1 = 0, sum2 = 0, x = 0;
	        for (var i = 0; i < rows; i++) {
	            x = matrix[i][j] - means[j];
	            sum1 += x;
	            sum2 += x * x;
	        }
	        if (unbiased) {
	            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);
	        } else {
	            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;
	        }
	    }
	    return vari;
	};

	exports.median = function median(matrix) {
	    var rows = matrix.length, cols = matrix[0].length;
	    var medians = new Array(cols);

	    for (var i = 0; i < cols; i++) {
	        var data = new Array(rows);
	        for (var j = 0; j < rows; j++) {
	            data[j] = matrix[j][i];
	        }
	        data.sort(compareNumbers);
	        var N = data.length;
	        if (N % 2 === 0) {
	            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;
	        } else {
	            medians[i] = data[Math.floor(N / 2)];
	        }
	    }
	    return medians;
	};

	exports.mode = function mode(matrix) {
	    var rows = matrix.length,
	        cols = matrix[0].length,
	        modes = new Array(cols),
	        i, j;
	    for (i = 0; i < cols; i++) {
	        var itemCount = new Array(rows);
	        for (var k = 0; k < rows; k++) {
	            itemCount[k] = 0;
	        }
	        var itemArray = new Array(rows);
	        var count = 0;

	        for (j = 0; j < rows; j++) {
	            var index = itemArray.indexOf(matrix[j][i]);
	            if (index >= 0) {
	                itemCount[index]++;
	            } else {
	                itemArray[count] = matrix[j][i];
	                itemCount[count] = 1;
	                count++;
	            }
	        }

	        var maxValue = 0, maxIndex = 0;
	        for (j = 0; j < count; j++) {
	            if (itemCount[j] > maxValue) {
	                maxValue = itemCount[j];
	                maxIndex = j;
	            }
	        }

	        modes[i] = itemArray[maxIndex];
	    }
	    return modes;
	};

	exports.skewness = function skewness(matrix, unbiased) {
	    if (typeof (unbiased) === 'undefined') unbiased = true;
	    var means = exports.mean(matrix);
	    var n = matrix.length, l = means.length;
	    var skew = new Array(l);

	    for (var j = 0; j < l; j++) {
	        var s2 = 0, s3 = 0;
	        for (var i = 0; i < n; i++) {
	            var dev = matrix[i][j] - means[j];
	            s2 += dev * dev;
	            s3 += dev * dev * dev;
	        }

	        var m2 = s2 / n;
	        var m3 = s3 / n;
	        var g = m3 / Math.pow(m2, 3 / 2);

	        if (unbiased) {
	            var a = Math.sqrt(n * (n - 1));
	            var b = n - 2;
	            skew[j] = (a / b) * g;
	        } else {
	            skew[j] = g;
	        }
	    }
	    return skew;
	};

	exports.kurtosis = function kurtosis(matrix, unbiased) {
	    if (typeof (unbiased) === 'undefined') unbiased = true;
	    var means = exports.mean(matrix);
	    var n = matrix.length, m = matrix[0].length;
	    var kurt = new Array(m);

	    for (var j = 0; j < m; j++) {
	        var s2 = 0, s4 = 0;
	        for (var i = 0; i < n; i++) {
	            var dev = matrix[i][j] - means[j];
	            s2 += dev * dev;
	            s4 += dev * dev * dev * dev;
	        }
	        var m2 = s2 / n;
	        var m4 = s4 / n;

	        if (unbiased) {
	            var v = s2 / (n - 1);
	            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));
	            var b = s4 / (v * v);
	            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));
	            kurt[j] = a * b - 3 * c;
	        } else {
	            kurt[j] = m4 / (m2 * m2) - 3;
	        }
	    }
	    return kurt;
	};

	exports.standardError = function standardError(matrix) {
	    var samples = matrix.length;
	    var standardDeviations = exports.standardDeviation(matrix);
	    var l = standardDeviations.length;
	    var standardErrors = new Array(l);
	    var sqrtN = Math.sqrt(samples);

	    for (var i = 0; i < l; i++) {
	        standardErrors[i] = standardDeviations[i] / sqrtN;
	    }
	    return standardErrors;
	};

	exports.covariance = function covariance(matrix, dimension) {
	    return exports.scatter(matrix, undefined, dimension);
	};

	exports.scatter = function scatter(matrix, divisor, dimension) {
	    if (typeof (dimension) === 'undefined') {
	        dimension = 0;
	    }
	    if (typeof (divisor) === 'undefined') {
	        if (dimension === 0) {
	            divisor = matrix.length - 1;
	        } else if (dimension === 1) {
	            divisor = matrix[0].length - 1;
	        }
	    }
	    var means = exports.mean(matrix, dimension);
	    var rows = matrix.length;
	    if (rows === 0) {
	        return [[]];
	    }
	    var cols = matrix[0].length,
	        cov, i, j, s, k;

	    if (dimension === 0) {
	        cov = new Array(cols);
	        for (i = 0; i < cols; i++) {
	            cov[i] = new Array(cols);
	        }
	        for (i = 0; i < cols; i++) {
	            for (j = i; j < cols; j++) {
	                s = 0;
	                for (k = 0; k < rows; k++) {
	                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);
	                }
	                s /= divisor;
	                cov[i][j] = s;
	                cov[j][i] = s;
	            }
	        }
	    } else if (dimension === 1) {
	        cov = new Array(rows);
	        for (i = 0; i < rows; i++) {
	            cov[i] = new Array(rows);
	        }
	        for (i = 0; i < rows; i++) {
	            for (j = i; j < rows; j++) {
	                s = 0;
	                for (k = 0; k < cols; k++) {
	                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);
	                }
	                s /= divisor;
	                cov[i][j] = s;
	                cov[j][i] = s;
	            }
	        }
	    } else {
	        throw new Error('Invalid dimension');
	    }

	    return cov;
	};

	exports.correlation = function correlation(matrix) {
	    var means = exports.mean(matrix),
	        standardDeviations = exports.standardDeviation(matrix, true, means),
	        scores = exports.zScores(matrix, means, standardDeviations),
	        rows = matrix.length,
	        cols = matrix[0].length,
	        i, j;

	    var cor = new Array(cols);
	    for (i = 0; i < cols; i++) {
	        cor[i] = new Array(cols);
	    }
	    for (i = 0; i < cols; i++) {
	        for (j = i; j < cols; j++) {
	            var c = 0;
	            for (var k = 0, l = scores.length; k < l; k++) {
	                c += scores[k][j] * scores[k][i];
	            }
	            c /= rows - 1;
	            cor[i][j] = c;
	            cor[j][i] = c;
	        }
	    }
	    return cor;
	};

	exports.zScores = function zScores(matrix, means, standardDeviations) {
	    means = means || exports.mean(matrix);
	    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);
	    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);
	};

	exports.center = function center(matrix, means, inPlace) {
	    means = means || exports.mean(matrix);
	    var result = matrix,
	        l = matrix.length,
	        i, j, jj;

	    if (!inPlace) {
	        result = new Array(l);
	        for (i = 0; i < l; i++) {
	            result[i] = new Array(matrix[i].length);
	        }
	    }

	    for (i = 0; i < l; i++) {
	        var row = result[i];
	        for (j = 0, jj = row.length; j < jj; j++) {
	            row[j] = matrix[i][j] - means[j];
	        }
	    }
	    return result;
	};

	exports.standardize = function standardize(matrix, standardDeviations, inPlace) {
	    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);
	    var result = matrix,
	        l = matrix.length,
	        i, j, jj;

	    if (!inPlace) {
	        result = new Array(l);
	        for (i = 0; i < l; i++) {
	            result[i] = new Array(matrix[i].length);
	        }
	    }

	    for (i = 0; i < l; i++) {
	        var resultRow = result[i];
	        var sourceRow = matrix[i];
	        for (j = 0, jj = resultRow.length; j < jj; j++) {
	            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {
	                resultRow[j] = sourceRow[j] / standardDeviations[j];
	            }
	        }
	    }
	    return result;
	};

	exports.weightedVariance = function weightedVariance(matrix, weights) {
	    var means = exports.mean(matrix);
	    var rows = matrix.length;
	    if (rows === 0) return [];
	    var cols = matrix[0].length;
	    var vari = new Array(cols);

	    for (var j = 0; j < cols; j++) {
	        var sum = 0;
	        var a = 0, b = 0;

	        for (var i = 0; i < rows; i++) {
	            var z = matrix[i][j] - means[j];
	            var w = weights[i];

	            sum += w * (z * z);
	            b += w;
	            a += w * w;
	        }

	        vari[j] = sum * (b / (b * b - a));
	    }

	    return vari;
	};

	exports.weightedMean = function weightedMean(matrix, weights, dimension) {
	    if (typeof (dimension) === 'undefined') {
	        dimension = 0;
	    }
	    var rows = matrix.length;
	    if (rows === 0) return [];
	    var cols = matrix[0].length,
	        means, i, ii, j, w, row;

	    if (dimension === 0) {
	        means = new Array(cols);
	        for (i = 0; i < cols; i++) {
	            means[i] = 0;
	        }
	        for (i = 0; i < rows; i++) {
	            row = matrix[i];
	            w = weights[i];
	            for (j = 0; j < cols; j++) {
	                means[j] += row[j] * w;
	            }
	        }
	    } else if (dimension === 1) {
	        means = new Array(rows);
	        for (i = 0; i < rows; i++) {
	            means[i] = 0;
	        }
	        for (j = 0; j < rows; j++) {
	            row = matrix[j];
	            w = weights[j];
	            for (i = 0; i < cols; i++) {
	                means[j] += row[i] * w;
	            }
	        }
	    } else {
	        throw new Error('Invalid dimension');
	    }

	    var weightSum = arrayStat.sum(weights);
	    if (weightSum !== 0) {
	        for (i = 0, ii = means.length; i < ii; i++) {
	            means[i] /= weightSum;
	        }
	    }
	    return means;
	};

	exports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {
	    dimension = dimension || 0;
	    means = means || exports.weightedMean(matrix, weights, dimension);
	    var s1 = 0, s2 = 0;
	    for (var i = 0, ii = weights.length; i < ii; i++) {
	        s1 += weights[i];
	        s2 += weights[i] * weights[i];
	    }
	    var factor = s1 / (s1 * s1 - s2);
	    return exports.weightedScatter(matrix, weights, means, factor, dimension);
	};

	exports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {
	    dimension = dimension || 0;
	    means = means || exports.weightedMean(matrix, weights, dimension);
	    if (typeof (factor) === 'undefined') {
	        factor = 1;
	    }
	    var rows = matrix.length;
	    if (rows === 0) {
	        return [[]];
	    }
	    var cols = matrix[0].length,
	        cov, i, j, k, s;

	    if (dimension === 0) {
	        cov = new Array(cols);
	        for (i = 0; i < cols; i++) {
	            cov[i] = new Array(cols);
	        }
	        for (i = 0; i < cols; i++) {
	            for (j = i; j < cols; j++) {
	                s = 0;
	                for (k = 0; k < rows; k++) {
	                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);
	                }
	                cov[i][j] = s * factor;
	                cov[j][i] = s * factor;
	            }
	        }
	    } else if (dimension === 1) {
	        cov = new Array(rows);
	        for (i = 0; i < rows; i++) {
	            cov[i] = new Array(rows);
	        }
	        for (i = 0; i < rows; i++) {
	            for (j = i; j < rows; j++) {
	                s = 0;
	                for (k = 0; k < cols; k++) {
	                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);
	                }
	                cov[i][j] = s * factor;
	                cov[j][i] = s * factor;
	            }
	        }
	    } else {
	        throw new Error('Invalid dimension');
	    }

	    return cov;
	};


/***/ },
/* 31 */
/***/ function(module, exports) {

	'use strict';

	/**
	 *
	 * Function that returns a Number array of equally spaced numberOfPoints
	 * containing a representation of intensities of the spectra arguments x
	 * and y.
	 *
	 * The options parameter contains an object in the following form:
	 * from: starting point
	 * to: last point
	 * numberOfPoints: number of points between from and to
	 * variant: "slot" or "smooth" - smooth is the default option
	 *
	 * The slot variant consist that each point in the new array is calculated
	 * averaging the existing points between the slot that belongs to the current
	 * value. The smooth variant is the same but takes the integral of the range
	 * of the slot and divide by the step size between two points in the new array.
	 *
	 * @param x - sorted increasing x values
	 * @param y
	 * @param options
	 * @returns {Array} new array with the equally spaced data.
	 *
	 */
	function getEquallySpacedData(x, y, options) {
	    if (x.length>1 && x[0]>x[1]) {
	        x=x.slice().reverse();
	        y=y.slice().reverse();
	    }

	    var xLength = x.length;
	    if(xLength !== y.length)
	        throw new RangeError("the x and y vector doesn't have the same size.");

	    if (options === undefined) options = {};

	    var from = options.from === undefined ? x[0] : options.from
	    if (isNaN(from) || !isFinite(from)) {
	        throw new RangeError("'From' value must be a number");
	    }
	    var to = options.to === undefined ? x[x.length - 1] : options.to;
	    if (isNaN(to) || !isFinite(to)) {
	        throw new RangeError("'To' value must be a number");
	    }

	    var reverse = from > to;
	    if(reverse) {
	        var temp = from;
	        from = to;
	        to = temp;
	    }

	    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;
	    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {
	        throw new RangeError("'Number of points' value must be a number");
	    }
	    if(numberOfPoints < 1)
	        throw new RangeError("the number of point must be higher than 1");

	    var algorithm = options.variant === "slot" ? "slot" : "smooth"; // default value: smooth

	    var output = algorithm === "slot" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);

	    return reverse ? output.reverse() : output;
	}

	/**
	 * function that retrieves the getEquallySpacedData with the variant "smooth"
	 *
	 * @param x
	 * @param y
	 * @param from - Initial point
	 * @param to - Final point
	 * @param numberOfPoints
	 * @returns {Array} - Array of y's equally spaced with the variant "smooth"
	 */
	function getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {
	    var xLength = x.length;

	    var step = (to - from) / (numberOfPoints - 1);
	    var halfStep = step / 2;

	    var start = from - halfStep;
	    var output = new Array(numberOfPoints);

	    var initialOriginalStep = x[1] - x[0];
	    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];

	    // Init main variables
	    var min = start;
	    var max = start + step;

	    var previousX = Number.MIN_VALUE;
	    var previousY = 0;
	    var nextX = x[0] - initialOriginalStep;
	    var nextY = 0;

	    var currentValue = 0;
	    var slope = 0;
	    var intercept = 0;
	    var sumAtMin = 0;
	    var sumAtMax = 0;

	    var i = 0; // index of input
	    var j = 0; // index of output

	    function getSlope(x0, y0, x1, y1) {
	        return (y1 - y0) / (x1 - x0);
	    }

	    main: while(true) {
	        while (nextX - max >= 0) {
	            // no overlap with original point, just consume current value
	            var add = integral(0, max - previousX, slope, previousY);
	            sumAtMax = currentValue + add;

	            output[j] = (sumAtMax - sumAtMin) / step;
	            j++;

	            if (j === numberOfPoints)
	                break main;

	            min = max;
	            max += step;
	            sumAtMin = sumAtMax;
	        }

	        if(previousX <= min && min <= nextX) {
	            add = integral(0, min - previousX, slope, previousY);
	            sumAtMin = currentValue + add;
	        }

	        currentValue += integral(previousX, nextX, slope, intercept);

	        previousX = nextX;
	        previousY = nextY;

	        if (i < xLength) {
	            nextX = x[i];
	            nextY = y[i];
	            i++;
	        } else if (i === xLength) {
	            nextX += lastOriginalStep;
	            nextY = 0;
	        }
	        // updating parameters
	        slope = getSlope(previousX, previousY, nextX, nextY);
	        intercept = -slope*previousX + previousY;
	    }

	    return output;
	}

	/**
	 * function that retrieves the getEquallySpacedData with the variant "slot"
	 *
	 * @param x
	 * @param y
	 * @param from - Initial point
	 * @param to - Final point
	 * @param numberOfPoints
	 * @returns {Array} - Array of y's equally spaced with the variant "slot"
	 */
	function getEquallySpacedSlot(x, y, from, to, numberOfPoints) {
	    var xLength = x.length;

	    var step = (to - from) / (numberOfPoints - 1);
	    var halfStep = step / 2;
	    var lastStep = x[x.length - 1] - x[x.length - 2];

	    var start = from - halfStep;
	    var output = new Array(numberOfPoints);

	    // Init main variables
	    var min = start;
	    var max = start + step;

	    var previousX = -Number.MAX_VALUE;
	    var previousY = 0;
	    var nextX = x[0];
	    var nextY = y[0];
	    var frontOutsideSpectra = 0;
	    var backOutsideSpectra = true;

	    var currentValue = 0;

	    // for slot algorithm
	    var currentPoints = 0;

	    var i = 1; // index of input
	    var j = 0; // index of output

	    main: while(true) {
	        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));
	        while (previousX - max > 0) {
	            // no overlap with original point, just consume current value
	            if(backOutsideSpectra) {
	                currentPoints++;
	                backOutsideSpectra = false;
	            }

	            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;
	            j++;

	            if (j === numberOfPoints)
	                break main;

	            min = max;
	            max += step;
	            currentValue = 0;
	            currentPoints = 0;
	        }

	        if(previousX > min) {
	            currentValue += previousY;
	            currentPoints++;
	        }

	        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)
	            currentPoints--;

	        previousX = nextX;
	        previousY = nextY;

	        if (i < xLength) {
	            nextX = x[i];
	            nextY = y[i];
	            i++;
	        } else {
	            nextX += lastStep;
	            nextY = 0;
	            frontOutsideSpectra++;
	        }
	    }

	    return output;
	}
	/**
	 * Function that calculates the integral of the line between two
	 * x-coordinates, given the slope and intercept of the line.
	 *
	 * @param x0
	 * @param x1
	 * @param slope
	 * @param intercept
	 * @returns {number} integral value.
	 */
	function integral(x0, x1, slope, intercept) {
	    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);
	}

	exports.getEquallySpacedData = getEquallySpacedData;
	exports.integral = integral;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.SNV = SNV;
	var Stat = __webpack_require__(28).array;

	/**
	 * Function that applies the standard normal variate (SNV) to an array of values.
	 *
	 * @param data - Array of values.
	 * @returns {Array} - applied the SNV.
	 */
	function SNV(data) {
	    var mean = Stat.mean(data);
	    var std = Stat.standardDeviation(data);
	    var result = data.slice();
	    for (var i = 0; i < data.length; i++) {
	        result[i] = (result[i] - mean) / std;
	    }
	    return result;
	}


/***/ },
/* 33 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * @private
	 * Check that a row index is not out of bounds
	 * @param {Matrix} matrix
	 * @param {number} index
	 * @param {boolean} [outer]
	 */
	exports.checkRowIndex = function checkRowIndex(matrix, index, outer) {
	    var max = outer ? matrix.rows : matrix.rows - 1;
	    if (index < 0 || index > max) {
	        throw new RangeError('Row index out of range');
	    }
	};

	/**
	 * @private
	 * Check that a column index is not out of bounds
	 * @param {Matrix} matrix
	 * @param {number} index
	 * @param {boolean} [outer]
	 */
	exports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {
	    var max = outer ? matrix.columns : matrix.columns - 1;
	    if (index < 0 || index > max) {
	        throw new RangeError('Column index out of range');
	    }
	};

	/**
	 * @private
	 * Check that the provided vector is an array with the right length
	 * @param {Matrix} matrix
	 * @param {Array|Matrix} vector
	 * @returns {Array}
	 * @throws {RangeError}
	 */
	exports.checkRowVector = function checkRowVector(matrix, vector) {
	    if (vector.to1DArray) {
	        vector = vector.to1DArray();
	    }
	    if (vector.length !== matrix.columns) {
	        throw new RangeError('vector size must be the same as the number of columns');
	    }
	    return vector;
	};

	/**
	 * @private
	 * Check that the provided vector is an array with the right length
	 * @param {Matrix} matrix
	 * @param {Array|Matrix} vector
	 * @returns {Array}
	 * @throws {RangeError}
	 */
	exports.checkColumnVector = function checkColumnVector(matrix, vector) {
	    if (vector.to1DArray) {
	        vector = vector.to1DArray();
	    }
	    if (vector.length !== matrix.rows) {
	        throw new RangeError('vector size must be the same as the number of rows');
	    }
	    return vector;
	};

	exports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {
	    var rowOut = rowIndices.some(r => {
	        return r < 0 || r >= matrix.rows;

	    });

	    var columnOut = columnIndices.some(c => {
	        return c < 0 || c >= matrix.columns;
	    });

	    if (rowOut || columnOut) {
	        throw new RangeError('Indices are out of range')
	    }

	    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {
	        throw new TypeError('Unexpected type for row/column indices');
	    }
	    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);
	    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);

	    return {
	        row: rowIndices,
	        column: columnIndices
	    };
	};

	exports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {
	    if (arguments.length !== 5) throw new TypeError('Invalid argument type');
	    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {
	        return typeof arg !== 'number';
	    });
	    if (notAllNumbers) throw new TypeError('Invalid argument type');
	    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {
	        throw new RangeError('Submatrix indices are out of range');
	    }
	};

	exports.getRange = function getRange(from, to) {
	    var arr = new Array(to - from + 1);
	    for (var i = 0; i < arr.length; i++) {
	        arr[i] = from + i;
	    }
	    return arr;
	};


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);

	class MatrixTransposeView extends BaseView {
	    constructor(matrix) {
	        super(matrix, matrix.columns, matrix.rows);
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(columnIndex, rowIndex, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(columnIndex, rowIndex);
	    }
	}

	module.exports = MatrixTransposeView;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var abstractMatrix = __webpack_require__(25);
	var Matrix;

	class BaseView extends abstractMatrix() {
	    constructor(matrix, rows, columns) {
	        super();
	        this.matrix = matrix;
	        this.rows = rows;
	        this.columns = columns;
	    }

	    static get [Symbol.species]() {
	        if (!Matrix) {
	            Matrix = __webpack_require__(23);
	        }
	        return Matrix;
	    }
	}

	module.exports = BaseView;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);

	class MatrixRowView extends BaseView {
	    constructor(matrix, row) {
	        super(matrix, 1, matrix.columns);
	        this.row = row;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.row, columnIndex, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.row, columnIndex);
	    }
	}

	module.exports = MatrixRowView;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);
	var util = __webpack_require__(33);

	class MatrixSubView extends BaseView {
	    constructor(matrix, startRow, endRow, startColumn, endColumn) {
	        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);
	        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);
	        this.startRow = startRow;
	        this.startColumn = startColumn;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex , value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);
	    }
	}

	module.exports = MatrixSubView;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);
	var util = __webpack_require__(33);

	class MatrixSelectionView extends BaseView {
	    constructor(matrix, rowIndices, columnIndices) {
	        var indices = util.checkIndices(matrix, rowIndices, columnIndices);
	        super(matrix, indices.row.length, indices.column.length);
	        this.rowIndices = indices.row;
	        this.columnIndices = indices.column;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex] , value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);
	    }
	}

	module.exports = MatrixSelectionView;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);

	class MatrixColumnView extends BaseView {
	    constructor(matrix, column) {
	        super(matrix, matrix.rows, 1);
	        this.column = column;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(rowIndex, this.column, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(rowIndex, this.column);
	    }
	}

	module.exports = MatrixColumnView;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);

	class MatrixFlipRowView extends BaseView {
	    constructor(matrix) {
	        super(matrix, matrix.rows, matrix.columns);
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);
	    }
	}

	module.exports = MatrixFlipRowView;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(35);

	class MatrixFlipColumnView extends BaseView {
	    constructor(matrix) {
	        super(matrix, matrix.rows, matrix.columns);
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);
	    }
	}

	module.exports = MatrixFlipColumnView;


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(23);

	var SingularValueDecomposition = __webpack_require__(43);
	var EigenvalueDecomposition = __webpack_require__(45);
	var LuDecomposition = __webpack_require__(46);
	var QrDecomposition = __webpack_require__(47);
	var CholeskyDecomposition = __webpack_require__(48);

	function inverse(matrix) {
	    matrix = Matrix.checkMatrix(matrix);
	    return solve(matrix, Matrix.eye(matrix.rows));
	}

	/**
	 * Returns the inverse
	 * @memberOf Matrix
	 * @static
	 * @param {Matrix} matrix
	 * @return {Matrix} matrix
	 * @alias inv
	 */
	Matrix.inverse = Matrix.inv = inverse;

	/**
	 * Returns the inverse
	 * @memberOf Matrix
	 * @static
	 * @param {Matrix} matrix
	 * @return {Matrix} matrix
	 * @alias inv
	 */
	Matrix.prototype.inverse = Matrix.prototype.inv = function () {
	    return inverse(this);
	};

	function solve(leftHandSide, rightHandSide) {
	    leftHandSide = Matrix.checkMatrix(leftHandSide);
	    rightHandSide = Matrix.checkMatrix(rightHandSide);
	    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);
	}

	Matrix.solve = solve;
	Matrix.prototype.solve = function (other) {
	    return solve(this, other);
	};

	module.exports = {
	    SingularValueDecomposition: SingularValueDecomposition,
	    SVD: SingularValueDecomposition,
	    EigenvalueDecomposition: EigenvalueDecomposition,
	    EVD: EigenvalueDecomposition,
	    LuDecomposition: LuDecomposition,
	    LU: LuDecomposition,
	    QrDecomposition: QrDecomposition,
	    QR: QrDecomposition,
	    CholeskyDecomposition: CholeskyDecomposition,
	    CHO: CholeskyDecomposition,
	    inverse: inverse,
	    solve: solve
	};


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(23);
	var util = __webpack_require__(44);
	var hypotenuse = util.hypotenuse;
	var getFilled2DArray = util.getFilled2DArray;

	// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs
	function SingularValueDecomposition(value, options) {
	    if (!(this instanceof SingularValueDecomposition)) {
	        return new SingularValueDecomposition(value, options);
	    }
	    value = Matrix.checkMatrix(value);

	    options = options || {};

	    var m = value.rows,
	        n = value.columns,
	        nu = Math.min(m, n);

	    var wantu = true, wantv = true;
	    if (options.computeLeftSingularVectors === false)
	        wantu = false;
	    if (options.computeRightSingularVectors === false)
	        wantv = false;
	    var autoTranspose = options.autoTranspose === true;

	    var swapped = false;
	    var a;
	    if (m < n) {
	        if (!autoTranspose) {
	            a = value.clone();
	            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');
	        } else {
	            a = value.transpose();
	            m = a.rows;
	            n = a.columns;
	            swapped = true;
	            var aux = wantu;
	            wantu = wantv;
	            wantv = aux;
	        }
	    } else {
	        a = value.clone();
	    }

	    var s = new Array(Math.min(m + 1, n)),
	        U = getFilled2DArray(m, nu, 0),
	        V = getFilled2DArray(n, n, 0),
	        e = new Array(n),
	        work = new Array(m);

	    var nct = Math.min(m - 1, n);
	    var nrt = Math.max(0, Math.min(n - 2, m));

	    var i, j, k, p, t, ks, f, cs, sn, max, kase,
	        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;

	    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {
	        if (k < nct) {
	            s[k] = 0;
	            for (i = k; i < m; i++) {
	                s[k] = hypotenuse(s[k], a[i][k]);
	            }
	            if (s[k] !== 0) {
	                if (a[k][k] < 0) {
	                    s[k] = -s[k];
	                }
	                for (i = k; i < m; i++) {
	                    a[i][k] /= s[k];
	                }
	                a[k][k] += 1;
	            }
	            s[k] = -s[k];
	        }

	        for (j = k + 1; j < n; j++) {
	            if ((k < nct) && (s[k] !== 0)) {
	                t = 0;
	                for (i = k; i < m; i++) {
	                    t += a[i][k] * a[i][j];
	                }
	                t = -t / a[k][k];
	                for (i = k; i < m; i++) {
	                    a[i][j] += t * a[i][k];
	                }
	            }
	            e[j] = a[k][j];
	        }

	        if (wantu && (k < nct)) {
	            for (i = k; i < m; i++) {
	                U[i][k] = a[i][k];
	            }
	        }

	        if (k < nrt) {
	            e[k] = 0;
	            for (i = k + 1; i < n; i++) {
	                e[k] = hypotenuse(e[k], e[i]);
	            }
	            if (e[k] !== 0) {
	                if (e[k + 1] < 0)
	                    e[k] = -e[k];
	                for (i = k + 1; i < n; i++) {
	                    e[i] /= e[k];
	                }
	                e[k + 1] += 1;
	            }
	            e[k] = -e[k];
	            if ((k + 1 < m) && (e[k] !== 0)) {
	                for (i = k + 1; i < m; i++) {
	                    work[i] = 0;
	                }
	                for (j = k + 1; j < n; j++) {
	                    for (i = k + 1; i < m; i++) {
	                        work[i] += e[j] * a[i][j];
	                    }
	                }
	                for (j = k + 1; j < n; j++) {
	                    t = -e[j] / e[k + 1];
	                    for (i = k + 1; i < m; i++) {
	                        a[i][j] += t * work[i];
	                    }
	                }
	            }
	            if (wantv) {
	                for (i = k + 1; i < n; i++) {
	                    V[i][k] = e[i];
	                }
	            }
	        }
	    }

	    p = Math.min(n, m + 1);
	    if (nct < n) {
	        s[nct] = a[nct][nct];
	    }
	    if (m < p) {
	        s[p - 1] = 0;
	    }
	    if (nrt + 1 < p) {
	        e[nrt] = a[nrt][p - 1];
	    }
	    e[p - 1] = 0;

	    if (wantu) {
	        for (j = nct; j < nu; j++) {
	            for (i = 0; i < m; i++) {
	                U[i][j] = 0;
	            }
	            U[j][j] = 1;
	        }
	        for (k = nct - 1; k >= 0; k--) {
	            if (s[k] !== 0) {
	                for (j = k + 1; j < nu; j++) {
	                    t = 0;
	                    for (i = k; i < m; i++) {
	                        t += U[i][k] * U[i][j];
	                    }
	                    t = -t / U[k][k];
	                    for (i = k; i < m; i++) {
	                        U[i][j] += t * U[i][k];
	                    }
	                }
	                for (i = k; i < m; i++) {
	                    U[i][k] = -U[i][k];
	                }
	                U[k][k] = 1 + U[k][k];
	                for (i = 0; i < k - 1; i++) {
	                    U[i][k] = 0;
	                }
	            } else {
	                for (i = 0; i < m; i++) {
	                    U[i][k] = 0;
	                }
	                U[k][k] = 1;
	            }
	        }
	    }

	    if (wantv) {
	        for (k = n - 1; k >= 0; k--) {
	            if ((k < nrt) && (e[k] !== 0)) {
	                for (j = k + 1; j < n; j++) {
	                    t = 0;
	                    for (i = k + 1; i < n; i++) {
	                        t += V[i][k] * V[i][j];
	                    }
	                    t = -t / V[k + 1][k];
	                    for (i = k + 1; i < n; i++) {
	                        V[i][j] += t * V[i][k];
	                    }
	                }
	            }
	            for (i = 0; i < n; i++) {
	                V[i][k] = 0;
	            }
	            V[k][k] = 1;
	        }
	    }

	    var pp = p - 1,
	        iter = 0,
	        eps = Math.pow(2, -52);
	    while (p > 0) {
	        for (k = p - 2; k >= -1; k--) {
	            if (k === -1) {
	                break;
	            }
	            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {
	                e[k] = 0;
	                break;
	            }
	        }
	        if (k === p - 2) {
	            kase = 4;
	        } else {
	            for (ks = p - 1; ks >= k; ks--) {
	                if (ks === k) {
	                    break;
	                }
	                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);
	                if (Math.abs(s[ks]) <= eps * t) {
	                    s[ks] = 0;
	                    break;
	                }
	            }
	            if (ks === k) {
	                kase = 3;
	            } else if (ks === p - 1) {
	                kase = 1;
	            } else {
	                kase = 2;
	                k = ks;
	            }
	        }

	        k++;

	        switch (kase) {
	            case 1: {
	                f = e[p - 2];
	                e[p - 2] = 0;
	                for (j = p - 2; j >= k; j--) {
	                    t = hypotenuse(s[j], f);
	                    cs = s[j] / t;
	                    sn = f / t;
	                    s[j] = t;
	                    if (j !== k) {
	                        f = -sn * e[j - 1];
	                        e[j - 1] = cs * e[j - 1];
	                    }
	                    if (wantv) {
	                        for (i = 0; i < n; i++) {
	                            t = cs * V[i][j] + sn * V[i][p - 1];
	                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];
	                            V[i][j] = t;
	                        }
	                    }
	                }
	                break;
	            }
	            case 2 : {
	                f = e[k - 1];
	                e[k - 1] = 0;
	                for (j = k; j < p; j++) {
	                    t = hypotenuse(s[j], f);
	                    cs = s[j] / t;
	                    sn = f / t;
	                    s[j] = t;
	                    f = -sn * e[j];
	                    e[j] = cs * e[j];
	                    if (wantu) {
	                        for (i = 0; i < m; i++) {
	                            t = cs * U[i][j] + sn * U[i][k - 1];
	                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];
	                            U[i][j] = t;
	                        }
	                    }
	                }
	                break;
	            }
	            case 3 : {
	                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));
	                sp = s[p - 1] / scale;
	                spm1 = s[p - 2] / scale;
	                epm1 = e[p - 2] / scale;
	                sk = s[k] / scale;
	                ek = e[k] / scale;
	                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;
	                c = (sp * epm1) * (sp * epm1);
	                shift = 0;
	                if ((b !== 0) || (c !== 0)) {
	                    shift = Math.sqrt(b * b + c);
	                    if (b < 0) {
	                        shift = -shift;
	                    }
	                    shift = c / (b + shift);
	                }
	                f = (sk + sp) * (sk - sp) + shift;
	                g = sk * ek;
	                for (j = k; j < p - 1; j++) {
	                    t = hypotenuse(f, g);
	                    cs = f / t;
	                    sn = g / t;
	                    if (j !== k) {
	                        e[j - 1] = t;
	                    }
	                    f = cs * s[j] + sn * e[j];
	                    e[j] = cs * e[j] - sn * s[j];
	                    g = sn * s[j + 1];
	                    s[j + 1] = cs * s[j + 1];
	                    if (wantv) {
	                        for (i = 0; i < n; i++) {
	                            t = cs * V[i][j] + sn * V[i][j + 1];
	                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];
	                            V[i][j] = t;
	                        }
	                    }
	                    t = hypotenuse(f, g);
	                    cs = f / t;
	                    sn = g / t;
	                    s[j] = t;
	                    f = cs * e[j] + sn * s[j + 1];
	                    s[j + 1] = -sn * e[j] + cs * s[j + 1];
	                    g = sn * e[j + 1];
	                    e[j + 1] = cs * e[j + 1];
	                    if (wantu && (j < m - 1)) {
	                        for (i = 0; i < m; i++) {
	                            t = cs * U[i][j] + sn * U[i][j + 1];
	                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];
	                            U[i][j] = t;
	                        }
	                    }
	                }
	                e[p - 2] = f;
	                iter = iter + 1;
	                break;
	            }
	            case 4: {
	                if (s[k] <= 0) {
	                    s[k] = (s[k] < 0 ? -s[k] : 0);
	                    if (wantv) {
	                        for (i = 0; i <= pp; i++) {
	                            V[i][k] = -V[i][k];
	                        }
	                    }
	                }
	                while (k < pp) {
	                    if (s[k] >= s[k + 1]) {
	                        break;
	                    }
	                    t = s[k];
	                    s[k] = s[k + 1];
	                    s[k + 1] = t;
	                    if (wantv && (k < n - 1)) {
	                        for (i = 0; i < n; i++) {
	                            t = V[i][k + 1];
	                            V[i][k + 1] = V[i][k];
	                            V[i][k] = t;
	                        }
	                    }
	                    if (wantu && (k < m - 1)) {
	                        for (i = 0; i < m; i++) {
	                            t = U[i][k + 1];
	                            U[i][k + 1] = U[i][k];
	                            U[i][k] = t;
	                        }
	                    }
	                    k++;
	                }
	                iter = 0;
	                p--;
	                break;
	            }
	        }
	    }

	    if (swapped) {
	        var tmp = V;
	        V = U;
	        U = tmp;
	    }

	    this.m = m;
	    this.n = n;
	    this.s = s;
	    this.U = U;
	    this.V = V;
	}

	SingularValueDecomposition.prototype = {
	    get condition() {
	        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];
	    },
	    get norm2() {
	        return this.s[0];
	    },
	    get rank() {
	        var eps = Math.pow(2, -52),
	            tol = Math.max(this.m, this.n) * this.s[0] * eps,
	            r = 0,
	            s = this.s;
	        for (var i = 0, ii = s.length; i < ii; i++) {
	            if (s[i] > tol) {
	                r++;
	            }
	        }
	        return r;
	    },
	    get diagonal() {
	        return this.s;
	    },
	    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs
	    get threshold() {
	        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];
	    },
	    get leftSingularVectors() {
	        if (!Matrix.isMatrix(this.U)) {
	            this.U = new Matrix(this.U);
	        }
	        return this.U;
	    },
	    get rightSingularVectors() {
	        if (!Matrix.isMatrix(this.V)) {
	            this.V = new Matrix(this.V);
	        }
	        return this.V;
	    },
	    get diagonalMatrix() {
	        return Matrix.diag(this.s);
	    },
	    solve: function (value) {

	        var Y = value,
	            e = this.threshold,
	            scols = this.s.length,
	            Ls = Matrix.zeros(scols, scols),
	            i;

	        for (i = 0; i < scols; i++) {
	            if (Math.abs(this.s[i]) <= e) {
	                Ls[i][i] = 0;
	            } else {
	                Ls[i][i] = 1 / this.s[i];
	            }
	        }

	        var U = this.U;
	        var V = this.rightSingularVectors;

	        var VL = V.mmul(Ls),
	            vrows = V.rows,
	            urows = U.length,
	            VLU = Matrix.zeros(vrows, urows),
	            j, k, sum;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < urows; j++) {
	                sum = 0;
	                for (k = 0; k < scols; k++) {
	                    sum += VL[i][k] * U[j][k];
	                }
	                VLU[i][j] = sum;
	            }
	        }

	        return VLU.mmul(Y);
	    },
	    solveForDiagonal: function (value) {
	        return this.solve(Matrix.diag(value));
	    },
	    inverse: function () {
	        var V = this.V;
	        var e = this.threshold,
	            vrows = V.length,
	            vcols = V[0].length,
	            X = new Matrix(vrows, this.s.length),
	            i, j;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < vcols; j++) {
	                if (Math.abs(this.s[j]) > e) {
	                    X[i][j] = V[i][j] / this.s[j];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }

	        var U = this.U;

	        var urows = U.length,
	            ucols = U[0].length,
	            Y = new Matrix(vrows, urows),
	            k, sum;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < urows; j++) {
	                sum = 0;
	                for (k = 0; k < ucols; k++) {
	                    sum += X[i][k] * U[j][k];
	                }
	                Y[i][j] = sum;
	            }
	        }

	        return Y;
	    }
	};

	module.exports = SingularValueDecomposition;


/***/ },
/* 44 */
/***/ function(module, exports) {

	'use strict';

	exports.hypotenuse = function hypotenuse(a, b) {
	    if (Math.abs(a) > Math.abs(b)) {
	        var r = b / a;
	        return Math.abs(a) * Math.sqrt(1 + r * r);
	    }
	    if (b !== 0) {
	        var r = a / b;
	        return Math.abs(b) * Math.sqrt(1 + r * r);
	    }
	    return 0;
	};

	// For use in the decomposition algorithms. With big matrices, access time is
	// too long on elements from array subclass
	// todo check when it is fixed in v8
	// http://jsperf.com/access-and-write-array-subclass
	exports.getEmpty2DArray = function (rows, columns) {
	    var array = new Array(rows);
	    for (var i = 0; i < rows; i++) {
	        array[i] = new Array(columns);
	    }
	    return array;
	};

	exports.getFilled2DArray = function (rows, columns, value) {
	    var array = new Array(rows);
	    for (var i = 0; i < rows; i++) {
	        array[i] = new Array(columns);
	        for (var j = 0; j < columns; j++) {
	            array[i][j] = value;
	        }
	    }
	    return array;
	};


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Matrix = __webpack_require__(23);
	const util = __webpack_require__(44);
	const hypotenuse = util.hypotenuse;
	const getFilled2DArray = util.getFilled2DArray;

	const defaultOptions = {
	    assumeSymmetric: false
	};

	// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs
	function EigenvalueDecomposition(matrix, options) {
	    options = Object.assign({}, defaultOptions, options);
	    if (!(this instanceof EigenvalueDecomposition)) {
	        return new EigenvalueDecomposition(matrix, options);
	    }
	    matrix = Matrix.checkMatrix(matrix);
	    if (!matrix.isSquare()) {
	        throw new Error('Matrix is not a square matrix');
	    }

	    var n = matrix.columns,
	        V = getFilled2DArray(n, n, 0),
	        d = new Array(n),
	        e = new Array(n),
	        value = matrix,
	        i, j;

	    var isSymmetric = false;
	    if (options.assumeSymmetric) {
	        isSymmetric = true;
	    } else {
	        isSymmetric = matrix.isSymmetric();
	    }

	    if (isSymmetric) {
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                V[i][j] = value.get(i, j);
	            }
	        }
	        tred2(n, e, d, V);
	        tql2(n, e, d, V);
	    }
	    else {
	        var H = getFilled2DArray(n, n, 0),
	            ort = new Array(n);
	        for (j = 0; j < n; j++) {
	            for (i = 0; i < n; i++) {
	                H[i][j] = value.get(i, j);
	            }
	        }
	        orthes(n, H, ort, V);
	        hqr2(n, e, d, V, H);
	    }

	    this.n = n;
	    this.e = e;
	    this.d = d;
	    this.V = V;
	}

	EigenvalueDecomposition.prototype = {
	    get realEigenvalues() {
	        return this.d;
	    },
	    get imaginaryEigenvalues() {
	        return this.e;
	    },
	    get eigenvectorMatrix() {
	        if (!Matrix.isMatrix(this.V)) {
	            this.V = new Matrix(this.V);
	        }
	        return this.V;
	    },
	    get diagonalMatrix() {
	        var n = this.n,
	            e = this.e,
	            d = this.d,
	            X = new Matrix(n, n),
	            i, j;
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                X[i][j] = 0;
	            }
	            X[i][i] = d[i];
	            if (e[i] > 0) {
	                X[i][i + 1] = e[i];
	            }
	            else if (e[i] < 0) {
	                X[i][i - 1] = e[i];
	            }
	        }
	        return X;
	    }
	};

	function tred2(n, e, d, V) {

	    var f, g, h, i, j, k,
	        hh, scale;

	    for (j = 0; j < n; j++) {
	        d[j] = V[n - 1][j];
	    }

	    for (i = n - 1; i > 0; i--) {
	        scale = 0;
	        h = 0;
	        for (k = 0; k < i; k++) {
	            scale = scale + Math.abs(d[k]);
	        }

	        if (scale === 0) {
	            e[i] = d[i - 1];
	            for (j = 0; j < i; j++) {
	                d[j] = V[i - 1][j];
	                V[i][j] = 0;
	                V[j][i] = 0;
	            }
	        } else {
	            for (k = 0; k < i; k++) {
	                d[k] /= scale;
	                h += d[k] * d[k];
	            }

	            f = d[i - 1];
	            g = Math.sqrt(h);
	            if (f > 0) {
	                g = -g;
	            }

	            e[i] = scale * g;
	            h = h - f * g;
	            d[i - 1] = f - g;
	            for (j = 0; j < i; j++) {
	                e[j] = 0;
	            }

	            for (j = 0; j < i; j++) {
	                f = d[j];
	                V[j][i] = f;
	                g = e[j] + V[j][j] * f;
	                for (k = j + 1; k <= i - 1; k++) {
	                    g += V[k][j] * d[k];
	                    e[k] += V[k][j] * f;
	                }
	                e[j] = g;
	            }

	            f = 0;
	            for (j = 0; j < i; j++) {
	                e[j] /= h;
	                f += e[j] * d[j];
	            }

	            hh = f / (h + h);
	            for (j = 0; j < i; j++) {
	                e[j] -= hh * d[j];
	            }

	            for (j = 0; j < i; j++) {
	                f = d[j];
	                g = e[j];
	                for (k = j; k <= i - 1; k++) {
	                    V[k][j] -= (f * e[k] + g * d[k]);
	                }
	                d[j] = V[i - 1][j];
	                V[i][j] = 0;
	            }
	        }
	        d[i] = h;
	    }

	    for (i = 0; i < n - 1; i++) {
	        V[n - 1][i] = V[i][i];
	        V[i][i] = 1;
	        h = d[i + 1];
	        if (h !== 0) {
	            for (k = 0; k <= i; k++) {
	                d[k] = V[k][i + 1] / h;
	            }

	            for (j = 0; j <= i; j++) {
	                g = 0;
	                for (k = 0; k <= i; k++) {
	                    g += V[k][i + 1] * V[k][j];
	                }
	                for (k = 0; k <= i; k++) {
	                    V[k][j] -= g * d[k];
	                }
	            }
	        }

	        for (k = 0; k <= i; k++) {
	            V[k][i + 1] = 0;
	        }
	    }

	    for (j = 0; j < n; j++) {
	        d[j] = V[n - 1][j];
	        V[n - 1][j] = 0;
	    }

	    V[n - 1][n - 1] = 1;
	    e[0] = 0;
	}

	function tql2(n, e, d, V) {

	    var g, h, i, j, k, l, m, p, r,
	        dl1, c, c2, c3, el1, s, s2,
	        iter;

	    for (i = 1; i < n; i++) {
	        e[i - 1] = e[i];
	    }

	    e[n - 1] = 0;

	    var f = 0,
	        tst1 = 0,
	        eps = Math.pow(2, -52);

	    for (l = 0; l < n; l++) {
	        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));
	        m = l;
	        while (m < n) {
	            if (Math.abs(e[m]) <= eps * tst1) {
	                break;
	            }
	            m++;
	        }

	        if (m > l) {
	            iter = 0;
	            do {
	                iter = iter + 1;

	                g = d[l];
	                p = (d[l + 1] - g) / (2 * e[l]);
	                r = hypotenuse(p, 1);
	                if (p < 0) {
	                    r = -r;
	                }

	                d[l] = e[l] / (p + r);
	                d[l + 1] = e[l] * (p + r);
	                dl1 = d[l + 1];
	                h = g - d[l];
	                for (i = l + 2; i < n; i++) {
	                    d[i] -= h;
	                }

	                f = f + h;

	                p = d[m];
	                c = 1;
	                c2 = c;
	                c3 = c;
	                el1 = e[l + 1];
	                s = 0;
	                s2 = 0;
	                for (i = m - 1; i >= l; i--) {
	                    c3 = c2;
	                    c2 = c;
	                    s2 = s;
	                    g = c * e[i];
	                    h = c * p;
	                    r = hypotenuse(p, e[i]);
	                    e[i + 1] = s * r;
	                    s = e[i] / r;
	                    c = p / r;
	                    p = c * d[i] - s * g;
	                    d[i + 1] = h + s * (c * g + s * d[i]);

	                    for (k = 0; k < n; k++) {
	                        h = V[k][i + 1];
	                        V[k][i + 1] = s * V[k][i] + c * h;
	                        V[k][i] = c * V[k][i] - s * h;
	                    }
	                }

	                p = -s * s2 * c3 * el1 * e[l] / dl1;
	                e[l] = s * p;
	                d[l] = c * p;

	            }
	            while (Math.abs(e[l]) > eps * tst1);
	        }
	        d[l] = d[l] + f;
	        e[l] = 0;
	    }

	    for (i = 0; i < n - 1; i++) {
	        k = i;
	        p = d[i];
	        for (j = i + 1; j < n; j++) {
	            if (d[j] < p) {
	                k = j;
	                p = d[j];
	            }
	        }

	        if (k !== i) {
	            d[k] = d[i];
	            d[i] = p;
	            for (j = 0; j < n; j++) {
	                p = V[j][i];
	                V[j][i] = V[j][k];
	                V[j][k] = p;
	            }
	        }
	    }
	}

	function orthes(n, H, ort, V) {

	    var low = 0,
	        high = n - 1,
	        f, g, h, i, j, m,
	        scale;

	    for (m = low + 1; m <= high - 1; m++) {
	        scale = 0;
	        for (i = m; i <= high; i++) {
	            scale = scale + Math.abs(H[i][m - 1]);
	        }

	        if (scale !== 0) {
	            h = 0;
	            for (i = high; i >= m; i--) {
	                ort[i] = H[i][m - 1] / scale;
	                h += ort[i] * ort[i];
	            }

	            g = Math.sqrt(h);
	            if (ort[m] > 0) {
	                g = -g;
	            }

	            h = h - ort[m] * g;
	            ort[m] = ort[m] - g;

	            for (j = m; j < n; j++) {
	                f = 0;
	                for (i = high; i >= m; i--) {
	                    f += ort[i] * H[i][j];
	                }

	                f = f / h;
	                for (i = m; i <= high; i++) {
	                    H[i][j] -= f * ort[i];
	                }
	            }

	            for (i = 0; i <= high; i++) {
	                f = 0;
	                for (j = high; j >= m; j--) {
	                    f += ort[j] * H[i][j];
	                }

	                f = f / h;
	                for (j = m; j <= high; j++) {
	                    H[i][j] -= f * ort[j];
	                }
	            }

	            ort[m] = scale * ort[m];
	            H[m][m - 1] = scale * g;
	        }
	    }

	    for (i = 0; i < n; i++) {
	        for (j = 0; j < n; j++) {
	            V[i][j] = (i === j ? 1 : 0);
	        }
	    }

	    for (m = high - 1; m >= low + 1; m--) {
	        if (H[m][m - 1] !== 0) {
	            for (i = m + 1; i <= high; i++) {
	                ort[i] = H[i][m - 1];
	            }

	            for (j = m; j <= high; j++) {
	                g = 0;
	                for (i = m; i <= high; i++) {
	                    g += ort[i] * V[i][j];
	                }

	                g = (g / ort[m]) / H[m][m - 1];
	                for (i = m; i <= high; i++) {
	                    V[i][j] += g * ort[i];
	                }
	            }
	        }
	    }
	}

	function hqr2(nn, e, d, V, H) {
	    var n = nn - 1,
	        low = 0,
	        high = nn - 1,
	        eps = Math.pow(2, -52),
	        exshift = 0,
	        norm = 0,
	        p = 0,
	        q = 0,
	        r = 0,
	        s = 0,
	        z = 0,
	        iter = 0,
	        i, j, k, l, m, t, w, x, y,
	        ra, sa, vr, vi,
	        notlast, cdivres;

	    for (i = 0; i < nn; i++) {
	        if (i < low || i > high) {
	            d[i] = H[i][i];
	            e[i] = 0;
	        }

	        for (j = Math.max(i - 1, 0); j < nn; j++) {
	            norm = norm + Math.abs(H[i][j]);
	        }
	    }

	    while (n >= low) {
	        l = n;
	        while (l > low) {
	            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);
	            if (s === 0) {
	                s = norm;
	            }
	            if (Math.abs(H[l][l - 1]) < eps * s) {
	                break;
	            }
	            l--;
	        }

	        if (l === n) {
	            H[n][n] = H[n][n] + exshift;
	            d[n] = H[n][n];
	            e[n] = 0;
	            n--;
	            iter = 0;
	        } else if (l === n - 1) {
	            w = H[n][n - 1] * H[n - 1][n];
	            p = (H[n - 1][n - 1] - H[n][n]) / 2;
	            q = p * p + w;
	            z = Math.sqrt(Math.abs(q));
	            H[n][n] = H[n][n] + exshift;
	            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;
	            x = H[n][n];

	            if (q >= 0) {
	                z = (p >= 0) ? (p + z) : (p - z);
	                d[n - 1] = x + z;
	                d[n] = d[n - 1];
	                if (z !== 0) {
	                    d[n] = x - w / z;
	                }
	                e[n - 1] = 0;
	                e[n] = 0;
	                x = H[n][n - 1];
	                s = Math.abs(x) + Math.abs(z);
	                p = x / s;
	                q = z / s;
	                r = Math.sqrt(p * p + q * q);
	                p = p / r;
	                q = q / r;

	                for (j = n - 1; j < nn; j++) {
	                    z = H[n - 1][j];
	                    H[n - 1][j] = q * z + p * H[n][j];
	                    H[n][j] = q * H[n][j] - p * z;
	                }

	                for (i = 0; i <= n; i++) {
	                    z = H[i][n - 1];
	                    H[i][n - 1] = q * z + p * H[i][n];
	                    H[i][n] = q * H[i][n] - p * z;
	                }

	                for (i = low; i <= high; i++) {
	                    z = V[i][n - 1];
	                    V[i][n - 1] = q * z + p * V[i][n];
	                    V[i][n] = q * V[i][n] - p * z;
	                }
	            } else {
	                d[n - 1] = x + p;
	                d[n] = x + p;
	                e[n - 1] = z;
	                e[n] = -z;
	            }

	            n = n - 2;
	            iter = 0;
	        } else {
	            x = H[n][n];
	            y = 0;
	            w = 0;
	            if (l < n) {
	                y = H[n - 1][n - 1];
	                w = H[n][n - 1] * H[n - 1][n];
	            }

	            if (iter === 10) {
	                exshift += x;
	                for (i = low; i <= n; i++) {
	                    H[i][i] -= x;
	                }
	                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);
	                x = y = 0.75 * s;
	                w = -0.4375 * s * s;
	            }

	            if (iter === 30) {
	                s = (y - x) / 2;
	                s = s * s + w;
	                if (s > 0) {
	                    s = Math.sqrt(s);
	                    if (y < x) {
	                        s = -s;
	                    }
	                    s = x - w / ((y - x) / 2 + s);
	                    for (i = low; i <= n; i++) {
	                        H[i][i] -= s;
	                    }
	                    exshift += s;
	                    x = y = w = 0.964;
	                }
	            }

	            iter = iter + 1;

	            m = n - 2;
	            while (m >= l) {
	                z = H[m][m];
	                r = x - z;
	                s = y - z;
	                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];
	                q = H[m + 1][m + 1] - z - r - s;
	                r = H[m + 2][m + 1];
	                s = Math.abs(p) + Math.abs(q) + Math.abs(r);
	                p = p / s;
	                q = q / s;
	                r = r / s;
	                if (m === l) {
	                    break;
	                }
	                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {
	                    break;
	                }
	                m--;
	            }

	            for (i = m + 2; i <= n; i++) {
	                H[i][i - 2] = 0;
	                if (i > m + 2) {
	                    H[i][i - 3] = 0;
	                }
	            }

	            for (k = m; k <= n - 1; k++) {
	                notlast = (k !== n - 1);
	                if (k !== m) {
	                    p = H[k][k - 1];
	                    q = H[k + 1][k - 1];
	                    r = (notlast ? H[k + 2][k - 1] : 0);
	                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);
	                    if (x !== 0) {
	                        p = p / x;
	                        q = q / x;
	                        r = r / x;
	                    }
	                }

	                if (x === 0) {
	                    break;
	                }

	                s = Math.sqrt(p * p + q * q + r * r);
	                if (p < 0) {
	                    s = -s;
	                }

	                if (s !== 0) {
	                    if (k !== m) {
	                        H[k][k - 1] = -s * x;
	                    } else if (l !== m) {
	                        H[k][k - 1] = -H[k][k - 1];
	                    }

	                    p = p + s;
	                    x = p / s;
	                    y = q / s;
	                    z = r / s;
	                    q = q / p;
	                    r = r / p;

	                    for (j = k; j < nn; j++) {
	                        p = H[k][j] + q * H[k + 1][j];
	                        if (notlast) {
	                            p = p + r * H[k + 2][j];
	                            H[k + 2][j] = H[k + 2][j] - p * z;
	                        }

	                        H[k][j] = H[k][j] - p * x;
	                        H[k + 1][j] = H[k + 1][j] - p * y;
	                    }

	                    for (i = 0; i <= Math.min(n, k + 3); i++) {
	                        p = x * H[i][k] + y * H[i][k + 1];
	                        if (notlast) {
	                            p = p + z * H[i][k + 2];
	                            H[i][k + 2] = H[i][k + 2] - p * r;
	                        }

	                        H[i][k] = H[i][k] - p;
	                        H[i][k + 1] = H[i][k + 1] - p * q;
	                    }

	                    for (i = low; i <= high; i++) {
	                        p = x * V[i][k] + y * V[i][k + 1];
	                        if (notlast) {
	                            p = p + z * V[i][k + 2];
	                            V[i][k + 2] = V[i][k + 2] - p * r;
	                        }

	                        V[i][k] = V[i][k] - p;
	                        V[i][k + 1] = V[i][k + 1] - p * q;
	                    }
	                }
	            }
	        }
	    }

	    if (norm === 0) {
	        return;
	    }

	    for (n = nn - 1; n >= 0; n--) {
	        p = d[n];
	        q = e[n];

	        if (q === 0) {
	            l = n;
	            H[n][n] = 1;
	            for (i = n - 1; i >= 0; i--) {
	                w = H[i][i] - p;
	                r = 0;
	                for (j = l; j <= n; j++) {
	                    r = r + H[i][j] * H[j][n];
	                }

	                if (e[i] < 0) {
	                    z = w;
	                    s = r;
	                } else {
	                    l = i;
	                    if (e[i] === 0) {
	                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));
	                    } else {
	                        x = H[i][i + 1];
	                        y = H[i + 1][i];
	                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];
	                        t = (x * s - z * r) / q;
	                        H[i][n] = t;
	                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);
	                    }

	                    t = Math.abs(H[i][n]);
	                    if ((eps * t) * t > 1) {
	                        for (j = i; j <= n; j++) {
	                            H[j][n] = H[j][n] / t;
	                        }
	                    }
	                }
	            }
	        } else if (q < 0) {
	            l = n - 1;

	            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {
	                H[n - 1][n - 1] = q / H[n][n - 1];
	                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];
	            } else {
	                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);
	                H[n - 1][n - 1] = cdivres[0];
	                H[n - 1][n] = cdivres[1];
	            }

	            H[n][n - 1] = 0;
	            H[n][n] = 1;
	            for (i = n - 2; i >= 0; i--) {
	                ra = 0;
	                sa = 0;
	                for (j = l; j <= n; j++) {
	                    ra = ra + H[i][j] * H[j][n - 1];
	                    sa = sa + H[i][j] * H[j][n];
	                }

	                w = H[i][i] - p;

	                if (e[i] < 0) {
	                    z = w;
	                    r = ra;
	                    s = sa;
	                } else {
	                    l = i;
	                    if (e[i] === 0) {
	                        cdivres = cdiv(-ra, -sa, w, q);
	                        H[i][n - 1] = cdivres[0];
	                        H[i][n] = cdivres[1];
	                    } else {
	                        x = H[i][i + 1];
	                        y = H[i + 1][i];
	                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;
	                        vi = (d[i] - p) * 2 * q;
	                        if (vr === 0 && vi === 0) {
	                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));
	                        }
	                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);
	                        H[i][n - 1] = cdivres[0];
	                        H[i][n] = cdivres[1];
	                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {
	                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;
	                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;
	                        } else {
	                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);
	                            H[i + 1][n - 1] = cdivres[0];
	                            H[i + 1][n] = cdivres[1];
	                        }
	                    }

	                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));
	                    if ((eps * t) * t > 1) {
	                        for (j = i; j <= n; j++) {
	                            H[j][n - 1] = H[j][n - 1] / t;
	                            H[j][n] = H[j][n] / t;
	                        }
	                    }
	                }
	            }
	        }
	    }

	    for (i = 0; i < nn; i++) {
	        if (i < low || i > high) {
	            for (j = i; j < nn; j++) {
	                V[i][j] = H[i][j];
	            }
	        }
	    }

	    for (j = nn - 1; j >= low; j--) {
	        for (i = low; i <= high; i++) {
	            z = 0;
	            for (k = low; k <= Math.min(j, high); k++) {
	                z = z + V[i][k] * H[k][j];
	            }
	            V[i][j] = z;
	        }
	    }
	}

	function cdiv(xr, xi, yr, yi) {
	    var r, d;
	    if (Math.abs(yr) > Math.abs(yi)) {
	        r = yi / yr;
	        d = yr + r * yi;
	        return [(xr + r * xi) / d, (xi - r * xr) / d];
	    }
	    else {
	        r = yr / yi;
	        d = yi + r * yr;
	        return [(r * xr + xi) / d, (r * xi - xr) / d];
	    }
	}

	module.exports = EigenvalueDecomposition;


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(23);

	// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs
	function LuDecomposition(matrix) {
	    if (!(this instanceof LuDecomposition)) {
	        return new LuDecomposition(matrix);
	    }
	    matrix = Matrix.checkMatrix(matrix);

	    var lu = matrix.clone(),
	        rows = lu.rows,
	        columns = lu.columns,
	        pivotVector = new Array(rows),
	        pivotSign = 1,
	        i, j, k, p, s, t, v,
	        LUrowi, LUcolj, kmax;

	    for (i = 0; i < rows; i++) {
	        pivotVector[i] = i;
	    }

	    LUcolj = new Array(rows);

	    for (j = 0; j < columns; j++) {

	        for (i = 0; i < rows; i++) {
	            LUcolj[i] = lu[i][j];
	        }

	        for (i = 0; i < rows; i++) {
	            LUrowi = lu[i];
	            kmax = Math.min(i, j);
	            s = 0;
	            for (k = 0; k < kmax; k++) {
	                s += LUrowi[k] * LUcolj[k];
	            }
	            LUrowi[j] = LUcolj[i] -= s;
	        }

	        p = j;
	        for (i = j + 1; i < rows; i++) {
	            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {
	                p = i;
	            }
	        }

	        if (p !== j) {
	            for (k = 0; k < columns; k++) {
	                t = lu[p][k];
	                lu[p][k] = lu[j][k];
	                lu[j][k] = t;
	            }

	            v = pivotVector[p];
	            pivotVector[p] = pivotVector[j];
	            pivotVector[j] = v;

	            pivotSign = -pivotSign;
	        }

	        if (j < rows && lu[j][j] !== 0) {
	            for (i = j + 1; i < rows; i++) {
	                lu[i][j] /= lu[j][j];
	            }
	        }
	    }

	    this.LU = lu;
	    this.pivotVector = pivotVector;
	    this.pivotSign = pivotSign;
	}

	LuDecomposition.prototype = {
	    isSingular: function () {
	        var data = this.LU,
	            col = data.columns;
	        for (var j = 0; j < col; j++) {
	            if (data[j][j] === 0) {
	                return true;
	            }
	        }
	        return false;
	    },
	    get determinant() {
	        var data = this.LU;
	        if (!data.isSquare())
	            throw new Error('Matrix must be square');
	        var determinant = this.pivotSign, col = data.columns;
	        for (var j = 0; j < col; j++)
	            determinant *= data[j][j];
	        return determinant;
	    },
	    get lowerTriangularMatrix() {
	        var data = this.LU,
	            rows = data.rows,
	            columns = data.columns,
	            X = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                if (i > j) {
	                    X[i][j] = data[i][j];
	                } else if (i === j) {
	                    X[i][j] = 1;
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get upperTriangularMatrix() {
	        var data = this.LU,
	            rows = data.rows,
	            columns = data.columns,
	            X = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                if (i <= j) {
	                    X[i][j] = data[i][j];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get pivotPermutationVector() {
	        return this.pivotVector.slice();
	    },
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var lu = this.LU,
	            rows = lu.rows;

	        if (rows !== value.rows)
	            throw new Error('Invalid matrix dimensions');
	        if (this.isSingular())
	            throw new Error('LU matrix is singular');

	        var count = value.columns,
	            X = value.subMatrixRow(this.pivotVector, 0, count - 1),
	            columns = lu.columns,
	            i, j, k;

	        for (k = 0; k < columns; k++) {
	            for (i = k + 1; i < columns; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * lu[i][k];
	                }
	            }
	        }
	        for (k = columns - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                X[k][j] /= lu[k][k];
	            }
	            for (i = 0; i < k; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * lu[i][k];
	                }
	            }
	        }
	        return X;
	    }
	};

	module.exports = LuDecomposition;


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(23);
	var hypotenuse = __webpack_require__(44).hypotenuse;

	//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs
	function QrDecomposition(value) {
	    if (!(this instanceof QrDecomposition)) {
	        return new QrDecomposition(value);
	    }
	    value = Matrix.checkMatrix(value);

	    var qr = value.clone(),
	        m = value.rows,
	        n = value.columns,
	        rdiag = new Array(n),
	        i, j, k, s;

	    for (k = 0; k < n; k++) {
	        var nrm = 0;
	        for (i = k; i < m; i++) {
	            nrm = hypotenuse(nrm, qr[i][k]);
	        }
	        if (nrm !== 0) {
	            if (qr[k][k] < 0) {
	                nrm = -nrm;
	            }
	            for (i = k; i < m; i++) {
	                qr[i][k] /= nrm;
	            }
	            qr[k][k] += 1;
	            for (j = k + 1; j < n; j++) {
	                s = 0;
	                for (i = k; i < m; i++) {
	                    s += qr[i][k] * qr[i][j];
	                }
	                s = -s / qr[k][k];
	                for (i = k; i < m; i++) {
	                    qr[i][j] += s * qr[i][k];
	                }
	            }
	        }
	        rdiag[k] = -nrm;
	    }

	    this.QR = qr;
	    this.Rdiag = rdiag;
	}

	QrDecomposition.prototype = {
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var qr = this.QR,
	            m = qr.rows;

	        if (value.rows !== m)
	            throw new Error('Matrix row dimensions must agree');
	        if (!this.isFullRank())
	            throw new Error('Matrix is rank deficient');

	        var count = value.columns,
	            X = value.clone(),
	            n = qr.columns,
	            i, j, k, s;

	        for (k = 0; k < n; k++) {
	            for (j = 0; j < count; j++) {
	                s = 0;
	                for (i = k; i < m; i++) {
	                    s += qr[i][k] * X[i][j];
	                }
	                s = -s / qr[k][k];
	                for (i = k; i < m; i++) {
	                    X[i][j] += s * qr[i][k];
	                }
	            }
	        }
	        for (k = n - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                X[k][j] /= this.Rdiag[k];
	            }
	            for (i = 0; i < k; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * qr[i][k];
	                }
	            }
	        }

	        return X.subMatrix(0, n - 1, 0, count - 1);
	    },
	    isFullRank: function () {
	        var columns = this.QR.columns;
	        for (var i = 0; i < columns; i++) {
	            if (this.Rdiag[i] === 0) {
	                return false;
	            }
	        }
	        return true;
	    },
	    get upperTriangularMatrix() {
	        var qr = this.QR,
	            n = qr.columns,
	            X = new Matrix(n, n),
	            i, j;
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                if (i < j) {
	                    X[i][j] = qr[i][j];
	                } else if (i === j) {
	                    X[i][j] = this.Rdiag[i];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get orthogonalMatrix() {
	        var qr = this.QR,
	            rows = qr.rows,
	            columns = qr.columns,
	            X = new Matrix(rows, columns),
	            i, j, k, s;

	        for (k = columns - 1; k >= 0; k--) {
	            for (i = 0; i < rows; i++) {
	                X[i][k] = 0;
	            }
	            X[k][k] = 1;
	            for (j = k; j < columns; j++) {
	                if (qr[k][k] !== 0) {
	                    s = 0;
	                    for (i = k; i < rows; i++) {
	                        s += qr[i][k] * X[i][j];
	                    }

	                    s = -s / qr[k][k];

	                    for (i = k; i < rows; i++) {
	                        X[i][j] += s * qr[i][k];
	                    }
	                }
	            }
	        }
	        return X;
	    }
	};

	module.exports = QrDecomposition;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(23);

	// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs
	function CholeskyDecomposition(value) {
	    if (!(this instanceof CholeskyDecomposition)) {
	        return new CholeskyDecomposition(value);
	    }
	    value = Matrix.checkMatrix(value);
	    if (!value.isSymmetric())
	        throw new Error('Matrix is not symmetric');

	    var a = value,
	        dimension = a.rows,
	        l = new Matrix(dimension, dimension),
	        positiveDefinite = true,
	        i, j, k;

	    for (j = 0; j < dimension; j++) {
	        var Lrowj = l[j];
	        var d = 0;
	        for (k = 0; k < j; k++) {
	            var Lrowk = l[k];
	            var s = 0;
	            for (i = 0; i < k; i++) {
	                s += Lrowk[i] * Lrowj[i];
	            }
	            Lrowj[k] = s = (a[j][k] - s) / l[k][k];
	            d = d + s * s;
	        }

	        d = a[j][j] - d;

	        positiveDefinite &= (d > 0);
	        l[j][j] = Math.sqrt(Math.max(d, 0));
	        for (k = j + 1; k < dimension; k++) {
	            l[j][k] = 0;
	        }
	    }

	    if (!positiveDefinite) {
	        throw new Error('Matrix is not positive definite');
	    }

	    this.L = l;
	}

	CholeskyDecomposition.prototype = {
	    get lowerTriangularMatrix() {
	        return this.L;
	    },
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var l = this.L,
	            dimension = l.rows;

	        if (value.rows !== dimension) {
	            throw new Error('Matrix dimensions do not match');
	        }

	        var count = value.columns,
	            B = value.clone(),
	            i, j, k;

	        for (k = 0; k < dimension; k++) {
	            for (j = 0; j < count; j++) {
	                for (i = 0; i < k; i++) {
	                    B[k][j] -= B[i][j] * l[k][i];
	                }
	                B[k][j] /= l[k][k];
	            }
	        }

	        for (k = dimension - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                for (i = k + 1; i < dimension; i++) {
	                    B[k][j] -= B[i][j] * l[i][k];
	                }
	                B[k][j] /= l[k][k];
	            }
	        }

	        return B;
	    }
	};

	module.exports = CholeskyDecomposition;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(50);
	module.exports.Decompositions = module.exports.DC = __webpack_require__(66);


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(51);
	var abstractMatrix = __webpack_require__(52);
	var util = __webpack_require__(57);

	class Matrix extends abstractMatrix(Array) {
	    constructor(nRows, nColumns) {
	        if (arguments.length === 1 && typeof nRows === 'number') {
	            return new Array(nRows);
	        }
	        if (Matrix.isMatrix(nRows)) {
	            return nRows.clone();
	        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix
	            super(nRows);
	            if (Number.isInteger(nColumns) && nColumns > 0) {
	                for (var i = 0; i < nRows; i++) {
	                    this[i] = new Array(nColumns);
	                }
	            } else {
	                throw new TypeError('nColumns must be a positive integer');
	            }
	        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array
	            var matrix = nRows;
	            nRows = matrix.length;
	            nColumns = matrix[0].length;
	            if (typeof nColumns !== 'number' || nColumns === 0) {
	                throw new TypeError('Data must be a 2D array with at least one element');
	            }
	            super(nRows);
	            for (var i = 0; i < nRows; i++) {
	                if (matrix[i].length !== nColumns) {
	                    throw new RangeError('Inconsistent array dimensions');
	                }
	                this[i] = [].concat(matrix[i]);
	            }
	        } else {
	            throw new TypeError('First argument must be a positive number or an array');
	        }
	        this.rows = nRows;
	        this.columns = nColumns;
	    }

	    set(rowIndex, columnIndex, value) {
	        this[rowIndex][columnIndex] = value;
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this[rowIndex][columnIndex];
	    }

	    /**
	     * Creates an exact and independent copy of the matrix
	     * @returns {Matrix}
	     */
	    clone() {
	        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);
	        for (var row = 0; row < this.rows; row++) {
	            for (var column = 0; column < this.columns; column++) {
	                newMatrix.set(row, column, this.get(row, column));
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Removes a row from the given index
	     * @param {number} index - Row index
	     * @returns {Matrix} this
	     */
	    removeRow(index) {
	        util.checkRowIndex(this, index);
	        if (this.rows === 1)
	            throw new RangeError('A matrix cannot have less than one row');
	        this.splice(index, 1);
	        this.rows -= 1;
	        return this;
	    }

	    /**
	     * Adds a row at the given index
	     * @param {number} [index = this.rows] - Row index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    addRow(index, array) {
	        if (array === undefined) {
	            array = index;
	            index = this.rows;
	        }
	        util.checkRowIndex(this, index, true);
	        array = util.checkRowVector(this, array, true);
	        this.splice(index, 0, array);
	        this.rows += 1;
	        return this;
	    }

	    /**
	     * Removes a column from the given index
	     * @param {number} index - Column index
	     * @returns {Matrix} this
	     */
	    removeColumn(index) {
	        util.checkColumnIndex(this, index);
	        if (this.columns === 1)
	            throw new RangeError('A matrix cannot have less than one column');
	        for (var i = 0; i < this.rows; i++) {
	            this[i].splice(index, 1);
	        }
	        this.columns -= 1;
	        return this;
	    }

	    /**
	     * Adds a column at the given index
	     * @param {number} [index = this.columns] - Column index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    addColumn(index, array) {
	        if (typeof array === 'undefined') {
	            array = index;
	            index = this.columns;
	        }
	        util.checkColumnIndex(this, index, true);
	        array = util.checkColumnVector(this, array);
	        for (var i = 0; i < this.rows; i++) {
	            this[i].splice(index, 0, array[i]);
	        }
	        this.columns += 1;
	        return this;
	    }
	}

	module.exports = Matrix;
	Matrix.abstractMatrix = abstractMatrix;


/***/ },
/* 51 */
/***/ function(module, exports) {

	'use strict';

	if (!Symbol.species) {
	    Symbol.species = Symbol.for('@@species');
	}


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = abstractMatrix;

	var arrayUtils = __webpack_require__(53);
	var util = __webpack_require__(57);
	var MatrixTransposeView = __webpack_require__(58);
	var MatrixRowView = __webpack_require__(60);
	var MatrixSubView = __webpack_require__(61);
	var MatrixSelectionView = __webpack_require__(62);
	var MatrixColumnView = __webpack_require__(63);
	var MatrixFlipRowView = __webpack_require__(64);
	var MatrixFlipColumnView = __webpack_require__(65);

	function abstractMatrix(superCtor) {
	    if (superCtor === undefined) superCtor = Object;

	    /**
	     * Real matrix
	     * @class Matrix
	     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,
	     * 2D array containing the data or Matrix instance to clone
	     * @param {number} [nColumns] - Number of columns of the new matrix
	     */
	    class Matrix extends superCtor {
	        static get [Symbol.species]() {
	            return this;
	        }

	        /**
	         * Constructs a Matrix with the chosen dimensions from a 1D array
	         * @param {number} newRows - Number of rows
	         * @param {number} newColumns - Number of columns
	         * @param {Array} newData - A 1D array containing data for the matrix
	         * @returns {Matrix} - The new matrix
	         */
	        static from1DArray(newRows, newColumns, newData) {
	            var length = newRows * newColumns;
	            if (length !== newData.length) {
	                throw new RangeError('Data length does not match given dimensions');
	            }
	            var newMatrix = new this(newRows, newColumns);
	            for (var row = 0; row < newRows; row++) {
	                for (var column = 0; column < newColumns; column++) {
	                    newMatrix.set(row, column, newData[row * newColumns + column]);
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Creates a row vector, a matrix with only one row.
	         * @param {Array} newData - A 1D array containing data for the vector
	         * @returns {Matrix} - The new matrix
	         */
	        static rowVector(newData) {
	            var vector = new this(1, newData.length);
	            for (var i = 0; i < newData.length; i++) {
	                vector.set(0, i, newData[i]);
	            }
	            return vector;
	        }

	        /**
	         * Creates a column vector, a matrix with only one column.
	         * @param {Array} newData - A 1D array containing data for the vector
	         * @returns {Matrix} - The new matrix
	         */
	        static columnVector(newData) {
	            var vector = new this(newData.length, 1);
	            for (var i = 0; i < newData.length; i++) {
	                vector.set(i, 0, newData[i]);
	            }
	            return vector;
	        }

	        /**
	         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @returns {Matrix} - The new matrix
	         */
	        static empty(rows, columns) {
	            return new this(rows, columns);
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be set to zero.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @returns {Matrix} - The new matrix
	         */
	        static zeros(rows, columns) {
	            return this.empty(rows, columns).fill(0);
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be set to one.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @returns {Matrix} - The new matrix
	         */
	        static ones(rows, columns) {
	            return this.empty(rows, columns).fill(1);
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be randomly set.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @param {function} [rng=Math.random] - Random number generator
	         * @returns {Matrix} The new matrix
	         */
	        static rand(rows, columns, rng) {
	            if (rng === undefined) rng = Math.random;
	            var matrix = this.empty(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    matrix.set(i, j, rng());
	                }
	            }
	            return matrix;
	        }

	        /**
	         * Creates a matrix with the given dimensions. Values will be random integers.
	         * @param {number} rows - Number of rows
	         * @param {number} columns - Number of columns
	         * @param {number} [maxValue=1000] - Maximum value
	         * @param {function} [rng=Math.random] - Random number generator
	         * @returns {Matrix} The new matrix
	         */
	        static randInt(rows, columns, maxValue, rng) {
	            if (maxValue === undefined) maxValue = 1000;
	            if (rng === undefined) rng = Math.random;
	            var matrix = this.empty(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    var value = Math.floor(rng() * maxValue);
	                    matrix.set(i, j, value);
	                }
	            }
	            return matrix;
	        }

	        /**
	         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.
	         * @param {number} rows - Number of rows
	         * @param {number} [columns] - Number of columns (Default: rows)
	         * @returns {Matrix} - The new identity matrix
	         */
	        static eye(rows, columns, value) {
	            if (value === undefined) value = 1
	            if (columns === undefined) columns = rows;
	            var min = Math.min(rows, columns);
	            var matrix = this.zeros(rows, columns);
	            for (var i = 0; i < min; i++) {
	                matrix.set(i, i, value);
	            }
	            return matrix;
	        }

	        /**
	         * Creates a diagonal matrix based on the given array.
	         * @param {Array} data - Array containing the data for the diagonal
	         * @param {number} [rows] - Number of rows (Default: data.length)
	         * @param {number} [columns] - Number of columns (Default: rows)
	         * @returns {Matrix} - The new diagonal matrix
	         */
	        static diag(data, rows, columns) {
	            var l = data.length;
	            if (rows === undefined) rows = l;
	            if (columns === undefined) columns = rows;
	            var min = Math.min(l, rows, columns);
	            var matrix = this.zeros(rows, columns);
	            for (var i = 0; i < min; i++) {
	                matrix.set(i, i, data[i]);
	            }
	            return matrix;
	        }

	        /**
	         * Returns a matrix whose elements are the minimum between matrix1 and matrix2
	         * @param matrix1
	         * @param matrix2
	         * @returns {Matrix}
	         */
	        static min(matrix1, matrix2) {
	            matrix1 = this.checkMatrix(matrix1);
	            matrix2 = this.checkMatrix(matrix2);
	            var rows = matrix1.rows;
	            var columns = matrix1.columns;
	            var result = new this(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));
	                }
	            }
	            return result;
	        }

	        /**
	         * Returns a matrix whose elements are the maximum between matrix1 and matrix2
	         * @param matrix1
	         * @param matrix2
	         * @returns {Matrix}
	         */
	        static max(matrix1, matrix2) {
	            matrix1 = this.checkMatrix(matrix1);
	            matrix2 = this.checkMatrix(matrix2);
	            var rows = matrix1.rows;
	            var columns = matrix1.columns;
	            var result = new this(rows, columns);
	            for (var i = 0; i < rows; i++) {
	                for (var j = 0; j < columns; j++) {
	                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));
	                }
	            }
	            return result;
	        }

	        /**
	         * Check that the provided value is a Matrix and tries to instantiate one if not
	         * @param value - The value to check
	         * @returns {Matrix}
	         */
	        static checkMatrix(value) {
	            return Matrix.isMatrix(value) ? value : new this(value);
	        }

	        /**
	         * Returns true if the argument is a Matrix, false otherwise
	         * @param value - The value to check
	         * @return {boolean}
	         */
	        static isMatrix(value) {
	            return (value != null) && (value.klass === 'Matrix');
	        }

	        /**
	         * @property {number} - The number of elements in the matrix.
	         */
	        get size() {
	            return this.rows * this.columns;
	        }

	        /**
	         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.
	         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)
	         * @returns {Matrix} this
	         */
	        apply(callback) {
	            if (typeof callback !== 'function') {
	                throw new TypeError('callback must be a function');
	            }
	            var ii = this.rows;
	            var jj = this.columns;
	            for (var i = 0; i < ii; i++) {
	                for (var j = 0; j < jj; j++) {
	                    callback.call(this, i, j);
	                }
	            }
	            return this;
	        }

	        /**
	         * Returns a new 1D array filled row by row with the matrix values
	         * @returns {Array}
	         */
	        to1DArray() {
	            var array = new Array(this.size);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    array[i * this.columns + j] = this.get(i, j);
	                }
	            }
	            return array;
	        }

	        /**
	         * Returns a 2D array containing a copy of the data
	         * @returns {Array}
	         */
	        to2DArray() {
	            var copy = new Array(this.rows);
	            for (var i = 0; i < this.rows; i++) {
	                copy[i] = new Array(this.columns);
	                for (var j = 0; j < this.columns; j++) {
	                    copy[i][j] = this.get(i, j);
	                }
	            }
	            return copy;
	        }

	        /**
	         * @returns {boolean} true if the matrix has one row
	         */
	        isRowVector() {
	            return this.rows === 1;
	        }

	        /**
	         * @returns {boolean} true if the matrix has one column
	         */
	        isColumnVector() {
	            return this.columns === 1;
	        }

	        /**
	         * @returns {boolean} true if the matrix has one row or one column
	         */
	        isVector() {
	            return (this.rows === 1) || (this.columns === 1);
	        }

	        /**
	         * @returns {boolean} true if the matrix has the same number of rows and columns
	         */
	        isSquare() {
	            return this.rows === this.columns;
	        }

	        /**
	         * @returns {boolean} true if the matrix is square and has the same values on both sides of the diagonal
	         */
	        isSymmetric() {
	            if (this.isSquare()) {
	                for (var i = 0; i < this.rows; i++) {
	                    for (var j = 0; j <= i; j++) {
	                        if (this.get(i, j) !== this.get(j, i)) {
	                            return false;
	                        }
	                    }
	                }
	                return true;
	            }
	            return false;
	        }

	        /**
	         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1
	         * @param {number} rowIndex - Index of the row
	         * @param {number} columnIndex - Index of the column
	         * @param {number} value - The new value for the element
	         * @returns {Matrix} this
	         */
	        set(rowIndex, columnIndex, value) {
	            throw new Error('set method is unimplemented');
	        }

	        /**
	         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]
	         * @param {number} rowIndex - Index of the row
	         * @param {number} columnIndex - Index of the column
	         * @returns {number}
	         */
	        get(rowIndex, columnIndex) {
	            throw new Error('get method is unimplemented');
	        }

	        /**
	         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of
	         * rows of the matrix, and colRep times the number of columns of the matrix
	         * @param {number} rowRep - Number of times the rows should be repeated
	         * @param {number} colRep - Number of times the columns should be re
	         * @example
	         * var matrix = new Matrix([[1,2]]);
	         * matrix.repeat(2); // [[1,2],[1,2]]
	         */
	        repeat(rowRep, colRep) {
	            rowRep = rowRep || 1;
	            colRep = colRep || 1;
	            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);
	            for (var i = 0; i < rowRep; i++) {
	                for (var j = 0; j < colRep; j++) {
	                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);
	                }
	            }
	            return matrix;
	        }

	        /**
	         * Fills the matrix with a given value. All elements will be set to this value.
	         * @param {number} value - New value
	         * @returns {Matrix} this
	         */
	        fill(value) {
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, value);
	                }
	            }
	            return this;
	        }

	        /**
	         * Negates the matrix. All elements will be multiplied by (-1)
	         * @returns {Matrix} this
	         */
	        neg() {
	            return this.mulS(-1);
	        }

	        /**
	         * Returns a new array from the given row index
	         * @param {number} index - Row index
	         * @returns {Array}
	         */
	        getRow(index) {
	            util.checkRowIndex(this, index);
	            var row = new Array(this.columns);
	            for (var i = 0; i < this.columns; i++) {
	                row[i] = this.get(index, i);
	            }
	            return row;
	        }

	        /**
	         * Returns a new row vector from the given row index
	         * @param {number} index - Row index
	         * @returns {Matrix}
	         */
	        getRowVector(index) {
	            return this.constructor.rowVector(this.getRow(index));
	        }

	        /**
	         * Sets a row at the given index
	         * @param {number} index - Row index
	         * @param {Array|Matrix} array - Array or vector
	         * @returns {Matrix} this
	         */
	        setRow(index, array) {
	            util.checkRowIndex(this, index);
	            array = util.checkRowVector(this, array);
	            for (var i = 0; i < this.columns; i++) {
	                this.set(index, i, array[i]);
	            }
	            return this;
	        }

	        /**
	         * Swaps two rows
	         * @param {number} row1 - First row index
	         * @param {number} row2 - Second row index
	         * @returns {Matrix} this
	         */
	        swapRows(row1, row2) {
	            util.checkRowIndex(this, row1);
	            util.checkRowIndex(this, row2);
	            for (var i = 0; i < this.columns; i++) {
	                var temp = this.get(row1, i);
	                this.set(row1, i, this.get(row2, i));
	                this.set(row2, i, temp);
	            }
	            return this;
	        }

	        /**
	         * Returns a new array from the given column index
	         * @param {number} index - Column index
	         * @returns {Array}
	         */
	        getColumn(index) {
	            util.checkColumnIndex(this, index);
	            var column = new Array(this.rows);
	            for (var i = 0; i < this.rows; i++) {
	                column[i] = this.get(i, index);
	            }
	            return column;
	        }

	        /**
	         * Returns a new column vector from the given column index
	         * @param {number} index - Column index
	         * @returns {Matrix}
	         */
	        getColumnVector(index) {
	            return this.constructor.columnVector(this.getColumn(index));
	        }

	        /**
	         * Sets a column at the given index
	         * @param {number} index - Column index
	         * @param {Array|Matrix} array - Array or vector
	         * @returns {Matrix} this
	         */
	        setColumn(index, array) {
	            util.checkColumnIndex(this, index);
	            array = util.checkColumnVector(this, array);
	            for (var i = 0; i < this.rows; i++) {
	                this.set(i, index, array[i]);
	            }
	            return this;
	        }

	        /**
	         * Swaps two columns
	         * @param {number} column1 - First column index
	         * @param {number} column2 - Second column index
	         * @returns {Matrix} this
	         */
	        swapColumns(column1, column2) {
	            util.checkColumnIndex(this, column1);
	            util.checkColumnIndex(this, column2);
	            for (var i = 0; i < this.rows; i++) {
	                var temp = this.get(i, column1);
	                this.set(i, column1, this.get(i, column2));
	                this.set(i, column2, temp);
	            }
	            return this;
	        }

	        /**
	         * Adds the values of a vector to each row
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        addRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) + vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Subtracts the values of a vector from each row
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        subRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) - vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a vector with each row
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        mulRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) * vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Divides the values of each row by those of a vector
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        divRowVector(vector) {
	            vector = util.checkRowVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) / vector[j]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Adds the values of a vector to each column
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        addColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) + vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Subtracts the values of a vector from each column
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        subColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) - vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a vector with each column
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        mulColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) * vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Divides the values of each column by those of a vector
	         * @param {Array|Matrix} vector - Array or vector
	         * @returns {Matrix} this
	         */
	        divColumnVector(vector) {
	            vector = util.checkColumnVector(this, vector);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    this.set(i, j, this.get(i, j) / vector[i]);
	                }
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a row with a scalar
	         * @param {number} index - Row index
	         * @param {number} value
	         * @returns {Matrix} this
	         */
	        mulRow(index, value) {
	            util.checkRowIndex(this, index);
	            for (var i = 0; i < this.columns; i++) {
	                this.set(index, i, this.get(index, i) * value);
	            }
	            return this;
	        }

	        /**
	         * Multiplies the values of a column with a scalar
	         * @param {number} index - Column index
	         * @param {number} value
	         * @returns {Matrix} this
	         */
	        mulColumn(index, value) {
	            util.checkColumnIndex(this, index);
	            for (var i = 0; i < this.rows; i++) {
	                this.set(i, index, this.get(i, index) * value);
	            }
	        }

	        /**
	         * Returns the maximum value of the matrix
	         * @returns {number}
	         */
	        max() {
	            var v = this.get(0, 0);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) > v) {
	                        v = this.get(i, j);
	                    }
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value
	         * @returns {Array}
	         */
	        maxIndex() {
	            var v = this.get(0, 0);
	            var idx = [0, 0];
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) > v) {
	                        v = this.get(i, j);
	                        idx[0] = i;
	                        idx[1] = j;
	                    }
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the minimum value of the matrix
	         * @returns {number}
	         */
	        min() {
	            var v = this.get(0, 0);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) < v) {
	                        v = this.get(i, j);
	                    }
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the minimum value
	         * @returns {Array}
	         */
	        minIndex() {
	            var v = this.get(0, 0);
	            var idx = [0, 0];
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    if (this.get(i, j) < v) {
	                        v = this.get(i, j);
	                        idx[0] = i;
	                        idx[1] = j;
	                    }
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the maximum value of one row
	         * @param {number} row - Row index
	         * @returns {number}
	         */
	        maxRow(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) > v) {
	                    v = this.get(row, i);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value of one row
	         * @param {number} row - Row index
	         * @returns {Array}
	         */
	        maxRowIndex(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            var idx = [row, 0];
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) > v) {
	                    v = this.get(row, i);
	                    idx[1] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the minimum value of one row
	         * @param {number} row - Row index
	         * @returns {number}
	         */
	        minRow(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) < v) {
	                    v = this.get(row, i);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value of one row
	         * @param {number} row - Row index
	         * @returns {Array}
	         */
	        minRowIndex(row) {
	            util.checkRowIndex(this, row);
	            var v = this.get(row, 0);
	            var idx = [row, 0];
	            for (var i = 1; i < this.columns; i++) {
	                if (this.get(row, i) < v) {
	                    v = this.get(row, i);
	                    idx[1] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the maximum value of one column
	         * @param {number} column - Column index
	         * @returns {number}
	         */
	        maxColumn(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) > v) {
	                    v = this.get(i, column);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the maximum value of one column
	         * @param {number} column - Column index
	         * @returns {Array}
	         */
	        maxColumnIndex(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            var idx = [0, column];
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) > v) {
	                    v = this.get(i, column);
	                    idx[0] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns the minimum value of one column
	         * @param {number} column - Column index
	         * @returns {number}
	         */
	        minColumn(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) < v) {
	                    v = this.get(i, column);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the index of the minimum value of one column
	         * @param {number} column - Column index
	         * @returns {Array}
	         */
	        minColumnIndex(column) {
	            util.checkColumnIndex(this, column);
	            var v = this.get(0, column);
	            var idx = [0, column];
	            for (var i = 1; i < this.rows; i++) {
	                if (this.get(i, column) < v) {
	                    v = this.get(i, column);
	                    idx[0] = i;
	                }
	            }
	            return idx;
	        }

	        /**
	         * Returns an array containing the diagonal values of the matrix
	         * @returns {Array}
	         */
	        diag() {
	            var min = Math.min(this.rows, this.columns);
	            var diag = new Array(min);
	            for (var i = 0; i < min; i++) {
	                diag[i] = this.get(i, i);
	            }
	            return diag;
	        }

	        /**
	         * Returns the sum of all elements of the matrix
	         * @returns {number}
	         */
	        sum() {
	            var v = 0;
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    v += this.get(i, j);
	                }
	            }
	            return v;
	        }

	        /**
	         * Returns the mean of all elements of the matrix
	         * @returns {number}
	         */
	        mean() {
	            return this.sum() / this.size;
	        }

	        /**
	         * Returns the product of all elements of the matrix
	         * @returns {number}
	         */
	        prod() {
	            var prod = 1;
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    prod *= this.get(i, j);
	                }
	            }
	            return prod;
	        }

	        /**
	         * Computes the cumulative sum of the matrix elements (in place, row by row)
	         * @returns {Matrix} this
	         */
	        cumulativeSum() {
	            var sum = 0;
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    sum += this.get(i, j);
	                    this.set(i, j, sum);
	                }
	            }
	            return this;
	        }

	        /**
	         * Computes the dot (scalar) product between the matrix and another
	         * @param {Matrix} vector2 vector
	         * @returns {number}
	         */
	        dot(vector2) {
	            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();
	            var vector1 = this.to1DArray();
	            if (vector1.length !== vector2.length) {
	                throw new RangeError('vectors do not have the same size');
	            }
	            var dot = 0;
	            for (var i = 0; i < vector1.length; i++) {
	                dot += vector1[i] * vector2[i];
	            }
	            return dot;
	        }

	        /**
	         * Returns the matrix product between this and other
	         * @param {Matrix} other
	         * @returns {Matrix}
	         */
	        mmul(other) {
	            other = this.constructor.checkMatrix(other);
	            if (this.columns !== other.rows)
	                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');

	            var m = this.rows;
	            var n = this.columns;
	            var p = other.columns;

	            var result = new this.constructor[Symbol.species](m, p);

	            var Bcolj = new Array(n);
	            for (var j = 0; j < p; j++) {
	                for (var k = 0; k < n; k++) {
	                    Bcolj[k] = other.get(k, j);
	                }

	                for (var i = 0; i < m; i++) {
	                    var s = 0;
	                    for (k = 0; k < n; k++) {
	                        s += this.get(i, k) * Bcolj[k];
	                    }

	                    result.set(i, j, s);
	                }
	            }
	            return result;
	        }

	        strassen_2x2(other){
	            var result = new this.constructor[Symbol.species](2, 2);
	            const a11 = this.get(0,0);
	            const b11 = other.get(0,0);
	            const a12 = this.get(0,1);
	            const b12 = other.get(0,1);
	            const a21 = this.get(1,0);
	            const b21 = other.get(1,0);
	            const a22 = this.get(1,1);
	            const b22 = other.get(1,1);

	            // Compute intermediate values.
	            const m1 = (a11+a22)*(b11+b22);
	            const m2 = (a21+a22)*b11;
	            const m3 = a11*(b12-b22);
	            const m4 = a22*(b21-b11);
	            const m5 = (a11+a12)*b22;
	            const m6 = (a21-a11)*(b11+b12);
	            const m7 = (a12-a22)*(b21+b22);

	            // Combine intermediate values into the output.
	            const c00 =m1+m4-m5+m7;
	            const c01 = m3+m5;
	            const c10 = m2+m4;
	            const c11 = m1-m2+m3+m6;

	            result.set(0,0,c00);
	            result.set(0,1,c01);
	            result.set(1,0,c10);
	            result.set(1,1,c11);
	            return result;
	        }

	        strassen_3x3(other){
	            var result = new this.constructor[Symbol.species](3, 3);

	            const a00 = this.get(0,0);
	            const a01 = this.get(0,1);
	            const a02 = this.get(0,2);
	            const a10 = this.get(1,0);
	            const a11 = this.get(1,1);
	            const a12 = this.get(1,2);
	            const a20 = this.get(2,0);
	            const a21 = this.get(2,1);
	            const a22 = this.get(2,2);

	            const b00 = other.get(0,0);
	            const b01 = other.get(0,1);
	            const b02 = other.get(0,2);
	            const b10 = other.get(1,0);
	            const b11 = other.get(1,1);
	            const b12 = other.get(1,2);
	            const b20 = other.get(2,0);
	            const b21 = other.get(2,1);
	            const b22 = other.get(2,2);

	            const m1 = (a00+a01+a02-a10-a11-a21-a22)*b11;
	            const m2 = (a00-a10)*(-b01+b11);
	            const m3 = a11*(-b00+b01+b10-b11-b12-b20+b22);
	            const m4 = (-a00+a10+a11)*(b00-b01+b11);
	            const m5 = (a10+a11)*(-b00+b01);
	            const m6 = a00*b00;
	            const m7 = (-a00+a20+a21)*(b00-b02+b12);
	            const m8 = (-a00+a20)*(b02-b12);
	            const m9 = (a20+a21)*(-b00+b02);
	            const m10 = (a00+a01+a02-a11-a12-a20-a21)*b12;
	            const m11 = a21*(-b00+b02+b10-b11-b12-b20+b21);
	            const m12 = (-a02+a21+a22)*(b11+b20-b21);
	            const m13 = (a02-a22)*(b11-b21);
	            const m14 = a02*b20;
	            const m15 = (a21+a22)*(-b20+b21);
	            const m16 = (-a02+a11+a12)*(b12+b20-b22);
	            const m17 = (a02-a12)*(b12-b22);
	            const m18 = (a11+a12)*(-b20+b22);
	            const m19= a01*b10;
	            const m20 = a12*b21;
	            const m21 = a10*b02;
	            const m22 = a20*b01;
	            const m23 = a22*b22;

	            const c00 = m6+m14+m19;
	            const c01 = m1+m4+m5+m6+m12+m14+m15;
	            const c02 = m6+m7+m9+m10+m14+m16+m18;
	            const c10 = m2+m3+m4+m6+m14+m16+m17;
	            const c11 = m2+m4+m5+m6+m20;
	            const c12 = m14+m16+m17+m18+m21;
	            const c20 = m6+m7+m8+m11+m12+m13+m14;
	            const c21 = m12+m13+m14+m15+m22;
	            const c22 = m6+m7+m8+m9+m23;

	            result.set(0,0,c00);
	            result.set(0,1,c01);
	            result.set(0,2,c02);
	            result.set(1,0,c10);
	            result.set(1,1,c11);
	            result.set(1,2,c12);
	            result.set(2,0,c20);
	            result.set(2,1,c21);
	            result.set(2,2,c22);
	            return result;
	        }


	        /**
	         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.
	         * @param {Matrix} x
	         * @param {Matrix} y
	         * @returns {Matrix}
	         */
	        mmul_strassen(y){
	            var x = this.clone();
	            var r1 = x.rows;
	            var c1 = x.columns;
	            var r2 = y.rows;
	            var c2 = y.columns;
	            if(c1 != r2){
	                console.log(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`)
	            }

	            // Put a matrix into the top left of a matrix of zeros.
	            // `rows` and `cols` are the dimensions of the output matrix.
	            function embed(mat, rows, cols){
	                var r = mat.rows;
	                var c = mat.columns;
	                if((r==rows) && (c==cols)){
	                    return mat;
	                }
	                else{
	                    var resultat = Matrix.zeros(rows, cols);
	                    resultat = resultat.setSubMatrix(mat, 0, 0);
	                    return resultat;
	                }
	            }


	            // Make sure both matrices are the same size.
	            // This is exclusively for simplicity:
	            // this algorithm can be implemented with matrices of different sizes.

	            var r = Math.max(r1, r2);
	            var c = Math.max(c1, c2);
	            var x = embed(x, r, c);
	            var y = embed(y, r, c);

	            // Our recursive multiplication function.
	            function block_mult(a, b, rows, cols){
	                // For small matrices, resort to naive multiplication.
	                if (rows <= 512 || cols <= 512){
	                    return a.mmul(b); // a is equivalent to this
	                }

	                // Apply dynamic padding.
	                if ((rows % 2 == 1) && (cols % 2 == 1)) {
	                    a = embed(a, rows + 1, cols + 1);
	                    b = embed(b, rows + 1, cols + 1);
	                }
	                else if (rows % 2 == 1){
	                    a = embed(a, rows + 1, cols);
	                    b = embed(b, rows + 1, cols);
	                }
	                else if (cols % 2 == 1){
	                    a = embed(a, rows, cols + 1);
	                    b = embed(b, rows, cols + 1);
	                }

	                var half_rows = parseInt(a.rows / 2);
	                var half_cols = parseInt(a.columns / 2);
	                // Subdivide input matrices.
	                var a11 = a.subMatrix(0, half_rows -1, 0, half_cols - 1);
	                var b11 = b.subMatrix(0, half_rows -1, 0, half_cols - 1);

	                var a12 = a.subMatrix(0, half_rows -1, half_cols, a.columns - 1);
	                var b12 = b.subMatrix(0, half_rows -1,  half_cols, b.columns - 1);

	                var a21 = a.subMatrix(half_rows, a.rows - 1,  0, half_cols - 1);
	                var b21 = b.subMatrix(half_rows, b.rows - 1,  0, half_cols - 1);

	                var a22 = a.subMatrix(half_rows, a.rows - 1, half_cols, a.columns - 1);
	                var b22 = b.subMatrix(half_rows, b.rows - 1, half_cols, b.columns - 1);

	                // Compute intermediate values.
	                var m1 = block_mult(Matrix.add(a11,a22), Matrix.add(b11,b22), half_rows, half_cols);
	                var m2 = block_mult(Matrix.add(a21,a22), b11, half_rows, half_cols);
	                var m3 = block_mult(a11, Matrix.sub(b12, b22), half_rows, half_cols);
	                var m4 = block_mult(a22, Matrix.sub(b21,b11), half_rows, half_cols);
	                var m5 = block_mult(Matrix.add(a11,a12), b22, half_rows, half_cols);
	                var m6 = block_mult(Matrix.sub(a21, a11), Matrix.add(b11, b12), half_rows, half_cols);
	                var m7 = block_mult(Matrix.sub(a12,a22), Matrix.add(b21,b22), half_rows, half_cols);

	                // Combine intermediate values into the output.
	                var c11 = Matrix.add(m1, m4);
	                c11.sub(m5);
	                c11.add(m7);
	                var c12 = Matrix.add(m3,m5);
	                var c21 = Matrix.add(m2,m4);
	                var c22 = Matrix.sub(m1,m2);
	                c22.add(m3);
	                c22.add(m6);

	                //Crop output to the desired size (undo dynamic padding).
	                var resultat = Matrix.zeros(2*c11.rows, 2*c11.columns);
	                resultat = resultat.setSubMatrix(c11, 0, 0);
	                resultat = resultat.setSubMatrix(c12, c11.rows, 0)
	                resultat = resultat.setSubMatrix(c21, 0, c11.columns);
	                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);
	                return resultat.subMatrix(0, rows - 1, 0, cols - 1);
	            }
	            var resultat_final =  block_mult(x, y, r, c);
	            return resultat_final;
	        };

	        /**
	         * Returns a row-by-row scaled matrix
	         * @param {Number} [min=0] - Minimum scaled value
	         * @param {Number} [max=1] - Maximum scaled value
	         * @returns {Matrix} - The scaled matrix
	         */
	        scaleRows(min, max) {
	            min = min === undefined ? 0 : min;
	            max = max === undefined ? 1 : max;
	            if (min >= max) {
	                throw new RangeError('min should be strictly smaller than max');
	            }
	            var newMatrix = this.constructor.empty(this.rows, this.columns);
	            for (var i = 0; i < this.rows; i++) {
	                var scaled = arrayUtils.scale(this.getRow(i), {min, max});
	                newMatrix.setRow(i, scaled);
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns a new column-by-column scaled matrix
	         * @param {Number} [min=0] - Minimum scaled value
	         * @param {Number} [max=1] - Maximum scaled value
	         * @returns {Matrix} - The new scaled matrix
	         * @example
	         * var matrix = new Matrix([[1,2],[-1,0]]);
	         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]
	         */
	        scaleColumns(min, max) {
	            min = min === undefined ? 0 : min;
	            max = max === undefined ? 1 : max;
	            if (min >= max) {
	                throw new RangeError('min should be strictly smaller than max');
	            }
	            var newMatrix = this.constructor.empty(this.rows, this.columns);
	            for (var i = 0; i < this.columns; i++) {
	                var scaled = arrayUtils.scale(this.getColumn(i), {
	                    min: min,
	                    max: max
	                });
	                newMatrix.setColumn(i, scaled);
	            }
	            return newMatrix;
	        }


	        /**
	         * Returns the Kronecker product (also known as tensor product) between this and other
	         * See https://en.wikipedia.org/wiki/Kronecker_product
	         * @param {Matrix} other
	         * @return {Matrix}
	         */
	        kroneckerProduct(other) {
	            other = this.constructor.checkMatrix(other);

	            var m = this.rows;
	            var n = this.columns;
	            var p = other.rows;
	            var q = other.columns;

	            var result = new this.constructor[Symbol.species](m * p, n * q);
	            for (var i = 0; i < m; i++) {
	                for (var j = 0; j < n; j++) {
	                    for (var k = 0; k < p; k++) {
	                        for (var l = 0; l < q; l++) {
	                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);
	                        }
	                    }
	                }
	            }
	            return result;
	        }

	        /**
	         * Transposes the matrix and returns a new one containing the result
	         * @returns {Matrix}
	         */
	        transpose() {
	            var result = new this.constructor[Symbol.species](this.columns, this.rows);
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j < this.columns; j++) {
	                    result.set(j, i, this.get(i, j));
	                }
	            }
	            return result;
	        }

	        /**
	         * Sorts the rows (in place)
	         * @param {function} compareFunction - usual Array.prototype.sort comparison function
	         * @returns {Matrix} this
	         */
	        sortRows(compareFunction) {
	            if (compareFunction === undefined) compareFunction = compareNumbers;
	            for (var i = 0; i < this.rows; i++) {
	                this.setRow(i, this.getRow(i).sort(compareFunction));
	            }
	            return this;
	        }

	        /**
	         * Sorts the columns (in place)
	         * @param {function} compareFunction - usual Array.prototype.sort comparison function
	         * @returns {Matrix} this
	         */
	        sortColumns(compareFunction) {
	            if (compareFunction === undefined) compareFunction = compareNumbers;
	            for (var i = 0; i < this.columns; i++) {
	                this.setColumn(i, this.getColumn(i).sort(compareFunction));
	            }
	            return this;
	        }

	        /**
	         * Returns a subset of the matrix
	         * @param {number} startRow - First row index
	         * @param {number} endRow - Last row index
	         * @param {number} startColumn - First column index
	         * @param {number} endColumn - Last column index
	         * @returns {Matrix}
	         */
	        subMatrix(startRow, endRow, startColumn, endColumn) {
	            util.checkRange(this, startRow, endRow, startColumn, endColumn);
	            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);
	            for (var i = startRow; i <= endRow; i++) {
	                for (var j = startColumn; j <= endColumn; j++) {
	                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns a subset of the matrix based on an array of row indices
	         * @param {Array} indices - Array containing the row indices
	         * @param {number} [startColumn = 0] - First column index
	         * @param {number} [endColumn = this.columns-1] - Last column index
	         * @returns {Matrix}
	         */
	        subMatrixRow(indices, startColumn, endColumn) {
	            if (startColumn === undefined) startColumn = 0;
	            if (endColumn === undefined) endColumn = this.columns - 1;
	            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {
	                throw new RangeError('Argument out of range');
	            }

	            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);
	            for (var i = 0; i < indices.length; i++) {
	                for (var j = startColumn; j <= endColumn; j++) {
	                    if (indices[i] < 0 || indices[i] >= this.rows) {
	                        throw new RangeError('Row index out of range: ' + indices[i]);
	                    }
	                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns a subset of the matrix based on an array of column indices
	         * @param {Array} indices - Array containing the column indices
	         * @param {number} [startRow = 0] - First row index
	         * @param {number} [endRow = this.rows-1] - Last row index
	         * @returns {Matrix}
	         */
	        subMatrixColumn(indices, startRow, endRow) {
	            if (startRow === undefined) startRow = 0;
	            if (endRow === undefined) endRow = this.rows - 1;
	            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {
	                throw new RangeError('Argument out of range');
	            }

	            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);
	            for (var i = 0; i < indices.length; i++) {
	                for (var j = startRow; j <= endRow; j++) {
	                    if (indices[i] < 0 || indices[i] >= this.columns) {
	                        throw new RangeError('Column index out of range: ' + indices[i]);
	                    }
	                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Set a part of the matrix to the given sub-matrix
	         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.
	         * @param startRow - The index of the first row to set
	         * @param startColumn - The index of the first column to set
	         * @returns {Matrix}
	         */
	        setSubMatrix(matrix, startRow, startColumn) {
	            matrix = this.constructor.checkMatrix(matrix);
	            var endRow = startRow + matrix.rows - 1;
	            var endColumn = startColumn + matrix.columns - 1;
	            util.checkRange(this, startRow, endRow, startColumn, endColumn);
	            for (var i = 0; i < matrix.rows; i++) {
	                for (var j = 0; j < matrix.columns; j++) {
	                    this[startRow + i][startColumn + j] = matrix.get(i, j);
	                }
	            }
	            return this;
	        }

	        /**
	         * Return a new matrix based on a selection of rows and columns
	         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.
	         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.
	         * @returns {Matrix} The new matrix
	         */
	        selection(rowIndices, columnIndices) {
	            var indices = util.checkIndices(this, rowIndices, columnIndices);
	            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);
	            for (var i = 0; i < indices.row.length; i++) {
	                var rowIndex = indices.row[i];
	                for (var j = 0; j < indices.column.length; j++) {
	                    var columnIndex = indices.column[j];
	                    newMatrix[i][j] = this.get(rowIndex, columnIndex);
	                }
	            }
	            return newMatrix;
	        }

	        /**
	         * Returns the trace of the matrix (sum of the diagonal elements)
	         * @returns {number}
	         */
	        trace() {
	            var min = Math.min(this.rows, this.columns);
	            var trace = 0;
	            for (var i = 0; i < min; i++) {
	                trace += this.get(i, i);
	            }
	            return trace;
	        }

	        /*
	         Matrix views
	         */

	        /**
	         * Returns a view of the transposition of the matrix
	         * @returns {MatrixTransposeView}
	         */
	        transposeView() {
	            return new MatrixTransposeView(this);
	        }

	        /**
	         * Returns a view of the row vector with the given index
	         * @param {number} row - row index of the vector
	         * @returns {MatrixRowView}
	         */
	        rowView(row) {
	            util.checkRowIndex(this, row);
	            return new MatrixRowView(this, row);
	        }

	        /**
	         * Returns a view of the column vector with the given index
	         * @param {number} column - column index of the vector
	         * @returns {MatrixColumnView}
	         */
	        columnView(column) {
	            util.checkColumnIndex(this, column);
	            return new MatrixColumnView(this, column);
	        }

	        /**
	         * Returns a view of the matrix flipped in the row axis
	         * @returns {MatrixFlipRowView}
	         */
	        flipRowView() {
	            return new MatrixFlipRowView(this);
	        }

	        /**
	         * Returns a view of the matrix flipped in the column axis
	         * @returns {MatrixFlipColumnView}
	         */
	        flipColumnView() {
	            return new MatrixFlipColumnView(this);
	        }

	        /**
	         * Returns a view of a submatrix giving the index boundaries
	         * @param {number} startRow - first row index of the submatrix
	         * @param {number} endRow - last row index of the submatrix
	         * @param {number} startColumn - first column index of the submatrix
	         * @param {number} endColumn - last column index of the submatrix
	         * @returns {MatrixSubView}
	         */
	        subMatrixView(startRow, endRow, startColumn, endColumn) {
	            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);
	        }

	        /**
	         * Returns a view of the cross of the row indices and the column indices
	         * @example
	         * // resulting vector is [[2], [2]]
	         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])
	         * @param {Array<number>} rowIndices
	         * @param {Array<number>} columnIndices
	         * @returns {MatrixSelectionView}
	         */
	        selectionView(rowIndices, columnIndices) {
	            return new MatrixSelectionView(this, rowIndices, columnIndices);
	        }
	    }

	    Matrix.prototype.klass = 'Matrix';

	    /**
	     * @private
	     * Check that two matrices have the same dimensions
	     * @param {Matrix} matrix
	     * @param {Matrix} otherMatrix
	     */
	    function checkDimensions(matrix, otherMatrix) {
	        if (matrix.rows !== otherMatrix.rows ||
	            matrix.columns !== otherMatrix.columns) {
	            throw new RangeError('Matrices dimensions must be equal');
	        }
	    }

	    function compareNumbers(a, b) {
	        return a - b;
	    }

	    /*
	     Synonyms
	     */

	    Matrix.random = Matrix.rand;
	    Matrix.diagonal = Matrix.diag;
	    Matrix.prototype.diagonal = Matrix.prototype.diag;
	    Matrix.identity = Matrix.eye;
	    Matrix.prototype.negate = Matrix.prototype.neg;
	    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;

	    /*
	     Add dynamically instance and static methods for mathematical operations
	     */

	    var inplaceOperator = `
	(function %name%(value) {
	    if (typeof value === 'number') return this.%name%S(value);
	    return this.%name%M(value);
	})
	`;

	    var inplaceOperatorScalar = `
	(function %name%S(value) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, this.get(i, j) %op% value);
	        }
	    }
	    return this;
	})
	`;

	    var inplaceOperatorMatrix = `
	(function %name%M(matrix) {
	    matrix = this.constructor.checkMatrix(matrix);
	    checkDimensions(this, matrix);
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));
	        }
	    }
	    return this;
	})
	`;

	    var staticOperator = `
	(function %name%(matrix, value) {
	    var newMatrix = new this[Symbol.species](matrix);
	    return newMatrix.%name%(value);
	})
	`;

	    var inplaceMethod = `
	(function %name%() {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j)));
	        }
	    }
	    return this;
	})
	`;

	    var staticMethod = `
	(function %name%(matrix) {
	    var newMatrix = new this[Symbol.species](matrix);
	    return newMatrix.%name%();
	})
	`;

	    var inplaceMethodWithArgs = `
	(function %name%(%args%) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j), %args%));
	        }
	    }
	    return this;
	})
	`;

	    var staticMethodWithArgs = `
	(function %name%(matrix, %args%) {
	    var newMatrix = new this[Symbol.species](matrix);
	    return newMatrix.%name%(%args%);
	})
	`;


	    var inplaceMethodWithOneArgScalar = `
	(function %name%S(value) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j), value));
	        }
	    }
	    return this;
	})
	`;
	    var inplaceMethodWithOneArgMatrix = `
	(function %name%M(matrix) {
	    matrix = this.constructor.checkMatrix(matrix);
	    checkDimensions(this, matrix);
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));
	        }
	    }
	    return this;
	})
	`;

	    var inplaceMethodWithOneArg = `
	(function %name%(value) {
	    if (typeof value === 'number') return this.%name%S(value);
	    return this.%name%M(value);
	})
	`;

	    var staticMethodWithOneArg = staticMethodWithArgs;

	    var operators = [
	        // Arithmetic operators
	        ['+', 'add'],
	        ['-', 'sub', 'subtract'],
	        ['*', 'mul', 'multiply'],
	        ['/', 'div', 'divide'],
	        ['%', 'mod', 'modulus'],
	        // Bitwise operators
	        ['&', 'and'],
	        ['|', 'or'],
	        ['^', 'xor'],
	        ['<<', 'leftShift'],
	        ['>>', 'signPropagatingRightShift'],
	        ['>>>', 'rightShift', 'zeroFillRightShift']
	    ];

	    for (var operator of operators) {
	        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));
	        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));
	        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));
	        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));
	        for (var i = 1; i < operator.length; i++) {
	            Matrix.prototype[operator[i]] = inplaceOp;
	            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;
	            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;
	            Matrix[operator[i]] = staticOp;
	        }
	    }

	    var methods = [
	        ['~', 'not']
	    ];

	    [
	        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',
	        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',
	        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'
	    ].forEach(function (mathMethod) {
	        methods.push(['Math.' + mathMethod, mathMethod]);
	    });

	    for (var method of methods) {
	        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));
	        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));
	        for (var i = 1; i < method.length; i++) {
	            Matrix.prototype[method[i]] = inplaceMeth;
	            Matrix[method[i]] = staticMeth;
	        }
	    }

	    var methodsWithArgs = [
	        ['Math.pow', 1, 'pow']
	    ];

	    for (var methodWithArg of methodsWithArgs) {
	        var args = 'arg0';
	        for (var i = 1; i < methodWithArg[1]; i++) {
	            args += `, arg${i}`;
	        }
	        if (methodWithArg[1] !== 1) {
	            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {
	                name: methodWithArg[2],
	                method: methodWithArg[0],
	                args: args
	            }));
	            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));
	            for (var i = 2; i < methodWithArg.length; i++) {
	                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;
	                Matrix[methodWithArg[i]] = staticMethWithArgs;
	            }
	        } else {
	            var tmplVar = {
	                name: methodWithArg[2],
	                args: args,
	                method: methodWithArg[0]
	            };
	            var inplaceMethod = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));
	            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));
	            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));
	            var staticMethod = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));
	            for (var i = 2; i < methodWithArg.length; i++) {
	                Matrix.prototype[methodWithArg[i]] = inplaceMethod;
	                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;
	                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;
	                Matrix[methodWithArg[i]] = staticMethod;
	            }
	        }
	    }

	    function fillTemplateFunction(template, values) {
	        for (var i in values) {
	            template = template.replace(new RegExp('%' + i + '%', 'g'), values[i]);
	        }
	        return template;
	    }

	    return Matrix;
	}


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = exports = __webpack_require__(54);


	exports.getEquallySpacedData = __webpack_require__(55).getEquallySpacedData;
	exports.SNV = __webpack_require__(56).SNV;


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Stat = __webpack_require__(28).array;
	/**
	 * Function that returns an array of points given 1D array as follows:
	 *
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * And receive the number of dimensions of each point.
	 * @param array
	 * @param dimensions
	 * @returns {Array} - Array of points.
	 */
	function coordArrayToPoints(array, dimensions) {
	    if(array.length % dimensions !== 0) {
	        throw new RangeError('Dimensions number must be accordance with the size of the array.');
	    }

	    var length = array.length / dimensions;
	    var pointsArr = new Array(length);

	    var k = 0;
	    for(var i = 0; i < array.length; i += dimensions) {
	        var point = new Array(dimensions);
	        for(var j = 0; j < dimensions; ++j) {
	            point[j] = array[i + j];
	        }

	        pointsArr[k] = point;
	        k++;
	    }

	    return pointsArr;
	}


	/**
	 * Function that given an array as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * Returns an array as follows:
	 * [[x1, x2, ..], [y1, y2, ..], [ .. ]]
	 *
	 * And receives the number of dimensions of each coordinate.
	 * @param array
	 * @param dimensions
	 * @returns {Array} - Matrix of coordinates
	 */
	function coordArrayToCoordMatrix(array, dimensions) {
	    if(array.length % dimensions !== 0) {
	        throw new RangeError('Dimensions number must be accordance with the size of the array.');
	    }

	    var coordinatesArray = new Array(dimensions);
	    var points = array.length / dimensions;
	    for (var i = 0; i < coordinatesArray.length; i++) {
	        coordinatesArray[i] = new Array(points);
	    }

	    for(i = 0; i < array.length; i += dimensions) {
	        for(var j = 0; j < dimensions; ++j) {
	            var currentPoint = Math.floor(i / dimensions);
	            coordinatesArray[j][currentPoint] = array[i + j];
	        }
	    }

	    return coordinatesArray;
	}

	/**
	 * Function that receives a coordinate matrix as follows:
	 * [[x1, x2, ..], [y1, y2, ..], [ .. ]]
	 *
	 * Returns an array of coordinates as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * @param coordMatrix
	 * @returns {Array}
	 */
	function coordMatrixToCoordArray(coordMatrix) {
	    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);
	    var k = 0;
	    for(var i = 0; i < coordMatrix[0].length; ++i) {
	        for(var j = 0; j < coordMatrix.length; ++j) {
	            coodinatesArray[k] = coordMatrix[j][i];
	            ++k;
	        }
	    }

	    return coodinatesArray;
	}

	/**
	 * Tranpose a matrix, this method is for coordMatrixToPoints and
	 * pointsToCoordMatrix, that because only transposing the matrix
	 * you can change your representation.
	 *
	 * @param matrix
	 * @returns {Array}
	 */
	function transpose(matrix) {
	    var resultMatrix = new Array(matrix[0].length);
	    for(var i = 0; i < resultMatrix.length; ++i) {
	        resultMatrix[i] = new Array(matrix.length);
	    }

	    for (i = 0; i < matrix.length; ++i) {
	        for(var j = 0; j < matrix[0].length; ++j) {
	            resultMatrix[j][i] = matrix[i][j];
	        }
	    }

	    return resultMatrix;
	}

	/**
	 * Function that transform an array of points into a coordinates array
	 * as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * @param points
	 * @returns {Array}
	 */
	function pointsToCoordArray(points) {
	    var coodinatesArray = new Array(points.length * points[0].length);
	    var k = 0;
	    for(var i = 0; i < points.length; ++i) {
	        for(var j = 0; j < points[0].length; ++j) {
	            coodinatesArray[k] = points[i][j];
	            ++k;
	        }
	    }

	    return coodinatesArray;
	}

	/**
	 * Apply the dot product between the smaller vector and a subsets of the
	 * largest one.
	 *
	 * @param firstVector
	 * @param secondVector
	 * @returns {Array} each dot product of size of the difference between the
	 *                  larger and the smallest one.
	 */
	function applyDotProduct(firstVector, secondVector) {
	    var largestVector, smallestVector;
	    if(firstVector.length <= secondVector.length) {
	        smallestVector = firstVector;
	        largestVector = secondVector;
	    } else {
	        smallestVector = secondVector;
	        largestVector = firstVector;
	    }

	    var difference = largestVector.length - smallestVector.length + 1;
	    var dotProductApplied = new Array(difference);

	    for (var i = 0; i < difference; ++i) {
	        var sum = 0;
	        for (var j = 0; j < smallestVector.length; ++j) {
	            sum += smallestVector[j] * largestVector[i + j];
	        }
	        dotProductApplied[i] = sum;
	    }

	    return dotProductApplied;
	}
	/**
	 * To scale the input array between the specified min and max values. The operation is performed inplace
	 * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling
	 * will multiply the input array by min/min(input) or max/max(input)
	 * @param input
	 * @param options
	 * @returns {*}
	 */
	function scale(input, options){
	    var y;
	    if(options.inPlace){
	        y = input;
	    }
	    else{
	        y = new Array(input.length);
	    }
	    const max = options.max;
	    const min = options.min;
	    if(typeof max === "number"){
	        if(typeof min === "number"){
	            var minMax = Stat.minMax(input);
	            var factor = (max - min)/(minMax.max-minMax.min);
	            for(var i=0;i< y.length;i++){
	                y[i]=(input[i]-minMax.min)*factor+min;
	            }
	        }
	        else{
	            var currentMin = Stat.max(input);
	            var factor = max/currentMin;
	            for(var i=0;i< y.length;i++){
	                y[i] = input[i]*factor;
	            }
	        }
	    }
	    else{
	        if(typeof min === "number"){
	            var currentMin = Stat.min(input);
	            var factor = min/currentMin;
	            for(var i=0;i< y.length;i++){
	                y[i] = input[i]*factor;
	            }
	        }
	    }
	    return y;
	}

	module.exports = {
	    coordArrayToPoints: coordArrayToPoints,
	    coordArrayToCoordMatrix: coordArrayToCoordMatrix,
	    coordMatrixToCoordArray: coordMatrixToCoordArray,
	    coordMatrixToPoints: transpose,
	    pointsToCoordArray: pointsToCoordArray,
	    pointsToCoordMatrix: transpose,
	    applyDotProduct: applyDotProduct,
	    scale:scale
	};



/***/ },
/* 55 */
/***/ function(module, exports) {

	'use strict';

	/**
	 *
	 * Function that returns a Number array of equally spaced numberOfPoints
	 * containing a representation of intensities of the spectra arguments x
	 * and y.
	 *
	 * The options parameter contains an object in the following form:
	 * from: starting point
	 * to: last point
	 * numberOfPoints: number of points between from and to
	 * variant: "slot" or "smooth" - smooth is the default option
	 *
	 * The slot variant consist that each point in the new array is calculated
	 * averaging the existing points between the slot that belongs to the current
	 * value. The smooth variant is the same but takes the integral of the range
	 * of the slot and divide by the step size between two points in the new array.
	 *
	 * @param x - sorted increasing x values
	 * @param y
	 * @param options
	 * @returns {Array} new array with the equally spaced data.
	 *
	 */
	function getEquallySpacedData(x, y, options) {
	    if (x.length>1 && x[0]>x[1]) {
	        x=x.slice().reverse();
	        y=y.slice().reverse();
	    }

	    var xLength = x.length;
	    if(xLength !== y.length)
	        throw new RangeError("the x and y vector doesn't have the same size.");

	    if (options === undefined) options = {};

	    var from = options.from === undefined ? x[0] : options.from
	    if (isNaN(from) || !isFinite(from)) {
	        throw new RangeError("'From' value must be a number");
	    }
	    var to = options.to === undefined ? x[x.length - 1] : options.to;
	    if (isNaN(to) || !isFinite(to)) {
	        throw new RangeError("'To' value must be a number");
	    }

	    var reverse = from > to;
	    if(reverse) {
	        var temp = from;
	        from = to;
	        to = temp;
	    }

	    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;
	    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {
	        throw new RangeError("'Number of points' value must be a number");
	    }
	    if(numberOfPoints < 1)
	        throw new RangeError("the number of point must be higher than 1");

	    var algorithm = options.variant === "slot" ? "slot" : "smooth"; // default value: smooth

	    var output = algorithm === "slot" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);

	    return reverse ? output.reverse() : output;
	}

	/**
	 * function that retrieves the getEquallySpacedData with the variant "smooth"
	 *
	 * @param x
	 * @param y
	 * @param from - Initial point
	 * @param to - Final point
	 * @param numberOfPoints
	 * @returns {Array} - Array of y's equally spaced with the variant "smooth"
	 */
	function getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {
	    var xLength = x.length;

	    var step = (to - from) / (numberOfPoints - 1);
	    var halfStep = step / 2;

	    var start = from - halfStep;
	    var output = new Array(numberOfPoints);

	    var initialOriginalStep = x[1] - x[0];
	    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];

	    // Init main variables
	    var min = start;
	    var max = start + step;

	    var previousX = Number.MIN_VALUE;
	    var previousY = 0;
	    var nextX = x[0] - initialOriginalStep;
	    var nextY = 0;

	    var currentValue = 0;
	    var slope = 0;
	    var intercept = 0;
	    var sumAtMin = 0;
	    var sumAtMax = 0;

	    var i = 0; // index of input
	    var j = 0; // index of output

	    function getSlope(x0, y0, x1, y1) {
	        return (y1 - y0) / (x1 - x0);
	    }

	    main: while(true) {
	        while (nextX - max >= 0) {
	            // no overlap with original point, just consume current value
	            var add = integral(0, max - previousX, slope, previousY);
	            sumAtMax = currentValue + add;

	            output[j] = (sumAtMax - sumAtMin) / step;
	            j++;

	            if (j === numberOfPoints)
	                break main;

	            min = max;
	            max += step;
	            sumAtMin = sumAtMax;
	        }

	        if(previousX <= min && min <= nextX) {
	            add = integral(0, min - previousX, slope, previousY);
	            sumAtMin = currentValue + add;
	        }

	        currentValue += integral(previousX, nextX, slope, intercept);

	        previousX = nextX;
	        previousY = nextY;

	        if (i < xLength) {
	            nextX = x[i];
	            nextY = y[i];
	            i++;
	        } else if (i === xLength) {
	            nextX += lastOriginalStep;
	            nextY = 0;
	        }
	        // updating parameters
	        slope = getSlope(previousX, previousY, nextX, nextY);
	        intercept = -slope*previousX + previousY;
	    }

	    return output;
	}

	/**
	 * function that retrieves the getEquallySpacedData with the variant "slot"
	 *
	 * @param x
	 * @param y
	 * @param from - Initial point
	 * @param to - Final point
	 * @param numberOfPoints
	 * @returns {Array} - Array of y's equally spaced with the variant "slot"
	 */
	function getEquallySpacedSlot(x, y, from, to, numberOfPoints) {
	    var xLength = x.length;

	    var step = (to - from) / (numberOfPoints - 1);
	    var halfStep = step / 2;
	    var lastStep = x[x.length - 1] - x[x.length - 2];

	    var start = from - halfStep;
	    var output = new Array(numberOfPoints);

	    // Init main variables
	    var min = start;
	    var max = start + step;

	    var previousX = -Number.MAX_VALUE;
	    var previousY = 0;
	    var nextX = x[0];
	    var nextY = y[0];
	    var frontOutsideSpectra = 0;
	    var backOutsideSpectra = true;

	    var currentValue = 0;

	    // for slot algorithm
	    var currentPoints = 0;

	    var i = 1; // index of input
	    var j = 0; // index of output

	    main: while(true) {
	        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));
	        while (previousX - max > 0) {
	            // no overlap with original point, just consume current value
	            if(backOutsideSpectra) {
	                currentPoints++;
	                backOutsideSpectra = false;
	            }

	            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;
	            j++;

	            if (j === numberOfPoints)
	                break main;

	            min = max;
	            max += step;
	            currentValue = 0;
	            currentPoints = 0;
	        }

	        if(previousX > min) {
	            currentValue += previousY;
	            currentPoints++;
	        }

	        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)
	            currentPoints--;

	        previousX = nextX;
	        previousY = nextY;

	        if (i < xLength) {
	            nextX = x[i];
	            nextY = y[i];
	            i++;
	        } else {
	            nextX += lastStep;
	            nextY = 0;
	            frontOutsideSpectra++;
	        }
	    }

	    return output;
	}
	/**
	 * Function that calculates the integral of the line between two
	 * x-coordinates, given the slope and intercept of the line.
	 *
	 * @param x0
	 * @param x1
	 * @param slope
	 * @param intercept
	 * @returns {number} integral value.
	 */
	function integral(x0, x1, slope, intercept) {
	    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);
	}

	exports.getEquallySpacedData = getEquallySpacedData;
	exports.integral = integral;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.SNV = SNV;
	var Stat = __webpack_require__(28).array;

	/**
	 * Function that applies the standard normal variate (SNV) to an array of values.
	 *
	 * @param data - Array of values.
	 * @returns {Array} - applied the SNV.
	 */
	function SNV(data) {
	    var mean = Stat.mean(data);
	    var std = Stat.standardDeviation(data);
	    var result = data.slice();
	    for (var i = 0; i < data.length; i++) {
	        result[i] = (result[i] - mean) / std;
	    }
	    return result;
	}


/***/ },
/* 57 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * @private
	 * Check that a row index is not out of bounds
	 * @param {Matrix} matrix
	 * @param {number} index
	 * @param {boolean} [outer]
	 */
	exports.checkRowIndex = function checkRowIndex(matrix, index, outer) {
	    var max = outer ? matrix.rows : matrix.rows - 1;
	    if (index < 0 || index > max) {
	        throw new RangeError('Row index out of range');
	    }
	};

	/**
	 * @private
	 * Check that a column index is not out of bounds
	 * @param {Matrix} matrix
	 * @param {number} index
	 * @param {boolean} [outer]
	 */
	exports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {
	    var max = outer ? matrix.columns : matrix.columns - 1;
	    if (index < 0 || index > max) {
	        throw new RangeError('Column index out of range');
	    }
	};

	/**
	 * @private
	 * Check that the provided vector is an array with the right length
	 * @param {Matrix} matrix
	 * @param {Array|Matrix} vector
	 * @returns {Array}
	 * @throws {RangeError}
	 */
	exports.checkRowVector = function checkRowVector(matrix, vector) {
	    if (vector.to1DArray) {
	        vector = vector.to1DArray();
	    }
	    if (vector.length !== matrix.columns) {
	        throw new RangeError('vector size must be the same as the number of columns');
	    }
	    return vector;
	};

	/**
	 * @private
	 * Check that the provided vector is an array with the right length
	 * @param {Matrix} matrix
	 * @param {Array|Matrix} vector
	 * @returns {Array}
	 * @throws {RangeError}
	 */
	exports.checkColumnVector = function checkColumnVector(matrix, vector) {
	    if (vector.to1DArray) {
	        vector = vector.to1DArray();
	    }
	    if (vector.length !== matrix.rows) {
	        throw new RangeError('vector size must be the same as the number of rows');
	    }
	    return vector;
	};

	exports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {
	    var rowOut = rowIndices.some(r => {
	        return r < 0 || r >= matrix.rows;

	    });

	    var columnOut = columnIndices.some(c => {
	        return c < 0 || c >= matrix.columns;
	    });

	    if (rowOut || columnOut) {
	        throw new RangeError('Indices are out of range')
	    }

	    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {
	        throw new TypeError('Unexpected type for row/column indices');
	    }
	    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);
	    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);

	    return {
	        row: rowIndices,
	        column: columnIndices
	    };
	};

	exports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {
	    if (arguments.length !== 5) throw new TypeError('Invalid argument type');
	    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {
	        return typeof arg !== 'number';
	    });
	    if (notAllNumbers) throw new TypeError('Invalid argument type');
	    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {
	        throw new RangeError('Submatrix indices are out of range');
	    }
	};

	exports.getRange = function getRange(from, to) {
	    var arr = new Array(to - from + 1);
	    for (var i = 0; i < arr.length; i++) {
	        arr[i] = from + i;
	    }
	    return arr;
	};


/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);

	class MatrixTransposeView extends BaseView {
	    constructor(matrix) {
	        super(matrix, matrix.columns, matrix.rows);
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(columnIndex, rowIndex, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(columnIndex, rowIndex);
	    }
	}

	module.exports = MatrixTransposeView;


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var abstractMatrix = __webpack_require__(52);
	var Matrix;

	class BaseView extends abstractMatrix() {
	    constructor(matrix, rows, columns) {
	        super();
	        this.matrix = matrix;
	        this.rows = rows;
	        this.columns = columns;
	    }

	    static get [Symbol.species]() {
	        if (!Matrix) {
	            Matrix = __webpack_require__(50);
	        }
	        return Matrix;
	    }
	}

	module.exports = BaseView;


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);

	class MatrixRowView extends BaseView {
	    constructor(matrix, row) {
	        super(matrix, 1, matrix.columns);
	        this.row = row;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.row, columnIndex, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.row, columnIndex);
	    }
	}

	module.exports = MatrixRowView;


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);
	var util = __webpack_require__(57);

	class MatrixSubView extends BaseView {
	    constructor(matrix, startRow, endRow, startColumn, endColumn) {
	        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);
	        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);
	        this.startRow = startRow;
	        this.startColumn = startColumn;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex , value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);
	    }
	}

	module.exports = MatrixSubView;


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);
	var util = __webpack_require__(57);

	class MatrixSelectionView extends BaseView {
	    constructor(matrix, rowIndices, columnIndices) {
	        var indices = util.checkIndices(matrix, rowIndices, columnIndices);
	        super(matrix, indices.row.length, indices.column.length);
	        this.rowIndices = indices.row;
	        this.columnIndices = indices.column;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex] , value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);
	    }
	}

	module.exports = MatrixSelectionView;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);

	class MatrixColumnView extends BaseView {
	    constructor(matrix, column) {
	        super(matrix, matrix.rows, 1);
	        this.column = column;
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(rowIndex, this.column, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(rowIndex, this.column);
	    }
	}

	module.exports = MatrixColumnView;


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);

	class MatrixFlipRowView extends BaseView {
	    constructor(matrix) {
	        super(matrix, matrix.rows, matrix.columns);
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);
	    }
	}

	module.exports = MatrixFlipRowView;


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var BaseView = __webpack_require__(59);

	class MatrixFlipColumnView extends BaseView {
	    constructor(matrix) {
	        super(matrix, matrix.rows, matrix.columns);
	    }

	    set(rowIndex, columnIndex, value) {
	        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);
	        return this;
	    }

	    get(rowIndex, columnIndex) {
	        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);
	    }
	}

	module.exports = MatrixFlipColumnView;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(50);

	var SingularValueDecomposition = __webpack_require__(67);
	var EigenvalueDecomposition = __webpack_require__(69);
	var LuDecomposition = __webpack_require__(70);
	var QrDecomposition = __webpack_require__(71);
	var CholeskyDecomposition = __webpack_require__(72);

	function inverse(matrix) {
	    matrix = Matrix.checkMatrix(matrix);
	    return solve(matrix, Matrix.eye(matrix.rows));
	}

	/**
	 * Returns the inverse
	 * @memberOf Matrix
	 * @static
	 * @param {Matrix} matrix
	 * @return {Matrix} matrix
	 * @alias inv
	 */
	Matrix.inverse = Matrix.inv = inverse;

	/**
	 * Returns the inverse
	 * @memberOf Matrix
	 * @static
	 * @param {Matrix} matrix
	 * @return {Matrix} matrix
	 * @alias inv
	 */
	Matrix.prototype.inverse = Matrix.prototype.inv = function () {
	    return inverse(this);
	};

	function solve(leftHandSide, rightHandSide) {
	    leftHandSide = Matrix.checkMatrix(leftHandSide);
	    rightHandSide = Matrix.checkMatrix(rightHandSide);
	    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);
	}

	Matrix.solve = solve;
	Matrix.prototype.solve = function (other) {
	    return solve(this, other);
	};

	module.exports = {
	    SingularValueDecomposition: SingularValueDecomposition,
	    SVD: SingularValueDecomposition,
	    EigenvalueDecomposition: EigenvalueDecomposition,
	    EVD: EigenvalueDecomposition,
	    LuDecomposition: LuDecomposition,
	    LU: LuDecomposition,
	    QrDecomposition: QrDecomposition,
	    QR: QrDecomposition,
	    CholeskyDecomposition: CholeskyDecomposition,
	    CHO: CholeskyDecomposition,
	    inverse: inverse,
	    solve: solve
	};


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(50);
	var util = __webpack_require__(68);
	var hypotenuse = util.hypotenuse;
	var getFilled2DArray = util.getFilled2DArray;

	// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs
	function SingularValueDecomposition(value, options) {
	    if (!(this instanceof SingularValueDecomposition)) {
	        return new SingularValueDecomposition(value, options);
	    }
	    value = Matrix.checkMatrix(value);

	    options = options || {};

	    var m = value.rows,
	        n = value.columns,
	        nu = Math.min(m, n);

	    var wantu = true, wantv = true;
	    if (options.computeLeftSingularVectors === false)
	        wantu = false;
	    if (options.computeRightSingularVectors === false)
	        wantv = false;
	    var autoTranspose = options.autoTranspose === true;

	    var swapped = false;
	    var a;
	    if (m < n) {
	        if (!autoTranspose) {
	            a = value.clone();
	            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');
	        } else {
	            a = value.transpose();
	            m = a.rows;
	            n = a.columns;
	            swapped = true;
	            var aux = wantu;
	            wantu = wantv;
	            wantv = aux;
	        }
	    } else {
	        a = value.clone();
	    }

	    var s = new Array(Math.min(m + 1, n)),
	        U = getFilled2DArray(m, nu, 0),
	        V = getFilled2DArray(n, n, 0),
	        e = new Array(n),
	        work = new Array(m);

	    var nct = Math.min(m - 1, n);
	    var nrt = Math.max(0, Math.min(n - 2, m));

	    var i, j, k, p, t, ks, f, cs, sn, max, kase,
	        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;

	    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {
	        if (k < nct) {
	            s[k] = 0;
	            for (i = k; i < m; i++) {
	                s[k] = hypotenuse(s[k], a[i][k]);
	            }
	            if (s[k] !== 0) {
	                if (a[k][k] < 0) {
	                    s[k] = -s[k];
	                }
	                for (i = k; i < m; i++) {
	                    a[i][k] /= s[k];
	                }
	                a[k][k] += 1;
	            }
	            s[k] = -s[k];
	        }

	        for (j = k + 1; j < n; j++) {
	            if ((k < nct) && (s[k] !== 0)) {
	                t = 0;
	                for (i = k; i < m; i++) {
	                    t += a[i][k] * a[i][j];
	                }
	                t = -t / a[k][k];
	                for (i = k; i < m; i++) {
	                    a[i][j] += t * a[i][k];
	                }
	            }
	            e[j] = a[k][j];
	        }

	        if (wantu && (k < nct)) {
	            for (i = k; i < m; i++) {
	                U[i][k] = a[i][k];
	            }
	        }

	        if (k < nrt) {
	            e[k] = 0;
	            for (i = k + 1; i < n; i++) {
	                e[k] = hypotenuse(e[k], e[i]);
	            }
	            if (e[k] !== 0) {
	                if (e[k + 1] < 0)
	                    e[k] = -e[k];
	                for (i = k + 1; i < n; i++) {
	                    e[i] /= e[k];
	                }
	                e[k + 1] += 1;
	            }
	            e[k] = -e[k];
	            if ((k + 1 < m) && (e[k] !== 0)) {
	                for (i = k + 1; i < m; i++) {
	                    work[i] = 0;
	                }
	                for (j = k + 1; j < n; j++) {
	                    for (i = k + 1; i < m; i++) {
	                        work[i] += e[j] * a[i][j];
	                    }
	                }
	                for (j = k + 1; j < n; j++) {
	                    t = -e[j] / e[k + 1];
	                    for (i = k + 1; i < m; i++) {
	                        a[i][j] += t * work[i];
	                    }
	                }
	            }
	            if (wantv) {
	                for (i = k + 1; i < n; i++) {
	                    V[i][k] = e[i];
	                }
	            }
	        }
	    }

	    p = Math.min(n, m + 1);
	    if (nct < n) {
	        s[nct] = a[nct][nct];
	    }
	    if (m < p) {
	        s[p - 1] = 0;
	    }
	    if (nrt + 1 < p) {
	        e[nrt] = a[nrt][p - 1];
	    }
	    e[p - 1] = 0;

	    if (wantu) {
	        for (j = nct; j < nu; j++) {
	            for (i = 0; i < m; i++) {
	                U[i][j] = 0;
	            }
	            U[j][j] = 1;
	        }
	        for (k = nct - 1; k >= 0; k--) {
	            if (s[k] !== 0) {
	                for (j = k + 1; j < nu; j++) {
	                    t = 0;
	                    for (i = k; i < m; i++) {
	                        t += U[i][k] * U[i][j];
	                    }
	                    t = -t / U[k][k];
	                    for (i = k; i < m; i++) {
	                        U[i][j] += t * U[i][k];
	                    }
	                }
	                for (i = k; i < m; i++) {
	                    U[i][k] = -U[i][k];
	                }
	                U[k][k] = 1 + U[k][k];
	                for (i = 0; i < k - 1; i++) {
	                    U[i][k] = 0;
	                }
	            } else {
	                for (i = 0; i < m; i++) {
	                    U[i][k] = 0;
	                }
	                U[k][k] = 1;
	            }
	        }
	    }

	    if (wantv) {
	        for (k = n - 1; k >= 0; k--) {
	            if ((k < nrt) && (e[k] !== 0)) {
	                for (j = k + 1; j < n; j++) {
	                    t = 0;
	                    for (i = k + 1; i < n; i++) {
	                        t += V[i][k] * V[i][j];
	                    }
	                    t = -t / V[k + 1][k];
	                    for (i = k + 1; i < n; i++) {
	                        V[i][j] += t * V[i][k];
	                    }
	                }
	            }
	            for (i = 0; i < n; i++) {
	                V[i][k] = 0;
	            }
	            V[k][k] = 1;
	        }
	    }

	    var pp = p - 1,
	        iter = 0,
	        eps = Math.pow(2, -52);
	    while (p > 0) {
	        for (k = p - 2; k >= -1; k--) {
	            if (k === -1) {
	                break;
	            }
	            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {
	                e[k] = 0;
	                break;
	            }
	        }
	        if (k === p - 2) {
	            kase = 4;
	        } else {
	            for (ks = p - 1; ks >= k; ks--) {
	                if (ks === k) {
	                    break;
	                }
	                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);
	                if (Math.abs(s[ks]) <= eps * t) {
	                    s[ks] = 0;
	                    break;
	                }
	            }
	            if (ks === k) {
	                kase = 3;
	            } else if (ks === p - 1) {
	                kase = 1;
	            } else {
	                kase = 2;
	                k = ks;
	            }
	        }

	        k++;

	        switch (kase) {
	            case 1: {
	                f = e[p - 2];
	                e[p - 2] = 0;
	                for (j = p - 2; j >= k; j--) {
	                    t = hypotenuse(s[j], f);
	                    cs = s[j] / t;
	                    sn = f / t;
	                    s[j] = t;
	                    if (j !== k) {
	                        f = -sn * e[j - 1];
	                        e[j - 1] = cs * e[j - 1];
	                    }
	                    if (wantv) {
	                        for (i = 0; i < n; i++) {
	                            t = cs * V[i][j] + sn * V[i][p - 1];
	                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];
	                            V[i][j] = t;
	                        }
	                    }
	                }
	                break;
	            }
	            case 2 : {
	                f = e[k - 1];
	                e[k - 1] = 0;
	                for (j = k; j < p; j++) {
	                    t = hypotenuse(s[j], f);
	                    cs = s[j] / t;
	                    sn = f / t;
	                    s[j] = t;
	                    f = -sn * e[j];
	                    e[j] = cs * e[j];
	                    if (wantu) {
	                        for (i = 0; i < m; i++) {
	                            t = cs * U[i][j] + sn * U[i][k - 1];
	                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];
	                            U[i][j] = t;
	                        }
	                    }
	                }
	                break;
	            }
	            case 3 : {
	                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));
	                sp = s[p - 1] / scale;
	                spm1 = s[p - 2] / scale;
	                epm1 = e[p - 2] / scale;
	                sk = s[k] / scale;
	                ek = e[k] / scale;
	                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;
	                c = (sp * epm1) * (sp * epm1);
	                shift = 0;
	                if ((b !== 0) || (c !== 0)) {
	                    shift = Math.sqrt(b * b + c);
	                    if (b < 0) {
	                        shift = -shift;
	                    }
	                    shift = c / (b + shift);
	                }
	                f = (sk + sp) * (sk - sp) + shift;
	                g = sk * ek;
	                for (j = k; j < p - 1; j++) {
	                    t = hypotenuse(f, g);
	                    cs = f / t;
	                    sn = g / t;
	                    if (j !== k) {
	                        e[j - 1] = t;
	                    }
	                    f = cs * s[j] + sn * e[j];
	                    e[j] = cs * e[j] - sn * s[j];
	                    g = sn * s[j + 1];
	                    s[j + 1] = cs * s[j + 1];
	                    if (wantv) {
	                        for (i = 0; i < n; i++) {
	                            t = cs * V[i][j] + sn * V[i][j + 1];
	                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];
	                            V[i][j] = t;
	                        }
	                    }
	                    t = hypotenuse(f, g);
	                    cs = f / t;
	                    sn = g / t;
	                    s[j] = t;
	                    f = cs * e[j] + sn * s[j + 1];
	                    s[j + 1] = -sn * e[j] + cs * s[j + 1];
	                    g = sn * e[j + 1];
	                    e[j + 1] = cs * e[j + 1];
	                    if (wantu && (j < m - 1)) {
	                        for (i = 0; i < m; i++) {
	                            t = cs * U[i][j] + sn * U[i][j + 1];
	                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];
	                            U[i][j] = t;
	                        }
	                    }
	                }
	                e[p - 2] = f;
	                iter = iter + 1;
	                break;
	            }
	            case 4: {
	                if (s[k] <= 0) {
	                    s[k] = (s[k] < 0 ? -s[k] : 0);
	                    if (wantv) {
	                        for (i = 0; i <= pp; i++) {
	                            V[i][k] = -V[i][k];
	                        }
	                    }
	                }
	                while (k < pp) {
	                    if (s[k] >= s[k + 1]) {
	                        break;
	                    }
	                    t = s[k];
	                    s[k] = s[k + 1];
	                    s[k + 1] = t;
	                    if (wantv && (k < n - 1)) {
	                        for (i = 0; i < n; i++) {
	                            t = V[i][k + 1];
	                            V[i][k + 1] = V[i][k];
	                            V[i][k] = t;
	                        }
	                    }
	                    if (wantu && (k < m - 1)) {
	                        for (i = 0; i < m; i++) {
	                            t = U[i][k + 1];
	                            U[i][k + 1] = U[i][k];
	                            U[i][k] = t;
	                        }
	                    }
	                    k++;
	                }
	                iter = 0;
	                p--;
	                break;
	            }
	        }
	    }

	    if (swapped) {
	        var tmp = V;
	        V = U;
	        U = tmp;
	    }

	    this.m = m;
	    this.n = n;
	    this.s = s;
	    this.U = U;
	    this.V = V;
	}

	SingularValueDecomposition.prototype = {
	    get condition() {
	        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];
	    },
	    get norm2() {
	        return this.s[0];
	    },
	    get rank() {
	        var eps = Math.pow(2, -52),
	            tol = Math.max(this.m, this.n) * this.s[0] * eps,
	            r = 0,
	            s = this.s;
	        for (var i = 0, ii = s.length; i < ii; i++) {
	            if (s[i] > tol) {
	                r++;
	            }
	        }
	        return r;
	    },
	    get diagonal() {
	        return this.s;
	    },
	    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs
	    get threshold() {
	        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];
	    },
	    get leftSingularVectors() {
	        if (!Matrix.isMatrix(this.U)) {
	            this.U = new Matrix(this.U);
	        }
	        return this.U;
	    },
	    get rightSingularVectors() {
	        if (!Matrix.isMatrix(this.V)) {
	            this.V = new Matrix(this.V);
	        }
	        return this.V;
	    },
	    get diagonalMatrix() {
	        return Matrix.diag(this.s);
	    },
	    solve: function (value) {

	        var Y = value,
	            e = this.threshold,
	            scols = this.s.length,
	            Ls = Matrix.zeros(scols, scols),
	            i;

	        for (i = 0; i < scols; i++) {
	            if (Math.abs(this.s[i]) <= e) {
	                Ls[i][i] = 0;
	            } else {
	                Ls[i][i] = 1 / this.s[i];
	            }
	        }

	        var U = this.U;
	        var V = this.rightSingularVectors;

	        var VL = V.mmul(Ls),
	            vrows = V.rows,
	            urows = U.length,
	            VLU = Matrix.zeros(vrows, urows),
	            j, k, sum;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < urows; j++) {
	                sum = 0;
	                for (k = 0; k < scols; k++) {
	                    sum += VL[i][k] * U[j][k];
	                }
	                VLU[i][j] = sum;
	            }
	        }

	        return VLU.mmul(Y);
	    },
	    solveForDiagonal: function (value) {
	        return this.solve(Matrix.diag(value));
	    },
	    inverse: function () {
	        var V = this.V;
	        var e = this.threshold,
	            vrows = V.length,
	            vcols = V[0].length,
	            X = new Matrix(vrows, this.s.length),
	            i, j;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < vcols; j++) {
	                if (Math.abs(this.s[j]) > e) {
	                    X[i][j] = V[i][j] / this.s[j];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }

	        var U = this.U;

	        var urows = U.length,
	            ucols = U[0].length,
	            Y = new Matrix(vrows, urows),
	            k, sum;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < urows; j++) {
	                sum = 0;
	                for (k = 0; k < ucols; k++) {
	                    sum += X[i][k] * U[j][k];
	                }
	                Y[i][j] = sum;
	            }
	        }

	        return Y;
	    }
	};

	module.exports = SingularValueDecomposition;


/***/ },
/* 68 */
/***/ function(module, exports) {

	'use strict';

	exports.hypotenuse = function hypotenuse(a, b) {
	    if (Math.abs(a) > Math.abs(b)) {
	        var r = b / a;
	        return Math.abs(a) * Math.sqrt(1 + r * r);
	    }
	    if (b !== 0) {
	        var r = a / b;
	        return Math.abs(b) * Math.sqrt(1 + r * r);
	    }
	    return 0;
	};

	// For use in the decomposition algorithms. With big matrices, access time is
	// too long on elements from array subclass
	// todo check when it is fixed in v8
	// http://jsperf.com/access-and-write-array-subclass
	exports.getEmpty2DArray = function (rows, columns) {
	    var array = new Array(rows);
	    for (var i = 0; i < rows; i++) {
	        array[i] = new Array(columns);
	    }
	    return array;
	};

	exports.getFilled2DArray = function (rows, columns, value) {
	    var array = new Array(rows);
	    for (var i = 0; i < rows; i++) {
	        array[i] = new Array(columns);
	        for (var j = 0; j < columns; j++) {
	            array[i][j] = value;
	        }
	    }
	    return array;
	};


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Matrix = __webpack_require__(50);
	const util = __webpack_require__(68);
	const hypotenuse = util.hypotenuse;
	const getFilled2DArray = util.getFilled2DArray;

	const defaultOptions = {
	    assumeSymmetric: false
	};

	// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs
	function EigenvalueDecomposition(matrix, options) {
	    options = Object.assign({}, defaultOptions, options);
	    if (!(this instanceof EigenvalueDecomposition)) {
	        return new EigenvalueDecomposition(matrix, options);
	    }
	    matrix = Matrix.checkMatrix(matrix);
	    if (!matrix.isSquare()) {
	        throw new Error('Matrix is not a square matrix');
	    }

	    var n = matrix.columns,
	        V = getFilled2DArray(n, n, 0),
	        d = new Array(n),
	        e = new Array(n),
	        value = matrix,
	        i, j;

	    var isSymmetric = false;
	    if (options.assumeSymmetric) {
	        isSymmetric = true;
	    } else {
	        isSymmetric = matrix.isSymmetric();
	    }

	    if (isSymmetric) {
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                V[i][j] = value.get(i, j);
	            }
	        }
	        tred2(n, e, d, V);
	        tql2(n, e, d, V);
	    }
	    else {
	        var H = getFilled2DArray(n, n, 0),
	            ort = new Array(n);
	        for (j = 0; j < n; j++) {
	            for (i = 0; i < n; i++) {
	                H[i][j] = value.get(i, j);
	            }
	        }
	        orthes(n, H, ort, V);
	        hqr2(n, e, d, V, H);
	    }

	    this.n = n;
	    this.e = e;
	    this.d = d;
	    this.V = V;
	}

	EigenvalueDecomposition.prototype = {
	    get realEigenvalues() {
	        return this.d;
	    },
	    get imaginaryEigenvalues() {
	        return this.e;
	    },
	    get eigenvectorMatrix() {
	        if (!Matrix.isMatrix(this.V)) {
	            this.V = new Matrix(this.V);
	        }
	        return this.V;
	    },
	    get diagonalMatrix() {
	        var n = this.n,
	            e = this.e,
	            d = this.d,
	            X = new Matrix(n, n),
	            i, j;
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                X[i][j] = 0;
	            }
	            X[i][i] = d[i];
	            if (e[i] > 0) {
	                X[i][i + 1] = e[i];
	            }
	            else if (e[i] < 0) {
	                X[i][i - 1] = e[i];
	            }
	        }
	        return X;
	    }
	};

	function tred2(n, e, d, V) {

	    var f, g, h, i, j, k,
	        hh, scale;

	    for (j = 0; j < n; j++) {
	        d[j] = V[n - 1][j];
	    }

	    for (i = n - 1; i > 0; i--) {
	        scale = 0;
	        h = 0;
	        for (k = 0; k < i; k++) {
	            scale = scale + Math.abs(d[k]);
	        }

	        if (scale === 0) {
	            e[i] = d[i - 1];
	            for (j = 0; j < i; j++) {
	                d[j] = V[i - 1][j];
	                V[i][j] = 0;
	                V[j][i] = 0;
	            }
	        } else {
	            for (k = 0; k < i; k++) {
	                d[k] /= scale;
	                h += d[k] * d[k];
	            }

	            f = d[i - 1];
	            g = Math.sqrt(h);
	            if (f > 0) {
	                g = -g;
	            }

	            e[i] = scale * g;
	            h = h - f * g;
	            d[i - 1] = f - g;
	            for (j = 0; j < i; j++) {
	                e[j] = 0;
	            }

	            for (j = 0; j < i; j++) {
	                f = d[j];
	                V[j][i] = f;
	                g = e[j] + V[j][j] * f;
	                for (k = j + 1; k <= i - 1; k++) {
	                    g += V[k][j] * d[k];
	                    e[k] += V[k][j] * f;
	                }
	                e[j] = g;
	            }

	            f = 0;
	            for (j = 0; j < i; j++) {
	                e[j] /= h;
	                f += e[j] * d[j];
	            }

	            hh = f / (h + h);
	            for (j = 0; j < i; j++) {
	                e[j] -= hh * d[j];
	            }

	            for (j = 0; j < i; j++) {
	                f = d[j];
	                g = e[j];
	                for (k = j; k <= i - 1; k++) {
	                    V[k][j] -= (f * e[k] + g * d[k]);
	                }
	                d[j] = V[i - 1][j];
	                V[i][j] = 0;
	            }
	        }
	        d[i] = h;
	    }

	    for (i = 0; i < n - 1; i++) {
	        V[n - 1][i] = V[i][i];
	        V[i][i] = 1;
	        h = d[i + 1];
	        if (h !== 0) {
	            for (k = 0; k <= i; k++) {
	                d[k] = V[k][i + 1] / h;
	            }

	            for (j = 0; j <= i; j++) {
	                g = 0;
	                for (k = 0; k <= i; k++) {
	                    g += V[k][i + 1] * V[k][j];
	                }
	                for (k = 0; k <= i; k++) {
	                    V[k][j] -= g * d[k];
	                }
	            }
	        }

	        for (k = 0; k <= i; k++) {
	            V[k][i + 1] = 0;
	        }
	    }

	    for (j = 0; j < n; j++) {
	        d[j] = V[n - 1][j];
	        V[n - 1][j] = 0;
	    }

	    V[n - 1][n - 1] = 1;
	    e[0] = 0;
	}

	function tql2(n, e, d, V) {

	    var g, h, i, j, k, l, m, p, r,
	        dl1, c, c2, c3, el1, s, s2,
	        iter;

	    for (i = 1; i < n; i++) {
	        e[i - 1] = e[i];
	    }

	    e[n - 1] = 0;

	    var f = 0,
	        tst1 = 0,
	        eps = Math.pow(2, -52);

	    for (l = 0; l < n; l++) {
	        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));
	        m = l;
	        while (m < n) {
	            if (Math.abs(e[m]) <= eps * tst1) {
	                break;
	            }
	            m++;
	        }

	        if (m > l) {
	            iter = 0;
	            do {
	                iter = iter + 1;

	                g = d[l];
	                p = (d[l + 1] - g) / (2 * e[l]);
	                r = hypotenuse(p, 1);
	                if (p < 0) {
	                    r = -r;
	                }

	                d[l] = e[l] / (p + r);
	                d[l + 1] = e[l] * (p + r);
	                dl1 = d[l + 1];
	                h = g - d[l];
	                for (i = l + 2; i < n; i++) {
	                    d[i] -= h;
	                }

	                f = f + h;

	                p = d[m];
	                c = 1;
	                c2 = c;
	                c3 = c;
	                el1 = e[l + 1];
	                s = 0;
	                s2 = 0;
	                for (i = m - 1; i >= l; i--) {
	                    c3 = c2;
	                    c2 = c;
	                    s2 = s;
	                    g = c * e[i];
	                    h = c * p;
	                    r = hypotenuse(p, e[i]);
	                    e[i + 1] = s * r;
	                    s = e[i] / r;
	                    c = p / r;
	                    p = c * d[i] - s * g;
	                    d[i + 1] = h + s * (c * g + s * d[i]);

	                    for (k = 0; k < n; k++) {
	                        h = V[k][i + 1];
	                        V[k][i + 1] = s * V[k][i] + c * h;
	                        V[k][i] = c * V[k][i] - s * h;
	                    }
	                }

	                p = -s * s2 * c3 * el1 * e[l] / dl1;
	                e[l] = s * p;
	                d[l] = c * p;

	            }
	            while (Math.abs(e[l]) > eps * tst1);
	        }
	        d[l] = d[l] + f;
	        e[l] = 0;
	    }

	    for (i = 0; i < n - 1; i++) {
	        k = i;
	        p = d[i];
	        for (j = i + 1; j < n; j++) {
	            if (d[j] < p) {
	                k = j;
	                p = d[j];
	            }
	        }

	        if (k !== i) {
	            d[k] = d[i];
	            d[i] = p;
	            for (j = 0; j < n; j++) {
	                p = V[j][i];
	                V[j][i] = V[j][k];
	                V[j][k] = p;
	            }
	        }
	    }
	}

	function orthes(n, H, ort, V) {

	    var low = 0,
	        high = n - 1,
	        f, g, h, i, j, m,
	        scale;

	    for (m = low + 1; m <= high - 1; m++) {
	        scale = 0;
	        for (i = m; i <= high; i++) {
	            scale = scale + Math.abs(H[i][m - 1]);
	        }

	        if (scale !== 0) {
	            h = 0;
	            for (i = high; i >= m; i--) {
	                ort[i] = H[i][m - 1] / scale;
	                h += ort[i] * ort[i];
	            }

	            g = Math.sqrt(h);
	            if (ort[m] > 0) {
	                g = -g;
	            }

	            h = h - ort[m] * g;
	            ort[m] = ort[m] - g;

	            for (j = m; j < n; j++) {
	                f = 0;
	                for (i = high; i >= m; i--) {
	                    f += ort[i] * H[i][j];
	                }

	                f = f / h;
	                for (i = m; i <= high; i++) {
	                    H[i][j] -= f * ort[i];
	                }
	            }

	            for (i = 0; i <= high; i++) {
	                f = 0;
	                for (j = high; j >= m; j--) {
	                    f += ort[j] * H[i][j];
	                }

	                f = f / h;
	                for (j = m; j <= high; j++) {
	                    H[i][j] -= f * ort[j];
	                }
	            }

	            ort[m] = scale * ort[m];
	            H[m][m - 1] = scale * g;
	        }
	    }

	    for (i = 0; i < n; i++) {
	        for (j = 0; j < n; j++) {
	            V[i][j] = (i === j ? 1 : 0);
	        }
	    }

	    for (m = high - 1; m >= low + 1; m--) {
	        if (H[m][m - 1] !== 0) {
	            for (i = m + 1; i <= high; i++) {
	                ort[i] = H[i][m - 1];
	            }

	            for (j = m; j <= high; j++) {
	                g = 0;
	                for (i = m; i <= high; i++) {
	                    g += ort[i] * V[i][j];
	                }

	                g = (g / ort[m]) / H[m][m - 1];
	                for (i = m; i <= high; i++) {
	                    V[i][j] += g * ort[i];
	                }
	            }
	        }
	    }
	}

	function hqr2(nn, e, d, V, H) {
	    var n = nn - 1,
	        low = 0,
	        high = nn - 1,
	        eps = Math.pow(2, -52),
	        exshift = 0,
	        norm = 0,
	        p = 0,
	        q = 0,
	        r = 0,
	        s = 0,
	        z = 0,
	        iter = 0,
	        i, j, k, l, m, t, w, x, y,
	        ra, sa, vr, vi,
	        notlast, cdivres;

	    for (i = 0; i < nn; i++) {
	        if (i < low || i > high) {
	            d[i] = H[i][i];
	            e[i] = 0;
	        }

	        for (j = Math.max(i - 1, 0); j < nn; j++) {
	            norm = norm + Math.abs(H[i][j]);
	        }
	    }

	    while (n >= low) {
	        l = n;
	        while (l > low) {
	            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);
	            if (s === 0) {
	                s = norm;
	            }
	            if (Math.abs(H[l][l - 1]) < eps * s) {
	                break;
	            }
	            l--;
	        }

	        if (l === n) {
	            H[n][n] = H[n][n] + exshift;
	            d[n] = H[n][n];
	            e[n] = 0;
	            n--;
	            iter = 0;
	        } else if (l === n - 1) {
	            w = H[n][n - 1] * H[n - 1][n];
	            p = (H[n - 1][n - 1] - H[n][n]) / 2;
	            q = p * p + w;
	            z = Math.sqrt(Math.abs(q));
	            H[n][n] = H[n][n] + exshift;
	            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;
	            x = H[n][n];

	            if (q >= 0) {
	                z = (p >= 0) ? (p + z) : (p - z);
	                d[n - 1] = x + z;
	                d[n] = d[n - 1];
	                if (z !== 0) {
	                    d[n] = x - w / z;
	                }
	                e[n - 1] = 0;
	                e[n] = 0;
	                x = H[n][n - 1];
	                s = Math.abs(x) + Math.abs(z);
	                p = x / s;
	                q = z / s;
	                r = Math.sqrt(p * p + q * q);
	                p = p / r;
	                q = q / r;

	                for (j = n - 1; j < nn; j++) {
	                    z = H[n - 1][j];
	                    H[n - 1][j] = q * z + p * H[n][j];
	                    H[n][j] = q * H[n][j] - p * z;
	                }

	                for (i = 0; i <= n; i++) {
	                    z = H[i][n - 1];
	                    H[i][n - 1] = q * z + p * H[i][n];
	                    H[i][n] = q * H[i][n] - p * z;
	                }

	                for (i = low; i <= high; i++) {
	                    z = V[i][n - 1];
	                    V[i][n - 1] = q * z + p * V[i][n];
	                    V[i][n] = q * V[i][n] - p * z;
	                }
	            } else {
	                d[n - 1] = x + p;
	                d[n] = x + p;
	                e[n - 1] = z;
	                e[n] = -z;
	            }

	            n = n - 2;
	            iter = 0;
	        } else {
	            x = H[n][n];
	            y = 0;
	            w = 0;
	            if (l < n) {
	                y = H[n - 1][n - 1];
	                w = H[n][n - 1] * H[n - 1][n];
	            }

	            if (iter === 10) {
	                exshift += x;
	                for (i = low; i <= n; i++) {
	                    H[i][i] -= x;
	                }
	                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);
	                x = y = 0.75 * s;
	                w = -0.4375 * s * s;
	            }

	            if (iter === 30) {
	                s = (y - x) / 2;
	                s = s * s + w;
	                if (s > 0) {
	                    s = Math.sqrt(s);
	                    if (y < x) {
	                        s = -s;
	                    }
	                    s = x - w / ((y - x) / 2 + s);
	                    for (i = low; i <= n; i++) {
	                        H[i][i] -= s;
	                    }
	                    exshift += s;
	                    x = y = w = 0.964;
	                }
	            }

	            iter = iter + 1;

	            m = n - 2;
	            while (m >= l) {
	                z = H[m][m];
	                r = x - z;
	                s = y - z;
	                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];
	                q = H[m + 1][m + 1] - z - r - s;
	                r = H[m + 2][m + 1];
	                s = Math.abs(p) + Math.abs(q) + Math.abs(r);
	                p = p / s;
	                q = q / s;
	                r = r / s;
	                if (m === l) {
	                    break;
	                }
	                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {
	                    break;
	                }
	                m--;
	            }

	            for (i = m + 2; i <= n; i++) {
	                H[i][i - 2] = 0;
	                if (i > m + 2) {
	                    H[i][i - 3] = 0;
	                }
	            }

	            for (k = m; k <= n - 1; k++) {
	                notlast = (k !== n - 1);
	                if (k !== m) {
	                    p = H[k][k - 1];
	                    q = H[k + 1][k - 1];
	                    r = (notlast ? H[k + 2][k - 1] : 0);
	                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);
	                    if (x !== 0) {
	                        p = p / x;
	                        q = q / x;
	                        r = r / x;
	                    }
	                }

	                if (x === 0) {
	                    break;
	                }

	                s = Math.sqrt(p * p + q * q + r * r);
	                if (p < 0) {
	                    s = -s;
	                }

	                if (s !== 0) {
	                    if (k !== m) {
	                        H[k][k - 1] = -s * x;
	                    } else if (l !== m) {
	                        H[k][k - 1] = -H[k][k - 1];
	                    }

	                    p = p + s;
	                    x = p / s;
	                    y = q / s;
	                    z = r / s;
	                    q = q / p;
	                    r = r / p;

	                    for (j = k; j < nn; j++) {
	                        p = H[k][j] + q * H[k + 1][j];
	                        if (notlast) {
	                            p = p + r * H[k + 2][j];
	                            H[k + 2][j] = H[k + 2][j] - p * z;
	                        }

	                        H[k][j] = H[k][j] - p * x;
	                        H[k + 1][j] = H[k + 1][j] - p * y;
	                    }

	                    for (i = 0; i <= Math.min(n, k + 3); i++) {
	                        p = x * H[i][k] + y * H[i][k + 1];
	                        if (notlast) {
	                            p = p + z * H[i][k + 2];
	                            H[i][k + 2] = H[i][k + 2] - p * r;
	                        }

	                        H[i][k] = H[i][k] - p;
	                        H[i][k + 1] = H[i][k + 1] - p * q;
	                    }

	                    for (i = low; i <= high; i++) {
	                        p = x * V[i][k] + y * V[i][k + 1];
	                        if (notlast) {
	                            p = p + z * V[i][k + 2];
	                            V[i][k + 2] = V[i][k + 2] - p * r;
	                        }

	                        V[i][k] = V[i][k] - p;
	                        V[i][k + 1] = V[i][k + 1] - p * q;
	                    }
	                }
	            }
	        }
	    }

	    if (norm === 0) {
	        return;
	    }

	    for (n = nn - 1; n >= 0; n--) {
	        p = d[n];
	        q = e[n];

	        if (q === 0) {
	            l = n;
	            H[n][n] = 1;
	            for (i = n - 1; i >= 0; i--) {
	                w = H[i][i] - p;
	                r = 0;
	                for (j = l; j <= n; j++) {
	                    r = r + H[i][j] * H[j][n];
	                }

	                if (e[i] < 0) {
	                    z = w;
	                    s = r;
	                } else {
	                    l = i;
	                    if (e[i] === 0) {
	                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));
	                    } else {
	                        x = H[i][i + 1];
	                        y = H[i + 1][i];
	                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];
	                        t = (x * s - z * r) / q;
	                        H[i][n] = t;
	                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);
	                    }

	                    t = Math.abs(H[i][n]);
	                    if ((eps * t) * t > 1) {
	                        for (j = i; j <= n; j++) {
	                            H[j][n] = H[j][n] / t;
	                        }
	                    }
	                }
	            }
	        } else if (q < 0) {
	            l = n - 1;

	            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {
	                H[n - 1][n - 1] = q / H[n][n - 1];
	                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];
	            } else {
	                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);
	                H[n - 1][n - 1] = cdivres[0];
	                H[n - 1][n] = cdivres[1];
	            }

	            H[n][n - 1] = 0;
	            H[n][n] = 1;
	            for (i = n - 2; i >= 0; i--) {
	                ra = 0;
	                sa = 0;
	                for (j = l; j <= n; j++) {
	                    ra = ra + H[i][j] * H[j][n - 1];
	                    sa = sa + H[i][j] * H[j][n];
	                }

	                w = H[i][i] - p;

	                if (e[i] < 0) {
	                    z = w;
	                    r = ra;
	                    s = sa;
	                } else {
	                    l = i;
	                    if (e[i] === 0) {
	                        cdivres = cdiv(-ra, -sa, w, q);
	                        H[i][n - 1] = cdivres[0];
	                        H[i][n] = cdivres[1];
	                    } else {
	                        x = H[i][i + 1];
	                        y = H[i + 1][i];
	                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;
	                        vi = (d[i] - p) * 2 * q;
	                        if (vr === 0 && vi === 0) {
	                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));
	                        }
	                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);
	                        H[i][n - 1] = cdivres[0];
	                        H[i][n] = cdivres[1];
	                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {
	                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;
	                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;
	                        } else {
	                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);
	                            H[i + 1][n - 1] = cdivres[0];
	                            H[i + 1][n] = cdivres[1];
	                        }
	                    }

	                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));
	                    if ((eps * t) * t > 1) {
	                        for (j = i; j <= n; j++) {
	                            H[j][n - 1] = H[j][n - 1] / t;
	                            H[j][n] = H[j][n] / t;
	                        }
	                    }
	                }
	            }
	        }
	    }

	    for (i = 0; i < nn; i++) {
	        if (i < low || i > high) {
	            for (j = i; j < nn; j++) {
	                V[i][j] = H[i][j];
	            }
	        }
	    }

	    for (j = nn - 1; j >= low; j--) {
	        for (i = low; i <= high; i++) {
	            z = 0;
	            for (k = low; k <= Math.min(j, high); k++) {
	                z = z + V[i][k] * H[k][j];
	            }
	            V[i][j] = z;
	        }
	    }
	}

	function cdiv(xr, xi, yr, yi) {
	    var r, d;
	    if (Math.abs(yr) > Math.abs(yi)) {
	        r = yi / yr;
	        d = yr + r * yi;
	        return [(xr + r * xi) / d, (xi - r * xr) / d];
	    }
	    else {
	        r = yr / yi;
	        d = yi + r * yr;
	        return [(r * xr + xi) / d, (r * xi - xr) / d];
	    }
	}

	module.exports = EigenvalueDecomposition;


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(50);

	// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs
	function LuDecomposition(matrix) {
	    if (!(this instanceof LuDecomposition)) {
	        return new LuDecomposition(matrix);
	    }
	    matrix = Matrix.checkMatrix(matrix);

	    var lu = matrix.clone(),
	        rows = lu.rows,
	        columns = lu.columns,
	        pivotVector = new Array(rows),
	        pivotSign = 1,
	        i, j, k, p, s, t, v,
	        LUrowi, LUcolj, kmax;

	    for (i = 0; i < rows; i++) {
	        pivotVector[i] = i;
	    }

	    LUcolj = new Array(rows);

	    for (j = 0; j < columns; j++) {

	        for (i = 0; i < rows; i++) {
	            LUcolj[i] = lu[i][j];
	        }

	        for (i = 0; i < rows; i++) {
	            LUrowi = lu[i];
	            kmax = Math.min(i, j);
	            s = 0;
	            for (k = 0; k < kmax; k++) {
	                s += LUrowi[k] * LUcolj[k];
	            }
	            LUrowi[j] = LUcolj[i] -= s;
	        }

	        p = j;
	        for (i = j + 1; i < rows; i++) {
	            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {
	                p = i;
	            }
	        }

	        if (p !== j) {
	            for (k = 0; k < columns; k++) {
	                t = lu[p][k];
	                lu[p][k] = lu[j][k];
	                lu[j][k] = t;
	            }

	            v = pivotVector[p];
	            pivotVector[p] = pivotVector[j];
	            pivotVector[j] = v;

	            pivotSign = -pivotSign;
	        }

	        if (j < rows && lu[j][j] !== 0) {
	            for (i = j + 1; i < rows; i++) {
	                lu[i][j] /= lu[j][j];
	            }
	        }
	    }

	    this.LU = lu;
	    this.pivotVector = pivotVector;
	    this.pivotSign = pivotSign;
	}

	LuDecomposition.prototype = {
	    isSingular: function () {
	        var data = this.LU,
	            col = data.columns;
	        for (var j = 0; j < col; j++) {
	            if (data[j][j] === 0) {
	                return true;
	            }
	        }
	        return false;
	    },
	    get determinant() {
	        var data = this.LU;
	        if (!data.isSquare())
	            throw new Error('Matrix must be square');
	        var determinant = this.pivotSign, col = data.columns;
	        for (var j = 0; j < col; j++)
	            determinant *= data[j][j];
	        return determinant;
	    },
	    get lowerTriangularMatrix() {
	        var data = this.LU,
	            rows = data.rows,
	            columns = data.columns,
	            X = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                if (i > j) {
	                    X[i][j] = data[i][j];
	                } else if (i === j) {
	                    X[i][j] = 1;
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get upperTriangularMatrix() {
	        var data = this.LU,
	            rows = data.rows,
	            columns = data.columns,
	            X = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                if (i <= j) {
	                    X[i][j] = data[i][j];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get pivotPermutationVector() {
	        return this.pivotVector.slice();
	    },
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var lu = this.LU,
	            rows = lu.rows;

	        if (rows !== value.rows)
	            throw new Error('Invalid matrix dimensions');
	        if (this.isSingular())
	            throw new Error('LU matrix is singular');

	        var count = value.columns,
	            X = value.subMatrixRow(this.pivotVector, 0, count - 1),
	            columns = lu.columns,
	            i, j, k;

	        for (k = 0; k < columns; k++) {
	            for (i = k + 1; i < columns; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * lu[i][k];
	                }
	            }
	        }
	        for (k = columns - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                X[k][j] /= lu[k][k];
	            }
	            for (i = 0; i < k; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * lu[i][k];
	                }
	            }
	        }
	        return X;
	    }
	};

	module.exports = LuDecomposition;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(50);
	var hypotenuse = __webpack_require__(68).hypotenuse;

	//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs
	function QrDecomposition(value) {
	    if (!(this instanceof QrDecomposition)) {
	        return new QrDecomposition(value);
	    }
	    value = Matrix.checkMatrix(value);

	    var qr = value.clone(),
	        m = value.rows,
	        n = value.columns,
	        rdiag = new Array(n),
	        i, j, k, s;

	    for (k = 0; k < n; k++) {
	        var nrm = 0;
	        for (i = k; i < m; i++) {
	            nrm = hypotenuse(nrm, qr[i][k]);
	        }
	        if (nrm !== 0) {
	            if (qr[k][k] < 0) {
	                nrm = -nrm;
	            }
	            for (i = k; i < m; i++) {
	                qr[i][k] /= nrm;
	            }
	            qr[k][k] += 1;
	            for (j = k + 1; j < n; j++) {
	                s = 0;
	                for (i = k; i < m; i++) {
	                    s += qr[i][k] * qr[i][j];
	                }
	                s = -s / qr[k][k];
	                for (i = k; i < m; i++) {
	                    qr[i][j] += s * qr[i][k];
	                }
	            }
	        }
	        rdiag[k] = -nrm;
	    }

	    this.QR = qr;
	    this.Rdiag = rdiag;
	}

	QrDecomposition.prototype = {
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var qr = this.QR,
	            m = qr.rows;

	        if (value.rows !== m)
	            throw new Error('Matrix row dimensions must agree');
	        if (!this.isFullRank())
	            throw new Error('Matrix is rank deficient');

	        var count = value.columns,
	            X = value.clone(),
	            n = qr.columns,
	            i, j, k, s;

	        for (k = 0; k < n; k++) {
	            for (j = 0; j < count; j++) {
	                s = 0;
	                for (i = k; i < m; i++) {
	                    s += qr[i][k] * X[i][j];
	                }
	                s = -s / qr[k][k];
	                for (i = k; i < m; i++) {
	                    X[i][j] += s * qr[i][k];
	                }
	            }
	        }
	        for (k = n - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                X[k][j] /= this.Rdiag[k];
	            }
	            for (i = 0; i < k; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * qr[i][k];
	                }
	            }
	        }

	        return X.subMatrix(0, n - 1, 0, count - 1);
	    },
	    isFullRank: function () {
	        var columns = this.QR.columns;
	        for (var i = 0; i < columns; i++) {
	            if (this.Rdiag[i] === 0) {
	                return false;
	            }
	        }
	        return true;
	    },
	    get upperTriangularMatrix() {
	        var qr = this.QR,
	            n = qr.columns,
	            X = new Matrix(n, n),
	            i, j;
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                if (i < j) {
	                    X[i][j] = qr[i][j];
	                } else if (i === j) {
	                    X[i][j] = this.Rdiag[i];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get orthogonalMatrix() {
	        var qr = this.QR,
	            rows = qr.rows,
	            columns = qr.columns,
	            X = new Matrix(rows, columns),
	            i, j, k, s;

	        for (k = columns - 1; k >= 0; k--) {
	            for (i = 0; i < rows; i++) {
	                X[i][k] = 0;
	            }
	            X[k][k] = 1;
	            for (j = k; j < columns; j++) {
	                if (qr[k][k] !== 0) {
	                    s = 0;
	                    for (i = k; i < rows; i++) {
	                        s += qr[i][k] * X[i][j];
	                    }

	                    s = -s / qr[k][k];

	                    for (i = k; i < rows; i++) {
	                        X[i][j] += s * qr[i][k];
	                    }
	                }
	            }
	        }
	        return X;
	    }
	};

	module.exports = QrDecomposition;


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(50);

	// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs
	function CholeskyDecomposition(value) {
	    if (!(this instanceof CholeskyDecomposition)) {
	        return new CholeskyDecomposition(value);
	    }
	    value = Matrix.checkMatrix(value);
	    if (!value.isSymmetric())
	        throw new Error('Matrix is not symmetric');

	    var a = value,
	        dimension = a.rows,
	        l = new Matrix(dimension, dimension),
	        positiveDefinite = true,
	        i, j, k;

	    for (j = 0; j < dimension; j++) {
	        var Lrowj = l[j];
	        var d = 0;
	        for (k = 0; k < j; k++) {
	            var Lrowk = l[k];
	            var s = 0;
	            for (i = 0; i < k; i++) {
	                s += Lrowk[i] * Lrowj[i];
	            }
	            Lrowj[k] = s = (a[j][k] - s) / l[k][k];
	            d = d + s * s;
	        }

	        d = a[j][j] - d;

	        positiveDefinite &= (d > 0);
	        l[j][j] = Math.sqrt(Math.max(d, 0));
	        for (k = j + 1; k < dimension; k++) {
	            l[j][k] = 0;
	        }
	    }

	    if (!positiveDefinite) {
	        throw new Error('Matrix is not positive definite');
	    }

	    this.L = l;
	}

	CholeskyDecomposition.prototype = {
	    get lowerTriangularMatrix() {
	        return this.L;
	    },
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var l = this.L,
	            dimension = l.rows;

	        if (value.rows !== dimension) {
	            throw new Error('Matrix dimensions do not match');
	        }

	        var count = value.columns,
	            B = value.clone(),
	            i, j, k;

	        for (k = 0; k < dimension; k++) {
	            for (j = 0; j < count; j++) {
	                for (i = 0; i < k; i++) {
	                    B[k][j] -= B[i][j] * l[k][i];
	                }
	                B[k][j] /= l[k][k];
	            }
	        }

	        for (k = dimension - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                for (i = k + 1; i < dimension; i++) {
	                    B[k][j] -= B[i][j] * l[i][k];
	                }
	                B[k][j] /= l[k][k];
	            }
	        }

	        return B;
	    }
	};

	module.exports = CholeskyDecomposition;


/***/ },
/* 73 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function getConnectivityMatrix(options) {
	    
	    // TODO remove this line when the bug is fixed ... (in OCL addImplicitHydrogens)
	    // this.ensureHelperArrays(this.cHelperNeighbours)
	    this.toMolfile();

	    var nbAtoms=this.getAllAtoms();
	    var result=new Array(nbAtoms);
	    for (var i=0; i<nbAtoms; i++) {
	        result[i]=new Array(nbAtoms).fill(0);
	        result[i][i]=1;
	    }

	    for (var i=0; i<nbAtoms; i++) {
	        for (var j=0; j<this.getAllConnAtoms(i); j++) {
	            result[i][this.getConnAtom(i,j)]=1;
	        }
	    }
	    
	    return result;
	}


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(75);
	module.exports.Decompositions = module.exports.DC = __webpack_require__(81);


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const arrayUtils = __webpack_require__(76);

	/**
	 * Real matrix
	 * @class Matrix
	 * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,
	 * 2D array containing the data or Matrix instance to clone
	 * @param {number} [nColumns] - Number of columns of the new matrix
	 */
	class Matrix extends Array {
	    constructor(nRows, nColumns) {
	        if (Matrix.isMatrix(nRows)) {
	            return nRows.clone();
	        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix
	            super(nRows);
	            if (Number.isInteger(nColumns) && nColumns > 0) {
	                for (var i = 0; i < nRows; i++) {
	                    this[i] = new Array(nColumns);
	                }
	            } else {
	                throw new TypeError('nColumns must be a positive integer');
	            }
	        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array
	            var matrix = nRows;
	            nRows = matrix.length;
	            nColumns = matrix[0].length;
	            if (typeof nColumns !== 'number' || nColumns === 0) {
	                throw new TypeError('Data must be a 2D array with at least one element');
	            }
	            super(nRows);
	            for (var i = 0; i < nRows; i++) {
	                if (matrix[i].length !== nColumns) {
	                    throw new RangeError('Inconsistent array dimensions');
	                }
	                this[i] = [].concat(matrix[i]);
	            }
	        } else {
	            throw new TypeError('First argument must be a positive number or an array');
	        }
	        this.rows = nRows;
	        this.columns = nColumns;
	    }

	    // Native array methods should return instances of Array, not Matrix
	    static get [Symbol.species]() {
	        return Array;
	    }

	    /**
	     * Constructs a Matrix with the chosen dimensions from a 1D array
	     * @param {number} newRows - Number of rows
	     * @param {number} newColumns - Number of columns
	     * @param {Array} newData - A 1D array containing data for the matrix
	     * @returns {Matrix} - The new matrix
	     */
	    static from1DArray(newRows, newColumns, newData) {
	        var length = newRows * newColumns;
	        if (length !== newData.length) {
	            throw new RangeError('Data length does not match given dimensions');
	        }
	        var newMatrix = new Matrix(newRows, newColumns);
	        for (var row = 0; row < newRows; row++) {
	            for (var column = 0; column < newColumns; column++) {
	                newMatrix[row][column] = newData[row * newColumns + column];
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Creates a row vector, a matrix with only one row.
	     * @param {Array} newData - A 1D array containing data for the vector
	     * @returns {Matrix} - The new matrix
	     */
	    static rowVector(newData) {
	        var vector = new Matrix(1, newData.length);
	        for (var i = 0; i < newData.length; i++) {
	            vector[0][i] = newData[i];
	        }
	        return vector;
	    }

	    /**
	     * Creates a column vector, a matrix with only one column.
	     * @param {Array} newData - A 1D array containing data for the vector
	     * @returns {Matrix} - The new matrix
	     */
	    static columnVector(newData) {
	        var vector = new Matrix(newData.length, 1);
	        for (var i = 0; i < newData.length; i++) {
	            vector[i][0] = newData[i];
	        }
	        return vector;
	    }

	    /**
	     * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).
	     * @param {number} rows - Number of rows
	     * @param {number} columns - Number of columns
	     * @returns {Matrix} - The new matrix
	     */
	    static empty(rows, columns) {
	        return new Matrix(rows, columns);
	    }

	    /**
	     * Creates a matrix with the given dimensions. Values will be set to zero.
	     * @param {number} rows - Number of rows
	     * @param {number} columns - Number of columns
	     * @returns {Matrix} - The new matrix
	     */
	    static zeros(rows, columns) {
	        return Matrix.empty(rows, columns).fill(0);
	    }

	    /**
	     * Creates a matrix with the given dimensions. Values will be set to one.
	     * @param {number} rows - Number of rows
	     * @param {number} columns - Number of columns
	     * @returns {Matrix} - The new matrix
	     */
	    static ones(rows, columns) {
	        return Matrix.empty(rows, columns).fill(1);
	    }

	    /**
	     * Creates a matrix with the given dimensions. Values will be randomly set.
	     * @param {number} rows - Number of rows
	     * @param {number} columns - Number of columns
	     * @param {function} [rng] - Random number generator (default: Math.random)
	     * @returns {Matrix} The new matrix
	     */
	    static rand(rows, columns, rng) {
	        if (rng === undefined) rng = Math.random;
	        var matrix = Matrix.empty(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                matrix[i][j] = rng();
	            }
	        }
	        return matrix;
	    }

	    /**
	     * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.
	     * @param {number} rows - Number of rows
	     * @param {number} [columns] - Number of columns (Default: rows)
	     * @returns {Matrix} - The new identity matrix
	     */
	    static eye(rows, columns) {
	        if (columns === undefined) columns = rows;
	        var min = Math.min(rows, columns);
	        var matrix = Matrix.zeros(rows, columns);
	        for (var i = 0; i < min; i++) {
	            matrix[i][i] = 1;
	        }
	        return matrix;
	    }

	    /**
	     * Creates a diagonal matrix based on the given array.
	     * @param {Array} data - Array containing the data for the diagonal
	     * @param {number} [rows] - Number of rows (Default: data.length)
	     * @param {number} [columns] - Number of columns (Default: rows)
	     * @returns {Matrix} - The new diagonal matrix
	     */
	    static diag(data, rows, columns) {
	        var l = data.length;
	        if (rows === undefined) rows = l;
	        if (columns === undefined) columns = rows;
	        var min = Math.min(l, rows, columns);
	        var matrix = Matrix.zeros(rows, columns);
	        for (var i = 0; i < min; i++) {
	            matrix[i][i] = data[i];
	        }
	        return matrix;
	    }

	    /**
	     * Returns a matrix whose elements are the minimum between matrix1 and matrix2
	     * @param matrix1
	     * @param matrix2
	     * @returns {Matrix}
	     */
	    static min(matrix1, matrix2) {
	        var rows = matrix1.length;
	        var columns = matrix1[0].length;
	        var result = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                result[i][j] = Math.min(matrix1[i][j], matrix2[i][j]);
	            }
	        }
	        return result;
	    }

	    /**
	     * Returns a matrix whose elements are the maximum between matrix1 and matrix2
	     * @param matrix1
	     * @param matrix2
	     * @returns {Matrix}
	     */
	    static max(matrix1, matrix2) {
	        var rows = matrix1.length;
	        var columns = matrix1[0].length;
	        var result = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                result[i][j] = Math.max(matrix1[i][j], matrix2[i][j]);
	            }
	        }
	        return result;
	    }

	    /**
	     * Check that the provided value is a Matrix and tries to instantiate one if not
	     * @param value - The value to check
	     * @returns {Matrix}
	     */
	    static checkMatrix(value) {
	        return Matrix.isMatrix(value) ? value : new Matrix(value);
	    }

	    /**
	     * Returns true if the argument is a Matrix, false otherwise
	     * @param value - The value to check
	     * @return {boolean}
	     */
	    static isMatrix(value) {
	        return (value != null) && (value.klass === 'Matrix');
	    }

	    /**
	     * @property {number} - The number of elements in the matrix.
	     */
	    get size() {
	        return this.rows * this.columns;
	    }

	    /**
	     * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.
	     * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)
	     * @returns {Matrix} this
	     */
	    apply(callback) {
	        if (typeof callback !== 'function') {
	            throw new TypeError('callback must be a function');
	        }
	        var ii = this.rows;
	        var jj = this.columns;
	        for (var i = 0; i < ii; i++) {
	            for (var j = 0; j < jj; j++) {
	                callback.call(this, i, j);
	            }
	        }
	        return this;
	    }

	    /**
	     * Creates an exact and independent copy of the matrix
	     * @returns {Matrix}
	     */
	    clone() {
	        var newMatrix = new Matrix(this.rows, this.columns);
	        for (var row = 0; row < this.rows; row++) {
	            for (var column = 0; column < this.columns; column++) {
	                newMatrix[row][column] = this[row][column];
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Returns a new 1D array filled row by row with the matrix values
	     * @returns {Array}
	     */
	    to1DArray() {
	        var array = new Array(this.size);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                array[i * this.columns + j] = this[i][j];
	            }
	        }
	        return array;
	    }

	    /**
	     * Returns a 2D array containing a copy of the data
	     * @returns {Array}
	     */
	    to2DArray() {
	        var copy = new Array(this.rows);
	        for (var i = 0; i < this.rows; i++) {
	            copy[i] = [].concat(this[i]);
	        }
	        return copy;
	    }

	    /**
	     * @returns {boolean} true if the matrix has one row
	     */
	    isRowVector() {
	        return this.rows === 1;
	    }

	    /**
	     * @returns {boolean} true if the matrix has one column
	     */
	    isColumnVector() {
	        return this.columns === 1;
	    }

	    /**
	     * @returns {boolean} true if the matrix has one row or one column
	     */
	    isVector() {
	        return (this.rows === 1) || (this.columns === 1);
	    }

	    /**
	     * @returns {boolean} true if the matrix has the same number of rows and columns
	     */
	    isSquare() {
	        return this.rows === this.columns;
	    }

	    /**
	     * @returns {boolean} true if the matrix is square and has the same values on both sides of the diagonal
	     */
	    isSymmetric() {
	        if (this.isSquare()) {
	            for (var i = 0; i < this.rows; i++) {
	                for (var j = 0; j <= i; j++) {
	                    if (this[i][j] !== this[j][i]) {
	                        return false;
	                    }
	                }
	            }
	            return true;
	        }
	        return false;
	    }

	    /**
	     * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1
	     * @param {number} rowIndex - Index of the row
	     * @param {number} columnIndex - Index of the column
	     * @param {number} value - The new value for the element
	     * @returns {Matrix} this
	     */
	    set(rowIndex, columnIndex, value) {
	        this[rowIndex][columnIndex] = value;
	        return this;
	    }

	    /**
	     * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]
	     * @param {number} rowIndex - Index of the row
	     * @param {number} columnIndex - Index of the column
	     * @returns {number}
	     */
	    get(rowIndex, columnIndex) {
	        return this[rowIndex][columnIndex];
	    }

	    /**
	     * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of
	     * rows of the matrix, and colRep times the number of columns of the matrix
	     * @param {number} rowRep - Number of times the rows should be repeated
	     * @param {number} colRep - Number of times the columns should be re
	     * @example
	     * var matrix = new Matrix([[1,2]]);
	     * matrix.repeat(2); // [[1,2],[1,2]]
	     */
	    repeat(rowRep, colRep) {
	        rowRep = rowRep || 1;
	        colRep = colRep || 1;
	        var matrix = new Matrix(this.rows * rowRep, this.columns * colRep);
	        for (var i = 0; i < rowRep; i++) {
	            for (var j = 0; j < colRep; j++) {
	                matrix.setSubMatrix(this, this.rows * i, this.columns * j);
	            }
	        }
	        return matrix;
	    }

	    /**
	     * Fills the matrix with a given value. All elements will be set to this value.
	     * @param {number} value - New value
	     * @returns {Matrix} this
	     */
	    fill(value) {
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] = value;
	            }
	        }
	        return this;
	    }

	    /**
	     * Negates the matrix. All elements will be multiplied by (-1)
	     * @returns {Matrix} this
	     */
	    neg() {
	        return this.mulS(-1);
	    }

	    /**
	     * Returns a new array from the given row index
	     * @param {number} index - Row index
	     * @returns {Array}
	     */
	    getRow(index) {
	        checkRowIndex(this, index);
	        return [].concat(this[index]);
	    }

	    /**
	     * Returns a new row vector from the given row index
	     * @param {number} index - Row index
	     * @returns {Matrix}
	     */
	    getRowVector(index) {
	        return Matrix.rowVector(this.getRow(index));
	    }

	    /**
	     * Sets a row at the given index
	     * @param {number} index - Row index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    setRow(index, array) {
	        checkRowIndex(this, index);
	        array = checkRowVector(this, array, true);
	        this[index] = array;
	        return this;
	    }

	    /**
	     * Removes a row from the given index
	     * @param {number} index - Row index
	     * @returns {Matrix} this
	     */
	    removeRow(index) {
	        checkRowIndex(this, index);
	        if (this.rows === 1)
	            throw new RangeError('A matrix cannot have less than one row');
	        this.splice(index, 1);
	        this.rows -= 1;
	        return this;
	    }

	    /**
	     * Adds a row at the given index
	     * @param {number} [index = this.rows] - Row index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    addRow(index, array) {
	        if (array === undefined) {
	            array = index;
	            index = this.rows;
	        }
	        checkRowIndex(this, index, true);
	        array = checkRowVector(this, array, true);
	        this.splice(index, 0, array);
	        this.rows += 1;
	        return this;
	    }

	    /**
	     * Swaps two rows
	     * @param {number} row1 - First row index
	     * @param {number} row2 - Second row index
	     * @returns {Matrix} this
	     */
	    swapRows(row1, row2) {
	        checkRowIndex(this, row1);
	        checkRowIndex(this, row2);
	        var temp = this[row1];
	        this[row1] = this[row2];
	        this[row2] = temp;
	        return this;
	    }

	    /**
	     * Returns a new array from the given column index
	     * @param {number} index - Column index
	     * @returns {Array}
	     */
	    getColumn(index) {
	        checkColumnIndex(this, index);
	        var column = new Array(this.rows);
	        for (var i = 0; i < this.rows; i++) {
	            column[i] = this[i][index];
	        }
	        return column;
	    }

	    /**
	     * Returns a new column vector from the given column index
	     * @param {number} index - Column index
	     * @returns {Matrix}
	     */
	    getColumnVector(index) {
	        return Matrix.columnVector(this.getColumn(index));
	    }

	    /**
	     * Sets a column at the given index
	     * @param {number} index - Column index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    setColumn(index, array) {
	        checkColumnIndex(this, index);
	        array = checkColumnVector(this, array);
	        for (var i = 0; i < this.rows; i++) {
	            this[i][index] = array[i];
	        }
	        return this;
	    }

	    /**
	     * Removes a column from the given index
	     * @param {number} index - Column index
	     * @returns {Matrix} this
	     */
	    removeColumn(index) {
	        checkColumnIndex(this, index);
	        if (this.columns === 1)
	            throw new RangeError('A matrix cannot have less than one column');
	        for (var i = 0; i < this.rows; i++) {
	            this[i].splice(index, 1);
	        }
	        this.columns -= 1;
	        return this;
	    }

	    /**
	     * Adds a column at the given index
	     * @param {number} [index = this.columns] - Column index
	     * @param {Array|Matrix} array - Array or vector
	     * @returns {Matrix} this
	     */
	    addColumn(index, array) {
	        if (typeof array === 'undefined') {
	            array = index;
	            index = this.columns;
	        }
	        checkColumnIndex(this, index, true);
	        array = checkColumnVector(this, array);
	        for (var i = 0; i < this.rows; i++) {
	            this[i].splice(index, 0, array[i]);
	        }
	        this.columns += 1;
	        return this;
	    }

	    /**
	     * Swaps two columns
	     * @param {number} column1 - First column index
	     * @param {number} column2 - Second column index
	     * @returns {Matrix} this
	     */
	    swapColumns(column1, column2) {
	        checkColumnIndex(this, column1);
	        checkColumnIndex(this, column2);
	        var temp, row;
	        for (var i = 0; i < this.rows; i++) {
	            row = this[i];
	            temp = row[column1];
	            row[column1] = row[column2];
	            row[column2] = temp;
	        }
	        return this;
	    }

	    /**
	     * Adds the values of a vector to each row
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    addRowVector(vector) {
	        vector = checkRowVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] += vector[j];
	            }
	        }
	        return this;
	    }

	    /**
	     * Subtracts the values of a vector from each row
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    subRowVector(vector) {
	        vector = checkRowVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] -= vector[j];
	            }
	        }
	        return this;
	    }

	    /**
	     * Multiplies the values of a vector with each row
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    mulRowVector(vector) {
	        vector = checkRowVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] *= vector[j];
	            }
	        }
	        return this;
	    }

	    /**
	     * Divides the values of each row by those of a vector
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    divRowVector(vector) {
	        vector = checkRowVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] /= vector[j];
	            }
	        }
	        return this;
	    }

	    /**
	     * Adds the values of a vector to each column
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    addColumnVector(vector) {
	        vector = checkColumnVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] += vector[i];
	            }
	        }
	        return this;
	    }

	    /**
	     * Subtracts the values of a vector from each column
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    subColumnVector(vector) {
	        vector = checkColumnVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] -= vector[i];
	            }
	        }
	        return this;
	    }

	    /**
	     * Multiplies the values of a vector with each column
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    mulColumnVector(vector) {
	        vector = checkColumnVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] *= vector[i];
	            }
	        }
	        return this;
	    }

	    /**
	     * Divides the values of each column by those of a vector
	     * @param {Array|Matrix} vector - Array or vector
	     * @returns {Matrix} this
	     */
	    divColumnVector(vector) {
	        vector = checkColumnVector(this, vector);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                this[i][j] /= vector[i];
	            }
	        }
	        return this;
	    }

	    /**
	     * Multiplies the values of a row with a scalar
	     * @param {number} index - Row index
	     * @param {number} value
	     * @returns {Matrix} this
	     */
	    mulRow(index, value) {
	        checkRowIndex(this, index);
	        for (var i = 0; i < this.columns; i++) {
	            this[index][i] *= value;
	        }
	        return this;
	    }

	    /**
	     * Multiplies the values of a column with a scalar
	     * @param {number} index - Column index
	     * @param {number} value
	     * @returns {Matrix} this
	     */
	    mulColumn(index, value) {
	        checkColumnIndex(this, index);
	        for (var i = 0; i < this.rows; i++) {
	            this[i][index] *= value;
	        }
	    }

	    /**
	     * Returns the maximum value of the matrix
	     * @returns {number}
	     */
	    max() {
	        var v = this[0][0];
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                if (this[i][j] > v) {
	                    v = this[i][j];
	                }
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the index of the maximum value
	     * @returns {Array}
	     */
	    maxIndex() {
	        var v = this[0][0];
	        var idx = [0, 0];
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                if (this[i][j] > v) {
	                    v = this[i][j];
	                    idx[0] = i;
	                    idx[1] = j;
	                }
	            }
	        }
	        return idx;
	    }

	    /**
	     * Returns the minimum value of the matrix
	     * @returns {number}
	     */
	    min() {
	        var v = this[0][0];
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                if (this[i][j] < v) {
	                    v = this[i][j];
	                }
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the index of the minimum value
	     * @returns {Array}
	     */
	    minIndex() {
	        var v = this[0][0];
	        var idx = [0, 0];
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                if (this[i][j] < v) {
	                    v = this[i][j];
	                    idx[0] = i;
	                    idx[1] = j;
	                }
	            }
	        }
	        return idx;
	    }

	    /**
	     * Returns the maximum value of one row
	     * @param {number} row - Row index
	     * @returns {number}
	     */
	    maxRow(row) {
	        checkRowIndex(this, row);
	        var v = this[row][0];
	        for (var i = 1; i < this.columns; i++) {
	            if (this[row][i] > v) {
	                v = this[row][i];
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the index of the maximum value of one row
	     * @param {number} row - Row index
	     * @returns {Array}
	     */
	    maxRowIndex(row) {
	        checkRowIndex(this, row);
	        var v = this[row][0];
	        var idx = [row, 0];
	        for (var i = 1; i < this.columns; i++) {
	            if (this[row][i] > v) {
	                v = this[row][i];
	                idx[1] = i;
	            }
	        }
	        return idx;
	    }

	    /**
	     * Returns the minimum value of one row
	     * @param {number} row - Row index
	     * @returns {number}
	     */
	    minRow(row) {
	        checkRowIndex(this, row);
	        var v = this[row][0];
	        for (var i = 1; i < this.columns; i++) {
	            if (this[row][i] < v) {
	                v = this[row][i];
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the index of the maximum value of one row
	     * @param {number} row - Row index
	     * @returns {Array}
	     */
	    minRowIndex(row) {
	        checkRowIndex(this, row);
	        var v = this[row][0];
	        var idx = [row, 0];
	        for (var i = 1; i < this.columns; i++) {
	            if (this[row][i] < v) {
	                v = this[row][i];
	                idx[1] = i;
	            }
	        }
	        return idx;
	    }

	    /**
	     * Returns the maximum value of one column
	     * @param {number} column - Column index
	     * @returns {number}
	     */
	    maxColumn(column) {
	        checkColumnIndex(this, column);
	        var v = this[0][column];
	        for (var i = 1; i < this.rows; i++) {
	            if (this[i][column] > v) {
	                v = this[i][column];
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the index of the maximum value of one column
	     * @param {number} column - Column index
	     * @returns {Array}
	     */
	    maxColumnIndex(column) {
	        checkColumnIndex(this, column);
	        var v = this[0][column];
	        var idx = [0, column];
	        for (var i = 1; i < this.rows; i++) {
	            if (this[i][column] > v) {
	                v = this[i][column];
	                idx[0] = i;
	            }
	        }
	        return idx;
	    }

	    /**
	     * Returns the minimum value of one column
	     * @param {number} column - Column index
	     * @returns {number}
	     */
	    minColumn(column) {
	        checkColumnIndex(this, column);
	        var v = this[0][column];
	        for (var i = 1; i < this.rows; i++) {
	            if (this[i][column] < v) {
	                v = this[i][column];
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the index of the minimum value of one column
	     * @param {number} column - Column index
	     * @returns {Array}
	     */
	    minColumnIndex(column) {
	        checkColumnIndex(this, column);
	        var v = this[0][column];
	        var idx = [0, column];
	        for (var i = 1; i < this.rows; i++) {
	            if (this[i][column] < v) {
	                v = this[i][column];
	                idx[0] = i;
	            }
	        }
	        return idx;
	    }

	    /**
	     * Returns an array containing the diagonal values of the matrix
	     * @returns {Array}
	     */
	    diag() {
	        var min = Math.min(this.rows, this.columns);
	        var diag = new Array(min);
	        for (var i = 0; i < min; i++) {
	            diag[i] = this[i][i];
	        }
	        return diag;
	    }

	    /**
	     * Returns the sum of all elements of the matrix
	     * @returns {number}
	     */
	    sum() {
	        var v = 0;
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                v += this[i][j];
	            }
	        }
	        return v;
	    }

	    /**
	     * Returns the mean of all elements of the matrix
	     * @returns {number}
	     */
	    mean() {
	        return this.sum() / this.size;
	    }

	    /**
	     * Returns the product of all elements of the matrix
	     * @returns {number}
	     */
	    prod() {
	        var prod = 1;
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                prod *= this[i][j];
	            }
	        }
	        return prod;
	    }

	    /**
	     * Computes the cumulative sum of the matrix elements (in place, row by row)
	     * @returns {Matrix} this
	     */
	    cumulativeSum() {
	        var sum = 0;
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                sum += this[i][j];
	                this[i][j] = sum;
	            }
	        }
	        return this;
	    }

	    /**
	     * Computes the dot (scalar) product between the matrix and another
	     * @param {Matrix} vector2 vector
	     * @returns {number}
	     */
	    dot(vector2) {
	        if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();
	        var vector1 = this.to1DArray();
	        if (vector1.length !== vector2.length) {
	            throw new RangeError('vectors do not have the same size');
	        }
	        var dot = 0;
	        for (var i = 0; i < vector1.length; i++) {
	            dot += vector1[i] * vector2[i];
	        }
	        return dot;
	    }

	    /**
	     * Returns the matrix product between this and other
	     * @param {Matrix} other
	     * @returns {Matrix}
	     */
	    mmul(other) {
	        other = Matrix.checkMatrix(other);
	        if (this.columns !== other.rows)
	            console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');

	        var m = this.rows;
	        var n = this.columns;
	        var p = other.columns;

	        var result = new Matrix(m, p);

	        var Bcolj = new Array(n);
	        for (var j = 0; j < p; j++) {
	            for (var k = 0; k < n; k++)
	                Bcolj[k] = other[k][j];

	            for (var i = 0; i < m; i++) {
	                var Arowi = this[i];

	                var s = 0;
	                for (k = 0; k < n; k++)
	                    s += Arowi[k] * Bcolj[k];

	                result[i][j] = s;
	            }
	        }
	        return result;
	    }

	    /**
	     * Returns a row-by-row scaled matrix
	     * @param {Number} [min=0] - Minimum scaled value
	     * @param {Number} [max=1] - Maximum scaled value
	     * @returns {Matrix} - The scaled matrix
	     */
	    scaleRows(min, max) {
	        min = min === undefined ? 0 : min;
	        max = max === undefined ? 1 : max;
	        if (min >= max) {
	            throw new RangeError('min should be strictly smaller than max');
	        }
	        var newMatrix = Matrix.empty(this.rows, this.columns);
	        for (var i = 0; i < this.rows; i++) {
	            var scaled = arrayUtils.scale(this.getRow(i), {min, max});
	            newMatrix.setRow(i, scaled);
	        }
	        return newMatrix;
	    }

	    /**
	     * Returns a new column-by-column scaled matrix
	     * @param {Number} [min=0] - Minimum scaled value
	     * @param {Number} [max=1] - Maximum scaled value
	     * @returns {Matrix} - The new scaled matrix
	     * @example
	     * var matrix = new Matrix([[1,2],[-1,0]]);
	     * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]
	     */
	    scaleColumns(min, max) {
	        min = min === undefined ? 0 : min;
	        max = max === undefined ? 1 : max;
	        if (min >= max) {
	            throw new RangeError('min should be strictly smaller than max');
	        }
	        var newMatrix = Matrix.empty(this.rows, this.columns);
	        for (var i = 0; i < this.columns; i++) {
	            var scaled = arrayUtils.scale(this.getColumn(i), {
	                min: min,
	                max: max
	            });
	            newMatrix.setColumn(i, scaled);
	        }
	        return newMatrix;
	    }


	    /**
	     * Returns the Kronecker product (also known as tensor product) between this and other
	     * See https://en.wikipedia.org/wiki/Kronecker_product
	     * @param {Matrix} other
	     * @return {Matrix}
	     */
	    kroneckerProduct(other) {
	        other = Matrix.checkMatrix(other);

	        var m = this.rows;
	        var n = this.columns;
	        var p = other.rows;
	        var q = other.columns;

	        var result = new Matrix(m * p, n * q);
	        for (var i = 0; i < m; i++) {
	            for (var j = 0; j < n; j++) {
	                for (var k = 0; k < p; k++) {
	                    for (var l = 0; l < q; l++) {
	                        result[p * i + k][q * j + l] = this[i][j] * other[k][l];
	                    }
	                }
	            }
	        }
	        return result;
	    }

	    /**
	     * Transposes the matrix and returns a new one containing the result
	     * @returns {Matrix}
	     */
	    transpose() {
	        var result = new Matrix(this.columns, this.rows);
	        for (var i = 0; i < this.rows; i++) {
	            for (var j = 0; j < this.columns; j++) {
	                result[j][i] = this[i][j];
	            }
	        }
	        return result;
	    }

	    /**
	     * Sorts the rows (in place)
	     * @param {function} compareFunction - usual Array.prototype.sort comparison function
	     * @returns {Matrix} this
	     */
	    sortRows(compareFunction) {
	        if (compareFunction === undefined) compareFunction = compareNumbers;
	        for (var i = 0; i < this.rows; i++) {
	            this[i].sort(compareFunction);
	        }
	        return this;
	    }

	    /**
	     * Sorts the columns (in place)
	     * @param {function} compareFunction - usual Array.prototype.sort comparison function
	     * @returns {Matrix} this
	     */
	    sortColumns(compareFunction) {
	        if (compareFunction === undefined) compareFunction = compareNumbers;
	        for (var i = 0; i < this.columns; i++) {
	            this.setColumn(i, this.getColumn(i).sort(compareFunction));
	        }
	        return this;
	    }

	    /**
	     * Returns a subset of the matrix
	     * @param {number} startRow - First row index
	     * @param {number} endRow - Last row index
	     * @param {number} startColumn - First column index
	     * @param {number} endColumn - Last column index
	     * @returns {Matrix}
	     */
	    subMatrix(startRow, endRow, startColumn, endColumn) {
	        if ((startRow > endRow) || (startColumn > endColumn) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {
	            throw new RangeError('Argument out of range');
	        }
	        var newMatrix = new Matrix(endRow - startRow + 1, endColumn - startColumn + 1);
	        for (var i = startRow; i <= endRow; i++) {
	            for (var j = startColumn; j <= endColumn; j++) {
	                newMatrix[i - startRow][j - startColumn] = this[i][j];
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Returns a subset of the matrix based on an array of row indices
	     * @param {Array} indices - Array containing the row indices
	     * @param {number} [startColumn = 0] - First column index
	     * @param {number} [endColumn = this.columns-1] - Last column index
	     * @returns {Matrix}
	     */
	    subMatrixRow(indices, startColumn, endColumn) {
	        if (startColumn === undefined) startColumn = 0;
	        if (endColumn === undefined) endColumn = this.columns - 1;
	        if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {
	            throw new RangeError('Argument out of range');
	        }

	        var newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);
	        for (var i = 0; i < indices.length; i++) {
	            for (var j = startColumn; j <= endColumn; j++) {
	                if (indices[i] < 0 || indices[i] >= this.rows) {
	                    throw new RangeError('Row index out of range: ' + indices[i]);
	                }
	                newMatrix[i][j - startColumn] = this[indices[i]][j];
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Returns a subset of the matrix based on an array of column indices
	     * @param {Array} indices - Array containing the column indices
	     * @param {number} [startRow = 0] - First row index
	     * @param {number} [endRow = this.rows-1] - Last row index
	     * @returns {Matrix}
	     */
	    subMatrixColumn(indices, startRow, endRow) {
	        if (startRow === undefined) startRow = 0;
	        if (endRow === undefined) endRow = this.rows - 1;
	        if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {
	            throw new RangeError('Argument out of range');
	        }

	        var newMatrix = new Matrix(endRow - startRow + 1, indices.length);
	        for (var i = 0; i < indices.length; i++) {
	            for (var j = startRow; j <= endRow; j++) {
	                if (indices[i] < 0 || indices[i] >= this.columns) {
	                    throw new RangeError('Column index out of range: ' + indices[i]);
	                }
	                newMatrix[j - startRow][i] = this[j][indices[i]];
	            }
	        }
	        return newMatrix;
	    }

	    /**
	     * Set a part of the matrix to the given sub-matrix
	     * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.
	     * @param startRow - The index of the first row to set
	     * @param startColumn - The index of the first column to set
	     * @returns {Matrix}
	     */
	    setSubMatrix(matrix, startRow, startColumn) {
	        matrix = Matrix.checkMatrix(matrix);
	        var endRow = startRow + matrix.rows - 1;
	        var endColumn = startColumn + matrix.columns - 1;
	        if ((startRow > endRow) || (startColumn > endColumn) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {
	            throw new RangeError('Argument out of range');
	        }
	        for (var i = 0; i < matrix.rows; i++) {
	            for (var j = 0; j < matrix.columns; j++) {
	                this[startRow + i][startColumn + j] = matrix[i][j];
	            }
	        }
	        return this;
	    }

	    /**
	     * Returns the trace of the matrix (sum of the diagonal elements)
	     * @returns {number}
	     */
	    trace() {
	        var min = Math.min(this.rows, this.columns);
	        var trace = 0;
	        for (var i = 0; i < min; i++) {
	            trace += this[i][i];
	        }
	        return trace;
	    }
	}

	Matrix.prototype.klass = 'Matrix';

	module.exports = Matrix;

	/**
	 * @private
	 * Check that a row index is not out of bounds
	 * @param {Matrix} matrix
	 * @param {number} index
	 * @param {boolean} [outer]
	 */
	function checkRowIndex(matrix, index, outer) {
	    var max = outer ? matrix.rows : matrix.rows - 1;
	    if (index < 0 || index > max)
	        throw new RangeError('Row index out of range');
	}

	/**
	 * @private
	 * Check that the provided vector is an array with the right length
	 * @param {Matrix} matrix
	 * @param {Array|Matrix} vector
	 * @param {boolean} copy
	 * @returns {Array}
	 * @throws {RangeError}
	 */
	function checkRowVector(matrix, vector, copy) {
	    if (Matrix.isMatrix(vector)) {
	        vector = vector.to1DArray();
	    } else if (copy) {
	        vector = [].concat(vector);
	    }
	    if (vector.length !== matrix.columns)
	        throw new RangeError('vector size must be the same as the number of columns');
	    return vector;
	}

	/**
	 * @private
	 * Check that the provided vector is an array with the right length
	 * @param {Matrix} matrix
	 * @param {Array|Matrix} vector
	 * @param {boolean} copy
	 * @returns {Array}
	 * @throws {RangeError}
	 */
	function checkColumnVector(matrix, vector, copy) {
	    if (Matrix.isMatrix(vector)) {
	        vector = vector.to1DArray();
	    } else if (copy) {
	        vector = [].concat(vector);
	    }
	    if (vector.length !== matrix.rows)
	        throw new RangeError('vector size must be the same as the number of rows');
	    return vector;
	}

	/**
	 * @private
	 * Check that a column index is not out of bounds
	 * @param {Matrix} matrix
	 * @param {number} index
	 * @param {boolean} [outer]
	 */
	function checkColumnIndex(matrix, index, outer) {
	    var max = outer ? matrix.columns : matrix.columns - 1;
	    if (index < 0 || index > max)
	        throw new RangeError('Column index out of range');
	}

	/**
	 * @private
	 * Check that two matrices have the same dimensions
	 * @param {Matrix} matrix
	 * @param {Matrix} otherMatrix
	 */
	function checkDimensions(matrix, otherMatrix) {
	    if (matrix.rows !== otherMatrix.length ||
	        matrix.columns !== otherMatrix[0].length) {
	        throw new RangeError('Matrices dimensions must be equal');
	    }
	}

	function compareNumbers(a, b) {
	    return a - b;
	}

	/*
	 Synonyms
	 */

	Matrix.random = Matrix.rand;
	Matrix.diagonal = Matrix.diag;
	Matrix.prototype.diagonal = Matrix.prototype.diag;
	Matrix.identity = Matrix.eye;
	Matrix.prototype.negate = Matrix.prototype.neg;
	Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;

	/*
	 Add dynamically instance and static methods for mathematical operations
	 */

	var inplaceOperator = `
	(function %name%(value) {
	    if (typeof value === 'number') return this.%name%S(value);
	    return this.%name%M(value);
	})
	`;

	var inplaceOperatorScalar = `
	(function %name%S(value) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this[i][j] = this[i][j] %op% value;
	        }
	    }
	    return this;
	})
	`;

	var inplaceOperatorMatrix = `
	(function %name%M(matrix) {
	    checkDimensions(this, matrix);
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this[i][j] = this[i][j] %op% matrix[i][j];
	        }
	    }
	    return this;
	})
	`;

	var staticOperator = `
	(function %name%(matrix, value) {
	    var newMatrix = new Matrix(matrix);
	    return newMatrix.%name%(value);
	})
	`;

	var inplaceMethod = `
	(function %name%() {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this[i][j] = %method%(this[i][j]);
	        }
	    }
	    return this;
	})
	`;

	var staticMethod = `
	(function %name%(matrix) {
	    var newMatrix = new Matrix(matrix);
	    return newMatrix.%name%();
	})
	`;

	var inplaceMethodWithArgs = `
	(function %name%(%args%) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this[i][j] = %method%(this[i][j], %args%);
	        }
	    }
	    return this;
	})
	`;

	var staticMethodWithArgs = `
	(function %name%(matrix, %args%) {
	    var newMatrix = new Matrix(matrix);
	    return newMatrix.%name%(%args%);
	})
	`;

	var inplaceMethodWithOneArgScalar = `
	(function %name%S(%args%) {
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this[i][j] = %method%(this[i][j], %args%);
	        }
	    }
	    return this;
	})
	`;
	var inplaceMethodWithOneArgMatrix = `
	(function %name%M(%args%) {
	    checkDimensions(this, %args%);
	    for (var i = 0; i < this.rows; i++) {
	        for (var j = 0; j < this.columns; j++) {
	            this[i][j] = %method%(this[i][j], %args%[i][j]);
	        }
	    }
	    return this;
	})
	`;

	var inplaceMethodWithOneArg = `
	(function %name%(value) {
	    if (typeof value === 'number') return this.%name%S(value);
	    return this.%name%M(value);
	})
	`;

	var staticMethodWithOneArg = staticMethodWithArgs;

	var operators = [
	    // Arithmetic operators
	    ['+', 'add'],
	    ['-', 'sub', 'subtract'],
	    ['*', 'mul', 'multiply'],
	    ['/', 'div', 'divide'],
	    ['%', 'mod', 'modulus'],
	    // Bitwise operators
	    ['&', 'and'],
	    ['|', 'or'],
	    ['^', 'xor'],
	    ['<<', 'leftShift'],
	    ['>>', 'signPropagatingRightShift'],
	    ['>>>', 'rightShift', 'zeroFillRightShift']
	];

	for (var operator of operators) {
	    var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));
	    var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));
	    var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));
	    var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));
	    for (var i = 1; i < operator.length; i++) {
	        Matrix.prototype[operator[i]] = inplaceOp;
	        Matrix.prototype[operator[i] + 'S'] = inplaceOpS;
	        Matrix.prototype[operator[i] + 'M'] = inplaceOpM;
	        Matrix[operator[i]] = staticOp;
	    }
	}

	var methods = [
	    ['~', 'not']
	];

	[
	    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',
	    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',
	    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'
	].forEach(function (mathMethod) {
	    methods.push(['Math.' + mathMethod, mathMethod]);
	});

	for (var method of methods) {
	    var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));
	    var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));
	    for (var i = 1; i < method.length; i++) {
	        Matrix.prototype[method[i]] = inplaceMeth;
	        Matrix[method[i]] = staticMeth;
	    }
	}

	var methodsWithArgs = [
	    ['Math.pow', 1, 'pow']
	];

	for (var methodWithArg of methodsWithArgs) {
	    var args = 'arg0';
	    for (var i = 1; i < methodWithArg[1]; i++) {
	        args += `, arg${i}`;
	    }
	    if (methodWithArg[1] !== 1) {
	        var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {
	            name: methodWithArg[2],
	            method: methodWithArg[0],
	            args: args
	        }));
	        var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));
	        for (var i = 2; i < methodWithArg.length; i++) {
	            Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;
	            Matrix[methodWithArg[i]] = staticMethWithArgs;
	        }
	    } else {
	        var tmplVar = {
	            name: methodWithArg[2],
	            args: args,
	            method: methodWithArg[0]
	        };
	        console.log(tmplVar);
	        let inplaceMethod = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));
	        let inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));
	        let inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));
	        console.log(fillTemplateFunction(staticMethodWithOneArg, tmplVar));
	        let staticMethod = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));
	        for (var i = 2; i < methodWithArg.length; i++) {
	            Matrix.prototype[methodWithArg[i]] = inplaceMethod;
	            Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;
	            Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;
	            Matrix[methodWithArg[i]] = staticMethod;
	        }
	    }
	}

	function fillTemplateFunction(template, values) {
	    for (var i in values) {
	        template = template.replace(new RegExp('%' + i + '%', 'g'), values[i]);
	    }
	    return template;
	}


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = exports = __webpack_require__(77);
	exports.getEquallySpacedData = __webpack_require__(78).getEquallySpacedData;
	exports.SNV = __webpack_require__(79).SNV;
	exports.binarySearch = __webpack_require__(80);


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Stat = __webpack_require__(28).array;
	/**
	 * Function that returns an array of points given 1D array as follows:
	 *
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * And receive the number of dimensions of each point.
	 * @param array
	 * @param dimensions
	 * @returns {Array} - Array of points.
	 */
	function coordArrayToPoints(array, dimensions) {
	    if(array.length % dimensions !== 0) {
	        throw new RangeError('Dimensions number must be accordance with the size of the array.');
	    }

	    var length = array.length / dimensions;
	    var pointsArr = new Array(length);

	    var k = 0;
	    for(var i = 0; i < array.length; i += dimensions) {
	        var point = new Array(dimensions);
	        for(var j = 0; j < dimensions; ++j) {
	            point[j] = array[i + j];
	        }

	        pointsArr[k] = point;
	        k++;
	    }

	    return pointsArr;
	}


	/**
	 * Function that given an array as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * Returns an array as follows:
	 * [[x1, x2, ..], [y1, y2, ..], [ .. ]]
	 *
	 * And receives the number of dimensions of each coordinate.
	 * @param array
	 * @param dimensions
	 * @returns {Array} - Matrix of coordinates
	 */
	function coordArrayToCoordMatrix(array, dimensions) {
	    if(array.length % dimensions !== 0) {
	        throw new RangeError('Dimensions number must be accordance with the size of the array.');
	    }

	    var coordinatesArray = new Array(dimensions);
	    var points = array.length / dimensions;
	    for (var i = 0; i < coordinatesArray.length; i++) {
	        coordinatesArray[i] = new Array(points);
	    }

	    for(i = 0; i < array.length; i += dimensions) {
	        for(var j = 0; j < dimensions; ++j) {
	            var currentPoint = Math.floor(i / dimensions);
	            coordinatesArray[j][currentPoint] = array[i + j];
	        }
	    }

	    return coordinatesArray;
	}

	/**
	 * Function that receives a coordinate matrix as follows:
	 * [[x1, x2, ..], [y1, y2, ..], [ .. ]]
	 *
	 * Returns an array of coordinates as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * @param coordMatrix
	 * @returns {Array}
	 */
	function coordMatrixToCoordArray(coordMatrix) {
	    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);
	    var k = 0;
	    for(var i = 0; i < coordMatrix[0].length; ++i) {
	        for(var j = 0; j < coordMatrix.length; ++j) {
	            coodinatesArray[k] = coordMatrix[j][i];
	            ++k;
	        }
	    }

	    return coodinatesArray;
	}

	/**
	 * Tranpose a matrix, this method is for coordMatrixToPoints and
	 * pointsToCoordMatrix, that because only transposing the matrix
	 * you can change your representation.
	 *
	 * @param matrix
	 * @returns {Array}
	 */
	function transpose(matrix) {
	    var resultMatrix = new Array(matrix[0].length);
	    for(var i = 0; i < resultMatrix.length; ++i) {
	        resultMatrix[i] = new Array(matrix.length);
	    }

	    for (i = 0; i < matrix.length; ++i) {
	        for(var j = 0; j < matrix[0].length; ++j) {
	            resultMatrix[j][i] = matrix[i][j];
	        }
	    }

	    return resultMatrix;
	}

	/**
	 * Function that transform an array of points into a coordinates array
	 * as follows:
	 * [x1, y1, .. , x2, y2, ..]
	 *
	 * @param points
	 * @returns {Array}
	 */
	function pointsToCoordArray(points) {
	    var coodinatesArray = new Array(points.length * points[0].length);
	    var k = 0;
	    for(var i = 0; i < points.length; ++i) {
	        for(var j = 0; j < points[0].length; ++j) {
	            coodinatesArray[k] = points[i][j];
	            ++k;
	        }
	    }

	    return coodinatesArray;
	}

	/**
	 * Apply the dot product between the smaller vector and a subsets of the
	 * largest one.
	 *
	 * @param firstVector
	 * @param secondVector
	 * @returns {Array} each dot product of size of the difference between the
	 *                  larger and the smallest one.
	 */
	function applyDotProduct(firstVector, secondVector) {
	    var largestVector, smallestVector;
	    if(firstVector.length <= secondVector.length) {
	        smallestVector = firstVector;
	        largestVector = secondVector;
	    } else {
	        smallestVector = secondVector;
	        largestVector = firstVector;
	    }

	    var difference = largestVector.length - smallestVector.length + 1;
	    var dotProductApplied = new Array(difference);

	    for (var i = 0; i < difference; ++i) {
	        var sum = 0;
	        for (var j = 0; j < smallestVector.length; ++j) {
	            sum += smallestVector[j] * largestVector[i + j];
	        }
	        dotProductApplied[i] = sum;
	    }

	    return dotProductApplied;
	}
	/**
	 * To scale the input array between the specified min and max values. The operation is performed inplace
	 * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling
	 * will multiply the input array by min/min(input) or max/max(input)
	 * @param input
	 * @param options
	 * @returns {*}
	 */
	function scale(input, options){
	    var y;
	    if(options.inPlace){
	        y = input;
	    }
	    else{
	        y = new Array(input.length);
	    }
	    const max = options.max;
	    const min = options.min;
	    if(typeof max === "number"){
	        if(typeof min === "number"){
	            var minMax = Stat.minMax(input);
	            var factor = (max - min)/(minMax.max-minMax.min);
	            for(var i=0;i< y.length;i++){
	                y[i]=(input[i]-minMax.min)*factor+min;
	            }
	        }
	        else{
	            var currentMin = Stat.max(input);
	            var factor = max/currentMin;
	            for(var i=0;i< y.length;i++){
	                y[i] = input[i]*factor;
	            }
	        }
	    }
	    else{
	        if(typeof min === "number"){
	            var currentMin = Stat.min(input);
	            var factor = min/currentMin;
	            for(var i=0;i< y.length;i++){
	                y[i] = input[i]*factor;
	            }
	        }
	    }
	    return y;
	}

	module.exports = {
	    coordArrayToPoints: coordArrayToPoints,
	    coordArrayToCoordMatrix: coordArrayToCoordMatrix,
	    coordMatrixToCoordArray: coordMatrixToCoordArray,
	    coordMatrixToPoints: transpose,
	    pointsToCoordArray: pointsToCoordArray,
	    pointsToCoordMatrix: transpose,
	    applyDotProduct: applyDotProduct,
	    scale:scale
	};



/***/ },
/* 78 */
/***/ function(module, exports) {

	'use strict';

	/**
	 *
	 * Function that returns a Number array of equally spaced numberOfPoints
	 * containing a representation of intensities of the spectra arguments x
	 * and y.
	 *
	 * The options parameter contains an object in the following form:
	 * from: starting point
	 * to: last point
	 * numberOfPoints: number of points between from and to
	 * variant: "slot" or "smooth" - smooth is the default option
	 *
	 * The slot variant consist that each point in the new array is calculated
	 * averaging the existing points between the slot that belongs to the current
	 * value. The smooth variant is the same but takes the integral of the range
	 * of the slot and divide by the step size between two points in the new array.
	 *
	 * @param x - sorted increasing x values
	 * @param y
	 * @param options
	 * @returns {Array} new array with the equally spaced data.
	 *
	 */
	function getEquallySpacedData(x, y, options) {
	    if (x.length>1 && x[0]>x[1]) {
	        x=x.slice().reverse();
	        y=y.slice().reverse();
	    }

	    var xLength = x.length;
	    if(xLength !== y.length)
	        throw new RangeError("the x and y vector doesn't have the same size.");

	    if (options === undefined) options = {};

	    var from = options.from === undefined ? x[0] : options.from
	    if (isNaN(from) || !isFinite(from)) {
	        throw new RangeError("'From' value must be a number");
	    }
	    var to = options.to === undefined ? x[x.length - 1] : options.to;
	    if (isNaN(to) || !isFinite(to)) {
	        throw new RangeError("'To' value must be a number");
	    }

	    var reverse = from > to;
	    if(reverse) {
	        var temp = from;
	        from = to;
	        to = temp;
	    }

	    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;
	    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {
	        throw new RangeError("'Number of points' value must be a number");
	    }
	    if(numberOfPoints < 1)
	        throw new RangeError("the number of point must be higher than 1");

	    var algorithm = options.variant === "slot" ? "slot" : "smooth"; // default value: smooth

	    var output = algorithm === "slot" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);

	    return reverse ? output.reverse() : output;
	}

	/**
	 * function that retrieves the getEquallySpacedData with the variant "smooth"
	 *
	 * @param x
	 * @param y
	 * @param from - Initial point
	 * @param to - Final point
	 * @param numberOfPoints
	 * @returns {Array} - Array of y's equally spaced with the variant "smooth"
	 */
	function getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {
	    var xLength = x.length;

	    var step = (to - from) / (numberOfPoints - 1);
	    var halfStep = step / 2;

	    var start = from - halfStep;
	    var output = new Array(numberOfPoints);

	    var initialOriginalStep = x[1] - x[0];
	    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];

	    // Init main variables
	    var min = start;
	    var max = start + step;

	    var previousX = Number.MIN_VALUE;
	    var previousY = 0;
	    var nextX = x[0] - initialOriginalStep;
	    var nextY = 0;

	    var currentValue = 0;
	    var slope = 0;
	    var intercept = 0;
	    var sumAtMin = 0;
	    var sumAtMax = 0;

	    var i = 0; // index of input
	    var j = 0; // index of output

	    function getSlope(x0, y0, x1, y1) {
	        return (y1 - y0) / (x1 - x0);
	    }

	    main: while(true) {
	        while (nextX - max >= 0) {
	            // no overlap with original point, just consume current value
	            var add = integral(0, max - previousX, slope, previousY);
	            sumAtMax = currentValue + add;

	            output[j] = (sumAtMax - sumAtMin) / step;
	            j++;

	            if (j === numberOfPoints)
	                break main;

	            min = max;
	            max += step;
	            sumAtMin = sumAtMax;
	        }

	        if(previousX <= min && min <= nextX) {
	            add = integral(0, min - previousX, slope, previousY);
	            sumAtMin = currentValue + add;
	        }

	        currentValue += integral(previousX, nextX, slope, intercept);

	        previousX = nextX;
	        previousY = nextY;

	        if (i < xLength) {
	            nextX = x[i];
	            nextY = y[i];
	            i++;
	        } else if (i === xLength) {
	            nextX += lastOriginalStep;
	            nextY = 0;
	        }
	        // updating parameters
	        slope = getSlope(previousX, previousY, nextX, nextY);
	        intercept = -slope*previousX + previousY;
	    }

	    return output;
	}

	/**
	 * function that retrieves the getEquallySpacedData with the variant "slot"
	 *
	 * @param x
	 * @param y
	 * @param from - Initial point
	 * @param to - Final point
	 * @param numberOfPoints
	 * @returns {Array} - Array of y's equally spaced with the variant "slot"
	 */
	function getEquallySpacedSlot(x, y, from, to, numberOfPoints) {
	    var xLength = x.length;

	    var step = (to - from) / (numberOfPoints - 1);
	    var halfStep = step / 2;
	    var lastStep = x[x.length - 1] - x[x.length - 2];

	    var start = from - halfStep;
	    var output = new Array(numberOfPoints);

	    // Init main variables
	    var min = start;
	    var max = start + step;

	    var previousX = -Number.MAX_VALUE;
	    var previousY = 0;
	    var nextX = x[0];
	    var nextY = y[0];
	    var frontOutsideSpectra = 0;
	    var backOutsideSpectra = true;

	    var currentValue = 0;

	    // for slot algorithm
	    var currentPoints = 0;

	    var i = 1; // index of input
	    var j = 0; // index of output

	    main: while(true) {
	        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));
	        while (previousX - max > 0) {
	            // no overlap with original point, just consume current value
	            if(backOutsideSpectra) {
	                currentPoints++;
	                backOutsideSpectra = false;
	            }

	            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;
	            j++;

	            if (j === numberOfPoints)
	                break main;

	            min = max;
	            max += step;
	            currentValue = 0;
	            currentPoints = 0;
	        }

	        if(previousX > min) {
	            currentValue += previousY;
	            currentPoints++;
	        }

	        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)
	            currentPoints--;

	        previousX = nextX;
	        previousY = nextY;

	        if (i < xLength) {
	            nextX = x[i];
	            nextY = y[i];
	            i++;
	        } else {
	            nextX += lastStep;
	            nextY = 0;
	            frontOutsideSpectra++;
	        }
	    }

	    return output;
	}
	/**
	 * Function that calculates the integral of the line between two
	 * x-coordinates, given the slope and intercept of the line.
	 *
	 * @param x0
	 * @param x1
	 * @param slope
	 * @param intercept
	 * @returns {number} integral value.
	 */
	function integral(x0, x1, slope, intercept) {
	    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);
	}

	exports.getEquallySpacedData = getEquallySpacedData;
	exports.integral = integral;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.SNV = SNV;
	var Stat = __webpack_require__(28).array;

	/**
	 * Function that applies the standard normal variate (SNV) to an array of values.
	 *
	 * @param data - Array of values.
	 * @returns {Array} - applied the SNV.
	 */
	function SNV(data) {
	    var mean = Stat.mean(data);
	    var std = Stat.standardDeviation(data);
	    var result = data.slice();
	    for (var i = 0; i < data.length; i++) {
	        result[i] = (result[i] - mean) / std;
	    }
	    return result;
	}


/***/ },
/* 80 */
/***/ function(module, exports) {

	/**
	 * Performs a binary search of value in array
	 * @param {number[]} array - Array in which value will be searched. It must be sorted.
	 * @param {number} value - Value to search in array
	 * @return {number} If value is found, returns its index in array. Otherwise, returns a negative number indicating where the value should be inserted: -(index + 1)
	 */
	function binarySearch(array, value, options) {
	    options = options || {};
	    var low = options.from || 0;
	    var high = options.to || array.length - 1;

	    while (low <= high) {
	        var mid = (low + high) >>> 1;
	        var midValue = array[mid];
	        if (midValue < value) {
	            low = mid + 1;
	        } else if (midValue > value) {
	            high = mid - 1;
	        } else {
	            return mid;
	        }
	    }

	    return -(low + 1);
	}

	module.exports = binarySearch;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(75);

	var SingularValueDecomposition = __webpack_require__(82);
	var EigenvalueDecomposition = __webpack_require__(84);
	var LuDecomposition = __webpack_require__(85);
	var QrDecomposition = __webpack_require__(86);
	var CholeskyDecomposition = __webpack_require__(87);

	function inverse(matrix) {
	    matrix = Matrix.checkMatrix(matrix);
	    return solve(matrix, Matrix.eye(matrix.rows));
	}

	Matrix.inverse = Matrix.inv = inverse;
	Matrix.prototype.inverse = Matrix.prototype.inv = function () {
	    return inverse(this);
	};

	function solve(leftHandSide, rightHandSide) {
	    leftHandSide = Matrix.checkMatrix(leftHandSide);
	    rightHandSide = Matrix.checkMatrix(rightHandSide);
	    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);
	}

	Matrix.solve = solve;
	Matrix.prototype.solve = function (other) {
	    return solve(this, other);
	};

	module.exports = {
	    SingularValueDecomposition: SingularValueDecomposition,
	    SVD: SingularValueDecomposition,
	    EigenvalueDecomposition: EigenvalueDecomposition,
	    EVD: EigenvalueDecomposition,
	    LuDecomposition: LuDecomposition,
	    LU: LuDecomposition,
	    QrDecomposition: QrDecomposition,
	    QR: QrDecomposition,
	    CholeskyDecomposition: CholeskyDecomposition,
	    CHO: CholeskyDecomposition,
	    inverse: inverse,
	    solve: solve
	};


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(75);
	var util = __webpack_require__(83);
	var hypotenuse = util.hypotenuse;
	var getFilled2DArray = util.getFilled2DArray;

	// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs
	function SingularValueDecomposition(value, options) {
	    if (!(this instanceof SingularValueDecomposition)) {
	        return new SingularValueDecomposition(value, options);
	    }
	    value = Matrix.checkMatrix(value);

	    options = options || {};

	    var m = value.rows,
	        n = value.columns,
	        nu = Math.min(m, n);

	    var wantu = true, wantv = true;
	    if (options.computeLeftSingularVectors === false)
	        wantu = false;
	    if (options.computeRightSingularVectors === false)
	        wantv = false;
	    var autoTranspose = options.autoTranspose === true;

	    var swapped = false;
	    var a;
	    if (m < n) {
	        if (!autoTranspose) {
	            a = value.clone();
	            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');
	        } else {
	            a = value.transpose();
	            m = a.rows;
	            n = a.columns;
	            swapped = true;
	            var aux = wantu;
	            wantu = wantv;
	            wantv = aux;
	        }
	    } else {
	        a = value.clone();
	    }

	    var s = new Array(Math.min(m + 1, n)),
	        U = getFilled2DArray(m, nu, 0),
	        V = getFilled2DArray(n, n, 0),
	        e = new Array(n),
	        work = new Array(m);

	    var nct = Math.min(m - 1, n);
	    var nrt = Math.max(0, Math.min(n - 2, m));

	    var i, j, k, p, t, ks, f, cs, sn, max, kase,
	        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;

	    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {
	        if (k < nct) {
	            s[k] = 0;
	            for (i = k; i < m; i++) {
	                s[k] = hypotenuse(s[k], a[i][k]);
	            }
	            if (s[k] !== 0) {
	                if (a[k][k] < 0) {
	                    s[k] = -s[k];
	                }
	                for (i = k; i < m; i++) {
	                    a[i][k] /= s[k];
	                }
	                a[k][k] += 1;
	            }
	            s[k] = -s[k];
	        }

	        for (j = k + 1; j < n; j++) {
	            if ((k < nct) && (s[k] !== 0)) {
	                t = 0;
	                for (i = k; i < m; i++) {
	                    t += a[i][k] * a[i][j];
	                }
	                t = -t / a[k][k];
	                for (i = k; i < m; i++) {
	                    a[i][j] += t * a[i][k];
	                }
	            }
	            e[j] = a[k][j];
	        }

	        if (wantu && (k < nct)) {
	            for (i = k; i < m; i++) {
	                U[i][k] = a[i][k];
	            }
	        }

	        if (k < nrt) {
	            e[k] = 0;
	            for (i = k + 1; i < n; i++) {
	                e[k] = hypotenuse(e[k], e[i]);
	            }
	            if (e[k] !== 0) {
	                if (e[k + 1] < 0)
	                    e[k] = -e[k];
	                for (i = k + 1; i < n; i++) {
	                    e[i] /= e[k];
	                }
	                e[k + 1] += 1;
	            }
	            e[k] = -e[k];
	            if ((k + 1 < m) && (e[k] !== 0)) {
	                for (i = k + 1; i < m; i++) {
	                    work[i] = 0;
	                }
	                for (j = k + 1; j < n; j++) {
	                    for (i = k + 1; i < m; i++) {
	                        work[i] += e[j] * a[i][j];
	                    }
	                }
	                for (j = k + 1; j < n; j++) {
	                    t = -e[j] / e[k + 1];
	                    for (i = k + 1; i < m; i++) {
	                        a[i][j] += t * work[i];
	                    }
	                }
	            }
	            if (wantv) {
	                for (i = k + 1; i < n; i++) {
	                    V[i][k] = e[i];
	                }
	            }
	        }
	    }

	    p = Math.min(n, m + 1);
	    if (nct < n) {
	        s[nct] = a[nct][nct];
	    }
	    if (m < p) {
	        s[p - 1] = 0;
	    }
	    if (nrt + 1 < p) {
	        e[nrt] = a[nrt][p - 1];
	    }
	    e[p - 1] = 0;

	    if (wantu) {
	        for (j = nct; j < nu; j++) {
	            for (i = 0; i < m; i++) {
	                U[i][j] = 0;
	            }
	            U[j][j] = 1;
	        }
	        for (k = nct - 1; k >= 0; k--) {
	            if (s[k] !== 0) {
	                for (j = k + 1; j < nu; j++) {
	                    t = 0;
	                    for (i = k; i < m; i++) {
	                        t += U[i][k] * U[i][j];
	                    }
	                    t = -t / U[k][k];
	                    for (i = k; i < m; i++) {
	                        U[i][j] += t * U[i][k];
	                    }
	                }
	                for (i = k; i < m; i++) {
	                    U[i][k] = -U[i][k];
	                }
	                U[k][k] = 1 + U[k][k];
	                for (i = 0; i < k - 1; i++) {
	                    U[i][k] = 0;
	                }
	            } else {
	                for (i = 0; i < m; i++) {
	                    U[i][k] = 0;
	                }
	                U[k][k] = 1;
	            }
	        }
	    }

	    if (wantv) {
	        for (k = n - 1; k >= 0; k--) {
	            if ((k < nrt) && (e[k] !== 0)) {
	                for (j = k + 1; j < n; j++) {
	                    t = 0;
	                    for (i = k + 1; i < n; i++) {
	                        t += V[i][k] * V[i][j];
	                    }
	                    t = -t / V[k + 1][k];
	                    for (i = k + 1; i < n; i++) {
	                        V[i][j] += t * V[i][k];
	                    }
	                }
	            }
	            for (i = 0; i < n; i++) {
	                V[i][k] = 0;
	            }
	            V[k][k] = 1;
	        }
	    }

	    var pp = p - 1,
	        iter = 0,
	        eps = Math.pow(2, -52);
	    while (p > 0) {
	        for (k = p - 2; k >= -1; k--) {
	            if (k === -1) {
	                break;
	            }
	            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {
	                e[k] = 0;
	                break;
	            }
	        }
	        if (k === p - 2) {
	            kase = 4;
	        } else {
	            for (ks = p - 1; ks >= k; ks--) {
	                if (ks === k) {
	                    break;
	                }
	                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);
	                if (Math.abs(s[ks]) <= eps * t) {
	                    s[ks] = 0;
	                    break;
	                }
	            }
	            if (ks === k) {
	                kase = 3;
	            } else if (ks === p - 1) {
	                kase = 1;
	            } else {
	                kase = 2;
	                k = ks;
	            }
	        }

	        k++;

	        switch (kase) {
	            case 1: {
	                f = e[p - 2];
	                e[p - 2] = 0;
	                for (j = p - 2; j >= k; j--) {
	                    t = hypotenuse(s[j], f);
	                    cs = s[j] / t;
	                    sn = f / t;
	                    s[j] = t;
	                    if (j !== k) {
	                        f = -sn * e[j - 1];
	                        e[j - 1] = cs * e[j - 1];
	                    }
	                    if (wantv) {
	                        for (i = 0; i < n; i++) {
	                            t = cs * V[i][j] + sn * V[i][p - 1];
	                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];
	                            V[i][j] = t;
	                        }
	                    }
	                }
	                break;
	            }
	            case 2 : {
	                f = e[k - 1];
	                e[k - 1] = 0;
	                for (j = k; j < p; j++) {
	                    t = hypotenuse(s[j], f);
	                    cs = s[j] / t;
	                    sn = f / t;
	                    s[j] = t;
	                    f = -sn * e[j];
	                    e[j] = cs * e[j];
	                    if (wantu) {
	                        for (i = 0; i < m; i++) {
	                            t = cs * U[i][j] + sn * U[i][k - 1];
	                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];
	                            U[i][j] = t;
	                        }
	                    }
	                }
	                break;
	            }
	            case 3 : {
	                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));
	                sp = s[p - 1] / scale;
	                spm1 = s[p - 2] / scale;
	                epm1 = e[p - 2] / scale;
	                sk = s[k] / scale;
	                ek = e[k] / scale;
	                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;
	                c = (sp * epm1) * (sp * epm1);
	                shift = 0;
	                if ((b !== 0) || (c !== 0)) {
	                    shift = Math.sqrt(b * b + c);
	                    if (b < 0) {
	                        shift = -shift;
	                    }
	                    shift = c / (b + shift);
	                }
	                f = (sk + sp) * (sk - sp) + shift;
	                g = sk * ek;
	                for (j = k; j < p - 1; j++) {
	                    t = hypotenuse(f, g);
	                    cs = f / t;
	                    sn = g / t;
	                    if (j !== k) {
	                        e[j - 1] = t;
	                    }
	                    f = cs * s[j] + sn * e[j];
	                    e[j] = cs * e[j] - sn * s[j];
	                    g = sn * s[j + 1];
	                    s[j + 1] = cs * s[j + 1];
	                    if (wantv) {
	                        for (i = 0; i < n; i++) {
	                            t = cs * V[i][j] + sn * V[i][j + 1];
	                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];
	                            V[i][j] = t;
	                        }
	                    }
	                    t = hypotenuse(f, g);
	                    cs = f / t;
	                    sn = g / t;
	                    s[j] = t;
	                    f = cs * e[j] + sn * s[j + 1];
	                    s[j + 1] = -sn * e[j] + cs * s[j + 1];
	                    g = sn * e[j + 1];
	                    e[j + 1] = cs * e[j + 1];
	                    if (wantu && (j < m - 1)) {
	                        for (i = 0; i < m; i++) {
	                            t = cs * U[i][j] + sn * U[i][j + 1];
	                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];
	                            U[i][j] = t;
	                        }
	                    }
	                }
	                e[p - 2] = f;
	                iter = iter + 1;
	                break;
	            }
	            case 4: {
	                if (s[k] <= 0) {
	                    s[k] = (s[k] < 0 ? -s[k] : 0);
	                    if (wantv) {
	                        for (i = 0; i <= pp; i++) {
	                            V[i][k] = -V[i][k];
	                        }
	                    }
	                }
	                while (k < pp) {
	                    if (s[k] >= s[k + 1]) {
	                        break;
	                    }
	                    t = s[k];
	                    s[k] = s[k + 1];
	                    s[k + 1] = t;
	                    if (wantv && (k < n - 1)) {
	                        for (i = 0; i < n; i++) {
	                            t = V[i][k + 1];
	                            V[i][k + 1] = V[i][k];
	                            V[i][k] = t;
	                        }
	                    }
	                    if (wantu && (k < m - 1)) {
	                        for (i = 0; i < m; i++) {
	                            t = U[i][k + 1];
	                            U[i][k + 1] = U[i][k];
	                            U[i][k] = t;
	                        }
	                    }
	                    k++;
	                }
	                iter = 0;
	                p--;
	                break;
	            }
	        }
	    }

	    if (swapped) {
	        var tmp = V;
	        V = U;
	        U = tmp;
	    }

	    this.m = m;
	    this.n = n;
	    this.s = s;
	    this.U = U;
	    this.V = V;
	}

	SingularValueDecomposition.prototype = {
	    get condition() {
	        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];
	    },
	    get norm2() {
	        return this.s[0];
	    },
	    get rank() {
	        var eps = Math.pow(2, -52),
	            tol = Math.max(this.m, this.n) * this.s[0] * eps,
	            r = 0,
	            s = this.s;
	        for (var i = 0, ii = s.length; i < ii; i++) {
	            if (s[i] > tol) {
	                r++;
	            }
	        }
	        return r;
	    },
	    get diagonal() {
	        return this.s;
	    },
	    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs
	    get threshold() {
	        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];
	    },
	    get leftSingularVectors() {
	        if (!Matrix.isMatrix(this.U)) {
	            this.U = new Matrix(this.U);
	        }
	        return this.U;
	    },
	    get rightSingularVectors() {
	        if (!Matrix.isMatrix(this.V)) {
	            this.V = new Matrix(this.V);
	        }
	        return this.V;
	    },
	    get diagonalMatrix() {
	        return Matrix.diag(this.s);
	    },
	    solve: function (value) {

	        var Y = value,
	            e = this.threshold,
	            scols = this.s.length,
	            Ls = Matrix.zeros(scols, scols),
	            i;

	        for (i = 0; i < scols; i++) {
	            if (Math.abs(this.s[i]) <= e) {
	                Ls[i][i] = 0;
	            } else {
	                Ls[i][i] = 1 / this.s[i];
	            }
	        }

	        var U = this.U;
	        var V = this.rightSingularVectors;

	        var VL = V.mmul(Ls),
	            vrows = V.rows,
	            urows = U.length,
	            VLU = Matrix.zeros(vrows, urows),
	            j, k, sum;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < urows; j++) {
	                sum = 0;
	                for (k = 0; k < scols; k++) {
	                    sum += VL[i][k] * U[j][k];
	                }
	                VLU[i][j] = sum;
	            }
	        }

	        return VLU.mmul(Y);
	    },
	    solveForDiagonal: function (value) {
	        return this.solve(Matrix.diag(value));
	    },
	    inverse: function () {
	        var V = this.V;
	        var e = this.threshold,
	            vrows = V.length,
	            vcols = V[0].length,
	            X = new Matrix(vrows, this.s.length),
	            i, j;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < vcols; j++) {
	                if (Math.abs(this.s[j]) > e) {
	                    X[i][j] = V[i][j] / this.s[j];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }

	        var U = this.U;

	        var urows = U.length,
	            ucols = U[0].length,
	            Y = new Matrix(vrows, urows),
	            k, sum;

	        for (i = 0; i < vrows; i++) {
	            for (j = 0; j < urows; j++) {
	                sum = 0;
	                for (k = 0; k < ucols; k++) {
	                    sum += X[i][k] * U[j][k];
	                }
	                Y[i][j] = sum;
	            }
	        }

	        return Y;
	    }
	};

	module.exports = SingularValueDecomposition;


/***/ },
/* 83 */
/***/ function(module, exports) {

	'use strict';

	exports.hypotenuse = function hypotenuse(a, b) {
	    if (Math.abs(a) > Math.abs(b)) {
	        var r = b / a;
	        return Math.abs(a) * Math.sqrt(1 + r * r);
	    }
	    if (b !== 0) {
	        var r = a / b;
	        return Math.abs(b) * Math.sqrt(1 + r * r);
	    }
	    return 0;
	};

	// For use in the decomposition algorithms. With big matrices, access time is
	// too long on elements from array subclass
	// todo check when it is fixed in v8
	// http://jsperf.com/access-and-write-array-subclass
	exports.getEmpty2DArray = function (rows, columns) {
	    var array = new Array(rows);
	    for (var i = 0; i < rows; i++) {
	        array[i] = new Array(columns);
	    }
	    return array;
	};

	exports.getFilled2DArray = function (rows, columns, value) {
	    var array = new Array(rows);
	    for (var i = 0; i < rows; i++) {
	        array[i] = new Array(columns);
	        for (var j = 0; j < columns; j++) {
	            array[i][j] = value;
	        }
	    }
	    return array;
	};


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	const Matrix = __webpack_require__(75);
	const util = __webpack_require__(83);
	const hypotenuse = util.hypotenuse;
	const getFilled2DArray = util.getFilled2DArray;

	const defaultOptions = {
	    assumeSymmetric: false
	};

	// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs
	function EigenvalueDecomposition(matrix, options) {
	    options = Object.assign({}, defaultOptions, options);
	    if (!(this instanceof EigenvalueDecomposition)) {
	        return new EigenvalueDecomposition(matrix, options);
	    }
	    matrix = Matrix.checkMatrix(matrix);
	    if (!matrix.isSquare()) {
	        throw new Error('Matrix is not a square matrix');
	    }

	    var n = matrix.columns,
	        V = getFilled2DArray(n, n, 0),
	        d = new Array(n),
	        e = new Array(n),
	        value = matrix,
	        i, j;

	    var isSymmetric = false;
	    if (options.assumeSymmetric) {
	        isSymmetric = true;
	    } else {
	        isSymmetric = matrix.isSymmetric();
	    }

	    if (isSymmetric) {
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                V[i][j] = value.get(i, j);
	            }
	        }
	        tred2(n, e, d, V);
	        tql2(n, e, d, V);
	    }
	    else {
	        var H = getFilled2DArray(n, n, 0),
	            ort = new Array(n);
	        for (j = 0; j < n; j++) {
	            for (i = 0; i < n; i++) {
	                H[i][j] = value.get(i, j);
	            }
	        }
	        orthes(n, H, ort, V);
	        hqr2(n, e, d, V, H);
	    }

	    this.n = n;
	    this.e = e;
	    this.d = d;
	    this.V = V;
	}

	EigenvalueDecomposition.prototype = {
	    get realEigenvalues() {
	        return this.d;
	    },
	    get imaginaryEigenvalues() {
	        return this.e;
	    },
	    get eigenvectorMatrix() {
	        if (!Matrix.isMatrix(this.V)) {
	            this.V = new Matrix(this.V);
	        }
	        return this.V;
	    },
	    get diagonalMatrix() {
	        var n = this.n,
	            e = this.e,
	            d = this.d,
	            X = new Matrix(n, n),
	            i, j;
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                X[i][j] = 0;
	            }
	            X[i][i] = d[i];
	            if (e[i] > 0) {
	                X[i][i + 1] = e[i];
	            }
	            else if (e[i] < 0) {
	                X[i][i - 1] = e[i];
	            }
	        }
	        return X;
	    }
	};

	function tred2(n, e, d, V) {

	    var f, g, h, i, j, k,
	        hh, scale;

	    for (j = 0; j < n; j++) {
	        d[j] = V[n - 1][j];
	    }

	    for (i = n - 1; i > 0; i--) {
	        scale = 0;
	        h = 0;
	        for (k = 0; k < i; k++) {
	            scale = scale + Math.abs(d[k]);
	        }

	        if (scale === 0) {
	            e[i] = d[i - 1];
	            for (j = 0; j < i; j++) {
	                d[j] = V[i - 1][j];
	                V[i][j] = 0;
	                V[j][i] = 0;
	            }
	        } else {
	            for (k = 0; k < i; k++) {
	                d[k] /= scale;
	                h += d[k] * d[k];
	            }

	            f = d[i - 1];
	            g = Math.sqrt(h);
	            if (f > 0) {
	                g = -g;
	            }

	            e[i] = scale * g;
	            h = h - f * g;
	            d[i - 1] = f - g;
	            for (j = 0; j < i; j++) {
	                e[j] = 0;
	            }

	            for (j = 0; j < i; j++) {
	                f = d[j];
	                V[j][i] = f;
	                g = e[j] + V[j][j] * f;
	                for (k = j + 1; k <= i - 1; k++) {
	                    g += V[k][j] * d[k];
	                    e[k] += V[k][j] * f;
	                }
	                e[j] = g;
	            }

	            f = 0;
	            for (j = 0; j < i; j++) {
	                e[j] /= h;
	                f += e[j] * d[j];
	            }

	            hh = f / (h + h);
	            for (j = 0; j < i; j++) {
	                e[j] -= hh * d[j];
	            }

	            for (j = 0; j < i; j++) {
	                f = d[j];
	                g = e[j];
	                for (k = j; k <= i - 1; k++) {
	                    V[k][j] -= (f * e[k] + g * d[k]);
	                }
	                d[j] = V[i - 1][j];
	                V[i][j] = 0;
	            }
	        }
	        d[i] = h;
	    }

	    for (i = 0; i < n - 1; i++) {
	        V[n - 1][i] = V[i][i];
	        V[i][i] = 1;
	        h = d[i + 1];
	        if (h !== 0) {
	            for (k = 0; k <= i; k++) {
	                d[k] = V[k][i + 1] / h;
	            }

	            for (j = 0; j <= i; j++) {
	                g = 0;
	                for (k = 0; k <= i; k++) {
	                    g += V[k][i + 1] * V[k][j];
	                }
	                for (k = 0; k <= i; k++) {
	                    V[k][j] -= g * d[k];
	                }
	            }
	        }

	        for (k = 0; k <= i; k++) {
	            V[k][i + 1] = 0;
	        }
	    }

	    for (j = 0; j < n; j++) {
	        d[j] = V[n - 1][j];
	        V[n - 1][j] = 0;
	    }

	    V[n - 1][n - 1] = 1;
	    e[0] = 0;
	}

	function tql2(n, e, d, V) {

	    var g, h, i, j, k, l, m, p, r,
	        dl1, c, c2, c3, el1, s, s2,
	        iter;

	    for (i = 1; i < n; i++) {
	        e[i - 1] = e[i];
	    }

	    e[n - 1] = 0;

	    var f = 0,
	        tst1 = 0,
	        eps = Math.pow(2, -52);

	    for (l = 0; l < n; l++) {
	        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));
	        m = l;
	        while (m < n) {
	            if (Math.abs(e[m]) <= eps * tst1) {
	                break;
	            }
	            m++;
	        }

	        if (m > l) {
	            iter = 0;
	            do {
	                iter = iter + 1;

	                g = d[l];
	                p = (d[l + 1] - g) / (2 * e[l]);
	                r = hypotenuse(p, 1);
	                if (p < 0) {
	                    r = -r;
	                }

	                d[l] = e[l] / (p + r);
	                d[l + 1] = e[l] * (p + r);
	                dl1 = d[l + 1];
	                h = g - d[l];
	                for (i = l + 2; i < n; i++) {
	                    d[i] -= h;
	                }

	                f = f + h;

	                p = d[m];
	                c = 1;
	                c2 = c;
	                c3 = c;
	                el1 = e[l + 1];
	                s = 0;
	                s2 = 0;
	                for (i = m - 1; i >= l; i--) {
	                    c3 = c2;
	                    c2 = c;
	                    s2 = s;
	                    g = c * e[i];
	                    h = c * p;
	                    r = hypotenuse(p, e[i]);
	                    e[i + 1] = s * r;
	                    s = e[i] / r;
	                    c = p / r;
	                    p = c * d[i] - s * g;
	                    d[i + 1] = h + s * (c * g + s * d[i]);

	                    for (k = 0; k < n; k++) {
	                        h = V[k][i + 1];
	                        V[k][i + 1] = s * V[k][i] + c * h;
	                        V[k][i] = c * V[k][i] - s * h;
	                    }
	                }

	                p = -s * s2 * c3 * el1 * e[l] / dl1;
	                e[l] = s * p;
	                d[l] = c * p;

	            }
	            while (Math.abs(e[l]) > eps * tst1);
	        }
	        d[l] = d[l] + f;
	        e[l] = 0;
	    }

	    for (i = 0; i < n - 1; i++) {
	        k = i;
	        p = d[i];
	        for (j = i + 1; j < n; j++) {
	            if (d[j] < p) {
	                k = j;
	                p = d[j];
	            }
	        }

	        if (k !== i) {
	            d[k] = d[i];
	            d[i] = p;
	            for (j = 0; j < n; j++) {
	                p = V[j][i];
	                V[j][i] = V[j][k];
	                V[j][k] = p;
	            }
	        }
	    }
	}

	function orthes(n, H, ort, V) {

	    var low = 0,
	        high = n - 1,
	        f, g, h, i, j, m,
	        scale;

	    for (m = low + 1; m <= high - 1; m++) {
	        scale = 0;
	        for (i = m; i <= high; i++) {
	            scale = scale + Math.abs(H[i][m - 1]);
	        }

	        if (scale !== 0) {
	            h = 0;
	            for (i = high; i >= m; i--) {
	                ort[i] = H[i][m - 1] / scale;
	                h += ort[i] * ort[i];
	            }

	            g = Math.sqrt(h);
	            if (ort[m] > 0) {
	                g = -g;
	            }

	            h = h - ort[m] * g;
	            ort[m] = ort[m] - g;

	            for (j = m; j < n; j++) {
	                f = 0;
	                for (i = high; i >= m; i--) {
	                    f += ort[i] * H[i][j];
	                }

	                f = f / h;
	                for (i = m; i <= high; i++) {
	                    H[i][j] -= f * ort[i];
	                }
	            }

	            for (i = 0; i <= high; i++) {
	                f = 0;
	                for (j = high; j >= m; j--) {
	                    f += ort[j] * H[i][j];
	                }

	                f = f / h;
	                for (j = m; j <= high; j++) {
	                    H[i][j] -= f * ort[j];
	                }
	            }

	            ort[m] = scale * ort[m];
	            H[m][m - 1] = scale * g;
	        }
	    }

	    for (i = 0; i < n; i++) {
	        for (j = 0; j < n; j++) {
	            V[i][j] = (i === j ? 1 : 0);
	        }
	    }

	    for (m = high - 1; m >= low + 1; m--) {
	        if (H[m][m - 1] !== 0) {
	            for (i = m + 1; i <= high; i++) {
	                ort[i] = H[i][m - 1];
	            }

	            for (j = m; j <= high; j++) {
	                g = 0;
	                for (i = m; i <= high; i++) {
	                    g += ort[i] * V[i][j];
	                }

	                g = (g / ort[m]) / H[m][m - 1];
	                for (i = m; i <= high; i++) {
	                    V[i][j] += g * ort[i];
	                }
	            }
	        }
	    }
	}

	function hqr2(nn, e, d, V, H) {
	    var n = nn - 1,
	        low = 0,
	        high = nn - 1,
	        eps = Math.pow(2, -52),
	        exshift = 0,
	        norm = 0,
	        p = 0,
	        q = 0,
	        r = 0,
	        s = 0,
	        z = 0,
	        iter = 0,
	        i, j, k, l, m, t, w, x, y,
	        ra, sa, vr, vi,
	        notlast, cdivres;

	    for (i = 0; i < nn; i++) {
	        if (i < low || i > high) {
	            d[i] = H[i][i];
	            e[i] = 0;
	        }

	        for (j = Math.max(i - 1, 0); j < nn; j++) {
	            norm = norm + Math.abs(H[i][j]);
	        }
	    }

	    while (n >= low) {
	        l = n;
	        while (l > low) {
	            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);
	            if (s === 0) {
	                s = norm;
	            }
	            if (Math.abs(H[l][l - 1]) < eps * s) {
	                break;
	            }
	            l--;
	        }

	        if (l === n) {
	            H[n][n] = H[n][n] + exshift;
	            d[n] = H[n][n];
	            e[n] = 0;
	            n--;
	            iter = 0;
	        } else if (l === n - 1) {
	            w = H[n][n - 1] * H[n - 1][n];
	            p = (H[n - 1][n - 1] - H[n][n]) / 2;
	            q = p * p + w;
	            z = Math.sqrt(Math.abs(q));
	            H[n][n] = H[n][n] + exshift;
	            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;
	            x = H[n][n];

	            if (q >= 0) {
	                z = (p >= 0) ? (p + z) : (p - z);
	                d[n - 1] = x + z;
	                d[n] = d[n - 1];
	                if (z !== 0) {
	                    d[n] = x - w / z;
	                }
	                e[n - 1] = 0;
	                e[n] = 0;
	                x = H[n][n - 1];
	                s = Math.abs(x) + Math.abs(z);
	                p = x / s;
	                q = z / s;
	                r = Math.sqrt(p * p + q * q);
	                p = p / r;
	                q = q / r;

	                for (j = n - 1; j < nn; j++) {
	                    z = H[n - 1][j];
	                    H[n - 1][j] = q * z + p * H[n][j];
	                    H[n][j] = q * H[n][j] - p * z;
	                }

	                for (i = 0; i <= n; i++) {
	                    z = H[i][n - 1];
	                    H[i][n - 1] = q * z + p * H[i][n];
	                    H[i][n] = q * H[i][n] - p * z;
	                }

	                for (i = low; i <= high; i++) {
	                    z = V[i][n - 1];
	                    V[i][n - 1] = q * z + p * V[i][n];
	                    V[i][n] = q * V[i][n] - p * z;
	                }
	            } else {
	                d[n - 1] = x + p;
	                d[n] = x + p;
	                e[n - 1] = z;
	                e[n] = -z;
	            }

	            n = n - 2;
	            iter = 0;
	        } else {
	            x = H[n][n];
	            y = 0;
	            w = 0;
	            if (l < n) {
	                y = H[n - 1][n - 1];
	                w = H[n][n - 1] * H[n - 1][n];
	            }

	            if (iter === 10) {
	                exshift += x;
	                for (i = low; i <= n; i++) {
	                    H[i][i] -= x;
	                }
	                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);
	                x = y = 0.75 * s;
	                w = -0.4375 * s * s;
	            }

	            if (iter === 30) {
	                s = (y - x) / 2;
	                s = s * s + w;
	                if (s > 0) {
	                    s = Math.sqrt(s);
	                    if (y < x) {
	                        s = -s;
	                    }
	                    s = x - w / ((y - x) / 2 + s);
	                    for (i = low; i <= n; i++) {
	                        H[i][i] -= s;
	                    }
	                    exshift += s;
	                    x = y = w = 0.964;
	                }
	            }

	            iter = iter + 1;

	            m = n - 2;
	            while (m >= l) {
	                z = H[m][m];
	                r = x - z;
	                s = y - z;
	                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];
	                q = H[m + 1][m + 1] - z - r - s;
	                r = H[m + 2][m + 1];
	                s = Math.abs(p) + Math.abs(q) + Math.abs(r);
	                p = p / s;
	                q = q / s;
	                r = r / s;
	                if (m === l) {
	                    break;
	                }
	                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {
	                    break;
	                }
	                m--;
	            }

	            for (i = m + 2; i <= n; i++) {
	                H[i][i - 2] = 0;
	                if (i > m + 2) {
	                    H[i][i - 3] = 0;
	                }
	            }

	            for (k = m; k <= n - 1; k++) {
	                notlast = (k !== n - 1);
	                if (k !== m) {
	                    p = H[k][k - 1];
	                    q = H[k + 1][k - 1];
	                    r = (notlast ? H[k + 2][k - 1] : 0);
	                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);
	                    if (x !== 0) {
	                        p = p / x;
	                        q = q / x;
	                        r = r / x;
	                    }
	                }

	                if (x === 0) {
	                    break;
	                }

	                s = Math.sqrt(p * p + q * q + r * r);
	                if (p < 0) {
	                    s = -s;
	                }

	                if (s !== 0) {
	                    if (k !== m) {
	                        H[k][k - 1] = -s * x;
	                    } else if (l !== m) {
	                        H[k][k - 1] = -H[k][k - 1];
	                    }

	                    p = p + s;
	                    x = p / s;
	                    y = q / s;
	                    z = r / s;
	                    q = q / p;
	                    r = r / p;

	                    for (j = k; j < nn; j++) {
	                        p = H[k][j] + q * H[k + 1][j];
	                        if (notlast) {
	                            p = p + r * H[k + 2][j];
	                            H[k + 2][j] = H[k + 2][j] - p * z;
	                        }

	                        H[k][j] = H[k][j] - p * x;
	                        H[k + 1][j] = H[k + 1][j] - p * y;
	                    }

	                    for (i = 0; i <= Math.min(n, k + 3); i++) {
	                        p = x * H[i][k] + y * H[i][k + 1];
	                        if (notlast) {
	                            p = p + z * H[i][k + 2];
	                            H[i][k + 2] = H[i][k + 2] - p * r;
	                        }

	                        H[i][k] = H[i][k] - p;
	                        H[i][k + 1] = H[i][k + 1] - p * q;
	                    }

	                    for (i = low; i <= high; i++) {
	                        p = x * V[i][k] + y * V[i][k + 1];
	                        if (notlast) {
	                            p = p + z * V[i][k + 2];
	                            V[i][k + 2] = V[i][k + 2] - p * r;
	                        }

	                        V[i][k] = V[i][k] - p;
	                        V[i][k + 1] = V[i][k + 1] - p * q;
	                    }
	                }
	            }
	        }
	    }

	    if (norm === 0) {
	        return;
	    }

	    for (n = nn - 1; n >= 0; n--) {
	        p = d[n];
	        q = e[n];

	        if (q === 0) {
	            l = n;
	            H[n][n] = 1;
	            for (i = n - 1; i >= 0; i--) {
	                w = H[i][i] - p;
	                r = 0;
	                for (j = l; j <= n; j++) {
	                    r = r + H[i][j] * H[j][n];
	                }

	                if (e[i] < 0) {
	                    z = w;
	                    s = r;
	                } else {
	                    l = i;
	                    if (e[i] === 0) {
	                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));
	                    } else {
	                        x = H[i][i + 1];
	                        y = H[i + 1][i];
	                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];
	                        t = (x * s - z * r) / q;
	                        H[i][n] = t;
	                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);
	                    }

	                    t = Math.abs(H[i][n]);
	                    if ((eps * t) * t > 1) {
	                        for (j = i; j <= n; j++) {
	                            H[j][n] = H[j][n] / t;
	                        }
	                    }
	                }
	            }
	        } else if (q < 0) {
	            l = n - 1;

	            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {
	                H[n - 1][n - 1] = q / H[n][n - 1];
	                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];
	            } else {
	                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);
	                H[n - 1][n - 1] = cdivres[0];
	                H[n - 1][n] = cdivres[1];
	            }

	            H[n][n - 1] = 0;
	            H[n][n] = 1;
	            for (i = n - 2; i >= 0; i--) {
	                ra = 0;
	                sa = 0;
	                for (j = l; j <= n; j++) {
	                    ra = ra + H[i][j] * H[j][n - 1];
	                    sa = sa + H[i][j] * H[j][n];
	                }

	                w = H[i][i] - p;

	                if (e[i] < 0) {
	                    z = w;
	                    r = ra;
	                    s = sa;
	                } else {
	                    l = i;
	                    if (e[i] === 0) {
	                        cdivres = cdiv(-ra, -sa, w, q);
	                        H[i][n - 1] = cdivres[0];
	                        H[i][n] = cdivres[1];
	                    } else {
	                        x = H[i][i + 1];
	                        y = H[i + 1][i];
	                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;
	                        vi = (d[i] - p) * 2 * q;
	                        if (vr === 0 && vi === 0) {
	                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));
	                        }
	                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);
	                        H[i][n - 1] = cdivres[0];
	                        H[i][n] = cdivres[1];
	                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {
	                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;
	                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;
	                        } else {
	                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);
	                            H[i + 1][n - 1] = cdivres[0];
	                            H[i + 1][n] = cdivres[1];
	                        }
	                    }

	                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));
	                    if ((eps * t) * t > 1) {
	                        for (j = i; j <= n; j++) {
	                            H[j][n - 1] = H[j][n - 1] / t;
	                            H[j][n] = H[j][n] / t;
	                        }
	                    }
	                }
	            }
	        }
	    }

	    for (i = 0; i < nn; i++) {
	        if (i < low || i > high) {
	            for (j = i; j < nn; j++) {
	                V[i][j] = H[i][j];
	            }
	        }
	    }

	    for (j = nn - 1; j >= low; j--) {
	        for (i = low; i <= high; i++) {
	            z = 0;
	            for (k = low; k <= Math.min(j, high); k++) {
	                z = z + V[i][k] * H[k][j];
	            }
	            V[i][j] = z;
	        }
	    }
	}

	function cdiv(xr, xi, yr, yi) {
	    var r, d;
	    if (Math.abs(yr) > Math.abs(yi)) {
	        r = yi / yr;
	        d = yr + r * yi;
	        return [(xr + r * xi) / d, (xi - r * xr) / d];
	    }
	    else {
	        r = yr / yi;
	        d = yi + r * yr;
	        return [(r * xr + xi) / d, (r * xi - xr) / d];
	    }
	}

	module.exports = EigenvalueDecomposition;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(75);

	// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs
	function LuDecomposition(matrix) {
	    if (!(this instanceof LuDecomposition)) {
	        return new LuDecomposition(matrix);
	    }
	    matrix = Matrix.checkMatrix(matrix);

	    var lu = matrix.clone(),
	        rows = lu.rows,
	        columns = lu.columns,
	        pivotVector = new Array(rows),
	        pivotSign = 1,
	        i, j, k, p, s, t, v,
	        LUrowi, LUcolj, kmax;

	    for (i = 0; i < rows; i++) {
	        pivotVector[i] = i;
	    }

	    LUcolj = new Array(rows);

	    for (j = 0; j < columns; j++) {

	        for (i = 0; i < rows; i++) {
	            LUcolj[i] = lu[i][j];
	        }

	        for (i = 0; i < rows; i++) {
	            LUrowi = lu[i];
	            kmax = Math.min(i, j);
	            s = 0;
	            for (k = 0; k < kmax; k++) {
	                s += LUrowi[k] * LUcolj[k];
	            }
	            LUrowi[j] = LUcolj[i] -= s;
	        }

	        p = j;
	        for (i = j + 1; i < rows; i++) {
	            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {
	                p = i;
	            }
	        }

	        if (p !== j) {
	            for (k = 0; k < columns; k++) {
	                t = lu[p][k];
	                lu[p][k] = lu[j][k];
	                lu[j][k] = t;
	            }

	            v = pivotVector[p];
	            pivotVector[p] = pivotVector[j];
	            pivotVector[j] = v;

	            pivotSign = -pivotSign;
	        }

	        if (j < rows && lu[j][j] !== 0) {
	            for (i = j + 1; i < rows; i++) {
	                lu[i][j] /= lu[j][j];
	            }
	        }
	    }

	    this.LU = lu;
	    this.pivotVector = pivotVector;
	    this.pivotSign = pivotSign;
	}

	LuDecomposition.prototype = {
	    isSingular: function () {
	        var data = this.LU,
	            col = data.columns;
	        for (var j = 0; j < col; j++) {
	            if (data[j][j] === 0) {
	                return true;
	            }
	        }
	        return false;
	    },
	    get determinant() {
	        var data = this.LU;
	        if (!data.isSquare())
	            throw new Error('Matrix must be square');
	        var determinant = this.pivotSign, col = data.columns;
	        for (var j = 0; j < col; j++)
	            determinant *= data[j][j];
	        return determinant;
	    },
	    get lowerTriangularMatrix() {
	        var data = this.LU,
	            rows = data.rows,
	            columns = data.columns,
	            X = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                if (i > j) {
	                    X[i][j] = data[i][j];
	                } else if (i === j) {
	                    X[i][j] = 1;
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get upperTriangularMatrix() {
	        var data = this.LU,
	            rows = data.rows,
	            columns = data.columns,
	            X = new Matrix(rows, columns);
	        for (var i = 0; i < rows; i++) {
	            for (var j = 0; j < columns; j++) {
	                if (i <= j) {
	                    X[i][j] = data[i][j];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get pivotPermutationVector() {
	        return this.pivotVector.slice();
	    },
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var lu = this.LU,
	            rows = lu.rows;

	        if (rows !== value.rows)
	            throw new Error('Invalid matrix dimensions');
	        if (this.isSingular())
	            throw new Error('LU matrix is singular');

	        var count = value.columns,
	            X = value.subMatrixRow(this.pivotVector, 0, count - 1),
	            columns = lu.columns,
	            i, j, k;

	        for (k = 0; k < columns; k++) {
	            for (i = k + 1; i < columns; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * lu[i][k];
	                }
	            }
	        }
	        for (k = columns - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                X[k][j] /= lu[k][k];
	            }
	            for (i = 0; i < k; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * lu[i][k];
	                }
	            }
	        }
	        return X;
	    }
	};

	module.exports = LuDecomposition;


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(75);
	var hypotenuse = __webpack_require__(83).hypotenuse;

	//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs
	function QrDecomposition(value) {
	    if (!(this instanceof QrDecomposition)) {
	        return new QrDecomposition(value);
	    }
	    value = Matrix.checkMatrix(value);

	    var qr = value.clone(),
	        m = value.rows,
	        n = value.columns,
	        rdiag = new Array(n),
	        i, j, k, s;

	    for (k = 0; k < n; k++) {
	        var nrm = 0;
	        for (i = k; i < m; i++) {
	            nrm = hypotenuse(nrm, qr[i][k]);
	        }
	        if (nrm !== 0) {
	            if (qr[k][k] < 0) {
	                nrm = -nrm;
	            }
	            for (i = k; i < m; i++) {
	                qr[i][k] /= nrm;
	            }
	            qr[k][k] += 1;
	            for (j = k + 1; j < n; j++) {
	                s = 0;
	                for (i = k; i < m; i++) {
	                    s += qr[i][k] * qr[i][j];
	                }
	                s = -s / qr[k][k];
	                for (i = k; i < m; i++) {
	                    qr[i][j] += s * qr[i][k];
	                }
	            }
	        }
	        rdiag[k] = -nrm;
	    }

	    this.QR = qr;
	    this.Rdiag = rdiag;
	}

	QrDecomposition.prototype = {
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var qr = this.QR,
	            m = qr.rows;

	        if (value.rows !== m)
	            throw new Error('Matrix row dimensions must agree');
	        if (!this.isFullRank())
	            throw new Error('Matrix is rank deficient');

	        var count = value.columns,
	            X = value.clone(),
	            n = qr.columns,
	            i, j, k, s;

	        for (k = 0; k < n; k++) {
	            for (j = 0; j < count; j++) {
	                s = 0;
	                for (i = k; i < m; i++) {
	                    s += qr[i][k] * X[i][j];
	                }
	                s = -s / qr[k][k];
	                for (i = k; i < m; i++) {
	                    X[i][j] += s * qr[i][k];
	                }
	            }
	        }
	        for (k = n - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                X[k][j] /= this.Rdiag[k];
	            }
	            for (i = 0; i < k; i++) {
	                for (j = 0; j < count; j++) {
	                    X[i][j] -= X[k][j] * qr[i][k];
	                }
	            }
	        }

	        return X.subMatrix(0, n - 1, 0, count - 1);
	    },
	    isFullRank: function () {
	        var columns = this.QR.columns;
	        for (var i = 0; i < columns; i++) {
	            if (this.Rdiag[i] === 0) {
	                return false;
	            }
	        }
	        return true;
	    },
	    get upperTriangularMatrix() {
	        var qr = this.QR,
	            n = qr.columns,
	            X = new Matrix(n, n),
	            i, j;
	        for (i = 0; i < n; i++) {
	            for (j = 0; j < n; j++) {
	                if (i < j) {
	                    X[i][j] = qr[i][j];
	                } else if (i === j) {
	                    X[i][j] = this.Rdiag[i];
	                } else {
	                    X[i][j] = 0;
	                }
	            }
	        }
	        return X;
	    },
	    get orthogonalMatrix() {
	        var qr = this.QR,
	            rows = qr.rows,
	            columns = qr.columns,
	            X = new Matrix(rows, columns),
	            i, j, k, s;

	        for (k = columns - 1; k >= 0; k--) {
	            for (i = 0; i < rows; i++) {
	                X[i][k] = 0;
	            }
	            X[k][k] = 1;
	            for (j = k; j < columns; j++) {
	                if (qr[k][k] !== 0) {
	                    s = 0;
	                    for (i = k; i < rows; i++) {
	                        s += qr[i][k] * X[i][j];
	                    }

	                    s = -s / qr[k][k];

	                    for (i = k; i < rows; i++) {
	                        X[i][j] += s * qr[i][k];
	                    }
	                }
	            }
	        }
	        return X;
	    }
	};

	module.exports = QrDecomposition;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Matrix = __webpack_require__(75);

	// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs
	function CholeskyDecomposition(value) {
	    if (!(this instanceof CholeskyDecomposition)) {
	        return new CholeskyDecomposition(value);
	    }
	    value = Matrix.checkMatrix(value);
	    if (!value.isSymmetric())
	        throw new Error('Matrix is not symmetric');

	    var a = value,
	        dimension = a.rows,
	        l = new Matrix(dimension, dimension),
	        positiveDefinite = true,
	        i, j, k;

	    for (j = 0; j < dimension; j++) {
	        var Lrowj = l[j];
	        var d = 0;
	        for (k = 0; k < j; k++) {
	            var Lrowk = l[k];
	            var s = 0;
	            for (i = 0; i < k; i++) {
	                s += Lrowk[i] * Lrowj[i];
	            }
	            Lrowj[k] = s = (a[j][k] - s) / l[k][k];
	            d = d + s * s;
	        }

	        d = a[j][j] - d;

	        positiveDefinite &= (d > 0);
	        l[j][j] = Math.sqrt(Math.max(d, 0));
	        for (k = j + 1; k < dimension; k++) {
	            l[j][k] = 0;
	        }
	    }

	    if (!positiveDefinite) {
	        throw new Error('Matrix is not positive definite');
	    }

	    this.L = l;
	}

	CholeskyDecomposition.prototype = {
	    get lowerTriangularMatrix() {
	        return this.L;
	    },
	    solve: function (value) {
	        value = Matrix.checkMatrix(value);

	        var l = this.L,
	            dimension = l.rows;

	        if (value.rows !== dimension) {
	            throw new Error('Matrix dimensions do not match');
	        }

	        var count = value.columns,
	            B = value.clone(),
	            i, j, k;

	        for (k = 0; k < dimension; k++) {
	            for (j = 0; j < count; j++) {
	                for (i = 0; i < k; i++) {
	                    B[k][j] -= B[i][j] * l[k][i];
	                }
	                B[k][j] /= l[k][k];
	            }
	        }

	        for (k = dimension - 1; k >= 0; k--) {
	            for (j = 0; j < count; j++) {
	                for (i = k + 1; i < dimension; i++) {
	                    B[k][j] -= B[i][j] * l[i][k];
	                }
	                B[k][j] /= l[k][k];
	            }
	        }

	        return B;
	    }
	};

	module.exports = CholeskyDecomposition;


/***/ },
/* 88 */
/***/ function(module, exports) {

	module.exports = newArray

	function newArray (n, value) {
	  n = n || 0
	  var array = new Array(n)
	  for (var i = 0; i < n; i++) {
	    array[i] = value
	  }
	  return array
	}


/***/ }
/******/ ])
});
;